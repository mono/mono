parameters:
- name: displayName
  type: string
- name: os
  type: string
- name: arch
  type: string
- name: timeoutInMinutes
  type: number
  default: 120
- name: publishTestResults
  type: boolean
  default: true
- name: containerImage
  type: string
  default: ''
- name: additionalCITags
  type: string
  default: ''

jobs:
- job:
  displayName: ${{ parameters.displayName }}
  pool:
    ${{ if eq(parameters.os, 'osx') }}:
      vmImage: macos-10.15
    ${{ if eq(parameters.os, 'linux') }}:
      vmImage: ubuntu-20.04
  ${{ if and(eq(parameters.os, 'linux'), eq(parameters.arch, 'i386')) }}:
    container:
      image: i386/ubuntu:20.04
      options: --platform linux/386
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
  steps:
    - checkout: self
      clean: true
      fetchDepth: 10
      submodules: recursive
    - ${{ if eq(parameters.os, 'osx')}}:
      - script: brew install autoconf automake libtool pkg-config cmake python3
        displayName: Install dependencies
    - ${{ if eq(parameters.os, 'linux')}}:
      - script: sudo apt install -y autoconf libtool automake build-essential gettext cmake python3 curl
        displayName: Install dependencies
    - script: CI_TAGS="${{ parameters.os }}-${{ parameters.arch }},$(pullRequestCITags),${{ parameters.additionalCITags }}" scripts/ci/run-jenkins.sh
      displayName: Build and Test
    - script: echo "Found unstable steps, please check previous logs for details." && exit 1
      displayName: Fail build on unstable steps
      condition: eq(variables['BuildHasUnstableSteps'], true)
    - task: PublishTestResults@2
      condition: and(succeededOrFailed(), eq('${{ parameters.publishTestResults }}', 'true'), not(contains('${{ parameters.additionalCITags }}', 'no-tests')))
      inputs:
        testRunner: 'NUnit'
        testResultsFiles: '**/TestResult*.xml'
        testRunTitle: ${{ parameters.displayName }}
        failTaskOnFailedTests: true
