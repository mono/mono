<?xml version="1.0" encoding="utf-8"?>
<Type Name="DirectoryEntry" FullName="System.DirectoryServices.DirectoryEntry">
  <TypeSignature Language="C#" Value="public class DirectoryEntry : System.ComponentModel.Component, System.ComponentModel.IComponent, System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyCulture>
    </AssemblyCulture>
    <Attributes>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyKeyFile(KeyFile="../msfinal.pub")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDelaySign(DelaySign=True)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Runtime.InteropServices.ComVisible(Value=False)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Resources.NeutralResourcesLanguage(CultureName="en-US")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyInformationalVersion(InformationalVersion="0.0.0.1")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDefaultAlias(DefaultAlias="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.CLSCompliant(IsCompliant=True)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyTrademark(Trademark="")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyCopyright(Copyright="(c) 2003 Various Authors")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyProduct(Product="MONO CLI")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyCompany(Company="MONO development team")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyConfiguration(Configuration="Development version")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDescription(Description="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyTitle(Title="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Resources.SatelliteContractVersion(Version="1.0.5000.0")</AttributeName>
      </Attribute>
    </Attributes>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(ConverterTypeName="System.DirectoryServices.Design.DirectoryEntryConverter, System.DirectoryServices, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry()" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry(object adsObject)" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="adsObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor enables a program to use the methods and properties of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class on a native Active Directory Domain Services object that implements the IADs interface through a native API. For more information about the IADs interface, see the topic <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/iads.asp">IADs</see> in the MSDN Library at <see cref="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class that binds to the specified native Active Directory Domain Services object.</para>
        </summary>
        <param name="adsObject">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the native Active Directory Domain Services object to bind to.</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry(string path)" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class that binds this instance to the node in Active Directory Domain Services located at the specified path.</para>
        </summary>
        <param name="path">
          <attribution license="cc4" from="Microsoft" modified="false" />The path at which to bind the <see cref="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" /> to the directory. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property is initialized to this value.</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry(string path, string username, string password)" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="password">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</para>
        </summary>
        <param name="username">
          <attribution license="cc4" from="Microsoft" modified="false" />The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectoryEntry(string path, string username, string password, System.DirectoryServices.AuthenticationTypes authenticationType)" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="authenticationType" Type="System.DirectoryServices.AuthenticationTypes" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="password">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> class.</para>
        </summary>
        <param name="username">
          <attribution license="cc4" from="Microsoft" modified="false" />The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> property is initialized to this value.</param>
        <param name="authenticationType">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.DirectoryServices.AuthenticationTypes" /> values. The <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" /> property is initialized to this value.</param>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close()" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Call this method to release unmanaged system resources, without waiting for garbage collection.</para>
          <para>Following a call to <see cref="M:System.DirectoryServices.DirectoryEntry.Close" />, any operations on the <see cref="T:System.DirectoryServices.DirectoryEntry" /> might raise exceptions.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Closes the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object and releases any system resources that are associated with this component.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo(System.DirectoryServices.DirectoryEntry newParent)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> is true, call <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> on the new object to make the copy permanent.</para>
          <para>The Lightweight Directory Access Protocol (LDAP) provider does not currently support the <see cref="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a copy of this entry as a child of the specified parent.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the copy of this entry as a child of the new parent.</para>
        </returns>
        <param name="newParent">
          <attribution license="cc4" from="Microsoft" modified="false" />The distinguished name of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that will be the parent for the copy that is being created.</param>
      </Docs>
    </Member>
    <Member MemberName="DeleteTree">
      <MemberSignature Language="C#" Value="public void DeleteTree()" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only the Lightweight Directory Access Protocol (LDAP) currently supports this operation.</para>
          <block subset="none" type="note">
            <para>The entry and its entire subtree are deleted from the Active Directory Domain Services hierarchy.</para>
          </block>
          <format type="text/html">
            <h2>Security</h2>
          </format>
          <list type="bullet">
            <item>
              <para>Use <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> for deleting entries from the Active Directory Domain Services hierarchy. Associated enumeration: <see cref="T:System.DirectoryServices.DirectoryServicesPermissionAccess" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists(string path)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines if the specified path represents an actual entry in the directory service.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified path represents a valid entry in the directory service; otherwise, false.</para>
        </returns>
        <param name="path">
          <attribution license="cc4" from="Microsoft" modified="false" />The path of the entry to verify.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo(System.DirectoryServices.DirectoryEntry newParent)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> is true, call the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> method on the new object to make the move permanent.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object to the specified parent.</para>
        </summary>
        <param name="newParent">
          <attribution license="cc4" from="Microsoft" modified="false" />The parent to which you want to move this entry.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo(System.DirectoryServices.DirectoryEntry newParent, string newName)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> is true, call <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> on the new object to make the move permanent.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object to the specified parent and changes its name to the specified value.</para>
        </summary>
        <param name="newParent">
          <attribution license="cc4" from="Microsoft" modified="false" />The parent to which you want to move this entry.</param>
        <param name="newName">
          <attribution license="cc4" from="Microsoft" modified="false" />The new name of this entry.</param>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename(string newName)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>This will also affect the path that is used to refer to this entry.</para>
          </block>
          <para>If <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> is true, be sure to call the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> method on the new object to make the move permanent.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changes the name of this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</para>
        </summary>
        <param name="newName">
          <attribution license="cc4" from="Microsoft" modified="false" />The new name of the entry.</param>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke(string methodName, object[] args)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the return value of the native method implements the IADs interface, a corresponding <see cref="T:System.DirectoryServices.DirectoryEntry" /> is returned. For more information about the IADs interface, see the topic <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/iads.asp">IADs</see> in the MSDN Library at <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/iads.asp">http://msdn.microsoft.com/library</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Calls a method on the native Active Directory Domain Services object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value of the invoked method.</para>
        </returns>
        <param name="methodName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the method to invoke.</param>
        <param name="args">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of type <see cref="T:System.Object" /> objects that contains the arguments of the method to invoke.</param>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry CopyTo(System.DirectoryServices.DirectoryEntry newParent, string newName)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newParent" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The Lightweight Directory Access Protocol (LDAP) provider does not currently support this method.</para>
          <para>If <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> is true, call <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> on the new object to make the copy permanent.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a copy of this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object, as a child of the specified parent <see cref="T:System.DirectoryServices.DirectoryEntry" /> object, with the specified new name.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A renamed copy of this entry as a child of the specified parent.</para>
        </returns>
        <param name="newParent">
          <attribution license="cc4" from="Microsoft" modified="false" />The DN of the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that will be the parent for the copy that is being created.</param>
        <param name="newName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the copy of this entry.</param>
      </Docs>
    </Member>
    <Member MemberName="CommitChanges">
      <MemberSignature Language="C#" Value="public void CommitChanges()" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. For more information, see <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />.</para>
          <para>Changes made to the cache include changes to the properties as well as calls to <see cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" /> (if this is the newly created entry).</para>
          <block subset="none" type="note">
            <para> If you call <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" /> before calling <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />, any uncommitted changes to the property cache will be lost.</para>
          </block>
          <format type="text/html">
            <h2>Security</h2>
          </format>
          <list type="bullet">
            <item>
              <para>Use the <see cref="T:System.DirectoryServices.DirectoryServicesPermission" /> class for reading, writing, deleting, changing, and adding to the Active Directory Domain Services hierarchy. Associated enumeration: <see cref="T:System.DirectoryServices.DirectoryServicesPermissionAccess" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves changes that are made to a directory entry to the underlying directory store.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache()" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>Any uncommitted changes to the property cache will be lost. Use the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> method to persist changes to the directory store.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the property values for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object into the property cache.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RefreshCache">
      <MemberSignature Language="C#" Value="public void RefreshCache(string[] args)" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>Any uncommitted changes to the property cache will be lost. Use <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> to persist changes to the directory store.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the values of the specified properties into the property cache.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AuthenticationTypes AuthenticationType { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Value=0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="Type of authentication to use while Binding to Ldap server")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prior to dnprdnlong, the default value is <see cref="F:System.DirectoryServices.AuthenticationTypes.None" />. Beginning with dnprdnlong, the default value is <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the type of authentication to use.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntries Children { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="Child entries of this node")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntries</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The child entries are only the immediate children of this node.</para>
          <para>Use this property to find, retrieve, or create a directory entry in the hierarchy. This property is a collection that, along with the usual iteration capabilities, provides an <see cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" /> method through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled "Computer" to add new computers to the hierarchy.</para>
          <block subset="none" type="note">
            <para>By default, changes are made locally to a cache. After you modify or add a node, you must call the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> method to commit your changes in order for them to be saved to the tree. If you call <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" /> before calling <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />, any uncommitted changes to the property cache will be lost. For more information, see the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> and <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" /> methods, and the <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child entries of this node in the Active Directory Domain Services hierarchy.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Guid">
      <MemberSignature Language="C#" Value="public System.Guid Guid { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="A globally unique identifier for this DirectoryEntry")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When binding to an object in Active Directory Domain Services, use the <see cref="P:System.DirectoryServices.DirectoryEntry.NativeGuid" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The name of the object as named with the underlying directory")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This name, along with <see cref="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />, distinguishes this entry from its siblings and must be unique among its siblings in each container.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the object as named with the underlying directory service.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry Parent { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="This entry's parent in the Ldap Directory hierarchy.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets this entry's parent in the Active Directory Domain Services hierarchy.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NativeGuid">
      <MemberSignature Language="C#" Value="public string NativeGuid { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The globally unique identifier of the DirectoryEntry, as returned from the provider")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.DirectoryServices.DirectoryEntry.NativeGuid" /> property when binding an object in Active Directory Domain Services.</para>
          <block subset="none" type="note">
            <para>The Lightweight Directory Access Protocol (LDAP) provider returns the globally unique identifier of a <see cref="T:System.DirectoryServices.DirectoryEntry" /> in a different format than the Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry" />, as returned from the provider.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NativeObject">
      <MemberSignature Language="C#" Value="public object NativeObject { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The native Active Directory Service Interfaces (ADSI) object.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this property to cast the native Active Directory Domain Services object, which implements the IADs interface, when you want to use a COM interface. For more information about the IADs interface, see the topic <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/iads.asp">IADs</see> in the MSDN Library at <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/iads.asp">http://msdn.microsoft.com/library</see>.</para>
          <para>This object is for advanced scenarios that cannot be accomplished with the <see cref="N:System.DirectoryServices" /> classes alone. To use it, you need to import one of the COM interfaces from the IADs family, then cast this property to that interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the native Active Directory Service Interfaces (ADSI) object.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UsePropertyCache">
      <MemberSignature Language="C#" Value="public bool UsePropertyCache { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Value=True)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="Determines if a cache should be used.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, changes to properties are made locally to a cache, and property values to be read are cached after the first read. When the <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> property is true, access to the <see cref="T:System.DirectoryServices.DirectoryEntry" /> object's properties is faster. Setting this to false will cause the cache to be committed after each operation.</para>
          <para>If the <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> property is true and you want to commit cached changes, call the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> method. To update values in the cache after changes to the directory are made, call the <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" /> method.</para>
          <block subset="none" type="note">
            <para>If you call <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" /> before calling <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />, any uncommitted changes to the property cache will be lost.</para>
          </block>
          <block subset="none" type="note">
            <para>The Internet Information Services (IIS) provider does not support committing the cache after each operation.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the cache should be committed after each operation.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Value=null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The password to use when authenticating the client.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can set the <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> and <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> properties to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <see cref="T:System.DirectoryServices.DirectoryEntry" /> objects retrieved from this instance (for example, through <see cref="P:System.DirectoryServices.DirectoryEntry.Children" />) are automatically created with the same alternate credentials.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the password to use when authenticating the client.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(ConverterTypeName="System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Value=null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The user name to use when authenticating the client.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can set the <see cref="P:System.DirectoryServices.DirectoryEntry.Username" /> and <see cref="P:System.DirectoryServices.DirectoryEntry.Password" /> in order to specify alternate credentials with which to access the information in Active Directory Domain Services. Any other <see cref="T:System.DirectoryServices.DirectoryEntry" /> objects retrieved from this instance (for example, through <see cref="P:System.DirectoryServices.DirectoryEntry.Children" />) are automatically created with the same alternate credentials.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the user name to use when authenticating the client.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(ConverterTypeName="System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(RecommendedAsConfigurable=True)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Value="")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The path for this DirectoryEntry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property uniquely identifies this entry in a networked environment. This entry can always be retrieved using this <see cref="P:System.DirectoryServices.DirectoryEntry.Path" />.</para>
          <para>Setting the <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> retrieves a new entry from the directory store; it does not change the path of the currently bound entry.</para>
          <para>The classes associated with the <see cref="T:System.DirectoryServices.DirectoryEntry" /> component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.</para>
          <block subset="none" type="note">
            <para>The section of the <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> that identifies the provider (precedes "://") is case-sensitive. For example, "LDAP://" or "WinNT://".</para>
          </block>
          <para>The syntax for the <see cref="P:System.DirectoryServices.DirectoryEntry.Path" /> property varies according to the provider. Some common scenarios are:</para>
          <para>WinNT</para>
          <list type="bullet">
            <item>
              <para>Connect to a group on a computer. For example, "WinNT<userInputLocalizable>://&lt;domain name&gt;/&lt;computer name&gt;/&lt;group name&gt;</userInputLocalizable>". If you are connecting to a local computer, "WinNT://<userInputLocalizable>&lt;computer name&gt;/&lt;group name&gt;</userInputLocalizable>".</para>
            </item>
            <item>
              <para>Connect to a user on a computer. For example, "WinNT://<userInputLocalizable>&lt;domain name&gt;/&lt;computer name&gt;/&lt;user name&gt;</userInputLocalizable>". If you are connecting to a local computer, "WinNT://<userInputLocalizable>&lt;computer name&gt;/&lt;user name&gt;</userInputLocalizable>".</para>
            </item>
            <item>
              <para>Connect to services on a computer. For example, "WinNT://<userInputLocalizable>&lt;domain name&gt;/&lt;computer name&gt;/&lt;service name&gt;</userInputLocalizable>". If you are connecting to a local computer, "WinNT://<userInputLocalizable>&lt;computer name&gt;/&lt;service name&gt;</userInputLocalizable>".</para>
            </item>
            <item>
              <para>Discover all domains on the network. For example, "WinNT:" The domains can be found by enumerating the children of this entry.</para>
            </item>
          </list>
          <para>LDAP</para>
          <list type="bullet">
            <item>
              <para>Connect to a group in a domain. For example, "LDAP://CN=&lt;group name&gt;, CN =&lt;Users&gt;, DC=&lt;domain component&gt;, DC=&lt;domain component&gt;,...".</para>
            </item>
            <item>
              <para>Connect to a user in a domain. For example, "LDAP://CN=&lt;full user name&gt;, CN=&lt;Users&gt;, DC=&lt;domain component&gt;, DC=&lt;domain component&gt;,...".</para>
            </item>
            <item>
              <para>Connect to computers in a domain. For example, "LDAP://CN=&lt;computer name&gt;, CN=&lt;Computers&gt;, DC=&lt;domain component&gt;, DC=&lt;domain component&gt;,...".</para>
            </item>
          </list>
          <para>IIS</para>
          <list type="bullet">
            <item>
              <para>Connect to a Web directory. For example, "IIS://LocalHost/W3SVC/1/ROOT/&lt;Web directory name&gt;".</para>
            </item>
          </list>
          <para>To bind to the current domain using LDAP, use the path "LDAP://RootDSE", then get the default naming context and rebind the entry. For example:</para>
          <code>String str = ent.Properties["defaultNamingContext"][0];
DirectoryEntry domain = new DirectoryEntry("LDAP://" + str);</code>
          <para>For more information, see the documentation for your provider and the topic <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/using_adsi.asp">Using Active Directory Service Interfaces</see> in the MSDN Library at <see cref="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</see>. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the path for this <see cref="T:System.DirectoryServices.DirectoryEntry" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.PropertyCollection Properties { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="Properties set on this object.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the property is not initialized, <see cref="P:System.DirectoryServices.DirectoryEntry.Properties" /> calls the ADSI interface <see cref="http://msdn2.microsoft.com/en-us/library/aa746347.aspx">IADs::Get</see> method to retrieve the value from the cache. If the underling cache has not been loaded, <see cref="http://msdn2.microsoft.com/en-us/library/aa746347.aspx">IADs::Get</see> implicitly calls <see cref="http://msdn2.microsoft.com/en-us/library/aa746349.aspx">IADs::GetInfo</see>. This method loads the values of the supported properties that have not been set in the cache from the underlying directory store. Subsequent calls to <see cref="P:System.DirectoryServices.DirectoryEntry.Properties" /> retrieves the property values in the cache only. To control property cache loading, call <see cref="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />. </para>
          <para />
          <para>Note   The <see cref="P:System.DirectoryServices.DirectoryEntry.Properties" /> property is not supported for use with the Active Directory Client Extension (DSClient) for WinNt4Family. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the Active Directory Domain Services properties for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SchemaClassName">
      <MemberSignature Language="C#" Value="public string SchemaClassName { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The name of the schema used for this DirectoryEntry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is the same as the <see cref="P:System.DirectoryServices.DirectoryEntry.Name" /> property of the <see cref="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" /> property.</para>
          <para>A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object's schema defines its properties and methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the schema class for this <see cref="T:System.DirectoryServices.DirectoryEntry" /> object.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SchemaEntry">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SchemaEntry { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(Browsable=False)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(Visibility=System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription(Description="The current schema directory entry.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An entry's schema determines a list of its mandatory and optional property names.</para>
          <para>You can use this property to find out what properties and methods are available on the associated object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the schema object for this entry.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Use this class for binding to objects, or reading and updating attributes. <see cref="T:System.DirectoryServices.DirectoryEntry" />, along with helper classes, provides support for life-cycle management and navigation methods. These include creating, deleting, renaming, moving a child node, and enumerating children. After you modify a node, you must commit your changes in order for them to be saved to the tree. For more information, see the <see cref="M:System.DirectoryServices.DirectoryEntry.CommitChanges" /> property.</para>
      <para>
        <see cref="T:System.DirectoryServices.DirectoryEntry" /> can be used to access regular entries and some, but not all, information from schema entries.</para>
      <para>The Active Directory Domain Services hierarchy contains up to several thousand nodes. Each node represents an object, such as a network printer or a user in a domain. Corporate networks constantly change as new employees are hired and objects such as network printers and computers are added. Active Directory Service Interfaces (ADSI) technology provides ways to programmatically add these objects to the directory tree.</para>
      <para>To create a directory entry in the hierarchy, use the <see cref="P:System.DirectoryServices.DirectoryEntry.Children" /> property. The <see cref="P:System.DirectoryServices.DirectoryEntry.Children" /> property is a collection that provides an <see cref="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" /> method, through which you add a node to the collection directly below the parent node that you are currently bound to. When adding a node to the collection, you must specify a name for the new node and the name of a schema template that you want to associate with the node. For example, you might want to use a schema titled "Computer" to add new computers to the hierarchy.</para>
      <para>This class also contains attribute caching, which can be useful for optimizing network traffic. To use attribute caching, see the <see cref="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" /> property.</para>
      <para>The classes associated with the <see cref="T:System.DirectoryServices.DirectoryEntry" /> component can be used with any of the Active Directory Domain Services service providers. Some of the current providers are Internet Information Services (IIS), Lightweight Directory Access Protocol (LDAP), Novell NetWare Directory Service (NDS), and WinNT.</para>
      <block subset="none" type="note">
        <para>It is assumed that you have a general understanding of Active Directory Domain Services before using this class. For more information, see the <see cref="N:System.DirectoryServices" /> namespace overview.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.DirectoryServices.DirectoryEntry" /> class encapsulates a node or object in the Active Directory Domain Services hierarchy.</para>
    </summary>
  </Docs>
</Type>