<?xml version="1.0" encoding="utf-8"?>
<Type Name="AuthenticationTypes" FullName="System.DirectoryServices.AuthenticationTypes">
  <TypeSignature Language="C#" Value="public sealed enum AuthenticationTypes" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyCulture>
    </AssemblyCulture>
    <Attributes>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyKeyFile(KeyFile="../msfinal.pub")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDelaySign(DelaySign=True)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Runtime.InteropServices.ComVisible(Value=False)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Resources.NeutralResourcesLanguage(CultureName="en-US")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyInformationalVersion(InformationalVersion="0.0.0.1")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDefaultAlias(DefaultAlias="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.CLSCompliant(IsCompliant=True)</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyTrademark(Trademark="")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyCopyright(Copyright="(c) 2003 Various Authors")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyProduct(Product="MONO CLI")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyCompany(Company="MONO development team")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyConfiguration(Configuration="Development version")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyDescription(Description="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Reflection.AssemblyTitle(Title="System.DirectoryServices.dll")</AttributeName>
      </Attribute>
      <Attribute>
        <AttributeName>System.Resources.SatelliteContractVersion(Version="1.0.5000.0")</AttributeName>
      </Attribute>
    </Attributes>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="value__">
      <MemberSignature Language="C#" Value="public int value__" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Anonymous" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>Anonymous</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>No authentication is performed.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Delegation">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Delegation" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>Delegation</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Enables Active Directory Services Interface (ADSI) to delegate the user's security context, which is necessary for moving objects across domains.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Encryption" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>SecureSocketsLayer</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Attaches a cryptographic signature to the message that both identifies the sender and ensures that the message has not been modified in transit.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FastBind">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes FastBind" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>FastBind</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies that ADSI will not attempt to query the Active Directory Domain Services objectClass property.  Therefore, only the base interfaces that are supported by all ADSI objects will be exposed.  Other interfaces that the object supports will not be available. A user can use this option to boost the performance in a series of object manipulations that involve only methods of the base interfaces. However, ADSI does not verify if any of the request objects actually exist on the server. For more information, see the topic "Fast Binding Option for Batch Write/Modify Operations" in the MSDN Library at <see cref="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</see>.  For more information about the objectClass property, see the "Object-Class" topic in the MSDN Library at <see cref="http://msdn.microsoft.com/library">http://msdn.microsoft.com/library</see>.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes None" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>None</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Equates to zero, which means to use basic authentication (simple bind) in the LDAP provider.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadonlyServer">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes ReadonlyServer" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>ReadonlyServer</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a WinNT provider, ADSI tries to connect to a domain controller. For Active Directory Domain Services, this flag indicates that a writable server is not required for a serverless binding.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Sealing">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Sealing" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>Sealing</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Encrypts data using Kerberos. The <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure" /> flag must also be set to use sealing.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Secure" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>Secure</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Requests secure authentication. When this flag is set, the WinNT provider uses NTLM to authenticate the client. Active Directory Domain Services uses Kerberos, and possibly NTLM, to authenticate the client. When the user name and password are a null reference (Nothing in Visual Basic), ADSI binds to the object using the security context of the calling thread, which is either the security context of the user account under which the application is running or of the client user account that the calling thread is impersonating.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SecureSocketsLayer">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes SecureSocketsLayer" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>SecureSocketsLayer</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Attaches a cryptographic signature to the message that both identifies the sender and ensures that the message has not been modified in transit. Active Directory Domain Services requires the Certificate Server be installed to support Secure Sockets Layer (SSL) encryption.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ServerBind">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes ServerBind" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>ServerBind</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If your ADsPath includes a server name, specify this flag when using the LDAP provider. Do not use this flag for paths that include a domain name or for serverless paths. Specifying a server name without also specifying this flag results in unnecessary network traffic.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Signing">
      <MemberSignature Language="C#" Value="public static const System.DirectoryServices.AuthenticationTypes Signing" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AuthenticationTypes</ReturnType>
      </ReturnValue>
      <MemberValue>Signing</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Verifies data integrity to ensure that the data received is the same as the data sent. The <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure" /> flag must also be set to use signing.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure" /> flag can be used in combination with other flags such as <see cref="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer" />, <see cref="F:System.DirectoryServices.AuthenticationTypes.FastBind" />.</para>
      <para>Serverless binding refers to a process in which a client attempts to bind to an Active Directory Domain Services object without explicitly specifying an Active Directory Domain Services server in the binding string, for example:</para>
      <code>LDAP://CN=jsmith,DC=fabrikam,DC=Com</code>
      <para>This is possible because the Lightweight Directory Access Protocol (LDAP) provider relies on the locator services of Windows 2000 to find the best domain controller (DC) for the client. However, the client must have an account on the Active Directory Domain Services domain controller to take advantage of the serverless binding feature, and the domain controller that is used by a serverless bind will always be located in the default domain (the domain associated with the current security context of the thread that's doing the binding).</para>
      <block subset="none" type="note">
        <para>None of these options are supported by the Novell Netware Directory Service (NDS) system provider.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.DirectoryServices.AuthenticationTypes" /> enumeration specifies the types of authentication used in <see cref="N:System.DirectoryServices" />. This enumeration has a <see cref="T:System.FlagsAttribute" /> attribute that allows a bitwise combination of its member values.</para>
    </summary>
  </Docs>
</Type>