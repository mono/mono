<?xml version="1.0" encoding="utf-8"?>
<Type Name="OSFeature" FullName="System.Windows.Forms.OSFeature">
  <TypeSignature Language="C#" Value="public class OSFeature : System.Windows.Forms.FeatureSupport" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FeatureSupport</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Use the static instance of this class provided in the <see cref="P:System.Windows.Forms.OSFeature.Feature" /> property to query for operating system features. You cannot create an instance of this class.</para>
      <para>To determine the version of a feature, call the <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> method. To determine if a feature or a specific version is present, call the <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> method and specify the feature to look for with the feature identifiers provided in this class.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides operating-system specific feature queries.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OSFeature ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This class cannot be instantiated. To query for operating system features, use the static instance of <see cref="T:System.Windows.Forms.OSFeature" /> provided in this class. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.OSFeature Feature { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.OSFeature</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this static property to query for operating system features. You cannot create an instance of this class.</para>
          <para>To determine the version of a feature, call the <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> method. To determine if a feature or a specific version is present, call the <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.String,System.String)" /> method and specify the feature to look for with the feature identifiers provided in this class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a static instance of the <see cref="T:System.Windows.Forms.OSFeature" /> class to use for feature queries. This property is read-only. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetVersionPresent">
      <MemberSignature Language="C#" Value="public override Version GetVersionPresent (object feature);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Windows.Forms.OSFeature.Feature" /> property, the static instance of <see cref="T:System.Windows.Forms.OSFeature" /> provided in this class, to query for the version number of a feature.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the version of the specified feature currently available on the system. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Version" /> representing the version of the specified operating system feature currently available on the system; or null if the feature cannot be found.</para>
        </returns>
        <param name="feature">
          <attribution license="cc4" from="Microsoft" modified="false" />The feature whose version is requested, either <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> or <see cref="F:System.Windows.Forms.OSFeature.Themes" />.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsPresent">
      <MemberSignature Language="C#" Value="public static bool IsPresent (System.Windows.Forms.SystemParameter enumVal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumVal" Type="System.Windows.Forms.SystemParameter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Typically, you use the <see cref="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" /> method to determine if the operating system supports the specific feature or metric identified by <paramref name="enumValue" />. Based upon the value returned from <see cref="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />, you would perform conditional actions in your code. For example, if calling this method with a parameter value of <see cref="F:System.Windows.Forms.SystemParameter.FlatMenu" /> returns true, you could create owner-drawn menus in your application in a flat style.</para>
          <para>Accessing some system features or metrics can raise exceptions if they are not available on a specific operating system version. In this case, first use the corresponding <see cref="T:System.Windows.Forms.SystemParameter" /> enumeration value, along with <see cref="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" />, to determine if the metric is supported. For example, call <see cref="M:System.Windows.Forms.OSFeature.IsPresent(System.Windows.Forms.SystemParameter)" /> with <see cref="P:System.Windows.Forms.SystemInformation.CaretWidth" /> before getting the <see cref="P:System.Windows.Forms.SystemInformation.CaretWidth" /> property value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves a value indicating whether the operating system supports the specified feature or metric. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the feature is available on the system; otherwise, false.</para>
        </returns>
        <param name="enumVal">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Windows.Forms.SystemParameter" /> representing the feature to search for.</param>
      </Docs>
    </Member>
    <Member MemberName="LayeredWindows">
      <MemberSignature Language="C#" Value="public static readonly object LayeredWindows = null;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A layered window can be made transparent or translucent by the operating system. Support for layered windows was first introduced in Windows 2000. For more information, see the "Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications" in the Platform SDK documentation at http://msdn.microsoft.com.</para>
          <para>To determine if the layered windows feature is installed, use the <see cref="P:System.Windows.Forms.OSFeature.Feature" /> property to call the base class method <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object)" /> with <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> as the feature to look for.</para>
          <para>Alternatively, you can check to see if the feature is installed by calling the <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> method with <see cref="F:System.Windows.Forms.OSFeature.LayeredWindows" /> as the feature to find.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the layered, top-level windows feature. This field is read-only. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Themes">
      <MemberSignature Language="C#" Value="public static readonly object Themes = null;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <MemberValue>null</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A theme is a collection of visual interface settings that include wallpaper, cursors, fonts, sounds, and icons first introduced in Microsoft Plus! for Windows 95. The .NET Framework does not directly support manipulating themes, although it does have extensive support for visual styles in the <see cref="N:System.Windows.Forms.VisualStyles" /> namespace. For more information about Windows Themes, see the topics Themes and Visual Styles and Visual Styles Reference in the Win32 SDK.</para>
          <para>To determine if the themes feature is installed, call the base class method <see cref="M:System.Windows.Forms.FeatureSupport.IsPresent(System.Object)" /> with <see cref="F:System.Windows.Forms.OSFeature.Themes" /> as the feature to look for.</para>
          <para>Alternatively, you can check to see if the feature is installed by calling the <see cref="M:System.Windows.Forms.OSFeature.GetVersionPresent(System.Object)" /> method with <see cref="F:System.Windows.Forms.OSFeature.Themes" /> as the feature to find.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the operating system themes feature. This field is read-only.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>