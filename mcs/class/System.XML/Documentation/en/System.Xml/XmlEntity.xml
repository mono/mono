<?xml version="1.0" encoding="utf-8"?>
<Type Name="XmlEntity" FullName="System.Xml.XmlEntity">
  <TypeSignature Maintainer="auto" Language="C#" Value="public class XmlEntity : System.Xml.XmlNode, System.Xml.IHasXmlChildNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlEntity extends System.Xml.XmlNode implements class System.Xml.IHasXmlChildNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>To be added</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Xml.XmlNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IHasXmlChildNode</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>This class represents an &lt;!ENTITY ... &gt; declaration node within a document type declaration node.  These nodes are children of <see cref="T:System.Xml.XmlDocumentType" /> nodes.</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents an entity declaration, such as &lt;!ENTITY... &gt;.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places. The BaseURI tells you where these nodes came from.</para>
          <para>The value of this property varies depending on the node type. Nodes which are children of external EntityReference nodes return the location of the entity itself. For example, consider the following XML document: </para>
          <code> &lt;!DOCTYPE item [
 &lt;!ENTITY xyz SYSTEM "a/b.xml"&gt;
 ]&gt;
 &lt;item num='123'&gt;&amp;xyz;&lt;/item&gt;</code>
          <para>where the external entity a/b.xml contains the XML text &lt;test&gt;123&lt;/test&gt;.</para>
          <para>If the document is loaded from http://server/mydata.xml, BaseURI returns the following: </para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>NodeType </para>
                </term>
                <description>
                  <para>Name </para>
                </description>
                <description>
                  <para>BaseURI </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Attribute </para>
              </term>
              <description>
                <para>num </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Document </para>
              </term>
              <description>
                <para>#document </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>DocumentType </para>
              </term>
              <description>
                <para>item </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Entity </para>
              </term>
              <description>
                <para>xyz </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Element </para>
              </term>
              <description>
                <para>item </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>EntityReference </para>
              </term>
              <description>
                <para>xyz </para>
              </description>
              <description>
                <para>http://server/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Element </para>
              </term>
              <description>
                <para>test </para>
              </description>
              <description>
                <para>http://server/a/b.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Text </para>
              </term>
              <description>
                <para>#text </para>
              </description>
              <description>
                <para>http://server/a/b.xml </para>
              </description>
            </item>
          </list>
          <para>BaseURI looks for entity reference boundaries, so if entities are expanded, this information is not preserved and this property returns the location of the XmlDocument object in all cases.</para>
          <para>As a second example, given the following XML document: </para>
          <code> &lt;!DOCTYPE Mydata SYSTEM "http://localhost/doctype.dtd"&gt;
 &lt;baa&gt;&amp;xyz;&lt;/baa&gt;</code>
          <para>where the document type definition (DTD) file contains the following: </para>
          <code> &lt;!ENTITY xyz "&lt;E1&gt;My Data&lt;/E1&gt;"&gt;
 &lt;!ELEMENT baa #PCDATA&gt;
 &lt;!ATTLIST baa attr1 "woof"&gt;</code>
          <para>If the XML document is loaded from http://localhost/mydata.xml, BaseURI returns the following for each of the nodes: </para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>NodeType </para>
                </term>
                <description>
                  <para>Name </para>
                </description>
                <description>
                  <para>BaseURI </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Document </para>
              </term>
              <description>
                <para>#document </para>
              </description>
              <description>
                <para>http://localhost/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>DocumentType </para>
              </term>
              <description>
                <para>Mydata </para>
              </description>
              <description>
                <para>http://localhost/doctype.dtd </para>
              </description>
            </item>
            <item>
              <term>
                <para>Element </para>
              </term>
              <description>
                <para>baa </para>
              </description>
              <description>
                <para>http://localhost/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Entity </para>
              </term>
              <description>
                <para>xyz </para>
              </description>
              <description>
                <para>http://localhost/doctype.dtd </para>
              </description>
            </item>
            <item>
              <term>
                <para>EntityReference </para>
              </term>
              <description>
                <para>xyz </para>
              </description>
              <description>
                <para>http://localhost/mydata.xml </para>
              </description>
            </item>
            <item>
              <term>
                <para>Attribute </para>
              </term>
              <description>
                <para>woof </para>
              </description>
              <description>
                <para>http://localhost/mydata.xml </para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>The base URI of a default attribute is the same as the base URI of the element to which they belong.</para>
          </block>
          <para>This property is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the base Uniform Resource Identifier (URI) of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNode CloneNode (bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlNode CloneNode(bool deep) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a duplicate of this node. Entity nodes cannot be cloned. Calling this method on an <see cref="T:System.Xml.XmlEntity" /> object throws an exception.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a copy of the <see cref="T:System.Xml.XmlNode" /> from which the method is called.</para>
        </returns>
        <param name="deep">
          <attribution license="cc4" from="Microsoft" modified="false" />true to recursively clone the subtree under the specified node; false to clone only the node itself.</param>
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>XmlEntity nodes are read-only. Setting this property throws an exception.</para>
          <para>This property is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the concatenated values of the entity node and all its children.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public override string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>XmlEntity nodes are read-only. Setting this property throws an exception.</para>
          <para>This property is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the markup representing the children of this node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public override bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A read-only node is one whose properties, attributes, or children cannot be changed. You can remove a read-only node from the tree and insert it somewhere else.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the node is read-only.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the node without the namespace prefix.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the type of the node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NotationName">
      <MemberSignature Language="C#" Value="public string NotationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NotationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the optional NDATA attribute on the entity declaration.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public override string OuterXml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the markup representing this node and all its children.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public string PublicId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the public identifier on the entity declaration.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IHasXmlChildNode.LastLinkedChild">
      <MemberSignature Language="C#" Value="System.Xml.XmlLinkedNode System.Xml.IHasXmlChildNode.LastLinkedChild { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlLinkedNode System.Xml.IHasXmlChildNode.LastLinkedChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlLinkedNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public string SystemId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the system identifier on the entity declaration.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WriteContentTo">
      <MemberSignature Language="C#" Value="public override void WriteContentTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteContentTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves all the children of the node to the specified <see cref="T:System.Xml.XmlWriter" />. For XmlEntity nodes, this method has no effect.</para>
        </summary>
        <param name="w">
          <attribution license="cc4" from="Microsoft" modified="false" />The XmlWriter to which you want to save. </param>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter w) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is a Microsoft extension to the Document Object Model (DOM).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the node to the specified <see cref="T:System.Xml.XmlWriter" />. For XmlEntity nodes, this method has no effect.</para>
        </summary>
        <param name="w">
          <attribution license="cc4" from="Microsoft" modified="false" />The XmlWriter to which you want to save. </param>
      </Docs>
    </Member>
  </Members>
</Type>