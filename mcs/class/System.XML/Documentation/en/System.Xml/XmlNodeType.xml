<?xml version="1.0" encoding="utf-8"?>
<Type Name="XmlNodeType" FullName="System.Xml.XmlNodeType" FullNameSP="System_Xml_XmlNodeType" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable XmlNodeType extends System.Enum" />
  <TypeSignature Language="C#" Value="public enum XmlNodeType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlNodeType extends System.Enum" />
  <MemberOfLibrary>XML</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <remarks>
      <para>A given set of XML data is modeled as a tree of nodes. 
      This enumeration specifies the different node types.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies the type of node.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Attribute">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Attribute = 2" />
      <MemberSignature Language="C#" Value="Attribute" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Attribute = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Attribute</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An Attribute node can have the following child node types: Text and EntityReference. The Attribute node does not appear as the child node of any other node type. It is not considered a child node of an Element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An attribute (for example, id='123' ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="CDATA">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType CDATA = 4" />
      <MemberSignature Language="C#" Value="CDATA" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType CDATA = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>CDATA</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>CDATA sections are used to escape blocks of text that would otherwise be recognized as markup. A CDATA node cannot have any child nodes. It can appear as the child of the DocumentFragment, EntityReference, and Element nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A CDATA section (for example, &lt;![CDATA[my escaped text]]&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Comment = 8" />
      <MemberSignature Language="C#" Value="Comment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Comment = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Comment</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Comment node cannot have any child nodes. It can appear as the child of the Document, DocumentFragment, Element, and EntityReference nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A comment (for example, &lt;!-- my comment --&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Document = 9" />
      <MemberSignature Language="C#" Value="Document" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Document = int32(9)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Document</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Document node can have the following child node types: XmlDeclaration, Element (maximum of one), ProcessingInstruction, Comment, and DocumentType. It cannot appear as the child of any node types.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A document object that, as the root of the document tree, provides access to the entire XML document.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="DocumentFragment">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType DocumentFragment = 11" />
      <MemberSignature Language="C#" Value="DocumentFragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType DocumentFragment = int32(11)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>DocumentFragment</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The DocumentFragment node associates a node or subtree with a document without actually being contained within the document. A DocumentFragment node can have the following child node types: Element, ProcessingInstruction, Comment, Text, CDATA, and EntityReference. It cannot appear as the child of any node types.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A document fragment.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="DocumentType">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType DocumentType = 10" />
      <MemberSignature Language="C#" Value="DocumentType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType DocumentType = int32(10)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>DocumentType</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A DocumentType node can have the following child node types: Notation and Entity. It can appear as the child of the Document node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The document type declaration, indicated by the following tag (for example, &lt;!DOCTYPE...&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Element = 1" />
      <MemberSignature Language="C#" Value="Element" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Element = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Element</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An Element node can have the following child node types: Element, Text, Comment, ProcessingInstruction, CDATA, and EntityReference. It can be the child of the Document, DocumentFragment, EntityReference, and Element nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An element (for example, &lt;item&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType EndElement = 15" />
      <MemberSignature Language="C#" Value="EndElement" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType EndElement = int32(15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>EndElement</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>EndElement nodes are returned when <see cref="T:System.Xml.XmlReader" /> gets to the end of an element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An end element tag (for example, &lt;/item&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="EndEntity">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType EndEntity = 16" />
      <MemberSignature Language="C#" Value="EndEntity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType EndEntity = int32(16)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>EndEntity</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returned when XmlReader gets to the end of the entity replacement as a result of a call to <see cref="M:System.Xml.XmlReader.ResolveEntity" />.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Entity">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Entity = 6" />
      <MemberSignature Language="C#" Value="Entity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Entity = int32(6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Entity</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An Entity node can have child nodes that represent the expanded entity (for example, Text and EntityReference nodes). It can appear as the child of the DocumentType node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An entity declaration (for example, &lt;!ENTITY...&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="EntityReference">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType EntityReference = 5" />
      <MemberSignature Language="C#" Value="EntityReference" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType EntityReference = int32(5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>EntityReference</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An EntityReference node can have the following child node types: Element, ProcessingInstruction, Comment, Text, CDATA, and EntityReference. It can appear as the child of the Attribute, DocumentFragment, Element, and EntityReference nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A reference to an entity (for example, &amp;num; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType None = 0" />
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>None</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is returned by the <see cref="T:System.Xml.XmlReader" /> if a Read method has not been called.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Notation">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Notation = 12" />
      <MemberSignature Language="C#" Value="Notation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Notation = int32(12)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Notation</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Notation node cannot have any child nodes. It can appear as the child of the DocumentType node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A notation in the document type declaration (for example, &lt;!NOTATION...&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType ProcessingInstruction = 7" />
      <MemberSignature Language="C#" Value="ProcessingInstruction" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType ProcessingInstruction = int32(7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>ProcessingInstruction</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A ProcessingInstruction node cannot have any child nodes. It can appear as the child of the Document, DocumentFragment, Element, and EntityReference nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A processing instruction (for example, &lt;?pi test?&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="SignificantWhitespace">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType SignificantWhitespace = 14" />
      <MemberSignature Language="C#" Value="SignificantWhitespace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType SignificantWhitespace = int32(14)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>SignificantWhitespace</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>White space between markup in a mixed content model or white space within the xml:space="preserve" scope.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Text = 3" />
      <MemberSignature Language="C#" Value="Text" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Text = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Text</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Text node cannot have any child nodes. It can appear as the child node of the Attribute, DocumentFragment, Element, and EntityReference nodes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The text content of a node.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Whitespace">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType Whitespace = 13" />
      <MemberSignature Language="C#" Value="Whitespace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType Whitespace = int32(13)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Whitespace</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>White space between markup.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="XmlDeclaration">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Xml.XmlNodeType XmlDeclaration = 17" />
      <MemberSignature Language="C#" Value="XmlDeclaration" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Xml.XmlNodeType XmlDeclaration = int32(17)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>XmlDeclaration</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The XmlDeclaration node must be the first node in the document. It cannot have children. It is a child of the Document node. It can have attributes that provide version and encoding information.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The XML declaration (for example, &lt;?xml version='1.0'?&gt; ).</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>