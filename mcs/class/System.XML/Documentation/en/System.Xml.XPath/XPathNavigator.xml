<?xml version="1.0" encoding="utf-8"?>
<Type Name="XPathNavigator" FullName="System.Xml.XPath.XPathNavigator">
  <TypeSignature Maintainer="auto" Language="C#" Value="public abstract class XPathNavigator : System.Xml.XPath.XPathItem, ICloneable, System.Xml.IXmlNamespaceResolver, System.Xml.XPath.IXPathNavigable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XPathNavigator extends System.Xml.XPath.XPathItem implements class System.ICloneable, class System.Xml.IXmlNamespaceResolver, class System.Xml.XPath.IXPathNavigable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>All the dynamic members are not designed to be thread safe.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Xml.XPath.XPathItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.XPath.IXPathNavigable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> class in the <see cref="N:System.Xml.XPath" /> namespace is an abstract class which defines a cursor model for navigating and editing XML information items as instances of the XQuery 1.0 and XPath 2.0 Data Model.</para>
      <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object is created from a class that implements the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface such as the <see cref="T:System.Xml.XPath.XPathDocument" /> and <see cref="T:System.Xml.XmlDocument" /> classes. <see cref="T:System.Xml.XPath.XPathNavigator" /> objects created by <see cref="T:System.Xml.XPath.XPathDocument" /> objects are read-only while <see cref="T:System.Xml.XPath.XPathNavigator" /> objects created by <see cref="T:System.Xml.XmlDocument" /> objects can be edited. An <see cref="T:System.Xml.XPath.XPathNavigator" /> object's read-only or editable status is determined using the <see cref="P:System.Xml.XPath.XPathNavigator.CanEdit" /> property of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</para>
      <para>For more information about processing XML data using the XPath data model, see the <format type="text/html"><a href="536c6fce-1453-4654-9c72-bca54d47e081">Process XML Data Using the XPath Data Model</a></format> topic.</para>
      <block subset="none" type="note">
        <para>Exceptions raised as a result of using the <see cref="T:System.Xml.XPath.XPathNavigator" /> class, such as the <see cref="T:System.Xml.XPath.XPathException" /> class, may contain sensitive information that should not be exposed in untrusted scenarios. Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a cursor model for navigating and editing XML data.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XPathNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor is called by derived class constructors to initialize state in this type.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter AppendChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter AppendChild() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Appending child nodes adds the new nodes to the end of the list of child nodes for the current node. For example, when three child nodes exist for an element, the first appended node becomes the fourth child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild" /> method.</para>
          <list type="bullet">
            <item>
              <para>The new child node is not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node or an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
          <para>You can write more than one node to the writer. All nodes are appended to the end of the list of child nodes of the current node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create one or more new child nodes at the end of the list of child nodes of the current node. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to create new child nodes at the end of the list of child nodes of the current node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(string newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Appending a child node adds the new node to the end of the list of child nodes for the current node. For example, when three child nodes exist for an element, the appended node becomes the fourth child node. If no child nodes exist, then a new child node is created.</para>
          <para>To create a new element node, include all XML syntax in the XML string parameter. The string for a new book node is AppendChild("&lt;book/&gt;"). The string for appending the text "book" to the current node's text node is AppendChild("book"). If the XML string contains multiple nodes, all nodes are added.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node or an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the end of the list of child nodes of the current node using the XML data string specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML data string for the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Appending a child node adds the new node to the end of the list of child nodes for the current node. For example, when three child nodes exist for an element, the appended node becomes the fourth child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XmlReader" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node or an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the end of the list of child nodes of the current node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public virtual void AppendChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Appending a child node adds the new node to the end of the list of child nodes for the current node. For example, when three child nodes exist for an element, the appended node becomes the fourth child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node or an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the end of the list of child nodes of the current node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="AppendChildElement">
      <MemberSignature Language="C#" Value="public virtual void AppendChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AppendChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Appending a child node adds the new node to the end of the list of child nodes for the current node. For example, when three child nodes exist for an element node, the appended node becomes the fourth child node. If no child nodes exist, then a new child node is created.</para>
          <para>Namespace prefix and URI values can be obtained by using the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> method or the  <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method. For example, the following syntax appends a child element by using the in-scope namespace xmlns:bk=http://www.contoso.com/books:</para>
          <code>navigator.AppendChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)</code>
          <para>This creates the new child &lt;bk:pages/&gt; element.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the namespace prefix specified is null or <see cref="F:System.String.Empty" />, then the prefix for the namespace URI of the new element is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, then a namespace prefix is automatically generated.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node or an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child element node at the end of the list of child nodes of the current node using the namespace prefix, local name and namespace URI specified with the value specified.</para>
        </summary>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the new child element node (if any).</param>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the new child element node (if any).</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the new child element node (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the new child element node. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the base URI.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A networked XML document is comprised of chunks of data, aggregated using various W3C standard inclusion mechanisms, and therefore contains nodes that come from different places. DTD entities are an example of this aggregated data, but it is not limited to DTDs. The <see cref="P:System.Xml.XPath.XPathNavigator.BaseURI" /> property tells you where these nodes originate from.</para>
          <para>For example, if the XML data is loaded from http://server/mydata.xml, the <see cref="P:System.Xml.XPath.XPathNavigator.BaseURI" /> property returns http://server/mydata.xml.</para>
          <block subset="none" type="note">
            <para>Nodes created using the <see cref="T:System.Xml.XPath.XPathNavigator" /> class have the same <see cref="P:System.Xml.XPath.XPathNavigator.BaseURI" /> as the XML document the <see cref="T:System.Xml.XPath.XPathNavigator" /> was created from.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the base URI for the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CanEdit">
      <MemberSignature Language="C#" Value="public virtual bool CanEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.CanEdit" /> property has different values based on the three different implementations of the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface in the .NET Framework. The <see cref="P:System.Xml.XPath.XPathNavigator.CanEdit" /> values for <see cref="T:System.Xml.XPath.XPathNavigator" /> objects created by each implementation are listed in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>
                    <see cref="T:System.Xml.XPath.IXPathNavigable" /> Implementation</para>
                </term>
                <description>
                  <para>
                    <see cref="P:System.Xml.XPath.XPathNavigator.CanEdit" /> Value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="T:System.Xml.XPath.XPathDocument" />
                </para>
              </term>
              <description>
                <para>false</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Xml.XmlDocument" />
                </para>
              </term>
              <description>
                <para>true</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the <see cref="T:System.Xml.XPath.XPathNavigator" /> can edit the underlying XML data.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CheckValidity">
      <MemberSignature Language="C#" Value="public virtual bool CheckValidity (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidity(class System.Xml.Schema.XmlSchemaSet schemas, class System.Xml.Schema.ValidationEventHandler validationEventHandler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="validationEventHandler" Type="System.Xml.Schema.ValidationEventHandler" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> method verifies that the XML data contained in the <see cref="T:System.Xml.XPath.XPathNavigator" /> conforms to a global type or declaration in the schema or schemas provided in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" /> method does not perform infoset augmentation. This means that schema defaults are not applied, text values are not converted to atomic values, and no new type information is associated with information items.</para>
            </item>
            <item>
              <para>Schema xsi:schemaLocation or xsi:noNamespaceSchemaLocation hints in the XML data of are ignored.</para>
            </item>
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a document node, the validation process includes checking of uniqueness and reference constraints (xs:ID, xs:IDREF, xs:key, xs:keyref, and xs:unique). Otherwise, these checks are omitted.</para>
            </item>
            <item>
              <para>If the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is null and the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node, the type information exposed by the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property's <see cref="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType" /> property is used to check the node's validity. If the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is null and the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the root node, the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property of the document element (that is, the element child of the root node) is used. In both cases if the <see cref="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType" /> property of the element's <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property is null and the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is null, an <see cref="T:System.InvalidOperationException" /> is thrown because there is no type information to use to perform validation.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Verifies that the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> conforms to the XML Schema definition language (XSD) schema provided.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if no schema validation errors occurred; otherwise, false.</para>
        </returns>
        <param name="schemas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> containing the schemas used to validate the XML data contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
        <param name="validationEventHandler">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> that receives information about schema validation warnings and errors.</param>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNavigator Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.Clone" /> method is especially useful in conjunction with the <see cref="T:System.Xml.XPath.XPathNodeIterator" />. An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> is used to iterate over a selected node set, and contains a <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> property which returns an <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the context node of the <see cref="T:System.Xml.XPath.XPathNodeIterator" />. However, the <see cref="T:System.Xml.XPath.XPathNavigator" /> returned by the <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> property cannot be used to move away from the node set. Instead, you clone the returned <see cref="T:System.Xml.XPath.XPathNavigator" /> and use the cloned navigator to do any additional moves.</para>
          <para>The cloned <see cref="T:System.Xml.XPath.XPathNavigator" /> is not affected by subsequent changes to the original <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, creates a new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned at the same node as this <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ComparePosition">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeOrder ComparePosition (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeOrder ComparePosition(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeOrder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table describes the <see cref="T:System.Xml.XmlNodeOrder" /> enumeration.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XmlNodeOrder </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNodeOrder.Before" />
                </para>
              </term>
              <description>
                <para>The current node of this <see cref="T:System.Xml.XPath.XPathNavigator" /> is before the current node of the supplied <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNodeOrder.After" />
                </para>
              </term>
              <description>
                <para>The current node of this <see cref="T:System.Xml.XPath.XPathNavigator" /> is after the current node of the supplied <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNodeOrder.Same" />
                </para>
              </term>
              <description>
                <para>The two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects are positioned on the same node.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNodeOrder.Unknown" />
                </para>
              </term>
              <description>
                <para>The node positions cannot be determined relative to each other in the document order, or null is specified as the <see cref="T:System.Xml.XPath.XPathNavigator" /> parameter. This could occur if the two nodes reside in different trees.</para>
              </description>
            </item>
          </list>
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" /> method's behavior is dependent on the <see cref="T:System.Xml.XPath.XPathNodeType" /> the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on. When comparing nodes in the XML document, the following rules apply:</para>
          <list type="bullet">
            <item>
              <para>
                <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> nodes: These nodes are returned in document order from the source document.</para>
            </item>
            <item>
              <para>
                <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" /> nodes: These nodes may be returned in document order and are always before the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> nodes of the parent element.</para>
            </item>
            <item>
              <para>
                <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> nodes: These nodes may be returned in document order. They always come after the <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" /> nodes and before any child nodes of the parent node.</para>
            </item>
          </list>
          <block subset="none" type="note">
            <para>For more information about the XPath data model and details about each of the node types, see section 5 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
          </block>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <block subset="none" type="note">
            <para>Use the <see cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" /> method rather than the <see cref="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" /> method when possible.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compares the position of the current <see cref="T:System.Xml.XPath.XPathNavigator" /> with the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlNodeOrder" /> value representing the comparative position of the two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</para>
        </returns>
        <param name="nav">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare against.</param>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathExpression Compile (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathExpression Compile(string xpath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An XPath expression is evaluated to yield one of the following return types: </para>
          <list type="bullet">
            <item>
              <para>Node Set: an unordered collection of nodes without duplicates</para>
            </item>
            <item>
              <para>Boolean: true or false</para>
            </item>
            <item>
              <para>Number: a floating-point number</para>
            </item>
            <item>
              <para>String: a sequence of UCS characters</para>
            </item>
          </list>
          <para>Expressions that return a node set can be used in the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" /> and <see cref="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" /> methods. Expressions that return a Boolean, number, or string can be used in the <see cref="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" /> method. The rules on valid expressions for the <see cref="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" /> method are specific to that method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compiles a string representing an XPath expression and returns an <see cref="T:System.Xml.XPath.XPathExpression" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathExpression" /> object representing the XPath expression.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A string representing an XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public virtual void CreateAttribute (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateAttribute(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Namespace prefix and URI values can be obtained using the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> or <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method. For example, the following syntax creates an attribute by using the in-scope namespace xmlns:bk="http://www.contoso.com/books":</para>
          <code>editor.CreateAttribute(navigator.Prefix, "attributeName", LookupNamespace(navigator.Prefix), "text")</code>
          <para>This creates the new attribute &lt;bk:element attributeName="text"/&gt; on the current element.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the namespace prefix specified is <see cref="F:System.String.Empty" /> or null, the prefix for the namespace URI of the new attribute is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, a namespace prefix is automatically generated. For example to create a new attribute on an element in the default namespace of the contosoBooks.xml file, (xmlns="http://www.contoso.com/books"), you specify null or <see cref="F:System.String.Empty" /> for both the namespace prefix and namespace URI parameters. Specifying http://www.contoso.com/books as the namespace URI parameter will cause the <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" /> method to auto generate a namespace prefix for the new attribute.</para>
            </item>
            <item>
              <para>If the new attribute created is a namespace node which conflicts with a namespace declaration on the element, either because the namespace prefix chosen is used by another namespace declaration at the same scope, or because the prefix chosen is the same as that of the element but is bound to a different namespace URI, an exception is thrown.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an attribute node on the current element node using the namespace prefix, local name and namespace URI specified with the value specified.</para>
        </summary>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the new attribute node (if any).</param>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the new attribute node which cannot <see cref="F:System.String.Empty" /> or null.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI for the new attribute node (if any).</param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the new attribute node. If <see cref="F:System.String.Empty" /> or null are passed, an empty attribute node is created.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter CreateAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter CreateAttributes() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttributes" /> method.</para>
          <list type="bullet">
            <item>
              <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, the new attributes created by the <see cref="T:System.Xml.XPath.XPathNavigator" /> method are placed at the end of the attribute list of the current element.</para>
            </item>
            <item>
              <para>The new attributes are not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
            </item>
            <item>
              <para>If the namespace prefix specified is <see cref="F:System.String.Empty" /> or null, the prefix for the namespace URI of the new attribute is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, a namespace prefix is automatically generated. For example to create a new attribute on an element in the default namespace of the contosoBooks.xml file, (xmlns="http://www.contoso.com/books"), you specify null or <see cref="F:System.String.Empty" /> for both the namespace prefix and namespace URI parameters. Specifying http://www.contoso.com/books as the namespace URI parameter will cause the <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" /> method to auto generate a namespace prefix for the new attribute.</para>
            </item>
            <item>
              <para>If the new attribute created is a namespace node which conflicts with a namespace declaration on the element, either because the namespace prefix chosen is used by another namespace declaration at the same scope, or because the prefix chosen is the same as that of the element but is bound to a different namespace URI, an exception is thrown.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Xml.XmlWriter" /> object returned may only be used to create attributes. Calling other <see cref="T:System.Xml.XmlWriter" /> object methods that do not create attributes throws an exception.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.CreateAttributes" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create new attributes on the current element.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to create new attributes on the current element.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="CreateNavigator">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator CreateNavigator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is equivalent to the <see cref="M:System.Xml.XPath.XPathNavigator.Clone" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a copy of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> copy of this <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="DeleteRange">
      <MemberSignature Language="C#" Value="public virtual void DeleteRange (System.Xml.XPath.XPathNavigator lastSiblingToDelete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRange(class System.Xml.XPath.XPathNavigator lastSiblingToDelete) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToDelete" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)" /> method deletes a range of sibling nodes from the current node the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on (inclusive) to the node specified by the <see cref="T:System.Xml.XPath.XPathNavigator" /> parameter (inclusive). The <see cref="T:System.Xml.XPath.XPathNavigator" /> is then positioned on its parent node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes a range of sibling nodes from the current node to the node specified.</para>
        </summary>
        <param name="lastSiblingToDelete">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the last sibling node in the range to delete.</param>
      </Docs>
    </Member>
    <Member MemberName="DeleteSelf">
      <MemberSignature Language="C#" Value="public virtual void DeleteSelf ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteSelf() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the deleted node's parent node on successful deletion.</para>
            </item>
            <item>
              <para>If the deleted node is a text node which is the content of a simple typed element, the element loses its type information. This means that when positioned on the element the <see cref="P:System.Xml.XPath.XPathNavigator.XmlType" />, <see cref="P:System.Xml.XPath.XPathNavigator.ValueType" /> and <see cref="P:System.Xml.XPath.XPathNavigator.TypedValue" /> properties have the values null, <see cref="T:System.String" /> and <see cref="F:System.String.Empty" /> respectively.</para>
            </item>
            <item>
              <para>Deleted nodes are still accessible to <see cref="T:System.Xml.XPath.XPathNavigator" /> objects positioned over them prior to deletion. However methods that attempt to move away from the deleted sub-tree fail. For example, the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" /> methods always fail when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned over the top most deleted node. This is because the deleted node is no longer connected to the XML document. Similarly the <see cref="Overload:System.Xml.XPath.XPathNavigator.MoveToNext" /> method always fails if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the bottom-most deleted node.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes the current node and its child nodes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following C# code converts the Price/text() node to a number, multiplies it by 10, and returns the resulting value.</para>
          <code>nav.Evaluate("Price/text()*10");</code>
          <block subset="none" type="note">
            <para>The XPath position() and last() functions, unless used as a predicate in a location step, require a reference to a node set in order to be evaluated. In this case, you must use the overload which takes an <see cref="T:System.Xml.XPath.XPathNodeIterator" /> as an argument; otherwise, position() and last() return 0.</para>
          </block>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Evaluates the specified XPath expression and returns the typed result.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A string representing an XPath expression that can be evaluated.</param>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following C# code returns a number after converting the Price/text() node to a number and multiplying the value by 10.</para>
          <code>XPathExpression expr = nav.Compile("Price/text()*10");
nav.Evaluate(expr);</code>
          <block subset="none" type="note">
            <para>The XPath position() and last() functions, unless used as a predicate in a location step, require a reference to a node set in order to be evaluated. In this case, you must use the overload which takes an <see cref="T:System.Xml.XPath.XPathNodeIterator" /> as an argument; otherwise, position() and last() return 0.</para>
          </block>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Evaluates the <see cref="T:System.Xml.XPath.XPathExpression" /> and returns the typed result.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</para>
        </returns>
        <param name="expr">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathExpression" /> that can be evaluated.</param>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following C# code returns a number after converting the Price/text() node to a number and multiplying the value by 10.</para>
          <code>XPathExpression expr = nav.Compile("Price/text()*10");
nav.Evaluate(expr);</code>
          <block subset="none" type="note">
            <para>The XPath position() and last() functions, unless used as a predicate in a location step, require a reference to a node set in order to be evaluated. In this case, you must use the overload which takes an <see cref="T:System.Xml.XPath.XPathNodeIterator" /> as an argument; otherwise, position() and last() return 0.</para>
          </block>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Evaluates the specified XPath expression and returns the typed result, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes in the XPath expression.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A string representing an XPath expression that can be evaluated.</param>
        <param name="resolver">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public virtual object Evaluate (System.Xml.XPath.XPathExpression expr, System.Xml.XPath.XPathNodeIterator context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate(class System.Xml.XPath.XPathExpression expr, class System.Xml.XPath.XPathNodeIterator context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
        <Parameter Name="context" Type="System.Xml.XPath.XPathNodeIterator" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The expression is evaluated using the <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> node of the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> as the context node. If <paramref name="context" /> is null, the node on which the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned is used as the context node.</para>
          <para>The position() and last() functions, unless used as a predicate in a location step, always return 0 under the following conditions: </para>
          <list type="bullet">
            <item>
              <para>The <paramref name="context" /> argument is null.</para>
            </item>
            <item>
              <para>
                <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> has not been called on the <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</para>
            </item>
          </list>
          <para>Because the position() and last() functions work on the current node, you should not use the <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> property to move away from the selected node set. This could invalidate the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Uses the supplied context to evaluate the <see cref="T:System.Xml.XPath.XPathExpression" />, and returns the typed result.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The result of the expression (Boolean, number, string, or node set). This maps to <see cref="T:System.Boolean" />, <see cref="T:System.Double" />, <see cref="T:System.String" />, or <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects respectively.</para>
        </returns>
        <param name="expr">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathExpression" /> that can be evaluated.</param>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set that the evaluation is to be performed on.</param>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string localName, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> must be positioned on an element node before calling the <see cref="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" /> method.</para>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the attribute with the specified local name and namespace URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.String" /> that contains the value of the specified attribute; <see cref="F:System.String.Empty" /> if a matching attribute is not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the attribute.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the attribute.</param>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual string GetNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Namespaces xml and xmlns always return a value. If <see cref="F:System.String.Empty" /> is specified as the <paramref name="name" /> parameter, the <see cref="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" /> method returns the default xmlns namespace.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
          <para>This method does not affect the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the value of the namespace node corresponding to the specified local name.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.String" /> that contains the value of the namespace node; <see cref="F:System.String.Empty" /> if a matching namespace node is not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the namespace node.</param>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The namespaces returned depends on the <see cref="T:System.Xml.XmlNamespaceScope" /> value specified.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XmlNamespaceScope Value</para>
                </term>
                <description>
                  <para>Namespaces Returned</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNamespaceScope.All" />
                </para>
              </term>
              <description>
                <para>All namespaces defined in the scope of the current node. This includes the xmlns:xml namespace, which is always declared implicitly. The order of the namespaces returned is not defined.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNamespaceScope.ExcludeXml" />
                </para>
              </term>
              <description>
                <para>All namespaces defined in the scope of the current node, excluding the xmlns:xml namespace, which is always declared implicitly. The order of the namespaces returned is not defined.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XmlNamespaceScope.Local" />
                </para>
              </term>
              <description>
                <para>All namespaces that are defined locally at the current node.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the in-scope namespaces of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.Generic.IDictionary`2" /> collection of namespace names keyed by prefix.</para>
        </returns>
        <param name="scope">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlNamespaceScope" /> value specifying the namespaces to return.</param>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>True if the current node is element and has one or more attributes; Otherwise False.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the current node has any attributes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public virtual bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>True if the current node is element and has one or more children; Otherwise False (attribute and namespace nodes don't have "children").
		</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a node that cannot have child nodes, the <see cref="P:System.Xml.XPath.XPathNavigator.HasChildren" /> property always returns false.</para>
          <para>The following table lists the child node <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes allowed for each <see cref="T:System.Xml.XPath.XPathNodeType" /> node.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType Node </para>
                </term>
                <description>
                  <para>Child XPathNodeType Nodes </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" /> nodes.</para>
                <block subset="none" type="note">
                  <para>
                    <see cref="F:System.Xml.XmlNodeType.DocumentFragment" /> is equivalent to <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> when using the <see cref="T:System.Xml.XmlDocument" /> class and can have the same children as an element.</para>
                </block>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.Text" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" /> or <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" /> nodes.</para>
              </description>
            </item>
            <item>
              <term>
                <para>All other <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes</para>
              </term>
              <description>
                <para>Cannot have child nodes.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the current node has any child nodes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InnerXml">
      <MemberSignature Language="C#" Value="public virtual string InnerXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> and <see cref="P:System.Xml.XPath.XPathNavigator.OuterXml" /> properties are not very efficient. If performance is a priority, it is more efficient to use the node navigation methods of the <see cref="T:System.Xml.XPath.XPathNavigator" /> to get values of child nodes.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the markup representing the child nodes of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertAfter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertAfter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter" /> method.</para>
          <list type="bullet">
            <item>
              <para>The new sibling node is not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node after the currently selected node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node after the currently selected node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(string newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To create a new element node, include all XML syntax in the XML string parameter. The string for a new book node is InsertAfter("&lt;book/&gt;"). The string for inserting the text "book" after the current node's text node is InsertAfter("book"). If the XML string contains multiple nodes, all nodes are added.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node after the currently selected node using the XML string specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML data string for the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XmlReader" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node after the currently selected node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertAfter (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertAfter(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XmlReader" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node after the currently selected node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter InsertBefore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter InsertBefore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore" /> method.</para>
          <list type="bullet">
            <item>
              <para>The new sibling node is not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node before the currently selected node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new sibling node before the currently selected node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (string newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(string newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To create a new element node, include all XML syntax in the XML string parameter. The string for a new book node is InsertBefore("&lt;book/&gt;"). The string for inserting the text "book" before the current node's text node is InsertBefore("book"). If the XML string contains multiple nodes, all nodes are added.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node before the currently selected node using the XML string specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML data string for the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XmlReader newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XmlReader newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XmlReader" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node before the currently selected node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertBefore (System.Xml.XPath.XPathNavigator newSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertBefore(class System.Xml.XPath.XPathNavigator newSibling) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSibling" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling node before the currently selected node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified.</para>
        </summary>
        <param name="newSibling">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new sibling node.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertElementAfter">
      <MemberSignature Language="C#" Value="public virtual void InsertElementAfter (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementAfter(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Namespace prefix and URI values can be obtained using the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> or <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method. For example, the following syntax inserts a sibling element by using the in-scope namespace xmlns:bk="http://www.contoso.com/books":</para>
          <code>navigator.InsertElementAfter(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)</code>
          <para>This creates the new sibling &lt;bk:pages/&gt; element.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the namespace prefix specified is null or <see cref="F:System.String.Empty" />, then the prefix for the namespace URI of the new element is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, then a namespace prefix is automatically generated.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling element after the current node using the namespace prefix, local name and namespace URI specified, with the value specified.</para>
        </summary>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the new child element (if any).</param>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the new child element (if any).</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
      </Docs>
    </Member>
    <Member MemberName="InsertElementBefore">
      <MemberSignature Language="C#" Value="public virtual void InsertElementBefore (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertElementBefore(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Namespace prefix and URI values can be obtained using the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> or <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method. For example, the following syntax inserts a sibling element by using the in-scope namespace xmlns:bk="http://www.contoso.com/books":</para>
          <code>navigator.InsertElementBefore(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)</code>
          <para>This creates the new sibling &lt;bk:pages/&gt; element.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the namespace prefix specified is null or <see cref="F:System.String.Empty" />, then the prefix for the namespace URI of the new element is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, then a namespace prefix is automatically generated.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new sibling element before the current node using the namespace prefix, local name, and namespace URI specified, with the value specified.</para>
        </summary>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the new child element (if any).</param>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the new child element (if any).</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
      </Docs>
    </Member>
    <Member MemberName="IsDescendant">
      <MemberSignature Language="C#" Value="public virtual bool IsDescendant (System.Xml.XPath.XPathNavigator nav);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDescendant(class System.Xml.XPath.XPathNavigator nav) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nav" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> is a descendant of the current <see cref="T:System.Xml.XPath.XPathNavigator" /> if it is positioned on a descendant node of the current <see cref="T:System.Xml.XPath.XPathNavigator" />. Take, for example, the following XML string: </para>
          <para>&lt;item&gt;&lt;name&gt;widget&lt;/name&gt;&lt;/item&gt; </para>
          <para>If the current <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the item node, and the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified is positioned on the name node, <see cref="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)" /> returns true.</para>
          <para>This method always returns false under the following conditions: </para>
          <list type="bullet">
            <item>
              <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> specified shares the same implementation but points at a different document instance than the current navigator.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> specified has a different implementation than the current navigator.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> is a descendant of the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> is a descendant of the current <see cref="T:System.Xml.XPath.XPathNavigator" />; otherwise, false.</para>
        </returns>
        <param name="nav">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare to this <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>True if the current ndoe is empty tag element; False if the current node is not an element, or an element that has contents, or an element that has explicit close tag.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property enables you to determine the difference between the following different elements.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Element</para>
                </term>
                <description>
                  <para>IsEmptyElement Value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>&lt;item num="123"/&gt;</para>
              </term>
              <description>
                <para>true</para>
              </description>
            </item>
            <item>
              <term>
                <para>&lt;item num="123"&gt;test&lt;/item&gt;</para>
              </term>
              <description>
                <para>false</para>
              </description>
            </item>
            <item>
              <term>
                <para>&lt;item num="123"&gt;&lt;/item&gt;</para>
              </term>
              <description>
                <para>false</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets a value indicating whether the current node is an empty element without an end element tag.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsNode">
      <MemberSignature Language="C#" Value="public override sealed bool IsNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating if the current node represents an XPath node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsSamePosition">
      <MemberSignature Language="C#" Value="public abstract bool IsSamePosition (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSamePosition(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" /> method assumes that the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified shares the same implementation and is points at the same document instance as the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>This method always returns false under the following conditions:</para>
          <list type="bullet">
            <item>
              <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> specified shares the same implementation but points at a different document instance than the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> has a different implementation than the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, determines whether the current <see cref="T:System.Xml.XPath.XPathNavigator" /> is at the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the two <see cref="T:System.Xml.XPath.XPathNavigator" /> objects have the same position; otherwise, false.</para>
        </returns>
        <param name="other">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> to compare to this <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the local name or the namespace prefix.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The local name returned depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node. For example, the local name for the &lt;bk:book&gt; element is book.</para>
          <para>The following table lists the value returned by the <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" /> property, based on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType</para>
                </term>
                <description>
                  <para>Property Value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>The local name of the element.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />
                </para>
              </term>
              <description>
                <para>The local name of the attribute. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />
                </para>
              </term>
              <description>
                <para>The prefix associated with the namespace URI.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>The target of the processing instruction. </para>
              </description>
            </item>
            <item>
              <term>
                <para>All other <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes</para>
              </term>
              <description>
                <para>
                  <see cref="F:System.String.Empty" />.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> of the current node without any namespace prefix.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="F:System.String.Empty" /> is specified as the <paramref name="prefix" /> parameter, the currently assigned default namespace URI is returned. If no default namespace URI is explicitly assigned, and <see cref="F:System.String.Empty" /> is specified as the <paramref name="prefix" /> parameter, the blank prefix is associated with elements that are not in any namespace, and <see cref="F:System.String.Empty" /> is returned.</para>
          <block subset="none" type="note">
            <para>The prefix to namespace URI mappings can change from node to node in an XML document. As a result, the value of the <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method may not be consistent from one node to the next.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the namespace URI for the specified prefix.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.String" /> that contains the namespace URI assigned to the namespace prefix specified; null if no namespace URI is assigned to the prefix specified. The <see cref="T:System.String" /> returned is atomized.</para>
        </returns>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The prefix whose namespace URI you want to resolve. To match the default namespace, pass <see cref="F:System.String.Empty" />.</param>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> method returns the first prefix that matches the namespace URI specified. Multiple prefixes referring to the same namespace URI are not ordered in any particular way, so a particular prefix may not be returned each time when more than one is assigned.</para>
          <block subset="none" type="note">
            <para>Namespace URI to prefix mappings can change from node to node in an XML document. As a result, the value of the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> method may not be consistent from one node to the next.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the prefix declared for the specified namespace URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.String" /> that contains the namespace prefix assigned to the namespace URI specified; otherwise, <see cref="F:System.String.Empty" /> if no prefix is assigned to the namespace URI specified. The <see cref="T:System.String" /> returned is atomized.</para>
        </returns>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI to resolve for the prefix.</param>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(string xpath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method has no affect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the current node matches the specified XPath expression.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the current node matches the specified XPath expression; otherwise, false.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />The XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public virtual bool Matches (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Matches(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />. This method is identical to the <see cref="M:System.Xml.XPath.XPathNavigator.Matches(System.String)" /> method, except that a <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath expression is specified, rather than an XPath expression <see cref="T:System.String" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the current node matches the specified <see cref="T:System.Xml.XPath.XPathExpression" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the current node matches the <see cref="T:System.Xml.XPath.XPathExpression" />; otherwise, false.</para>
        </returns>
        <param name="expr">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public abstract bool MoveTo (System.Xml.XPath.XPathNavigator other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveTo(class System.Xml.XPath.XPathNavigator other) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method always returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified is an <see cref="T:System.Xml.XPath.XPathNavigator" /> that shares the same implementation and points at the same document instance as the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>This method always returns false if the <see cref="T:System.Xml.XPath.XPathNavigator" /> specified is an <see cref="T:System.Xml.XPath.XPathNavigator" /> that has a different implementation than the current <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the same position as the specified <see cref="T:System.Xml.XPath.XPathNavigator" />; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="other">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the node that you want to move to. </param>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual bool MoveToAttribute (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string localName, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on an element, this method returns false.</para>
          <para>After a successful call to <see cref="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />, the <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" />, <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> and <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" /> properties reflect the values of the attribute. When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an attribute, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the navigator. Rather, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" /> to move to the next attribute node.</para>
          <para>Once positioned on an attribute, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move to the owner element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the attribute with the matching local name and namespace URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the attribute; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the attribute.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the attribute; null for an empty namespace.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value of the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)" /> method depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node, and the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the child node to move to. </para>
          <para>The following table shows the different <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes, and the child nodes they can move to.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Current Node's XPathNodeType</para>
                </term>
                <description>
                  <para>Child Node's XPathNodeType</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>All other <see cref="T:System.Xml.XPath.XPathNodeType" /> values</para>
              </term>
              <description>
                <para>None.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the child node of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the child node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the child node to move to.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToChild">
      <MemberSignature Language="C#" Value="public virtual bool MoveToChild (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToChild(string localName, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the child node with the local name and namespace URI specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the child node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the child node to move to.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the child node to move to.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirst">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFirst ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirst() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first sibling node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first sibling node of the current node; false if there is no first sibling, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is already positioned on the first sibling, <see cref="T:System.Xml.XPath.XPathNavigator" /> will return true and will not move its position.</para>
          <para>If <see cref="T:System.Xml.XPath.XPathNavigator.MoveToFirst" /> returns false because there is no first sibling, or if <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on an element, this method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not change.</para>
          <para>After a successful call to <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />, the <see cref="P:System.Xml.XPath.XPathNavigator.LocalName" />, <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> and <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" /> properties reflect the values of the attribute. When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an attribute, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />. Rather, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" /> to move to the next attribute node.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an attribute, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move to the owner element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first attribute of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first attribute of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstChild">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstChild() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> and <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> are the only two <see cref="T:System.Xml.XPath.XPathNodeType" /> values that can have children. This property always returns false for all other <see cref="T:System.Xml.XPath.XPathNodeType" /> node types.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first child node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first child node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToFirstNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToFirstNamespace() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> class returns namespace nodes in reverse document order. Therefore, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" /> essentially moves to the last namespace node in the current scope.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> has been moved to the namespace node, the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property reflects the name of the namespace.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />. Rather, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" /> to move to the next namespace node.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an namespace node, call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move back to the element node.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to first namespace node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> class returns namespace nodes in reverse document order. Therefore, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" /> essentially moves to the last namespace node in the current scope.</para>
          <para>Using the following XML fragment as an example, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the data node, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" /> behaves in the following manner.</para>
          <list type="bullet">
            <item>
              <para>MoveToFirstNamespace(XPathNamespaceScope.All) moves to one of the following namespace nodes: xmlns:c='C', xmlns:a='A2', xmlns='', xmlns:b='B', or xmlns:xml='http://www.w3.org/XML/1998/namespace'.</para>
            </item>
            <item>
              <para>MoveToFirstNamespace(XPathNamespaceScope.ExcludeXml) moves to one of the following namespace nodes: xmlns:c='C', xmlns:a='A2', xmlns='', or xmlns:b='B'.</para>
            </item>
            <item>
              <para>MoveToFirstNamespace(XPathNamespaceScope.Local) moves to the xmlns:c='C' node.</para>
            </item>
          </list>
          <code>&lt;root xmlns='urn:default' xmlns:a='A1' xmlns:b='B'&gt;
    &lt;item xmlns='' xmlns:a='A2'&gt;
        &lt;data xmlns:c='C' /&gt;
    &lt;/item&gt;
&lt;/root&gt;</code>
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on an element, this method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not change. After the <see cref="T:System.Xml.XPath.XPathNavigator" /> has been moved to the namespace node, the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property reflects the name of the namespace.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />. Rather, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" /> to move to the next namespace node.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an namespace node, call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move back to the element node.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the first namespace node that matches the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the first namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="namespaceScope">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope. </param>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" /> method does not move to attribute or namespace nodes. If the <see cref="T:System.Xml.XPath.XPathNodeType" /> parameter value is <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />, the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" /> method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
            </item>
            <item>
              <para>If the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" /> method returns false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the following element of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified in document order.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the element. The <see cref="T:System.Xml.XPath.XPathNodeType" /> cannot be <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" /> method returns false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the element with the local name and namespace URI specified in document order.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(valuetype System.Xml.XPath.XPathNodeType type, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" /> method does not move to attribute or namespace nodes. If the <see cref="T:System.Xml.XPath.XPathNodeType" /> parameter value is <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />, the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" /> method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
            </item>
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary passed as a parameter is not positioned after the position of the current <see cref="T:System.Xml.XPath.XPathNavigator" /> it is ignored.</para>
            </item>
            <item>
              <para>If <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary passed as a parameter is null the next following node with the specified <see cref="T:System.Xml.XPath.XPathNodeType" /> is located in document order.</para>
            </item>
            <item>
              <para>The <see cref="Overload:System.Xml.XPath.XPathNavigator.MoveToFollowing" /> methods cannot be used to move to attribute or namespace nodes. If the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary passed as a parameter is positioned over an attribute or namespace node, it is equivalent to the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary parameter having been positioned on the first child node of its parent element. This ensures that the parent element of the attribute or namespace node that the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary parameter is positioned on can be matched by this method.</para>
            </item>
            <item>
              <para>If the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" /> method returns false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the following element of the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified, to the boundary specified, in document order.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the element. The <see cref="T:System.Xml.XPath.XPathNodeType" /> cannot be <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />.</param>
        <param name="end">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the element boundary which the current <see cref="T:System.Xml.XPath.XPathNavigator" /> will not move past while searching for the following element.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool MoveToFollowing (string localName, string namespaceURI, System.Xml.XPath.XPathNavigator end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFollowing(string localName, string namespaceURI, class System.Xml.XPath.XPathNavigator end) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="end" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary passed as a parameter is not positioned after the position of the current <see cref="T:System.Xml.XPath.XPathNavigator" /> it is ignored.</para>
            </item>
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary parameter is null, the following element with the local name and namespace URI specified is located in document order.</para>
            </item>
            <item>
              <para>The <see cref="Overload:System.Xml.XPath.XPathNavigator.MoveToFollowing" /> methods cannot be used to move to attribute or namespace nodes. If the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary passed as a parameter is positioned over an attribute or namespace node, it is equivalent to the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary parameter having been positioned on the first child node of its parent element. This ensures that the parent element of the attribute or namespace node that the <see cref="T:System.Xml.XPath.XPathNavigator" /> boundary parameter is positioned on can be matched by this method.</para>
            </item>
            <item>
              <para>If the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)" /> method returns false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the element with the local name and namespace URI specified, to the boundary specified, in document order.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> moved successfully; otherwise false.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="end">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the element boundary which the current <see cref="T:System.Xml.XPath.XPathNavigator" /> will not move past while searching for the following element.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToId">
      <MemberSignature Language="C#" Value="public abstract bool MoveToId (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToId(string id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method can be used to identify nodes by unique ID provided the source document explicitly declares attributes of type ID using a DTD.</para>
          <para>For example, suppose the following XML data, &lt;data&gt;&lt;x a="a1"/&gt;&lt;/data&gt;, was loaded using a DTD that included the following: &lt;!ATTLIST x a ID #REQUIRED&gt;.</para>
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> was positioned somewhere in the XML data, calling MoveToId("a1") positions the <see cref="T:System.Xml.XPath.XPathNavigator" /> on the element node x.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves to the node that has an attribute of type ID whose value matches the specified <see cref="T:System.String" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving; otherwise, false. If false, the position of the navigator is unchanged.</para>
        </returns>
        <param name="id">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> representing the ID value of the node to which you want to move.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToNamespace">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNamespace (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNamespace(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> has been moved to the namespace node, the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property reflects the name of the namespace.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />. Rather, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" /> to move to the next namespace node.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move back to the element node.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the namespace node with the specified namespace prefix.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the specified namespace; false if a matching namespace node was not found, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on an element node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the namespace node.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; otherwise, false if there are no more siblings or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value of the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)" /> method depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node and the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the next sibling node to move to. </para>
          <para>The following table shows the different <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes and the sibling nodes they can move to.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Current Node's XPathNodeType</para>
                </term>
                <description>
                  <para>Sibling Node's XPathNodeType</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Text" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />, <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />, or <see cref="F:System.Xml.XPath.XPathNodeType.Text" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>All other <see cref="T:System.Xml.XPath.XPathNodeType" /> values</para>
              </term>
              <description>
                <para>None.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node of the current node that matches the <see cref="T:System.Xml.XPath.XPathNodeType" /> specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; otherwise, false if there are no more siblings or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the sibling node to move to.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToNext">
      <MemberSignature Language="C#" Value="public virtual bool MoveToNext (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNext(string localName, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next sibling node with the local name and namespace URI specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next sibling node; false if there are no more siblings, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the next sibling node to move to.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the next sibling node to move to.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on an attribute, this method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not change.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an attribute, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> methods are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an attribute, you can call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move to the owner element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next attribute.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next attribute; false if there are no more attributes. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public bool MoveToNextNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveToNextNamespace() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> class returns namespace nodes in reverse document order. Therefore, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" /> essentially moves to the namespace node above the one in the current scope.</para>
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on a namespace node, this method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not change.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an namespace node, call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move back to the element node.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next namespace node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextNamespace">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextNamespace(valuetype System.Xml.XPath.XPathNamespaceScope namespaceScope) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceScope" Type="System.Xml.XPath.XPathNamespaceScope" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> class returns namespace nodes in reverse document order. </para>
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is not currently positioned on a namespace node, this method returns false and the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not change.</para>
          <para>When the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on a namespace node, the methods <see cref="M:System.Xml.XPath.XPathNavigator.MoveToNext" />, <see cref="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />, and <see cref="M:System.Xml.XPath.XPathNavigator.MoveToFirst" /> are not applicable. These methods always return false and do not change the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          <para>After the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an namespace node, call <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> to move back to the element node.</para>
          <para>For a definition of namespace nodes, see section 5.4 of the W3C XML Path Language (XPath) recommendation located at http://www.w3.org/TR/xpath#data-model.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the next namespace node matching the <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the next namespace node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
        <param name="namespaceScope">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNamespaceScope" /> value describing the namespace scope. </param>
      </Docs>
    </Member>
    <Member MemberName="MoveToParent">
      <MemberSignature Language="C#" Value="public abstract bool MoveToParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToParent() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value of the <see cref="M:System.Xml.XPath.XPathNavigator.MoveToParent" /> method depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node, and the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the parent node to move to. </para>
          <para>The following table shows the different <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes, and the parent nodes they can move to.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType </para>
                </term>
                <description>
                  <para>Parent Node </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> nodes do not have parents. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Text" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> node. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" />
                </para>
              </term>
              <description>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> node. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the parent node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the parent node of the current node; otherwise, false. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToPrevious">
      <MemberSignature Language="C#" Value="public abstract bool MoveToPrevious ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToPrevious() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the previous sibling node of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns true if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is successful moving to the previous sibling node; otherwise, false if there is no previous sibling node or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> is currently positioned on an attribute node. If false, the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is unchanged.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MoveToRoot">
      <MemberSignature Language="C#" Value="public virtual void MoveToRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToRoot() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>All nodes belong to one and only one document. Therefore, this method is always successful.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Moves the <see cref="T:System.Xml.XPath.XPathNavigator" /> to the root node that the current node belongs to.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the tag name or the namespace prefix.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> returned depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node. For example, the name for the &lt;bk:book&gt; element is bk:book.</para>
          <para>The following table lists the value returned by the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property, based on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType </para>
                </term>
                <description>
                  <para>Property Value </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>The qualified name of the <see cref="F:System.Xml.XPath.XPathNodeType.Element" />. In the following example, &lt;bk:book&gt;, the name of the element node is bk:book.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />
                </para>
              </term>
              <description>
                <para>The qualified name of the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />. In the following example, &lt;book bk:genre='novel'&gt;, the name of the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> node is bk:genre.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />
                </para>
              </term>
              <description>
                <para>The prefix associated with the namespace URI. In the following namespace declaration, xmlns:bk='urn:samples', the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property returns bk.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>The target of the <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />. In the following example, &lt;?xml-stylesheet type='text/xsl' href= 'books.xsl'?&gt;, the <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> property returns xml-stylesheet. </para>
              </description>
            </item>
            <item>
              <term>
                <para>All other <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes</para>
              </term>
              <description>
                <para>
                  <see cref="F:System.String.Empty" />.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the qualified name of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the namespace URI.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The namespace URI returned depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.</para>
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.NamespaceURI" /> property returns urn:samples for the node &lt;bk:book xmlns:bk='urn:samples'&gt;. </para>
          <para>Only <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> and <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> <see cref="T:System.Xml.XPath.XPathNodeType" /> nodes can have a namespace URI.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the namespace URI of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <value>An <see cref="T:System.Xml.XmlNameTable" /> instance for this instance.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XmlNameTable" /> stores atomized strings of any local name, namespace URI, and prefix used by the <see cref="T:System.Xml.XPath.XPathNavigator" />. This means that when the same <see cref="P:System.Xml.XPath.XPathNavigator.Name" /> is returned multiple times (like "book"), the same <see cref="T:System.String" /> object is returned for that <see cref="P:System.Xml.XPath.XPathNavigator.Name" />. This makes it possible to write efficient code that does object comparisons on these strings, instead of expensive string comparisons.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NavigatorComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer NavigatorComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer NavigatorComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.NavigatorComparer" /> property allows <see cref="T:System.Xml.XPath.XPathNavigator" /> objects to be compared on the basis of position rather than reference to the object. The <see cref="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" /> and <see cref="Overload:System.Object.Equals" /> methods implemented by this class are based on the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> objects passed as parameters. The <see cref="M:System.Object.GetHashCode" /> method implemented by this class uses the properties of the node such as its local name and namespace URI to create a hash code for the node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an <see cref="T:System.Collections.IEqualityComparer" /> used for equality comparison of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XPath.XPathNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XPath.XPathNodeType NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <value>An <see cref="T:System.Xml.XPath.XPathNodeType" /> value that indicates the node type of the current node.</value>
        <remarks>The initial value of this property depends on the each XPathNavigator implementation (that is, it depends on <see cref="T:System.Xml.XPath.IXPathNavigable" />).
		</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OuterXml">
      <MemberSignature Language="C#" Value="public virtual string OuterXml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OuterXml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="P:System.Xml.XPath.XPathNavigator.InnerXml" /> and <see cref="P:System.Xml.XPath.XPathNavigator.OuterXml" /> properties are not very efficient. If performance is a priority, it is more efficient to use the node navigation methods of the <see cref="T:System.Xml.XPath.XPathNavigator" /> to get values of child nodes.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the markup representing the opening and closing tags of the current node and its child nodes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the prefix of the current node, or String.Empty if the current node is namespace.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" /> property gets the namespace prefix associated with the current node. For example, the <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" /> property returns bk for the &lt;bk:book&gt; element. If a prefix does not exist, or the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the current node is not <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />, the <see cref="P:System.Xml.XPath.XPathNavigator.Prefix" /> property returns <see cref="F:System.String.Empty" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the namespace prefix associated with the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter PrependChild ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter PrependChild() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepending a child node adds the new node to the beginning of the list of child nodes for the current node. For example, when three child nodes exist for an element, the prepended node becomes the first child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild" /> method.</para>
          <list type="bullet">
            <item>
              <para>The new child node is not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlWriter" /> object used to create a new child node at the beginning of the list of child nodes of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to create a new child node at the beginning of the list of child nodes of the current node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (string newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(string newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepending a child node adds the new node to the beginning of the list of child nodes for the current node. For example, when three child nodes exist for an element, the prepended node becomes the first child node. If no child nodes exist, then a new child node is created.</para>
          <para>To create a new element node, include all XML syntax in the XML string parameter. The string for a new book node is PrependChild("&lt;book/&gt;"). The string for appending the text "book" to the current node's text node is PrependChild("book"). If the XML string contains multiple nodes, all nodes are added.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the beginning of the list of child nodes of the current node using the XML string specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML data string for the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XmlReader newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XmlReader newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepending a child node adds the new node to the beginning of the list of child nodes for the current node. For example, when three child nodes exist for an element, the prepended node becomes the first child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XmlReader" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the beginning of the list of child nodes of the current node using the XML contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="PrependChild">
      <MemberSignature Language="C#" Value="public virtual void PrependChild (System.Xml.XPath.XPathNavigator newChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChild(class System.Xml.XPath.XPathNavigator newChild) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newChild" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepending a child node adds the new node to the beginning of the list of child nodes for the current node. For example, when three child nodes exist for an element, the prepended node becomes the first child node. If no child nodes exist, then a new child node is created.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> object is positioned over a sequence of XML nodes, all the nodes in the sequence are added.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child node at the beginning of the list of child nodes of the current node using the nodes in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</para>
        </summary>
        <param name="newChild">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the node to add as the new child node.</param>
      </Docs>
    </Member>
    <Member MemberName="PrependChildElement">
      <MemberSignature Language="C#" Value="public virtual void PrependChildElement (string prefix, string localName, string namespaceURI, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrependChildElement(string prefix, string localName, string namespaceURI, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepending a child node adds the new node to the beginning of the list of child nodes for the current node. For example, when three child nodes exist for an element, the prepended node becomes the first child node. If no child nodes exist, then a new child node is created.</para>
          <para>Namespace prefix and URI values can be obtained by using the <see cref="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" /> or <see cref="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" /> method. For example, the following syntax prepends a child element by using the in-scope namespace xmlns:bk="http://www.contoso.com/books":</para>
          <code>navigator.PrependChildElement(navigator.Prefix, "pages", LookupNamespaceURI(navigator.Prefix), String.Empty)</code>
          <para>This creates the new child &lt;bk:pages/&gt; element.</para>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>If the namespace prefix specified is null or <see cref="F:System.String.Empty" />, then the prefix for the namespace URI of the new element is obtained from the current namespaces in-scope. If there is no namespace prefix assigned to the specified namespace URI at the current scope, then a namespace prefix is automatically generated.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child element at the beginning of the list of child nodes of the current node using the namespace prefix, local name, and namespace URI specified with the value specified.</para>
        </summary>
        <param name="prefix">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace prefix of the new child element (if any).</param>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the new child element (if any).</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the new child element (if any). <see cref="F:System.String.Empty" /> and null are equivalent.</param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the new child element. If <see cref="F:System.String.Empty" /> or null are passed, an empty element is created.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="T:System.Xml.XmlReader" /> object is created with the current node and its child nodes, the <see cref="T:System.Xml.XmlReader" /> object's <see cref="P:System.Xml.XmlReader.ReadState" /> property is set to <see cref="F:System.Xml.ReadState.Initial" />. When the <see cref="T:System.Xml.XmlReader" /> object's <see cref="M:System.Xml.XmlReader.Read" /> method is called for the first time, the <see cref="T:System.Xml.XmlReader" /> is moved to the current node of the <see cref="T:System.Xml.XPath.XPathNavigator" />. The new <see cref="T:System.Xml.XmlReader" /> object continues to read until the end of the XML tree is reached. At this point, the <see cref="M:System.Xml.XmlReader.Read" /> method returns false and the <see cref="T:System.Xml.XmlReader" /> object's <see cref="P:System.Xml.XmlReader.ReadState" /> property is set to <see cref="F:System.Xml.ReadState.EndOfFile" />.</para>
          <block subset="none" type="note">
            <para>Changing the position of the <see cref="T:System.Xml.XmlReader" /> object does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          </block>
          <para>Namespace declarations for the in-scope namespaces of the current node are not inserted into the XML stream provided to the <see cref="T:System.Xml.XmlReader" /> object.</para>
          <block subset="none" type="note">
            <para>This behavior differs from the <see cref="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" /> method.</para>
          </block>
          <para>This method creates the <see cref="T:System.Xml.XmlReader" /> object with specific reader settings, and the module that uses this method has no control over those settings. For example, the reader returned by this method prohibits processing Data Type Definitions (DTDs). If the reader attempts to read a file that uses a DTD, it will throw an error, <see cref="T:System.Xml.XmlException" />. The message for the exception will be Unexpected DTD declaration.</para>
          <para>You can change this behavior by implementing a custom <see cref="T:System.Xml.XmlResolver" /> that returns an <see cref="T:System.Xml.XmlReader" /> with the desired <see cref="T:System.Xml.XmlReaderSettings" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an <see cref="T:System.Xml.XmlReader" /> object that contains the current node and its child nodes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlReader" /> object that contains the current node and its child nodes.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReplaceRange">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlWriter ReplaceRange (System.Xml.XPath.XPathNavigator lastSiblingToReplace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlWriter ReplaceRange(class System.Xml.XPath.XPathNavigator lastSiblingToReplace) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lastSiblingToReplace" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)" /> method replaces a range of sibling nodes from the current node the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on (inclusive) to the node specified by the <see cref="T:System.Xml.XPath.XPathNavigator" /> parameter (inclusive).</para>
          <block subset="none" type="note">
            <para>The replacement range is not inserted until the <see cref="M:System.Xml.XmlWriter.Close" /> method of the <see cref="T:System.Xml.XmlWriter" /> object is called.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Replaces a range of sibling nodes from the current node to the node specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XmlWriter" /> object used to specify the replacement range.</para>
        </returns>
        <param name="lastSiblingToReplace">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> positioned on the last sibling node in the range to replace.</param>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (string newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(string newNode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the new node on completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" /> method and returns true. The <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on the new node after completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" /> method when the XML input is <see cref="F:System.String.Empty" /> in which case the <see cref="T:System.Xml.XPath.XPathNavigator" /> is either positioned on the next sibling node or the parent node if there is no next sibling node to the replaced node and the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" /> returns false. </para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>If the XML data string is not well-formed than an exception is thrown and the result of this method is equivalent to calling <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> on the current node.</para>
            </item>
            <item>
              <para>If the XML string contains multiple nodes, all nodes are added and the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the first node in the series of nodes.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" /> method is not equivalent to the <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> method.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Replaces the current node with the content of the string specified.</para>
        </summary>
        <param name="newNode">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML data string for the new node.</param>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XmlReader newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XmlReader newNode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the new node on completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" /> method and returns true. The <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on the new node after completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" /> method when the XML input is <see cref="F:System.String.Empty" /> in which case the <see cref="T:System.Xml.XPath.XPathNavigator" /> is either positioned on the next sibling node or the parent node if there is no next sibling node to the replaced node and the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" /> returns false. </para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>If the XML data string is not well-formed than an exception is thrown and the result of this method is equivalent to calling <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> on the current node.</para>
            </item>
            <item>
              <para>If the XML string contains multiple nodes, all nodes are added and the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the first node in the series of nodes.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" /> method is not equivalent to the <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> method.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Replaces the current node with the contents of the <see cref="T:System.Xml.XmlReader" /> object specified.</para>
        </summary>
        <param name="newNode">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlReader" /> object positioned on the XML data for the new node.</param>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSelf">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSelf (System.Xml.XPath.XPathNavigator newNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSelf(class System.Xml.XPath.XPathNavigator newNode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newNode" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the new node on completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" /> method and returns true. The <see cref="T:System.Xml.XPath.XPathNavigator" /> is not positioned on the new node after completion of the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" /> method when the XML input is <see cref="F:System.String.Empty" /> in which case the <see cref="T:System.Xml.XPath.XPathNavigator" /> is either positioned on the next sibling node or the parent node if there is no next sibling node to the replaced node and the <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" /> returns false. </para>
          <list type="bullet">
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element, text, processing instruction, or comment node.</para>
            </item>
            <item>
              <para>If the XML data string is not well-formed than an exception is thrown and the result of this method is equivalent to calling <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> on the current node.</para>
            </item>
            <item>
              <para>If the XML string contains multiple nodes, all nodes are added and the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the first node in the series of nodes.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" /> method is not equivalent to the <see cref="M:System.Xml.XPath.XPathNavigator.DeleteSelf" /> method.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Replaces the current node with the contents of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object specified.</para>
        </summary>
        <param name="newNode">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathNavigator" /> object positioned on the new node.</param>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Schema information can be set on <see cref="F:System.Xml.XPath.XPathNodeType.Element" />, <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />, or on <see cref="F:System.Xml.XPath.XPathNodeType.Text" /> nodes with a non-null <see cref="P:System.Xml.XPath.XPathNavigator.ValueType" />. If the current node is not one of the above node types, or if the <see cref="T:System.Xml.XPath.XPathNavigator" /> instance does not report schema information, the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property returns null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the schema information that has been assigned to the current node as a result of schema validation.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The context for the selection is the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> when this method is called. After calling this method, the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> returned represents the set of selected nodes. Use <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> method of the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> to iterate over the selected node set.</para>
          <para>The following C# code iterates over the selected set of nodes.</para>
          <code>XPathNodeIterator iterator = nav.Select("/bookstore/book");
while (iterator.MoveNext())
{
    Console.WriteLine(Iterator.Current.Name);
}</code>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>You can still use any of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object's navigation methods to move within the <see cref="T:System.Xml.XPath.XPathNavigator" />. The <see cref="T:System.Xml.XPath.XPathNavigator" /> navigation methods are independent of the selected nodes in the <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</para>
            </item>
            <item>
              <para>Future calls to the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> method return a new <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object that points to the selected set of nodes that matches the new <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> call. The two <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects are completely independent of each other.</para>
            </item>
            <item>
              <para>If the XPath expression requires namespace resolution, use the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" /> overload, which takes an <see cref="T:System.Xml.XPath.XPathExpression" /> as its argument.</para>
            </item>
            <item>
              <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a node set, using the specified XPath expression.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> pointing to the selected node set.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> representing an XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (System.Xml.XPath.XPathExpression expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(class System.Xml.XPath.XPathExpression expr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expr" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The context for the selection is the position of the <see cref="T:System.Xml.XPath.XPathNavigator" /> when you called this method. After you call this method, the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> returned represents the set of selected nodes. Use <see cref="M:System.Xml.XPath.XPathNodeIterator.MoveNext" /> on the <see cref="T:System.Xml.XPath.XPathNodeIterator" /> to iterate over the selected node set.</para>
          <para>The following C# code iterates over the selected set of nodes.</para>
          <code>XPathNodeIterator ni = nav.Select(expr);
while (ni.MoveNext())
{
    Console.WriteLine(ni.Current.Name);
}</code>
          <para>The following are important notes to consider when using the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> method.</para>
          <list type="bullet">
            <item>
              <para>You can still use any of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object's navigation methods to move within the <see cref="T:System.Xml.XPath.XPathNavigator" />. The <see cref="T:System.Xml.XPath.XPathNavigator" /> navigation methods are independent of the selected nodes in the <see cref="T:System.Xml.XPath.XPathNodeIterator" />.</para>
            </item>
            <item>
              <para>Future calls to the <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> method return a new <see cref="T:System.Xml.XPath.XPathNodeIterator" /> object that points to the selected set of nodes that matches the new <see cref="M:System.Xml.XPath.XPathNavigator.Select(System.String)" /> call. The two <see cref="T:System.Xml.XPath.XPathNodeIterator" /> objects are completely independent of each other.</para>
            </item>
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathExpression" /> requires namespace resolution, the prefix and namespace URI pair must be added to an <see cref="T:System.Xml.XmlNamespaceManager" />, and the <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> method must be called to specify the <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace resolution.</para>
            </item>
          </list>
          <para>For example, suppose the document contains the following XML nodes.</para>
          <code>&lt;bookstore xmlns:bk='urn:samples'&gt;
    &lt;book bk:ISBN='1-325-0980'&gt;
        &lt;title&gt;Pride And Prejudice&lt;/title&gt;
    &lt;/book&gt;
&lt;/bookstore&gt;</code>
          <para>In this case, the following C# code selects the bk:ISBN node.</para>
          <code>XPathExpression expr = nav.Compile("book/@bk:ISBN");
XmlNamespaceManager mngr = new XmlNamespaceManager(new NameTable());
mngr.AddNamespace("bk","urn:samples");
expr.SetContext(mngr);
XPathNodeIterator ni = nav.Select(expr);</code>
          <block subset="none" type="note">
            <para>If the <see cref="T:System.Xml.XPath.XPathExpression" /> does not include a prefix, it is assumed that the namespace URI is the empty namespace. If your XML includes a default namespace, you must still use the <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" /> method and provide an <see cref="T:System.Xml.XmlNamespaceManager" /> that contains a prefix and namespace URI to handle the default namespace.</para>
          </block>
          <para>For example, suppose you have the following XML.</para>
          <code>&lt;bookstore xmlns="http://www.lucernepublishing.com"&gt;
    &lt;book&gt;
        &lt;title&gt;Pride And Prejudice&lt;/title&gt;
    &lt;/book&gt;
&lt;/bookstore&gt;</code>
          <para>In this case, the following C# code selects all book nodes: </para>
          <code>XmlNamespaceManager nsmgr = new XmlNamespaceManager(nav.NameTable);
nsmgr.AddNamespace("ab", "http://www.lucernepublishing.com");
XPathExpression expr;
expr = nav.Compile("//ab:book");
expr.SetContext(nsmgr);
XPathNodeIterator ni = nav.Select(expr);</code>
          <para>This method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a node set using the specified <see cref="T:System.Xml.XPath.XPathExpression" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set.</para>
        </returns>
        <param name="expr">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath query.</param>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator Select(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a node set using the specified XPath expression with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that points to the selected node set.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> representing an XPath expression.</param>
        <param name="resolver">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the ancestor nodes of the current node that have a matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes. The returned nodes are in reverse document order.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the ancestor nodes.</param>
        <param name="matchSelf">
          <attribution license="cc4" from="Microsoft" modified="false" />To include the context node in the selection, true; otherwise, false.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectAncestors">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectAncestors(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="F:System.String.Empty" /> is specified as the <paramref name="name" /> parameter, all ancestor nodes that belong to the specified namespace URI are selected. If <see cref="F:System.String.Empty" /> is specified as the <paramref name="namespaceURI" /> parameter, all ancestor nodes with the specified local name that belong to no namespace are selected. If <see cref="F:System.String.Empty" /> is specified as both the local name and namespace URI, all ancestor nodes that belong to no namespace are selected.</para>
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the ancestor nodes of the current node that have the specified local name and namespace URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes. The returned nodes are in reverse document order.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the ancestor nodes.</param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the ancestor nodes.</param>
        <param name="matchSelf">
          <attribution license="cc4" from="Microsoft" modified="false" />To include the context node in the selection, true; otherwise, false. </param>
      </Docs>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (System.Xml.XPath.XPathNodeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(valuetype System.Xml.XPath.XPathNodeType type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the child nodes of the current node that have the matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the child nodes.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectChildren">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectChildren(string name, string namespaceURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="F:System.String.Empty" /> is specified as the <paramref name="name" /> parameter, all child nodes that belong to the specified namespace URI are selected. If <see cref="F:System.String.Empty" /> is specified as the <paramref name="namespaceURI" /> parameter, all child nodes with the specified local name that belong to no namespace are selected. If both the local name and namespace URI parameters are <see cref="F:System.String.Empty" />, all child nodes that belong to no namespace are selected.</para>
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the child nodes of the current node that have the local name and namespace URI specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the child nodes. </param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the child nodes. </param>
      </Docs>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (System.Xml.XPath.XPathNodeType type, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(valuetype System.Xml.XPath.XPathNodeType type, bool matchSelf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Xml.XPath.XPathNodeType" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the descendant nodes of the current node that have a matching <see cref="T:System.Xml.XPath.XPathNodeType" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XPath.XPathNodeType" /> of the descendant nodes.</param>
        <param name="matchSelf">
          <attribution license="cc4" from="Microsoft" modified="false" />true to include the context node in the selection; otherwise, false.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectDescendants">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (string name, string namespaceURI, bool matchSelf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNodeIterator SelectDescendants(string name, string namespaceURI, bool matchSelf) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNodeIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="matchSelf" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If <see cref="F:System.String.Empty" /> is specified as the <paramref name="name" /> parameter, all descendant nodes that belong to the specified namespace URI are selected. If <see cref="F:System.String.Empty" /> is specified as the <paramref name="namespaceURI" /> parameter, all descendant nodes with the specified local name that belong to no namespace are selected. If both the local name and namespace URI parameters are <see cref="F:System.String.Empty" />, all descendant nodes that belong to no namespace are selected.</para>
          <para>A descendant is a child or a child of a child and so on; thus the selected nodes will never contain attribute or namespace nodes.</para>
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)" /> method has no effect on the state of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects all the descendant nodes of the current node with the local name and namespace URI specified.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNodeIterator" /> that contains the selected nodes.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the descendant nodes. </param>
        <param name="namespaceURI">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the descendant nodes. </param>
        <param name="matchSelf">
          <attribution license="cc4" from="Microsoft" modified="false" />true to include the context node in the selection; otherwise, false.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)" /> method selects the first node that matches the XPath query in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified XPath query.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise, null if there are no query results.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> representing an XPath expression.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (System.Xml.XPath.XPathExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(class System.Xml.XPath.XPathExpression expression) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Xml.XPath.XPathExpression" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)" /> method selects the first node that matches the compiled XPath query contained in the <see cref="T:System.Xml.XPath.XPathExpression" /> object in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <see cref="T:System.Xml.XPath.XPathExpression" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise null if there are no query results.</para>
        </returns>
        <param name="expression">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XPath.XPathExpression" /> object containing the compiled XPath query.</param>
      </Docs>
    </Member>
    <Member MemberName="SelectSingleNode">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath, System.Xml.IXmlNamespaceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XPath.XPathNavigator SelectSingleNode(string xpath, class System.Xml.IXmlNamespaceResolver resolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xpath" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" /> method selects the first node that matches the XPath query specified. The <see cref="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" /> method uses the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object to resolve namespace prefixes.</para>
          <block subset="none" type="note">
            <para>In XPath all namespaces must be prefixed in a query. If an XML document uses a default namespace, you must still add a namespace prefix to the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Selects a single node in the <see cref="T:System.Xml.XPath.XPathNavigator" /> object using the specified XPath query with the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the first matching node for the XPath query specified; otherwise null if there are no query results.</para>
        </returns>
        <param name="xpath">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> representing an XPath expression.</param>
        <param name="resolver">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes in the XPath query.</param>
      </Docs>
    </Member>
    <Member MemberName="SetTypedValue">
      <MemberSignature Language="C#" Value="public virtual void SetTypedValue (object typedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTypedValue(object typedValue) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typedValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When an <see cref="T:System.Xml.XmlDocument" /> object is created as the result of a schema validating <see cref="T:System.Xml.XmlReader" /> object, the value specified to the <see cref="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" /> method is verified against the XML Schema Definition Language (XSD) schema for the XML document. If the value specified is invalid according to the schema for the XML document, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</para>
          <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" /> method is valid only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element or attribute node.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the typed value of the current node.</para>
        </summary>
        <param name="typedValue">
          <attribution license="cc4" from="Microsoft" modified="false" />The new typed value of the node.</param>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <list type="bullet">
            <item>
              <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on an element node with complex content (child elements), calling the <see cref="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" /> method replaces the child elements with a text node containing the new string value.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" /> method cannot update the root node or namespace nodes.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the value of the current node.</para>
        </summary>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The new value of the node.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Xml.XPath.XPathNavigator" /> instance is cast to an <see cref="T:System.ICloneable" /> interface.</para>
          <para>For a description of this member, see <see cref="M:System.Xml.XPath.XPathNavigator.Clone" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new copy of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new copy of the <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The content returned by the <see cref="M:System.Xml.XPath.XPathNavigator.ToString" /> method depends on the <see cref="T:System.Xml.XPath.XPathNodeType" /> of the node.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType </para>
                </term>
                <description>
                  <para>Property Value </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" />
                </para>
              </term>
              <description>
                <para>The <see cref="P:System.Xml.XmlNode.InnerText" /> of the root node.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
              </term>
              <description>
                <para>The <see cref="P:System.Xml.XmlNode.InnerText" /> of the element.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />
                </para>
              </term>
              <description>
                <para>The value of the attribute.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Text" />
                </para>
              </term>
              <description>
                <para>The content of the text node.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>The entire content excluding the target.  </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />
                </para>
              </term>
              <description>
                <para>The content of the comment.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" />
                </para>
              </term>
              <description>
                <para>The white space between mark-up.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" />
                </para>
              </term>
              <description>
                <para>The white space between markup in a mixed content model, or white space within an xml:space='preserve' scope.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the text value of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string that contains the text value of the current node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public override object TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For attributes and elements with atomic simple type or simple text content, the <see cref="P:System.Xml.XPath.XPathNavigator.TypedValue" /> property returns a boxed <see cref="T:System.Object" /> of the most appropriate .NET Framework <see cref="T:System.Type" />. If the element or attribute's content is a list type, the <see cref="P:System.Xml.XPath.XPathNavigator.TypedValue" /> property returns an array of objects of the most appropriate .NET Framework <see cref="T:System.Type" />.</para>
          <para>The following table describes the <see cref="P:System.Xml.XPath.XPathNavigator.TypedValue" /> returned by each <see cref="T:System.Xml.XPath.XPathNodeType" />.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>XPathNodeType</para>
                </term>
                <description>
                  <para>TypedValue Returned</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Root" />
                </para>
              </term>
              <description>
                <para>Returns a <see cref="T:System.String" /> object containing all <see cref="F:System.Xml.XPath.XPathNodeType.Text" /> node descendants of the document, concatenated and separated by white space. If the document does not have any <see cref="F:System.Xml.XPath.XPathNodeType.Text" /> node children, <see cref="F:System.String.Empty" /> is returned.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
                <para>(typed or simple content)</para>
              </term>
              <description>
                <para>Returns an <see cref="T:System.Object" /> that represents the typed value of the <see cref="F:System.Xml.XPath.XPathNodeType.Element" />.</para>
                <para>If the <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> is defined as an XML Schema list data type, then the node value is exposed as an array of objects. Each <see cref="T:System.Object" /> in the array contains the typed value of a child of the element.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Element" />
                </para>
                <para>(untyped, mixed, or complex content)</para>
              </term>
              <description>
                <para>Returns a <see cref="T:System.String" /> object containing all <see cref="F:System.Xml.XPath.XPathNodeType.Text" /> node descendants of the <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> (including string representations of typed values), concatenated and separated by white space. If the <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> does not have any <see cref="F:System.Xml.XPath.XPathNodeType.Text" /> node children, <see cref="F:System.String.Empty" /> is returned.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />
                </para>
                <para>(typed or simple content)</para>
              </term>
              <description>
                <para>Returns an <see cref="T:System.Object" /> that represents the typed value of the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />. The <see cref="T:System.Object" /> is boxed as a .NET Framework <see cref="T:System.Type" /> value.</para>
                <para>If the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" /> is defined as an XML Schema list data type, the node value is exposed as an array of objects. Each <see cref="T:System.Object" /> in the array contains the typed value of a child of the <see cref="F:System.Xml.XPath.XPathNodeType.Attribute" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Text" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the text.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Comment" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the content of the comments, excluding the surrounding &lt;!-- and --&gt;.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.ProcessingInstruction" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the content of the processing instruction, excluding the target and surrounding &lt;? and ?&gt;.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the namespace name.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the text of the node.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" />
                </para>
              </term>
              <description>
                <para>A <see cref="T:System.String" /> object containing the text of the node.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node as a boxed object of the most appropriate .NET Framework type.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingObject">
      <MemberSignature Language="C#" Value="public virtual object UnderlyingObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UnderlyingObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" /> property can be used by <see cref="T:System.Xml.XPath.XPathNavigator" /> implementations which provide a "virtualized" XML view over a store, to provide access to underlying objects. For example, if an <see cref="T:System.Xml.XPath.XPathNavigator" /> object is used to provide a virtual XML view over a Common Language Runtime (CLR) object graph, you may wish to perform XPath queries using the <see cref="Overload:System.Xml.XPath.XPathNavigator.Select" /> method and then access the CLR objects underlying the selected nodes. The <see cref="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" /> property would expose these underlying objects.</para>
          <para>In many cases, this value will be null, and the object returned by the <see cref="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" /> property will always be implementation specific. </para>
          <para>The <see cref="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" /> property should preserve object identity and should only be used to return objects that have a one-to-one correspondence to their respective overlaid items. A user should always get the same object on successive visits to the same node using the same <see cref="T:System.Xml.XPath.XPathNavigator" /> object or a cloned one.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" /> property of an <see cref="T:System.Xml.XPath.XPathNavigator" /> object created by an <see cref="T:System.Xml.XmlDocument" /> object returns the corresponding <see cref="T:System.Xml.XmlNode" />.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Used by <see cref="T:System.Xml.XPath.XPathNavigator" /> implementations which provide a "virtualized" XML view over a store, to provide access to underlying objects.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string that represents the value of the current node.</value>
        <remarks>
          <para>The definition of the "value" of a node is 1) concatenation of the values of each descendant nodes for <see cref="F:System.Xml.XPath.XPathNodeType.Root" /> and <see cref="F:System.Xml.XPath.XPathNodeType.Element" /> nodes, 2) namespace URI for <see cref="F:System.Xml.XPath.XPathNodeType.Namespace" />, and 3) value string (as is) for all other kind of node types.
		</para>
          <para>Note: When the instance of this class is created from <see cref="T:System.Xml.XmlDocument" />, the sequential <see cref="T:System.Xml.XmlCharacterData" /> nodes (except for <see cref="T:System.Xml.XmlComment" /> nodes) are regarded as one text or node (strictly to say, <see cref="F:System.Xml.XPath.XPathNodeType.Text" />, <see cref="F:System.Xml.XPath.XPathNodeType.SignificantWhitespace" /> or <see cref="F:System.Xml.XPath.XPathNodeType.Whitespace" />).
		</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current node.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ValueAs">
      <MemberSignature Language="C#" Value="public override object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ValueAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" /> method attempts to convert the value of the current node to the .NET Framework type, specified according to the XPath 2.0 rules for casting the current node's type.</para>
          <para>The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object is used to resolve namespace prefixes related to type conversions. For example, when converting an xs:QName to an xs:string.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as the <see cref="T:System.Type" /> specified, using the <see cref="T:System.Xml.IXmlNamespaceResolver" /> object specified to resolve namespace prefixes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the current node as the <see cref="T:System.Type" /> requested.</para>
        </returns>
        <param name="returnType">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Type" /> to return the current node's value as.</param>
        <param name="nsResolver">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.IXmlNamespaceResolver" /> object used to resolve namespace prefixes.</param>
      </Docs>
    </Member>
    <Member MemberName="ValueAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ValueAsBoolean { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValueAsBoolean" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> has schema or type information (for example, from an <see cref="T:System.Xml.XmlDocument" /> object initialized with an XML schema validating <see cref="T:System.Xml.XmlReader" />), and if the current node is defined as an XML Schema xs:boolean type, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" /> property returns the current node's value as an unboxed <see cref="T:System.Boolean" /> object.</para>
          <para>However, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not have any schema or type information, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" /> property attempts to convert the string value of the current node to a <see cref="T:System.Boolean" /> value, according to the XPath 2.0 casting rules for xs:boolean.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as a <see cref="T:System.Boolean" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ValueAsDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValueAsDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> has schema or type information (for example, from an <see cref="T:System.Xml.XmlDocument" /> object initialized with an XML schema validating <see cref="T:System.Xml.XmlReader" />), and if the current node is defined as an XML Schema xs:datetime type, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" /> property returns the current node's value as an unboxed <see cref="T:System.DateTime" /> object.</para>
          <para>However, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not have any schema or type information, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" /> property attempts to convert the string value of the current node to a <see cref="T:System.DateTime" /> value, according to the XPath 2.0 casting rules for xs:datetime.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as a <see cref="T:System.DateTime" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueAsDouble">
      <MemberSignature Language="C#" Value="public override double ValueAsDouble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ValueAsDouble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> has schema or type information (for example, from an <see cref="T:System.Xml.XmlDocument" /> object initialized with an XML schema validating <see cref="T:System.Xml.XmlReader" />), and if the current node is defined as an XML Schema xs:double type, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" /> property returns the current node's value as an unboxed <see cref="T:System.Double" /> object.</para>
          <para>However, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not have any schema or type information, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" /> property attempts to convert the string value of the current node to a <see cref="T:System.Double" /> value, according to the XPath 2.0 casting rules for xsd:double.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as a <see cref="T:System.Double" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueAsInt">
      <MemberSignature Language="C#" Value="public override int ValueAsInt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ValueAsInt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> has schema or type information (for example, from an <see cref="T:System.Xml.XmlDocument" /> object initialized with an XML schema validating <see cref="T:System.Xml.XmlReader" />), and if the current node is defined as an XML Schema xs:integer type, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsInt" /> property returns the current node's value as an unboxed <see cref="T:System.Int32" /> object.</para>
          <para>However, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not have any schema or type information, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsInt" /> property attempts to convert the string value of the current node to a <see cref="T:System.Int32" /> value, according to the XPath 2.0 casting rules for xs:integer.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as an <see cref="T:System.Int32" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueAsLong">
      <MemberSignature Language="C#" Value="public override long ValueAsLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ValueAsLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Xml.XPath.XPathNavigator" /> has schema or type information (for example, from an <see cref="T:System.Xml.XmlDocument" /> object initialized with an XML schema validating <see cref="T:System.Xml.XmlReader" />), and if the current node is defined as an XML Schema xs:integer type, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsLong" /> property returns the current node's value as an unboxed <see cref="T:System.Int64" /> object.</para>
          <para>However, if the <see cref="T:System.Xml.XPath.XPathNavigator" /> does not have any schema or type information, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueAsLong" /> property attempts to convert the string value of the current node to a <see cref="T:System.Int64" /> value, according to the XPath 2.0 casting rules for xs:integer.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current node's value as an <see cref="T:System.Int64" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public override Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Xml.XPath.XPathItem.ValueType" /> property gets the .NET Framework <see cref="T:System.Type" /> of the typed value of the current node.</para>
          <para>For example, an element of type xs:int would have a <see cref="P:System.Xml.XPath.XPathItem.ValueType" /> of <see cref="T:System.Int32" /> by default. However, the <see cref="P:System.Xml.XPath.XPathItem.ValueType" /> could be any one of the valid types that can be mapped to xs:int such as <see cref="T:System.Int16" /> or <see cref="T:System.Double" />.</para>
          <para>If a node has no type, this is equivalent to the type annotation on the node being xdt:untypedAtomic. In this case, the <see cref="P:System.Xml.XPath.XPathNavigator.ValueType" /> property returns a string for the node. For more information, see <format type="text/html"><a href="63570538-06e3-4401-ad4d-ac50be90c7bf">Type Support in the System.Xml Classes</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the .NET Framework <see cref="T:System.Type" /> of the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="WriteSubtree">
      <MemberSignature Language="C#" Value="public virtual void WriteSubtree (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteSubtree(class System.Xml.XmlWriter writer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Namespace declarations for the in-scope namespaces of the current node are inserted into the XML streamed to the <see cref="T:System.Xml.XmlWriter" /> object specified. </para>
          <para>For example, if the <see cref="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" /> method is called on the first book element of the books.xml file, the http://www.contoso.com/books namespace declaration made at the top of the XML document will appear in the XML streamed to the <see cref="T:System.Xml.XmlWriter" /> object specified as shown in the following example.</para>
          <code>&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;book genre="autobiography" publicationdate="1981" ISBN="1-861003-11-0" <codeFeaturedElement>xmlns="http://www.contoso.com/books"</codeFeaturedElement>&gt;
    &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;
    &lt;author&gt;
        &lt;first-name&gt;Benjamin&lt;/first-name&gt;
        &lt;last-name&gt;Franklin&lt;/last-name&gt;
    &lt;/author&gt;
    &lt;price&gt;8.99&lt;/price&gt;
&lt;/book&gt;</code>
          <block subset="none" type="note">
            <para>The <see cref="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" /> method does not affect the position of the <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Streams the current node and its child nodes to the <see cref="T:System.Xml.XmlWriter" /> object specified.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlWriter" /> object to stream to.</param>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>A string value that contains xml:lang context value.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In the example XML below, when the <see cref="T:System.Xml.XPath.XPathNavigator" /> is positioned on the name element, the <see cref="P:System.Xml.XPath.XPathNavigator.XmlLang" /> property returns a scope of en-us indicating that the node is in the scope of a xml:lang="en-us" attribute.</para>
          <code>&lt;root xml:lang="en-us"&gt;
    &lt;name&gt;Name&lt;/name&gt;
&lt;/root&gt;</code>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the xml:lang scope for the current node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="XmlType">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.XmlSchemaType XmlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType XmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following are important notes to consider when using the <see cref="P:System.Xml.XPath.XPathNavigator.XmlType" /> property.</para>
          <list type="bullet">
            <item>
              <para>The <see cref="P:System.Xml.XPath.XPathNavigator.XmlType" /> property is null, unless the <see cref="P:System.Xml.Schema.IXmlSchemaInfo.Validity" /> property of the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property of the <see cref="T:System.Xml.XPath.XPathNavigator" /> is set to <see cref="F:System.Xml.Schema.XmlSchemaValidity.Valid" />.</para>
            </item>
            <item>
              <para>If this node is valid, the <see cref="P:System.Xml.XPath.XPathNavigator.XmlType" /> property is the same as the <see cref="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType" /> property of the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property of the <see cref="T:System.Xml.XPath.XPathNavigator" />, unless this node is a member of a union.</para>
            </item>
            <item>
              <para>If this node is a member of a union, the <see cref="P:System.Xml.XPath.XPathNavigator.XmlType" /> property is the same as the <see cref="P:System.Xml.Schema.IXmlSchemaInfo.MemberType" /> property of the <see cref="P:System.Xml.XPath.XPathNavigator.SchemaInfo" /> property of this <see cref="T:System.Xml.XPath.XPathNavigator" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Xml.Schema.XmlSchemaType" /> information for the current node.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>