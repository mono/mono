<?xml version="1.0" encoding="utf-8"?>
<Type Name="SoapTypeAttribute" FullName="System.Xml.Serialization.SoapTypeAttribute">
  <TypeSignature Maintainer="auto" Language="C#" Value="public class SoapTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapTypeAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>To be added</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum | System.AttributeTargets.Interface | System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class belongs to a family of attributes that controls how the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes an object as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web Consortium (www.w3.org) document, "Simple Object Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see <format type="text/html"><a href="93EE258C-9C0F-4A08-897C-C10DB7A00F91">[&lt;topic://cpconAttributesThatControlSOAPEncodedSerialization&gt;]</a></format>.</para>
      <para>To serialize an object as an encoded SOAP message, construct the <see cref="T:System.Xml.Serialization.XmlSerializer" /> using an <see cref="T:System.Xml.Serialization.XmlTypeMapping" /> created with the <see cref="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" /> method of the <see cref="T:System.Xml.Serialization.SoapReflectionImporter" /> class.</para>
      <para>The <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> can only be applied to class declarations.</para>
      <para>The <see cref="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" /> property determines whether the resulting XML element type is included in the XML Schema document (.xsd) for the generated XML stream. To see the schema, compile the class into a DLL file. Pass the resulting file as an argument to the <format type="text/html"><a href="A6E6E65C-347F-4494-9457-653BF29BAAC2">[&lt;topic://cpconXMLSchemaDefinitionToolXsdexe&gt;]</a></format>. The tool generates the XML Schema for the XML stream generated when the class is serialized by an instance of the <see cref="T:System.Xml.Serialization.XmlSerializer" /> class.</para>
      <para>Setting a different namespace causes Xsd.exe to write a different schema (.xsd) file for the XML stream generated when the class is serialized.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Controls the schema generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when a class instance is serialized as SOAP encoded XML.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Create a <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> when overriding the serialization of a type. Assign the object to the <see cref="P:System.Xml.Serialization.SoapAttributes.SoapType" /> property of a <see cref="T:System.Xml.Serialization.SoapAttributes" /> and add the <see cref="T:System.Xml.Serialization.SoapAttributes" /> to a <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. See the <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> class overview for more details about overriding SOAP serialization.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Create a <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> when overriding the serialization of a type. Assign the object to the <see cref="P:System.Xml.Serialization.SoapAttributes.SoapType" /> property of a <see cref="T:System.Xml.Serialization.SoapAttributes" /> and add the <see cref="T:System.Xml.Serialization.SoapAttributes" /> to a <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. See the <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> class overview for more details about overriding SOAP serialization.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name of the XML type.</para>
        </summary>
        <param name="typeName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance). </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapTypeAttribute (string typeName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string ns) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Create a <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> when overriding the serialization of a type. Assign the object to the <see cref="P:System.Xml.Serialization.SoapAttributes.SoapType" /> property of a <see cref="T:System.Xml.Serialization.SoapAttributes" /> and add the <see cref="T:System.Xml.Serialization.SoapAttributes" /> to a <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" />. See the <see cref="T:System.Xml.Serialization.SoapAttributeOverrides" /> class overview for more details on overriding SOAP serialization.</para>
          <para>If you set a <see cref="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" /> value for more than one type (that is, if you apply the attribute to more than one class with a different <see cref="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" /> value for each one), the <format type="text/html"><a href="A6E6E65C-347F-4494-9457-653BF29BAAC2">[&lt;topic://cpconXMLSchemaDefinitionToolXsdexe&gt;]</a></format> generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class and specifies the name and XML namespace of the type.</para>
        </summary>
        <param name="typeName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the XML type that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates when it serializes the class instance (and recognizes when it deserializes the class instance). </param>
        <param name="ns">
          <attribution license="cc4" from="Microsoft" modified="false" />The XML namespace of the type. </param>
      </Docs>
    </Member>
    <Member MemberName="IncludeInSchema">
      <MemberSignature Language="C#" Value="public bool IncludeInSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeInSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>To be added: an object of type 'bool'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Apply the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> to a class declaration to specify whether to include the type in the XML schema document. To see the results of setting the properties of the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> class, compile your application as an executable or DLL, and pass the resulting file to the <format type="text/html"><a href="A6E6E65C-347F-4494-9457-653BF29BAAC2">[&lt;topic://cpconXMLSchemaDefinitionToolXsdexe&gt;]</a></format>. The tool writes the schema, including the type definition of the XML stream generated when the class is serialized.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether to include the type in SOAP-encoded XML Schema documents.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If you set a <see cref="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" /> value for more than one type (that is, if you apply the attribute to more than one class with a different <see cref="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" /> value for each one), the <format type="text/html"><a href="A6E6E65C-347F-4494-9457-653BF29BAAC2">[&lt;topic://cpconXMLSchemaDefinitionToolXsdexe&gt;]</a></format> generates a separate schema file (.xsd) for each type. This is because setting a different namespace for each type renders each type distinct from the others, which makes it necessary for each type to be written out as an independent entity.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the namespace of the XML type.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Apply the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> to a class to specify the XML type's namespace, the XML type name, and whether to include the type in the XML Schema document. To see the results of setting the <see cref="T:System.Xml.Serialization.SoapTypeAttribute" /> object's properties, compile your application as an executable or DLL, and pass the resulting file to the <format type="text/html"><a href="A6E6E65C-347F-4494-9457-653BF29BAAC2">[&lt;topic://cpconXMLSchemaDefinitionToolXsdexe&gt;]</a></format>. The tool writes the schema, including the type definition.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the name of the XML type.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>