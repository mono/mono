//
// This file was generated by resx2sr tool
//

partial class SR
{
	public const string Atom10SpecRequiresTextConstruct = "The Atom10 specification requires '{0}' to have one of these values: \\\"text\\\", \\\"html\\\", \\\"xhtml\\\", however this value is '{1}' in the document being deserialized.";
	public const string DocumentFormatterDoesNotHaveDocument = "The document formatter must be configured with a document.";
	public const string ErrorInLine = "Error in line {0} position {1}.";
	public const string ErrorParsingDateTime = "An error was encountered when parsing a DateTime value in the XML.";
	public const string ErrorParsingDocument = "An error was encountered when parsing the document's XML. Refer to the inner exception for more details.";
	public const string ErrorParsingFeed = "An error was encountered when parsing the feed's XML. Refer to the inner exception for more details.";
	public const string ErrorParsingItem = "An error was encountered when parsing the item's XML. Refer to the inner exception for more details.";
	public const string ErrorParsingUri = "An error was encountered when parsing a Uri value in the XML.";
	public const string ExtensionNameNotSpecified = "The name of the extension element must be specified.";
	public const string FeedAuthorsIgnoredOnWrite = "The feed's authors were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string FeedContributorsIgnoredOnWrite = "The feed's contributors were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string FeedCreatedNullCategory = "The feed created a null category.";
	public const string FeedCreatedNullItem = "The feed created a null item.";
	public const string FeedCreatedNullPerson = "The feed created a null person.";
	public const string FeedFormatterDoesNotHaveFeed = "The syndication feed formatter must be configured with a syndication feed.";
	public const string FeedHasNonContiguousItems = "The feed being deserialized has non-contiguous sets of items in it. This is not supported by '{0}'.";
	public const string FeedIdIgnoredOnWrite = "The feed's id was not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string FeedLinksIgnoredOnWrite = "The feed's links were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string InvalidObjectTypePassed = "The Type of object passed as parameter '{0}' is not derived from {1}. Ensure that the type of object passed is either of type {1} or derived from {1}.";
	public const string ItemAuthorsIgnoredOnWrite = "The item's authors were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string ItemContentIgnoredOnWrite = "The item's content was not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string ItemContributorsIgnoredOnWrite = "The item's contributors were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string ItemCopyrightIgnoredOnWrite = "The item's copyrights were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string ItemCreatedNullCategory = "The item created a null category.";
	public const string ItemCreatedNullPerson = "The item created a null person.";
	public const string ItemFormatterDoesNotHaveItem = "The syndication item formatter must be configured with a syndication item.";
	public const string ItemLastUpdatedTimeIgnoredOnWrite = "The item's last updated time was not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string ItemLinksIgnoredOnWrite = "The item's links were not serialized as part of serializing the feed in RSS 2.0 format.";
	public const string OuterElementNameNotSpecified = "The outer element name must be specified.";
	public const string OuterNameOfElementExtensionEmpty = "The outer name of the element extension cannot be empty.";
	public const string UnbufferedItemsCannotBeCloned = "A feed containing items that are not buffered (i.e. the items are not stored in an IList) cannot clone its items. Buffer the items in the feed before calling Clone on it or pass false to the Clone method.";
	public const string UnknownDocumentXml = "The element with name '{0}' and namespace '{1}' is not an allowed document format.";
	public const string UnknownFeedXml = "The element with name '{0}' and namespace '{1}' is not an allowed feed format.";
	public const string UnknownItemXml = "The element with name '{0}' and namespace '{1}' is not an allowed item format.";
	public const string UnsupportedRssVersion = "The Rss20Serializer does not support RSS version '{0}'.";
	public const string UriGeneratorSchemeMustNotBeEmpty = "The scheme parameter must not be empty.";
	public const string ValueMustBeNonNegative = "The value of this argument must be non-negative.";
	public const string XmlBufferInInvalidState = "An internal error has occurred. The XML buffer is not in the correct state to perform the operation.";
	public const string XmlFoundCData = "cdata '{0}'";
	public const string XmlFoundComment = "comment '{0}'";
	public const string XmlFoundElement = "element '{0}' from namespace '{1}'";
	public const string XmlFoundEndElement = "end element '{0}' from namespace '{1}'";
	public const string XmlFoundEndOfFile = "end of file";
	public const string XmlFoundNodeType = "node {0}";
	public const string XmlFoundText = "text '{0}'";
	public const string XmlLineInfo = "Line {0}, position {1}.";
	public const string XmlStartElementExpected = "Start element expected. Found {0}.";
	public const string InvalidSkipHourValue = "Cannot parse string `{0}` as skip hour. The value for skip hours must be an integer betwen 0 and 23.";
	public const string InvalidTimeToLiveValue = "The value for TimeToLive must be a non-negative whole number of minutes.";
}
