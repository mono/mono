<?xml version="1.0" encoding="utf-8"?>
<Type Name="DeliveryRequirementsAttribute" FullName="System.ServiceModel.DeliveryRequirementsAttribute">
  <TypeSignature Language="C#" Value="public sealed class DeliveryRequirementsAttribute : Attribute, System.ServiceModel.Description.IContractBehavior, System.ServiceModel.Description.IContractBehaviorAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DeliveryRequirementsAttribute extends System.Attribute implements class System.ServiceModel.Description.IContractBehavior, class System.ServiceModel.Description.IContractBehaviorAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IContractBehavior</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IContractBehaviorAttribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.All, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Use the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> to instruct indigo1 to confirm that the binding provides the features required by the service or client implementation. If a <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> attribute is detected when a service description is loaded from an application configuration file or built programmatically in code, indigo2 validates the configured binding and supports all the features that the attribute specifies. For example, your service may require the bindings to support queuing. Using <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> allows indigo2 to confirm that the following requirements are met:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements" /> property specifies the queuing requirements that a binding must meet.</para>
        </item>
        <item>
          <para>The <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" /> property indicates whether the binding must support ordered messaging.</para>
        </item>
        <item>
          <para>The <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" /> property indicates to which type the requirements apply.</para>
        </item>
      </list>
      <para>The <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> attribute is applied to a class, which can implement any number of service contract interfaces. <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> can be applied to all the contracts the class implements or to only one of them. The attribute can be applied to a class more than once.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies the feature requirements that bindings must provide to the service or client implementation.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DeliveryRequirementsAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The defaults are:</para>
          <list type="bullet">
            <item>
              <para>The <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements" /> property is set to <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</para>
            </item>
            <item>
              <para>The <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" /> property is set to false.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> class.  </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="QueuedDeliveryRequirements">
      <MemberSignature Language="C#" Value="public System.ServiceModel.QueuedDeliveryRequirementsMode QueuedDeliveryRequirements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.QueuedDeliveryRequirementsMode QueuedDeliveryRequirements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.QueuedDeliveryRequirementsMode</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required" /> instructs indigo2 to confirm that the binding supports queued delivery. The <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed" /> value instructs indigo2 to confirm that the binding does not support queued delivery.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies whether the binding for a service must support queued contracts.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RequireOrderedDelivery">
      <MemberSignature Language="C#" Value="public bool RequireOrderedDelivery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireOrderedDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Setting the <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery" /> property to false instructs indigo2 to perform no validation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies whether the binding must support ordered messages.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IContractBehavior.AddBindingParameters (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.AddBindingParameters(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to attach binding parameters correctly.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The contract description.</param>
        <param name="endpoint">
          <attribution license="cc4" from="Microsoft" modified="false" />The service endpoint for the contract.</param>
        <param name="parameters">
          <attribution license="cc4" from="Microsoft" modified="false" />The binding parameters.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior">
      <MemberSignature Language="C#" Value="void IContractBehavior.ApplyClientBehavior (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime proxy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime proxy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="proxy" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implementation of the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method for client support.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The contract description to which the behavior is attached.</param>
        <param name="endpoint">
          <attribution license="cc4" from="Microsoft" modified="false" />The endpoint for the contract.</param>
        <param name="proxy">
          <attribution license="cc4" from="Microsoft" modified="false" />The client runtime on which the behavior operates.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IContractBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.DispatchRuntime dispatch);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.DispatchRuntime dispatch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatch" Type="System.ServiceModel.Dispatcher.DispatchRuntime" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method that enables service support.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The contract description to which the behavior is attached.</param>
        <param name="endpoint">
          <attribution license="cc4" from="Microsoft" modified="false" />The endpoint for the contract.</param>
        <param name="dispatch">
          <attribution license="cc4" from="Microsoft" modified="false" />The dispatch runtime that supports the endpoint.</param>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IContractBehavior.Validate">
      <MemberSignature Language="C#" Value="void IContractBehavior.Validate (System.ServiceModel.Description.ContractDescription description, System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IContractBehavior.Validate(class System.ServiceModel.Description.ContractDescription description, class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method to enable validation support.</para>
        </summary>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />The contract description.</param>
        <param name="endpoint">
          <attribution license="cc4" from="Microsoft" modified="false" />The endpoint to be validated.</param>
      </Docs>
    </Member>
    <Member MemberName="TargetContract">
      <MemberSignature Language="C#" Value="public Type TargetContract { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TargetContract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A service class can implement any number of service contract interfaces. Use the <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" /> property to validate that endpoints with the <see cref="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract" /> have bindings that support the requirements. This attribute can be used any number of times on the same class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the type to which it applies.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>