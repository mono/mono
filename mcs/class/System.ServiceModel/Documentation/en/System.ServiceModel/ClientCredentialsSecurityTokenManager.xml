<?xml version="1.0" encoding="utf-8"?>
<Type Name="ClientCredentialsSecurityTokenManager" FullName="System.ServiceModel.ClientCredentialsSecurityTokenManager">
  <TypeSignature Language="C#" Value="public class ClientCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This class handles security token serialization, security token provision and security token authentication for the client. There is one instance of this class for each client channel factory.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Manages security tokens for the client.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientCredentialsSecurityTokenManager (System.ServiceModel.Description.ClientCredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ClientCredentials credentials) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="credentials" Type="System.ServiceModel.Description.ClientCredentials" />
      </Parameters>
      <Docs>
        <param name="credentials">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> class. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ClientCredentials ClientCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object allows the user to configure client credentials to be used for authentication to the service.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the client credentials.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement requirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="requirement">To be added.</param>
        <param name="outOfBandTokenResolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> class is responsible for obtaining tokens for a given <see cref="T:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement" />. Optionally token providers support renewing and canceling tokens as well. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a security token provider.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> object.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> is used to write and read security tokens, security key identifiers, and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a security token serializer.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> object.</para>
        </returns>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> of the security token.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.ServiceModel.Security.SecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.ServiceModel.Security.SecurityVersion version) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Security.SecurityVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> is used to write and read security tokens, security key identifiers and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations (Kerberos ticket processing, X.509 decoding, SAML decoding and other operations) but should defer application trust decisions to the security token authenticator.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a security token serializer.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> object.</para>
        </returns>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.ServiceModel.Security.SecurityVersion" /> of the security token.</param>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the specified token requirement is an issued security token requirement.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified token requirement is an issued security token requirement; otherwise, false. The default is false.</para>
        </returns>
        <param name="requirement">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      </Docs>
    </Member>
  </Members>
</Type>