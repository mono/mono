<?xml version="1.0" encoding="utf-8"?>
<Type Name="InstanceContextIdleCallback" FullName="System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
  <TypeSignature Language="C#" Value="public delegate void InstanceContextIdleCallback(InstanceContext context);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InstanceContextIdleCallback extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ServiceModel.InstanceContext" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">To be added.</param>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Use an <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> to notify the indigo1 runtime that an <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object has finished processing. When the <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object notifies the runtime that the <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> has finished its work, indigo2 calls <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> once again. This cycle continues until <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> returns true and the context is closed and recycled. </para>
      <para>For more information, see <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents the method that is called when an <see cref="T:System.ServiceModel.InstanceContext" /> object has finished processing. </para>
    </summary>
  </Docs>
</Type>