<?xml version="1.0" encoding="utf-8"?>
<Type Name="RegisterInfo" FullName="System.ServiceModel.PeerResolvers.RegisterInfo">
  <TypeSignature Language="C#" Value="public class RegisterInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegisterInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.MessageContract(IsWrapped=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This class defines the information used to register the tuple of a peer node and a mesh ID with a peer resolver service. This information is inserted as an entry in the registration lookup table of the resolver service, which can be queried by other peers for the endpoint addresses of the inserted peer.</para>
      <para>Instances of this class are created when <see cref="Overload:System.ServiceModel.PeerResolvers.CustomPeerResolverService.Register" /> (or an implementation of  <see cref="M:System.ServiceModel.PeerResolvers.IPeerResolverContract.Register(System.ServiceModel.PeerResolvers.RegisterInfo)" />) is called to register with a peer resolver service. They are primarily used to pass registration request information to a peer resolver service from a network client of that service.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Defines the  peer registration information to be supplied to a peer resolver service.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegisterInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> class. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegisterInfo (Guid client, string meshId, System.ServiceModel.PeerNodeAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid client, string meshId, class System.ServiceModel.PeerNodeAddress address) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="System.Guid" />
        <Parameter Name="meshId" Type="System.String" />
        <Parameter Name="address" Type="System.ServiceModel.PeerNodeAddress" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolvers.RegisterInfo" /> class with the supplied client ID, mesh ID, and endpoint address(es).</para>
        </summary>
        <param name="client">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Guid" /> that uniquely identifies the peer node to be registered.</param>
        <param name="meshId">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.String" /> that specifies the ID of the mesh in which the peer node participates.</param>
        <param name="address">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.ServiceModel.PeerNodeAddress" /> that specifies the endpoint address(es) of the peer node to be registered.</param>
      </Docs>
    </Member>
    <Member MemberName="ClientId">
      <MemberSignature Language="C#" Value="public Guid ClientId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ClientId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Guid" /> that uniquely identifies the registration entry for a peer node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HasBody">
      <MemberSignature Language="C#" Value="public bool HasBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasBody() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether the body of the message containing a serialized instance of this type is correctly formed.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>True if the registration information body is correctly-formed by the sender; false if it is not.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="MeshId">
      <MemberSignature Language="C#" Value="public string MeshId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MeshId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a mesh ID associated with the registration entry.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NodeAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.PeerNodeAddress NodeAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.PeerNodeAddress NodeAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerNodeAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the endpoint address(es) to associate with the node that is registering with the resolver service.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>