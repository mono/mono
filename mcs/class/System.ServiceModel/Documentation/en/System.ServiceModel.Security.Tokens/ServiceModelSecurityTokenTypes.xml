<?xml version="1.0" encoding="utf-8"?>
<Type Name="ServiceModelSecurityTokenTypes" FullName="System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes">
  <TypeSignature Language="C#" Value="public static class ServiceModelSecurityTokenTypes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ServiceModelSecurityTokenTypes extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The static strings in this type are used by the <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> and <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> to identify token providers and token authenticators to create based on the token type.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents the types of security tokens recognized by indigo2.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="AnonymousSslnego">
      <MemberSignature Language="C#" Value="public static string AnonymousSslnego { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string AnonymousSslnego" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates that the initiator is anonymous but the responder certificate is available as part of a SOAP SSL negotiation.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MutualSslnego">
      <MemberSignature Language="C#" Value="public static string MutualSslnego { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string MutualSslnego" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The responder's certificate is available from the SOAP SSL negotiation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates that the initiator and responder mutually authenticate each other using X.509 certificates.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SecureConversation">
      <MemberSignature Language="C#" Value="public static string SecureConversation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SecureConversation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The WS-SecureConversation specification is built on the WS-Security and WS-Policy specifications. It provides secure communication between services.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates whether the service uses WS-SecureConversation authentication.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SecurityContext">
      <MemberSignature Language="C#" Value="public static string SecurityContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SecurityContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This value indicates that a SecurityContextToken is used to represent the security context that secures a conversation between a sender and a recipient.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates whether the service uses SOAP SecurityContext authentication.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Spnego">
      <MemberSignature Language="C#" Value="public static string Spnego { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Spnego" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>SPNEGO is the native Windows-to-Windows authentication service.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates whether authentication is done via the Windows Services SP Negotiation (SPNEGO) protocol.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SspiCredential">
      <MemberSignature Language="C#" Value="public static string SspiCredential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SspiCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>SSPI allows an application to use various security models that are available on a computer or network without changing the interface to the security system.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string that indicates whether client authentication is by means of a Windows credential.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>