<?xml version="1.0" encoding="utf-8"?>
<Type Name="ClientCredentials" FullName="System.ServiceModel.Description.ClientCredentials">
  <TypeSignature Language="C#" Value="public class ClientCredentials : System.ServiceModel.Security.SecurityCredentialsManager, System.ServiceModel.Description.IEndpointBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientCredentials extends System.ServiceModel.Security.SecurityCredentialsManager implements class System.ServiceModel.Description.IEndpointBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Security.SecurityCredentialsManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IEndpointBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> is accessed through the <see cref="P:System.ServiceModel.ClientBase`1.ClientCredentials" /> property of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</para>
      <para>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object is added to the <see cref="P:System.ServiceModel.Description.ServiceEndpoint.Behaviors" /> collection. The <see cref="P:System.ServiceModel.ClientBase`1.ClientCredentials" /> property is a <newTerm>Fa√ßade</newTerm> (a well-known design pattern) over an entry in that collection. Many properties in this class return objects that consist mainly of properties. These objects can be used for configuration: once you get the object, you can use it to set properties by calling its members.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Enables the user to configure client and service credentials as well as service credential authentication settings for use on the client side of communication.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor creates a <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object with default settings, for example, <see cref="P:System.ServiceModel.Description.ClientCredentials.SupportInteractive" /> = true.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> class. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClientCredentials (System.ServiceModel.Description.ClientCredentials source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ClientCredentials source) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Description.ClientCredentials" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is a copy constructor. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public virtual void ApplyClientBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.ClientRuntime behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.ClientRuntime behavior) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="behavior" Type="System.ServiceModel.Dispatcher.ClientRuntime" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The client behavior is applied to the endpoint only if the endpoint does not have a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> associated with it.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies the specified client behavior to the endpoint.</para>
        </summary>
        <param name="behavior">
          <attribution license="cc4" from="Microsoft" modified="false" />The client behavior that is to be applied to the specified endpoint.</param>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateInitiatorClientCredential ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateInitiatorClientCredential ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateInitiatorClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can also set this value using the <format type="text/html"><a href="00297efb-a7f2-4e03-bc2b-943d545610fc">&lt;certificate&gt; of &lt;clientCertificate&gt; Element</a></format> in a client application configuration file.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an object that you can use to provide the X.509 certificate that the client uses to authenticate to the service. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ClientCredentials Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ClientCredentials Clone() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ClientCredentials CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ClientCredentials CloneCore() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.ServiceModel.Description.ClientCredentials.Clone" /> and <see cref="M:System.ServiceModel.Description.ClientCredentials.CloneCore" /> methods follow the Core design pattern. <see cref="M:System.ServiceModel.Description.ClientCredentials.CloneCore" /> can be overridden in derived classes if they add new fields that must be cloned.</para>
          <para>The <see cref="M:System.ServiceModel.Description.ClientCredentials.CloneCore" /> method calls the <see cref="M:System.ServiceModel.Description.ClientCredentials.#ctor(System.ServiceModel.Description.ClientCredentials)" /> constructor.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new copy of this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenManager">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is usually overridden by custom client credentials implementations that inherit from this class. This method is responsible for returning a new instance of a <see cref="T:System.IdentityModel.Selectors.SecurityTokenManager" /> implementation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a security token manager for this instance. This method is rarely called explicitly; it is primarily used in extensibility scenarios and is called by the system itself. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> for this <see cref="T:System.ServiceModel.Description.ClientCredentials" /> instance.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetInfoCardSecurityToken">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken GetInfoCardSecurityToken (bool requiresInfoCard, System.IdentityModel.Selectors.CardSpacePolicyElement[] chain, System.IdentityModel.Selectors.SecurityTokenSerializer tokenSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetInfoCardSecurityToken(bool requiresInfoCard, class System.IdentityModel.Selectors.CardSpacePolicyElement[] chain, class System.IdentityModel.Selectors.SecurityTokenSerializer tokenSerializer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requiresInfoCard" Type="System.Boolean" />
        <Parameter Name="chain" Type="System.IdentityModel.Selectors.CardSpacePolicyElement[]" />
        <Parameter Name="tokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Generates and returns a security token using the infocard system and the specified policy chain and token serializer.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" /> that represents the generated security token. Returns null if <paramref name="requiresInfoCard" /> is false.</para>
        </returns>
        <param name="requiresInfoCard">
          <attribution license="cc4" from="Microsoft" modified="false" />A value that determines whether infocard is required.</param>
        <param name="chain">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.IdentityModel.Selectors.CardSpacePolicyElement" /> that describes the federated security chain that the client requires a final token to unwind.</param>
        <param name="tokenSerializer">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> that can read a KeyInfo clause.</param>
      </Docs>
    </Member>
    <Member MemberName="HttpDigest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.HttpDigestClientCredential HttpDigest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.HttpDigestClientCredential HttpDigest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.HttpDigestClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the credential by calling the <see cref="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" /> property.</para>
          <para>Similarly, you can specify the network credential to use if it is different from the current thread's token.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current HTTP Digest credential.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IssuedToken">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.IssuedTokenClientCredential IssuedToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.IssuedTokenClientCredential IssuedToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IssuedTokenClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the settings of the local Security Token Service by calling its members.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this property to specify the endpoint address and binding to use when contacting your local Security Token Service. This information is used when a service requires authentication using an issued token, but the policy of the service (represented as a binding on the client) does not explicitly specify how and where to obtain the issued token. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Peer">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.PeerCredential Peer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.PeerCredential Peer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.PeerCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the credential by calling its members, such as <see cref="P:System.ServiceModel.Security.PeerCredential.Certificate" />, <see cref="P:System.ServiceModel.Security.PeerCredential.MeshPassword" />, <see cref="P:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication" />, and <see cref="P:System.ServiceModel.Security.PeerCredential.PeerAuthentication" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Controls the credentials that a peer node uses to authenticate itself to other nodes in the mesh, as well as authentication settings that a peer node uses to authenticate other peer nodes. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ServiceCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateRecipientClientCredential ServiceCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateRecipientClientCredential ServiceCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateRecipientClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the certificate's properties by calling its members.</para>
          <para>You can specify a single default certificate as well as a different certificate to be used when communicating with a particular URI. </para>
          <para>Through this class, you also control the authentication settings for service certificates negotiated through SSL/TLS negotiation performed at the message level.</para>
          <para>This property does not always have to be specified. Whether it is required depends on the authentication mode and negotiation options set on the binding that is used to communicate with the service. Some relevant classes that control this behavior are <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> and <see cref="T:System.ServiceModel.MessageSecurityOverTcp" />.</para>
          <para>You can also set this value using the <format type="text/html"><a href="4aeccaf7-8f23-495c-aa5f-5bd8b5d4a10c">&lt;certificate&gt; for &lt;identity&gt;</a></format> element in a client application configuration file.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an object used to specify a service's X.509 certificate. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SupportInteractive">
      <MemberSignature Language="C#" Value="public bool SupportInteractive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property controls whether a user interface is allowed to pop up during credential provisioning. The most common case where this currently happens is with infocard.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether the system is allowed to interactively prompt the user for credentials when necessary. For example, setting it to false might be desired in middle-tier scenarios. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="parameters">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An explicit implementation of the <see cref="M:System.ServiceModel.Description.ClientCredentials.System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds this instance of this class to a binding parameter collection.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceEndpoint endpoint, System.ServiceModel.Dispatcher.EndpointDispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceEndpoint endpoint, class System.ServiceModel.Dispatcher.EndpointDispatcher dispatcher) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
        <Parameter Name="dispatcher" Type="System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <param name="dispatcher">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Implements a modification or extension of the service across an endpoint.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IEndpointBehavior.Validate">
      <MemberSignature Language="C#" Value="void IEndpointBehavior.Validate (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IEndpointBehavior.Validate(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reserved for future use.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordClientCredential UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.UserNamePasswordClientCredential UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the credential by calling its members, such as <see cref="P:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName" /> and <see cref="P:System.ServiceModel.Security.UserNamePasswordClientCredential.Password" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a credential object that you can use to set the user name and password that the client uses to authenticate itself to the service. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Windows">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.WindowsClientCredential Windows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.WindowsClientCredential Windows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.WindowsClientCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use the object returned by this property to configure the Windows credential by calling its members, such as <see cref="P:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm" /> and <see cref="P:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel" />. </para>
          <para>These settings control the Windows credential used during SPNEGO negotiation at either the message or transport level or the properties of Kerberos tokens used for authentication at the message level.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an object used to control the Windows credential that the client uses to authenticate itself to the service. </para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>