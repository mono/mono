<?xml version="1.0" encoding="utf-8"?>
<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class provides a base control designer class that can be inherited from and extended to provide design-time support for a Web server control in a design host, such as vsprvslong.</para>
      <para>The object model for working with design-time rendering is improved over earlier versions, with the following new base classes to provide access to the simplified object model: </para>
      <list type="bullet">
        <item>
          <para>
            <see cref="T:System.Web.UI.Design.ControlDesigner" />, which is not new, but has been greatly improved.</para>
        </item>
        <item>
          <para>
            <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.</para>
        </item>
        <item>
          <para>
            <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Automatic Formatting</h2>
      </format>
      <para>You can create a variety of automatic and pre-defined formats that can simplify the process of page developers who are applying complex style changes to custom Web server controls. For example, the <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> control, which derives from the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class, provides many automatic formats from which to choose. To implement and provide automatic formatting in your custom controls, use the following features:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> property.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" /> method.</para>
        </item>
        <item>
          <para>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class.</para>
        </item>
        <item>
          <para>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> class.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Action Lists (Smart Tags)</h2>
      </format>
      <para>Action lists are menus of important or widely used tasks that a page developer who uses a control can perform in a design-time user interface (UI), such as vsprvslong. For example, the design-time view of your control could provide a menu of available tasks. This includes a task to format the control automatically. To learn about action lists, start with the following features:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> property.</para>
        </item>
        <item>
          <para>The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> class.</para>
        </item>
        <item>
          <para>The <see cref="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems" /> method.</para>
        </item>
        <item>
          <para>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class.</para>
        </item>
        <item>
          <para>The <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class.</para>
        </item>
        <item>
          <para>The <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Control Designer Regions</h2>
      </format>
      <para>Regions are editable areas in the design-time view of a Web server control. This feature offers WYSIWYG-like editing of the template content, inner controls, and properties at design time. You can have the control designer create controls in regions or you can use the Toolbox to drag and drop controls into regions. Regions are managed with the following features:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> method.</para>
        </item>
        <item>
          <para>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> class.</para>
        </item>
        <item>
          <para>The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> method.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Templates</h2>
      </format>
      <para>The model for creating a UI for design-time editing of templated controls, such as the <see cref="T:System.Web.UI.WebControls.GridView" /> control, has been greatly improved from earlier versions. You can create complex custom controls that include templates for various parts of the control, and your custom control designer can help page developers who are modifying templates with the following features:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> property.</para>
        </item>
        <item>
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property.</para>
        </item>
        <item>
          <para>The <see cref="T:System.Web.UI.Design.TemplateGroup" /> class.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Design-Time Rendering</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class has the following methods to support design-time rendering of the Web server control. Most of these methods are the same as in earlier versions:</para>
      <list type="bullet">
        <item>
          <para>The <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> method.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> method.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" /> method.</para>
        </item>
        <item>
          <para>The <see cref="Overload:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> method.</para>
        </item>
      </list>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a base control designer class for extending the design-mode behavior of a Web server control.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the action list collection for the control designer.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the control can be resized in the design-time environment.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A complete Web server control includes not only the control, but also, possibly, a corresponding control designer class that is derived from the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class and a formatting class that is derived from the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class. The <see cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" /> property is a collection of instances of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class. For a working example of automatic formatting in vsprvslong, see <see cref="T:System.Web.UI.WebControls.Calendar" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the collection of predefined automatic formatting schemes to display in the <ui>Auto Format</ui> dialog box for the associated control at design time. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> method to create HTML markup to display an error message for a control at design time. The value for <paramref name="errorMessage" /> specifies a localized string that is displayed to the user of the control at design time.</para>
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> method returns a table with two rows, as follows: </para>
          <list type="bullet">
            <item>
              <para>The first row contains the type name and site name for the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</para>
            </item>
            <item>
              <para>The second row contains the input error message string.</para>
            </item>
          </list>
          <para>To generate HTML markup for an error message with an associated exception, use the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> overload. To generate HTML markup for an exception without specifying a localized error message, use the <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates HTML markup to display a specified error message at design time.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An HTML markup string that contains the specified error message.</para>
        </returns>
        <param name="errorMessage">
          <attribution license="cc4" from="Microsoft" modified="false" />The error message to include in the generated HTML markup.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> method to provide simple HTML markup that can be used to display error and exception details for a control at design time. The value for <paramref name="errorMessage" /> specifies a localized string that is displayed to the user of the control at design time.</para>
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> method returns a table with two rows, as follows: </para>
          <list type="bullet">
            <item>
              <para>The first row contains the type name and site name for the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property of the <see cref="T:System.Web.UI.Design.ControlDesigner" />object.</para>
            </item>
            <item>
              <para>The second row contains the input error message and the <see cref="P:System.Exception.Message" /> string of the exception.</para>
            </item>
          </list>
          <para>To generate HTML markup for an error message without specifying an exception, use the <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> overload. To generate HTML markup for an exception without specifying a localized error message, use the <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the HTML markup to display a specified exception error message at design time.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</para>
        </returns>
        <param name="errorMessage">
          <attribution license="cc4" from="Microsoft" modified="false" />The error message to include in the generated HTML string.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />The exception to include in the generated HTML string.</param>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string that contains design-time HTML markup providing basic information about the control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string that contains design-time HTML markup providing information about the control.</para>
        </returns>
        <param name="instruction">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that contains text and markup to add to the HTML output. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a copy of the associated control for viewing or rendering on the design surface.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Web server control.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether data binding is supported by the containing region for the associated control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The values for the <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> property are persisted even if the user switches from Design to Source view, or reloads the document, or closes and reopens the design host.</para>
          <para>You can get and set values in the returned object as you would in an IDictionary object, with the values automatically persisted.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an object that is used to persist data for the associated control at design time.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" /> property is obsolete and there is no replacement for the functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the view-control object for the control designer.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("It is documented as not in use anymore", true)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The default implementation of the <see cref="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" /> property returns false.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" /> property is obsolete. Use the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true)")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the HTML markup that is used to represent the control at design time.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTML markup used to represent the control at design time.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The design host calls the <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method to get the design-time HTML markup and the current list of control designer regions. Using the DesignerRegionCollection, the design host can then request the markup for each editable control designer region.</para>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method is provided for a derived control designer, such as the <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> class, that must process the content for the region before calling the <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The design-time HTML markup for the associated control, including all control designer regions.</para>
        </returns>
        <param name="regions">
          <attribution license="cc4" from="Microsoft" modified="false" />A collection of control designer regions for the associated control.</param>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A resource provider factory creates resource providers and resource writers, depending on the current settings in the system.web/globalization section of the configuration file (either the Machine.config or Web.config files for both global and local resources). If no globalization settings are found, the <paramref name="serviceProvider" /> parameter is used to create a <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object using the default implementation for the design host.</para>
          <para>Typically, control developers will not override the <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, null.</para>
        </returns>
        <param name="serviceProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The default implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> method returns an empty string (""). </para>
          <para>Classes deriving from the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class can support region-based editing on the design surface and override the <see cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> method to return the content for a specified region.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the content for an editable region of the design-time view of the associated control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</para>
        </returns>
        <param name="region">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The default behavior of the <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> method is to return a string that contains the name of the component. The <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> method should be called in the implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method when there is no design-time HTML markup.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> method is typically called, if an exception is thrown in the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the HTML markup that provides information about the specified exception. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The design-time HTML markup for the specified exception.</para>
        </returns>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />The exception that occurred. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the persistable inner HTML markup of the control at design time.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string representing the persistable inner HTML markup for the associated control. The default is null.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" /> method is obsolete. Use the <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> method for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the persistable inner HTML markup of the control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The persistable inner HTML markup of the control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use GetPersistenceContent() instead")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</para>
        </returns>
        <param name="control">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Control" /> object.</param>
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</para>
        </returns>
        <param name="designer">
          <attribution license="cc4" from="Microsoft" modified="false" />A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The ID property is never hidden. The <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method uses the <see cref="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" /> property to determine whether properties, other than the ID property, should be hidden from the property grids while the control is in template editing mode.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.ID" /> property is used internally within the control designer and for interaction with the Properties window. The <see cref="P:System.Web.UI.Design.ControlDesigner.ID" /> property shadows the run-time <see cref="P:System.Web.UI.Control.ID" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the ID string for the control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" /> method is called by the design host to complete the following actions: </para>
          <list type="bullet">
            <item>
              <para>Load the control designer with the component to design.</para>
            </item>
            <item>
              <para>Set up the view on the control using the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method.</para>
            </item>
            <item>
              <para>Verify that the associated control is of the right type.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes the control designer and loads the specified component.</para>
        </summary>
        <param name="component">
          <attribution license="cc4" from="Microsoft" modified="false" />The control being designed. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="public bool InTemplateMode { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Web server control is in template mode when a read-only template is currently being viewed or an editable template is being edited in a design host such as vsprvslong.</para>
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class supplies a default <see cref="T:System.Web.UI.Design.ViewEventHandler" /> object to update the <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> value when the template mode changes for the associated control. Custom designers that are derived from the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> class can override the <see cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" /> method to perform additional processing when the template editing mode changes for a control in the design host.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To enable the control designer to handle paint events, use the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method in the <see cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" /> method.</para>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.Invalidate" /> method provides the design host with a way to instruct the control designer to redraw the control. Essentially, this is the same as calling <see cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" /> method, because it causes the whole control to be redrawn.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To enable the control designer to handle paint events, use the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method in the <see cref="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" /> method.</para>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" /> method provides the design host with a way to instruct the control designer to redraw a specific part of the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</para>
        </summary>
        <param name="rectangle">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control. </param>
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" /> method notifies the design host, which is determined by the <see cref="P:System.Web.UI.Control.Site" /> property of <paramref name="component" />, that a change is occurring in the associated control and, if the change is not canceled by the design host, invokes the specified <paramref name="callback" /> using the specified <paramref name="context" />, and then notifies the design host that the change has completed.</para>
          <para>If the design host or the associated control throws a static Canceled exception field of a <see cref="T:System.ComponentModel.Design.CheckoutException" /> exception, the transaction is canceled without invoking <paramref name="callback" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</para>
        </summary>
        <param name="component">
          <attribution license="cc4" from="Microsoft" modified="false" />The control associated with the control designer.</param>
        <param name="callback">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that contains the argument for callback.</param>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" /> method notifies the design host, which is determined by the <see cref="P:System.Web.UI.Control.Site" /> property of <paramref name="component" />, that a change is occurring to the specified <paramref name="member" /> (property or method) of the associated control and, if the change is not canceled by the design host, invokes the specified <paramref name="callback" /> using the specified <paramref name="context" /> as the argument, and then notifies the design host that the change has completed.</para>
          <para>If the design host or associated control throws a static Canceled exception field of a <see cref="T:System.ComponentModel.Design.CheckoutException" /> exception, the transaction is canceled without invoking <paramref name="callback" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</para>
        </summary>
        <param name="component">
          <attribution license="cc4" from="Microsoft" modified="false" />The control associated with the control designer.</param>
        <param name="callback">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that contains the argument for callback.</param>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" /> method notifies the design host, which is represented by <paramref name="serviceProvider" />, that a change is occurring to the specified <paramref name="member" /> (property or method) of the associated control and, if the change is not canceled by the design host, invokes the specified <paramref name="callback" /> using the specified <paramref name="context" /> as the argument, and then notifies the design host that the change has completed.</para>
          <para>If the design host or the associated control throws a static Canceled exception field of a <see cref="T:System.ComponentModel.Design.CheckoutException" /> exception, the transaction is canceled without invoking <paramref name="callback" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</para>
        </summary>
        <param name="serviceProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
        <param name="component">
          <attribution license="cc4" from="Microsoft" modified="false" />The control associated with the control designer.</param>
        <param name="callback">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that contains the argument for callback.</param>
        <param name="description">
          <attribution license="cc4" from="Microsoft" modified="false" />A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
        <param name="member">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.IsDirty" /> property is obsolete. Use the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property and the <see cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" /> method on the <see cref="P:System.Web.UI.Design.ControlDesigner.Tag" /> property for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the Web server control has been marked as changed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use Tag.SetDirty() and Tag.IsDirty instead.")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" /> method is obsolete. Use the <see cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" /> method on the <see cref="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings" /> property for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves a value indicating whether the specified property on the associated control is data-bound.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true, if the property is data-bound; otherwise, false.</para>
        </returns>
        <param name="propName">
          <attribution license="cc4" from="Microsoft" modified="false" />The property to test for data binding. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use DataBindings.Contains(string) instead")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" /> method is called by the design host to create resource entries for each property that is marked with a <see cref="T:System.ComponentModel.LocalizableAttribute" /> object and any properties that use an explicit resource expression as a value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</para>
        </summary>
        <param name="resourceWriter">
          <attribution license="cc4" from="Microsoft" modified="false" />An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" /> method is called after a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object has applied a predefined format to the associated control. A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object defines the automatic formatting scheme name and style settings that are applied to the control.</para>
          <para>Classes deriving from the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class override the <see cref="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" /> method to perform additional processing when an automatic formatting scheme is applied to the associated control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when a predefined, automatic formatting scheme has been applied to the associated control.</para>
        </summary>
        <param name="appliedAutoFormat">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
      </Docs>
    </Member>
    <Member MemberName="OnBehaviorAttached">
      <MemberSignature Language="C#" Value="protected override void OnBehaviorAttached ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnBehaviorAttached" /> method is obsolete. Use the <see cref="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)" /> and <see cref="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)" /> methods on the <see cref="P:System.Web.UI.Design.ControlDesigner.Tag" /> property for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when the control designer is attached to a Behavior object.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" /> method is called when the data-binding collection has been changed by an external caller.</para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" /> method is obsolete. Use the <see cref="E:System.Web.UI.DataBindingCollection.Changed" /> event on the <see cref="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings" /> collection for equivalent control designer functionality.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when the data-binding collection changes.</para>
        </summary>
        <param name="propName">
          <attribution license="cc4" from="Microsoft" modified="false" />The property to test for changes in its bindings collection. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use DataBindings.Changed event instead")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event is raised by the design host for certain actions on a control in the design surface. For example, an event is raised for the following conditions:</para>
          <list type="bullet">
            <item>
              <para>The user clicks the control.</para>
            </item>
            <item>
              <para>The control designer paints on the design surface.</para>
            </item>
            <item>
              <para>The user enters or exits template editing mode for the control.</para>
            </item>
          </list>
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class supplies a default delegate to handle the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event. Classes deriving from <see cref="T:System.Web.UI.Design.ControlDesigner" /> override the <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> method to process events that are raised when the user clicks a control.</para>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
          <para>The default implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> method returns without performing any processing.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called by the design host when the user clicks the associated control at design time.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> method is called when a property on the associated control is changed. It allows the implementer to do any processing that might be required after a property change. Calling the <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> method causes the design host to call the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method. The base implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> method also persists the control in the page markup.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when the associated control changes.</para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event. </param>
        <param name="ce">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When either the <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> or <see cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" /> method is called, the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event occurs before any changes are made to the associated control. After the changes are complete, the <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> method occurs.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control. </para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The object that is the source of the event.</param>
        <param name="ce">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> method is obsolete. Use the <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> method for equivalent control designer functionality.</para>
          </block>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> method typically is called only by the design-time environment when a user action causes the associated Web server control to be resized. The <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> method might be called several times during a resizing process to display the updated size of the control before the resizing is completed. The width and height properties of the control are updated before the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> method is called.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when the associated Web server control has been resized in the design host at design time.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use OnComponentChanged() instead")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event is raised by the design host for certain actions on a control in the design surface. For example, an event is raised for the following conditions:</para>
          <list type="bullet">
            <item>
              <para>The user clicks the control.</para>
            </item>
            <item>
              <para>The design host requests HTML markup to render the associated control on the design surface.</para>
            </item>
            <item>
              <para>The user enters or exits template editing mode for the control.</para>
            </item>
          </list>
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class supplies a default delegate to handle the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event. Classes deriving from <see cref="T:System.Web.UI.Design.ControlDesigner" /> should set the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value and override the <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method to process events that are raised when the design host draws the control on the design surface.</para>
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
          <para>The default implementation of the <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method returns without performing any processing.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is true.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>With the <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method, you can add items to the dictionary of properties that a control designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</para>
          <para>The keys in the dictionary of properties are the names of the properties. The objects are of type <see cref="T:System.ComponentModel.PropertyDescriptor" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</para>
        </summary>
        <param name="properties">
          <attribution license="cc4" from="Microsoft" modified="false" />The properties for the class of the component. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" /> method is obsolete and there is no replacement for this feature.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use OnComponentChanged() instead")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.Design.ControlDesigner" /> class is read-only, by nature. Read/write features are provided by adding a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object or using base classes, such as the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.ReadOnly" /> property is obsolete. Derive from the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class to which you can add editable designer regions or from the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> object to which you can create editable designer regions in templates.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the properties of the control are read-only at design time.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use ContainerControlDesigner and EditableDesignerRegion")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Whenever an item is cloned, there might be some internal data structures, such as meta: attributes, that should be included in the cloned control by the control designer. A page developer might add meta: attributes to the markup of a control and there is no way, nor is there a reason, for the control to distinguish what those tags might be. Therefore, if your control designer provides a way to edit complex properties or formats before applying changes to a page, you would create a clone of the control, pass both the original control and the clone to this <see cref="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" /> method, and then, when the changes are persisted to the tag, all meta: attributes are also persisted.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Registers internal data in a cloned control.</para>
        </summary>
        <param name="original">
          <attribution license="cc4" from="Microsoft" modified="false" />The control associated with the control designer.</param>
        <param name="clone">
          <attribution license="cc4" from="Microsoft" modified="false" />The cloned copy of the associated control.</param>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" /> property represents the control designer for the Web Forms page that contains the control. Use the <see cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" /> property to access and manipulate the containing Web Forms page at design time. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the control designer for the Web Forms page that contains the associated control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Classes deriving from the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class can support region-based editing on the design surface and override the <see cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method to set the content for a specified region.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the content for an editable region of the control at design time. </para>
        </summary>
        <param name="region">
          <attribution license="cc4" from="Microsoft" modified="false" />An editable design region contained within the control.</param>
        <param name="content">
          <attribution license="cc4" from="Microsoft" modified="false" />The content to assign for the editable design region.</param>
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Normally, the <see cref="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method is not overridden in derived designers. The base class causes the design host to call the <see cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method for the region. Override the <see cref="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method when custom data is required for the control before calling <see cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method.</para>
          <para>Use the <see cref="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" /> method to insert HTML markup into a region of the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the content for an editable region in the design-time view of the control.</para>
        </summary>
        <param name="region">
          <attribution license="cc4" from="Microsoft" modified="false" />An editable design region contained within the design-time view of the control.</param>
        <param name="content">
          <attribution license="cc4" from="Microsoft" modified="false" />The content to assign for the editable design region.</param>
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>There are several flags that can be set. For example, use the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method to set the <see cref="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete" /> value of the current <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property for the control designer, instead of the obsolete <see cref="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</para>
        </summary>
        <param name="viewFlags">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
        <param name="setFlag">
          <attribution license="cc4" from="Microsoft" modified="false" />true to set the flag, false to remove the flag.</param>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Typically, the <see cref="P:System.Web.UI.Design.ControlDesigner.Tag" /> property is used only for communication between the design host and the control designer and is not used by control developers.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an object representing the HTML markup element for the associated control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of template groups, each containing one or more template definitions.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" /> method is called by the design host to update the display of the associated Web server control at design time, such as when the control has been modified. Also, a control designer can call the <see cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" /> method after modifying values of the control to update the display of the control.</para>
          <block subset="none" type="note">
            <para>If you are calling the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event, or using the <see cref="T:System.ComponentModel.PropertyDescriptor" /> object to set properties, the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> interface calls the <see cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" /> method for you.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property is true, the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property returns a temporary copy of the control. Changes to the temporary control are not persisted to the document.</para>
          <para>If the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property is false, the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property returns an instance of the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control. Changes to the instance of the control are persisted.</para>
          <para>The <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> setting in the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> object is used to set the value of the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property. Therefore, the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> setting determines the type of control that is returned by the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property in the base <see cref="T:System.Web.UI.Design.ControlDesigner" /> class. If the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> is not specified in the control designer declaration, the <see cref="T:System.Web.UI.Design.ControlDesigner" /> object behavior is equivalent to specifying the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> property as false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property uses the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property to determine its return value.</para>
          <para>If the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property is true, the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property returns a temporary copy of the control. Changes to the temporary control are not persisted. </para>
          <para>If the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property is false, the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property returns an instance of the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control. Changes to the instance of the control are persisted.</para>
          <para>The <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> setting in the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> object is used to set the value of the <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> property. Therefore, the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> setting determines the type of control that is returned by the <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> property in the base <see cref="T:System.Web.UI.Design.ControlDesigner" /> class. If the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> is not specified in the control designer declaration, the <see cref="T:System.Web.UI.Design.ControlDesigner" /> object behavior is equivalent to specifying the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> property as false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether a View control has been created for display on the design surface.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>