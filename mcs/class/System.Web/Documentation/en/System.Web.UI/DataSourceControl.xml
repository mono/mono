<?xml version="1.0" encoding="utf-8"?>
<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.</para>
      <para>You use the data source controls that are provided with ASP.NET, including <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, <see cref="T:System.Web.UI.WebControls.AccessDataSource" />, and <see cref="T:System.Web.UI.WebControls.XmlDataSource" />, to perform most Web development tasks. You use the base <see cref="T:System.Web.UI.DataSourceControl" /> class when you want to implement your own custom data source control.</para>
      <para>While any class that implements the <see cref="T:System.Web.UI.IDataSource" /> interface is a data source control, most ASP.NET data source controls extend the abstract <see cref="T:System.Web.UI.DataSourceControl" /> class, which provides a base implementation of the <see cref="T:System.Web.UI.IDataSource" /> interface. The <see cref="T:System.Web.UI.DataSourceControl" /> class also provides an implementation of the <see cref="T:System.ComponentModel.IListSource" /> interface, which enables you to programmatically assign the data source control to the DataSource property of a data-bound control and return data to the control as a basic list.</para>
      <para>Any ASP.NET control that derives from the <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> class can bind to a data source control. When a <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> is bound to a data source control, data binding is performed automatically at run time. You can also use data source controls with ASP.NET controls that expose a DataSource or DataSourceID property and support basic data binding, but are not derived from <see cref="T:System.Web.UI.WebControls.DataBoundControl" />. When using these data-bound controls, you must explicitly call the DataBind method. For more information on data binding, see <format type="text/html"><a href="f9219396-a0fa-481f-894d-e3d9c67d64f2">Accessing Data with ASP.NET</a></format>.</para>
      <para>You can think of a data source control as the combination of the <see cref="T:System.Web.UI.DataSourceControl" /> object and its associated lists of data, called data source views. Each list of data is represented by a <see cref="T:System.Web.UI.DataSourceView" /> object. Because the underlying data storage contains one or more lists of data, a <see cref="T:System.Web.UI.DataSourceControl" /> is always associated with one or more named <see cref="T:System.Web.UI.DataSourceView" /> objects. The <see cref="T:System.Web.UI.IDataSource" /> interface defines the methods that all data source controls use to interact with data source views: the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method is used to enumerate the data source views currently associated with the data source control, and the <see cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" /> method is used to retrieve a specific data source view instance by name.</para>
      <para>You can also think of the data source control as two distinct interfaces that callers use to access data. The <see cref="T:System.Web.UI.DataSourceControl" /> class is the interface that page developers interact with directly when developing a Web Forms page, and the <see cref="T:System.Web.UI.DataSourceView" /> class is the interface that data-bound controls and data-bound control authors interact with. Because the <see cref="T:System.Web.UI.DataSourceView" /> object is available only at run time, any state persisted for the data source control or data source view must be exposed directly by the data source control.</para>
      <para>There is no visual rendering of ASP.NET data source controls; they are implemented as controls so you can create them declaratively, and to optionally allow them to participate in state management. As a result, data source controls do not support visual features such as <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> or <see cref="P:System.Web.UI.DataSourceControl.SkinID" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Serves as the base class for controls that represent data sources to data-bound controls.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.DataSourceControl" /> class. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Applies the style properties that are defined in the page style sheet to the control. </para>
        </summary>
        <param name="page">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.Page" /> containing the control.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the server control identifier generated by ASP.NET.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for a specified server control in the UI hierarchy.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>Because data source controls do not allow child controls, the <see cref="T:System.Web.UI.DataSourceControl" /> class's default implementation does not support the embedding of child controls.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a collection to store child controls.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.Web.UI.EmptyControlCollection" />.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because the <see cref="T:System.Web.UI.DataSourceControl" /> control has no visual rendering, it does not support themes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether this control supports themes.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Searches the current naming container for a server control with the specified <paramref name="id" /> parameter. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The specified control, or null if the specified control does not exist.</para>
        </returns>
        <param name="id">
          <attribution license="cc4" from="Microsoft" modified="false" />The identifier for the control to be found.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because the <see cref="T:System.Web.UI.DataSourceControl" /> control has no visual rendering, calling the <see cref="M:System.Web.UI.DataSourceControl.Focus" /> method on it throws a <see cref="T:System.NotSupportedException" /> exception. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets input focus to the control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can enumerate through the set of views currently associated with the data source control by calling the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method.</para>
          <para>Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <see cref="T:System.Web.UI.DataSourceView" /> class. The data source view defines the capabilities of a data source control, does all the work necessary to retrieve data from the underlying data store, and performs operations such as sorting, inserting, deleting, and updating.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.DataSourceControl" /> class's default implementation returns null. If you extend the <see cref="T:System.Web.UI.DataSourceControl" /> class, override the <see cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" /> method to return the specified <see cref="T:System.Web.UI.DataSourceView" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the named data source view associated with the data source control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</para>
        </returns>
        <param name="viewName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Collections.ICollection" /> collection of names is the allowable set of values that can be passed to the <see cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" /> method.</para>
          <para>The <see cref="T:System.Web.UI.ListSourceHelper" /> class, which is used for the <see cref="T:System.Web.UI.DataSourceControl" /> class's <see cref="T:System.ComponentModel.IListSource" /> implementation, checks the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method for both the <see cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" /> and <see cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" /> calls to determine whether the data source control is associated with one or more data source views. If <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> returns null, which is the default implementation of the method, <see cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" /> returns false and <see cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" /> returns null.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.DataSourceControl" /> class's default implementation returns null. If you extend the <see cref="T:System.Web.UI.DataSourceControl" /> class, override the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method to return a collection of view names.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines if the server control contains any child controls. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the control contains other controls; otherwise, false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> method notifies a data-bound control that the underlying data source or the data cached in memory has changed, and that the control should rebind and perform any necessary additional work. Typically, the <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> method is called when a property of the data source control or a parameter value has changed.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="F2ADAF01-1ED1-42E1-8C31-8D467E7E0EE2">Raising an Event</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter tw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="tw">To be added.</param>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object and stores tracing information about the control if tracing is enabled. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because the <see cref="T:System.Web.UI.DataSourceControl" /> control has no visual rendering, you cannot set the <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the skin to apply to the <see cref="T:System.Web.UI.DataSourceControl" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is used to determine whether the current object can be used as a source of one or more lists of data. Data source controls encapsulate their lists of data as <see cref="T:System.Web.UI.DataSourceView" /> objects; therefore, when associated with one or more <see cref="T:System.Web.UI.DataSourceView" /> objects, a <see cref="T:System.Web.UI.DataSourceControl" /> control represents a list source object and the property returns true.</para>
          <para>This property calls the static <see cref="M:System.Web.UI.ListSourceHelper.ContainsListCollection(System.Web.UI.IDataSource)" /> method to determine whether the current data source control can be used as a source of data. The <see cref="T:System.Web.UI.ListSourceHelper" /> class determines whether the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method returns a valid collection of view names. If it does, this property returns true. If <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> returns null, which is the default implementation of the <see cref="T:System.Web.UI.DataSourceControl" /> class, the method returns false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether the data source control is associated with one or more lists of data.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to retrieve a set of objects that can be used as sources of data. Data source controls encapsulate their lists of data as <see cref="T:System.Web.UI.DataSourceView" /> objects; therefore, when associated with one or more <see cref="T:System.Web.UI.DataSourceView" /> objects, a <see cref="T:System.Web.UI.DataSourceControl" /> control represents a list source object and the method returns an <see cref="T:System.Collections.IList" /> collection of one element, the <see cref="T:System.Web.UI.DataSourceControl" /> itself.</para>
          <para>This method calls the static <see cref="M:System.Web.UI.ListSourceHelper.GetList(System.Web.UI.IDataSource)" /> method to retrieve an <see cref="T:System.Collections.IList" /> collection of objects that can be used as sources of data. The <see cref="T:System.Web.UI.ListSourceHelper" /> class determines whether <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> returns a valid collection of view names. If it does, the <see cref="T:System.Web.UI.ListSourceHelper" /> class returns an <see cref="T:System.Collections.IList" /> collection of one element, the <see cref="T:System.Web.UI.DataSourceControl" /> control. If <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> returns null, which is the default implementation of the <see cref="T:System.Web.UI.DataSourceControl" /> class, the <see cref="T:System.Web.UI.ListSourceHelper" /> class also returns null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a list of data source controls that can be used as sources of lists of data.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.IList" /> of data source controls that can be used as sources of lists of data.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="viewName" /> parameter is ignored when this method is called on data source controls that support only one view, such as the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> and <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> controls.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.DataSourceControl" /> class's default implementation, which is called by this interface method, returns null. If you extend the <see cref="T:System.Web.UI.DataSourceControl" /> class, override the <see cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" /> method to return the specified <see cref="T:System.Web.UI.DataSourceView" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the named <see cref="T:System.Web.UI.DataSourceView" /> object associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control. Some data source controls support only one view, while others support more than one.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the named <see cref="T:System.Web.UI.DataSourceView" /> associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</para>
        </returns>
        <param name="viewName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Web.UI.DataSourceView" /> to retrieve. In data source controls that support only one view, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, this parameter is ignored.</param>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.DataSourceControl" /> class's default implementation, which is called by this interface method, returns null, which indicates that only one view is supported. If you extend the <see cref="T:System.Web.UI.DataSourceControl" /> class, override the <see cref="M:System.Web.UI.DataSourceControl.GetViewNames" /> method to return a collection of view names. A name can be passed to the <see cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" /> method to return a <see cref="T:System.Web.UI.DataSourceView" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of names, representing the list of <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.ICollection" /> that contains the names of the <see cref="T:System.Web.UI.DataSourceView" /> objects associated with the <see cref="T:System.Web.UI.DataSourceControl" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because the <see cref="T:System.Web.UI.DataSourceControl" /> control has no visual rendering, the <see cref="P:System.Web.UI.DataSourceControl.Visible" /> property always returns false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the control is visually displayed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>