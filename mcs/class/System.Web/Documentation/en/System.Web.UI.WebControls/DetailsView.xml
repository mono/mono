<?xml version="1.0" encoding="utf-8"?>
<Type Name="DetailsView" FullName="System.Web.UI.WebControls.DetailsView">
  <TypeSignature Language="C#" Value="public class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:DetailsView runat="server" Width="125px" Height="50px"&gt;&lt;/{0}:DetailsView&gt;")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>In this topic:</para>
      <list type="bullet">
        <item>
          <para>
            <format type="text/html">
              <a href="#introduction">Introduction</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#row_fields">Row Fields</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#binding_to_data">Binding to Data</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#security">Security</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#data_operations">Data Operations</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#customizing_the_user_interface">Customizing the User Interface</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#events">Events</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#Accessibility">Accessibility</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#DeclarativeSyntax">Declarative Syntax</a>
            </format>
          </para>
        </item>
      </list>
      <format type="text/html">
        <a href="#introduction" />
      </format>
      <format type="text/html">
        <h2>Introduction</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is used to display a single record from a data source in a table, where each field of the record is displayed in a row of the table. It can be used in combination with a <see cref="T:System.Web.UI.WebControls.GridView" /> control for master-detail scenarios. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control supports the following features: </para>
      <list type="bullet">
        <item>
          <para>Binding to data source controls, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</para>
        </item>
        <item>
          <para>Built-in inserting capabilities.</para>
        </item>
        <item>
          <para>Built-in updating and deleting capabilities.</para>
        </item>
        <item>
          <para>Built-in paging capabilities.</para>
        </item>
        <item>
          <para>Programmatic access to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> object model to dynamically set properties, handle events, and so on.</para>
        </item>
        <item>
          <para>Customizable appearance through themes and styles.</para>
        </item>
      </list>
      <format type="text/html">
        <a href="#row_fields" />
      </format>
      <format type="text/html">
        <h2>Row Fields</h2>
      </format>
      <para>Each data row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is created by declaring a field control. Different row field types determine the behavior of the rows in the control. Field controls derive from <see cref="T:System.Web.UI.WebControls.DataControlField" />. The following table lists the different row field types that can be used.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Column field type </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.BoundField" />
            </para>
          </term>
          <description>
            <para>Displays the value of a field in a data source as text.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.ButtonField" />
            </para>
          </term>
          <description>
            <para>Displays a command button in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This allows you to display a row with a custom button control, such as an Add or a Remove button.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.CheckBoxField" />
            </para>
          </term>
          <description>
            <para>Displays a check box in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This row field type is commonly used to display fields with a Boolean value.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.CommandField" />
            </para>
          </term>
          <description>
            <para>Displays built-in command buttons to perform edit, insert, or delete operations in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.HyperLinkField" />
            </para>
          </term>
          <description>
            <para>Displays the value of a field in a data source as a hyperlink. This row field type allows you to bind a second field to the hyperlink's URL.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.ImageField" />
            </para>
          </term>
          <description>
            <para>Displays an image in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.TemplateField" />
            </para>
          </term>
          <description>
            <para>Displays user-defined content for a row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control according to a specified template. This row field type allows you to create a custom row field.</para>
          </description>
        </item>
      </list>
      <para>By default, the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property is set to true, which automatically generates a bound row field object for each field of a bindable type in the data source. Valid bindable types are <see cref="T:System.String" />, <see cref="T:System.DateTime" />, <see cref="T:System.Decimal" />, <see cref="T:System.Guid" />, and the set of primitive types. Each field is then displayed in a row as text, in the order in which each field appears in the data source.</para>
      <para>Automatically generating the rows provides a quick and easy way to display every field in the record. However, to make use of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control's advanced capabilities you must explicitly declare the row fields to include in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. To declare the row fields, first set the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property to false. Next, add opening and closing &lt;Fields&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. Finally, list the row fields that you want to include between the opening and closing &lt;Fields&gt; tags. The row fields specified are added to the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection in the order listed. The <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection allows you to programmatically manage the row fields in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
      <block subset="none" type="note">
        <para>Automatically generated row fields are not added to the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection.</para>
      </block>
      <block subset="none" type="note">
        <para>Explicitly declared row fields can be displayed in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields.</para>
      </block>
      <format type="text/html">
        <a href="#binding_to_data" />
      </format>
      <format type="text/html">
        <h2>Binding to Data</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can be bound to a data source control (such as the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control or <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control) or to any data source collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface, such as <see cref="T:System.Data.DataView" />, <see cref="T:System.Collections.ArrayList" />, <see cref="T:System.Collections.Generic.List`1" />, or other collection types. Use one of the following methods to bind the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to the appropriate data source type:</para>
      <list type="bullet">
        <item>
          <para>To bind to a data source control, set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to the <see cref="P:System.Web.UI.Control.ID" /> value of the data source control. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically binds to the specified data source control. This is the preferred method to bind to data.</para>
        </item>
        <item>
          <para>To bind to a data source that implements the <see cref="T:System.Collections.IEnumerable" /> interface, programmatically set the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to the data source and then call the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method.</para>
        </item>
      </list>
      <para>For more information on data binding, see <format type="text/html"><a href="ab7b2846-975b-4057-a948-45527497c742">ASP.NET Data Binding</a></format>.</para>
      <format type="text/html">
        <a href="#security" />
      </format>
      <format type="text/html">
        <h2>Security</h2>
      </format>
      <para>This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. For more information, see <format type="text/html"><a href="772c7312-211a-4eb3-8d6e-eec0aa1dcc07">Script Exploits Overview</a></format>. Validation server controls are also provided to assess user input. For more information, see <format type="text/html"><a href="96d2c59e-693c-4079-9b53-b3ff0d9e9133">Validation Server Controls</a></format>.</para>
      <format type="text/html">
        <a href="#data_operations" />
      </format>
      <format type="text/html">
        <h2>Data Operations</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides built-in capabilities that allow the user to update, delete, insert, and page through items in the control. When the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is bound to a data source control, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can take advantage of the data source control's capabilities and provide automatic updating, deleting, inserting, and paging functionality.</para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can provide support for update, delete, insert, and paging operations with other types of data sources; however, you must provide the implementation for these operations in an appropriate event handler. For more information, see <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />, <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />, and <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />.</para>
      </block>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can automatically add a <see cref="T:System.Web.UI.WebControls.CommandField" /> row field with an Edit, Delete, or New button by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />, <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" />, or <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" /> properties to true, respectively. Unlike the Delete button (which deletes the selected record immediately), when the Edit or New button is clicked, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control goes into edit or insert mode, respectively. In edit mode, the Edit button is replaced with an Update and a Cancel button. Input controls that are appropriate for the field's data type (such as a <see cref="T:System.Web.UI.WebControls.TextBox" /> or a <see cref="T:System.Web.UI.WebControls.CheckBox" /> control) are displayed with a field's value for the user to modify. Clicking the Update button updates the record in the data source, while clicking the Cancel button abandons any changes. Likewise, in insert mode, the New button is replaced with an Insert and a Cancel button, and empty input controls are displayed for the user to enter the values for the new record.</para>
      <block subset="none" type="note">
        <para>You can also manually define the update, delete, and insert command buttons in a <see cref="T:System.Web.UI.WebControls.ButtonField" />, <see cref="T:System.Web.UI.WebControls.CommandField" />, or <see cref="T:System.Web.UI.WebControls.TemplateField" /> row field. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control recognizes buttons with the <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> property set to "Edit", "Update", "Delete", "New", "Insert", or "Cancel"; however, you still must provide the functionality yourself. For more information, see <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />, <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />, and <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />.</para>
      </block>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides a paging feature, which allows the user to navigate to other records in the data source. When enabled, page navigation controls are displayed in a pager row. To enable paging, set the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true. The pager row can be customized using the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" /> properties.</para>
      <format type="text/html">
        <a href="#customizing_the_user_interface" />
      </format>
      <format type="text/html">
        <h2>Customizing the User Interface</h2>
      </format>
      <para>You can customize the appearance of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control by setting the style properties for different parts of the control. The following table lists the style properties that you can set.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Style property </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the alternating data rows in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. When this property is set, the data rows are displayed in bands, alternating between the <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> settings.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the row that contains the built-in command buttons.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the data rows when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the empty data row that are displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the data source does not contain any records.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the footer row.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the header row.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the data rows when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the pager row.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the data rows in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. When the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> property is also set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> settings.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" /> </para>
          </term>
          <description>
            <para>The style settings for the header column.</para>
          </description>
        </item>
      </list>
      <format type="text/html">
        <a href="#events" />
      </format>
      <format type="text/html">
        <h2>Events</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides several events that you can program against. This allows you to run a custom routine whenever an event occurs. The following table lists the events supported by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control also inherits these events from its base classes: <see cref="E:System.Web.UI.Control.DataBinding" />, <see cref="E:System.Web.UI.WebControls.BaseDataBoundControl.DataBound" />, <see cref="E:System.Web.UI.Control.Disposed" />, <see cref="E:System.Web.UI.Control.Init" />, <see cref="E:System.Web.UI.Control.Load" />, <see cref="E:System.Web.UI.Control.PreRender" />, and <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Event </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
            </para>
          </term>
          <description>
            <para>Occurs when a button is clicked in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" />
            </para>
          </term>
          <description>
            <para>Occurs after all <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> objects are created in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This event is often used to modify the values of a record before it is displayed.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
            </para>
          </term>
          <description>
            <para>Occurs when a Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control deletes the record from the data source. This event is often used to check the results of the delete operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
            </para>
          </term>
          <description>
            <para>Occurs when a Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control deletes the record from the data source. This event is often used to cancel the delete operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
            </para>
          </term>
          <description>
            <para>Occurs when an Insert button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control inserts the record. This event is often used to check the results of the insert operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
            </para>
          </term>
          <description>
            <para>Occurs when an Insert button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control inserts the record. This event is often used to cancel the insert operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> </para>
          </term>
          <description>
            <para>Occurs when an Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control updates the row. This event is often used to check the results of the update operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
            </para>
          </term>
          <description>
            <para>Occurs when an Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control updates the record. This event is often used to cancel the update operation.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
            </para>
          </term>
          <description>
            <para>Occurs after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes (edit, insert, or read-only mode). This event is often used to perform a task when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
            </para>
          </term>
          <description>
            <para>Occurs before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes (edit, insert, or read-only mode). This event is often used to cancel a mode change.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
            </para>
          </term>
          <description>
            <para>Occurs when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different record in the control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
            </para>
          </term>
          <description>
            <para>Occurs when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This event is often used to cancel the paging operation.</para>
          </description>
        </item>
      </list>
      <format type="text/html">
        <a href="#Accessibility" />
      </format>
      <format type="text/html">
        <h2>Accessibility</h2>
      </format>
      <para>For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <format type="text/html"><a href="7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Accessibility in Visual Studio 2010 and ASP.NET 4</a></format> and <format type="text/html"><a href="847a37e3-ce20-41da-b0d3-7dfb0fdae9a0">ASP.NET Controls and Accessibility</a></format>.</para>
      <format type="text/html">
        <a href="#DeclarativeSyntax" />
      </format>
      <format type="text/html">
        <h2>Declarative Syntax</h2>
      </format>
      <code>&lt;asp:DetailsView
    AccessKey="string"
    AllowPaging="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateDeleteButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateEditButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateInsertButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateRows="<codeFeaturedElement>True</codeFeaturedElement>|False"
    BackColor="color name|#dddddd"
    BackImageUrl="uri"
    BorderColor="color name|#dddddd"
    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    Caption="string"
    CaptionAlign="<codeFeaturedElement>NotSet</codeFeaturedElement>|Top|Bottom|Left|Right"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    DefaultMode="<codeFeaturedElement>ReadOnly</codeFeaturedElement>|Edit|Insert"
    EmptyDataText="string"
    Enabled="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnablePagingCallbacks="True|<codeFeaturedElement>False</codeFeaturedElement>"
    EnableTheming="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnableViewState="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Names="string"
    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    FooterText="string"
    ForeColor="color name|#dddddd"
    GridLines="<codeFeaturedElement>None</codeFeaturedElement>|Horizontal|Vertical|Both"
    HeaderText="string"
    Height="size"
    HorizontalAlign="<codeFeaturedElement>NotSet</codeFeaturedElement>|Left|Center|Right|Justify"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCommand="ItemCommand event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDeleted="ItemDeleted event handler"
    OnItemDeleting="ItemDeleting event handler"
    OnItemInserted="ItemInserted event handler"
    OnItemInserting="ItemInserting event handler"
    OnItemUpdated="ItemUpdated event handler"
    OnItemUpdating="ItemUpdating event handler"
    OnLoad="Load event handler"
    OnModeChanged="ModeChanged event handler"
    OnModeChanging="ModeChanging event handler"
    OnPageIndexChanged="PageIndexChanged event handler"
    OnPageIndexChanging="PageIndexChanging event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PageIndex="integer"
    PagerSettings-FirstPageImageUrl="uri"
    PagerSettings-FirstPageText="string"
    PagerSettings-LastPageImageUrl="uri"
    PagerSettings-LastPageText="string"
    PagerSettings-Mode="NextPrevious|<codeFeaturedElement>Numeric</codeFeaturedElement>|NextPreviousFirstLast|NumericFirstLast"
    PagerSettings-NextPageImageUrl="uri"
    PagerSettings-NextPageText="string"
    PagerSettings-PageButtonCount="integer"
    PagerSettings-Position="<codeFeaturedElement>Bottom</codeFeaturedElement>|Top|TopAndBottom"
    PagerSettings-PreviousPageImageUrl="uri"
    PagerSettings-PreviousPageText="string"
    PagerSettings-Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Width="size"
&gt;
        &lt;AlternatingRowStyle /&gt;
        &lt;CommandRowStyle /&gt;
        &lt;EditRowStyle /&gt;
        &lt;EmptyDataRowStyle /&gt;
        &lt;EmptyDataTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/EmptyDataTemplate&gt;
        &lt;FieldHeaderStyle /&gt;
        &lt;Fields&gt;
                &lt;asp:BoundField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:BoundField&gt;
                &lt;asp:ButtonField
                    AccessibleHeaderText="string"
                    ButtonType="<codeFeaturedElement>Button</codeFeaturedElement>|Image|Link"
                    CausesValidation="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    CommandName="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    ImageUrl="uri"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowHeader="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    SortExpression="string"
                    Text="string"
                    ValidationGroup="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:ButtonField&gt;
                &lt;asp:CheckBoxField
                    AccessibleHeaderText="string"
                    DataField="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Text="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:CheckBoxField&gt;
                &lt;asp:CommandField
                    AccessibleHeaderText="string"
                    ButtonType="<codeFeaturedElement>Button</codeFeaturedElement>|Image|Link"
                    CancelImageUrl="uri"
                    CancelText="string"
                    CausesValidation="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DeleteImageUrl="uri"
                    DeleteText="string"
                    EditImageUrl="uri"
                    EditText="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertImageUrl="uri"
                    InsertText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NewImageUrl="uri"
                    NewText="string"
                    SelectImageUrl="uri"
                    SelectText="string"
                    ShowCancelButton="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowDeleteButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowEditButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowInsertButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowSelectButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    SortExpression="string"
                    UpdateImageUrl="uri"
                    UpdateText="string"
                    ValidationGroup="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:CommandField&gt;
                &lt;asp:DynamicField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ConvertEmptyStringToNull="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    UIHint="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:DynamicField&gt;
                &lt;asp:HyperLinkField
                    AccessibleHeaderText="string"
                    DataNavigateUrlFields="string"
                    DataNavigateUrlFormatString="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NavigateUrl="uri"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Target="string|_blank|_parent|_search|_self|<codeFeaturedElement>_top</codeFeaturedElement>"
                    Text="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:HyperLinkField&gt;
                &lt;asp:ImageField
                    AccessibleHeaderText="string"
                    AlternateText="string"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DataAlternateTextField="string"
                    DataAlternateTextFormatString="string"
                    DataImageUrlField="string"
                    DataImageUrlFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    NullImageUrl="uri"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:ImageField&gt;
                &lt;asp:TemplateField
                    AccessibleHeaderText="string"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                            &lt;ControlStyle /&gt;
                            &lt;FooterStyle /&gt;
                            &lt;HeaderStyle /&gt;
                            &lt;ItemStyle /&gt;
                        &lt;AlternatingItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/AlternatingItemTemplate&gt;
                        &lt;EditItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/EditItemTemplate&gt;
                        &lt;FooterTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/FooterTemplate&gt;
                        &lt;HeaderTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/HeaderTemplate&gt;
                        &lt;InsertItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/InsertItemTemplate&gt;
                        &lt;ItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/ItemTemplate&gt;
                &lt;/asp:TemplateField&gt;
        &lt;/Fields&gt;
        &lt;FooterStyle /&gt;
        &lt;FooterTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/FooterTemplate&gt;
        &lt;HeaderStyle /&gt;
        &lt;HeaderTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/HeaderTemplate&gt;
        &lt;InsertRowStyle /&gt;
        &lt;PagerSettings
            FirstPageImageUrl="uri"
            FirstPageText="string"
            LastPageImageUrl="uri"
            LastPageText="string"
            Mode="NextPrevious|<codeFeaturedElement>Numeric</codeFeaturedElement>|NextPreviousFirstLast|
                NumericFirstLast"
            NextPageImageUrl="uri"
            NextPageText="string"
            OnPropertyChanged="PropertyChanged event handler"
            PageButtonCount="integer"
            Position="<codeFeaturedElement>Bottom</codeFeaturedElement>|Top|TopAndBottom"
            PreviousPageImageUrl="uri"
            PreviousPageText="string"
            Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
        /&gt;
        &lt;PagerStyle /&gt;
        &lt;PagerTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/PagerTemplate&gt;
        &lt;RowStyle        /&gt;
&lt;/asp:DetailsView&gt;</code>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Displays the values of a single record from a data source in a table, where each data row represents a field of the record. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control allows you to edit, delete, and insert records.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsView ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to initialize a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class. To dynamically add a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to a page, create a new <see cref="T:System.Web.UI.WebControls.DetailsView" /> object, set its properties, and then add it to the <see cref="P:System.Web.UI.Control.Controls" /> collection of a container control, such as <see cref="T:System.Web.UI.WebControls.PlaceHolder" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has built-in paging capabilities, which allow a user to navigate to a different record in the data source. </para>
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can perform both user interface (UI) and data source paging. The UI paging feature can be used with any data source object that supports the <see cref="T:System.Collections.ICollection" /> interface. For each paging operation, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control queries the data source for the entire data collection and selects the row to display, essentially discarding the remaining data.</para>
          <para>If a data source implements <see cref="T:System.Web.UI.DataSourceView" /> and the <see cref="P:System.Web.UI.DataSourceView.CanPage" /> property returns true, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will use data source paging instead of UI paging. In this case, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will query for only the row needed for each paging operation. Thus, data source paging is more efficient than UI paging. Only the <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> object supports data source paging without modification.</para>
          <para>To enable the paging feature, set the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true. You can determine the total number of items in the underlying data source by using the <see cref="P:System.Web.UI.WebControls.DetailsView.PageCount" /> property. To determine the index of the currently displayed item, use the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property.</para>
          <para>When paging is enabled, an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The pager row contains the page navigation controls and can be displayed at the top, bottom, or both the top and bottom of the control. The pager row has two built-in pager display modes: numbered pages and next and previous page links (default). The numbered pages mode displays links for the individual pages, allowing the user to navigate to a specific page. The next and previous links mode displays controls that allow the user to navigate to the next or the previous page.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically hides the pager row when the data source contains fewer than two records.</para>
          </block>
          <para>You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text label) by using the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" /> property. To control the appearance of the pager row (including its background color, font color, and position), use the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" /> property. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control also allows you to define a custom template for the pager row. For more information on creating a custom pager row template, see <see cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" />.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" />
                </para>
              </term>
              <description>
                <para>Occurs when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different record in the control.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" />
                </para>
              </term>
              <description>
                <para>Occurs when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This event is often used to cancel the paging operation.</para>
              </description>
            </item>
          </list>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the paging feature is enabled.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> property to control the appearance of alternating data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. When this property is set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> settings. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, AlternatingRowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, AlternatingRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the alternating data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is bound to an object that inherits from <see cref="T:System.Web.UI.DataSourceView" /> and the <see cref="P:System.Web.UI.DataSourceView.CanDelete" /> property returns true, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can take advantage of the data source control's capabilities and provide automatic deleting functionality.</para>
          <block subset="none" type="note">
            <para>For a <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to delete data, the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property of the underlying <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object must be set with a delete query statement.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" /> property is set to true, a <see cref="T:System.Web.UI.WebControls.CommandField" /> row field with a Delete button is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. Clicking the Delete button permanently removes that record from the data source.</para>
          <block subset="none" type="note">
            <para>You must also set the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property for the automatic deletion feature to work.</para>
          </block>
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides several events that you can use to perform a custom action when a record is deleted. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" />
                </para>
              </term>
              <description>
                <para>Occurs when the Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control deletes the record from the data source. This event is often used to check the results of the delete operation.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" />
                </para>
              </term>
              <description>
                <para>Occurs when the Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control deletes the record from the data source. This event is often used to cancel the delete operation.</para>
              </description>
            </item>
          </list>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the built-in control to delete the current record is displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a data source control that supports updating is bound to a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can take advantage of the data source control's capabilities and provide automatic updating functionality.</para>
          <block subset="none" type="note">
            <para>For a data source control to update data, its <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property must be set with an update query statement.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" /> property is set to true, a <see cref="T:System.Web.UI.WebControls.CommandField" /> row field with an Edit button is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. Clicking the Edit button puts that <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in edit mode. When in edit mode, each bound field in the control that is not read-only displays the appropriate input control, such as a <see cref="T:System.Web.UI.WebControls.TextBox" /> control, for the field's data type. This allows the user to modify the field's value.</para>
          <para>When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the record in the data source with any value changes and returns the control to the mode specified by the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property. Clicking the Cancel button abandons any value changes and returns the control to the default mode.</para>
          <block subset="none" type="note">
            <para>To put a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in edit mode programmatically, use the <see cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" /> method.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property is also set to true, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically ensures that the field or fields specified in the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property are read-only.</para>
          <block subset="none" type="note">
            <para>Unless you implement your own updating functionality, you must set the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property for the automatic updating feature to work.</para>
          </block>
          <para>You can control the appearance of the data rows when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode by using the <see cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" /> property. Common settings usually include a custom background color, foreground color, and font properties.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides several events that you can use to perform a custom action when a record is updated. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
                </para>
              </term>
              <description>
                <para>Occurs when the Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control updates the record. This event is often used to check the results of the update operation.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
                </para>
              </term>
              <description>
                <para>Occurs when the Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control updates the record. This event is often used to cancel the update operation.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
                </para>
              </term>
              <description>
                <para>Occurs after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
                </para>
              </term>
              <description>
                <para>Occurs before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes. This event is often used to cancel the mode change.</para>
              </description>
            </item>
          </list>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the built-in controls to edit the current record are displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateInsertButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateInsertButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a data source control that supports inserting is bound to a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control can take advantage of the data source control's capabilities and provide automatic inserting functionality.</para>
          <block subset="none" type="note">
            <para>For a data source control to insert data, its <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property must be set with an insert query statement.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" /> property is set to true, a <see cref="T:System.Web.UI.WebControls.CommandField" /> row field with a New button is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. Clicking the New button puts that <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in insert mode. When in insert mode, each bound field in the control that is not read-only displays the appropriate input control, such as a <see cref="T:System.Web.UI.WebControls.TextBox" /> control, for the field's data type. This allows the user to enter the field's value for the new record.</para>
          <para>When clicked, the New button is also replaced with an Insert button and a Cancel button. Clicking the Insert button inserts the new record in the data source and returns the control to the mode specified by the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property. Clicking the Cancel button abandons the insert operation and returns the control to the default mode.</para>
          <block subset="none" type="note">
            <para>To put a row in insert mode programmatically, use the <see cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" /> method.</para>
          </block>
          <para>You can control the appearance of a record that is in insert mode by using the <see cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" /> property. Common settings usually include a custom background color, foreground color, and font properties.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control provides several events that you can use to perform a custom action when a new record is inserted. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" />
                </para>
              </term>
              <description>
                <para>Occurs when the Insert button is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control inserts the record. This event is often used to check the results of the insert operation.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" />
                </para>
              </term>
              <description>
                <para>Occurs when the Insert button is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control inserts the record. This event is often used to cancel the insert operation.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
                </para>
              </term>
              <description>
                <para>Occurs after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
                </para>
              </term>
              <description>
                <para>Occurs before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes. This event is often used to cancel the mode change.</para>
              </description>
            </item>
          </list>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the built-in controls to insert a new record are displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateRows">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateRows { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Each data row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is represented by a row field. When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property is set to true, an automatically generated bound row field is created for each field in the data source. Each field is then displayed in a row as text, in the order in which each field appears in the data source.</para>
          <block subset="none" type="note">
            <para>Automatically generated bound row fields are not added to the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection.</para>
          </block>
          <para>Automatically generating the rows provides a quick and easy way to display every field in the record. However, to make use of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control's advanced capabilities you must explicitly declare the row fields to include in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. For more information, see <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" />.</para>
          <block subset="none" type="note">
            <para>Explicitly declared row fields can be used in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields.</para>
          </block>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether row fields for each field in the data source are automatically generated and displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.BackImageUrl" /> property to specify the URL to an image to display in the background of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <block subset="none" type="note">
            <para>If the specified image is smaller than the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image to display in the background of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When paging is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true), an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The pager row contains controls that allow the user to navigate to other records, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the bottom pager row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control creates the bottom pager row in the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the bottom pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.Caption" /> property to specify the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible.</para>
          <para>Additional accessibility support for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is provided by the <see cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" /> property. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" /> property to specify the alignment of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.Caption" /> is stored in view state.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.TableCaptionAlign.NotSet)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" /> property to specify the horizontal or vertical position of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
          <para>This property is set using one of the <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> enumeration values. The following table lists the possible values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>TableCaptionAlign.Bottom</para>
              </term>
              <description>
                <para>The caption element is aligned with the bottom of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Left</para>
              </term>
              <description>
                <para>The caption element is aligned with the left side of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.NotSet</para>
              </term>
              <description>
                <para>The caption element's alignment is not set.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Right</para>
              </term>
              <description>
                <para>The caption element is aligned with the right side of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Top</para>
              </term>
              <description>
                <para>The caption element is aligned with the top of the table.</para>
              </description>
            </item>
          </list>
          <para>Additional accessibility support for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is provided by the <see cref="P:System.Web.UI.WebControls.DetailsView.Caption" /> property. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.Caption" /> property to specify the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.CaptionAlign" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the horizontal or vertical position of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" /> property to control the spacing between the contents of a cell and the cell's border. The padding amount specified is added to all four sides of the cell.</para>
          <para>All cells in the same column of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control have the same width. The padding amount is applied to the widest cell and all other cells in the column are adjusted to that cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row are adjusted to that cell height. Individual cell sizes cannot be specified.</para>
          <para>To adjust the spacing between cells, use the <see cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of space between the contents of a cell and the cell's border.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" /> property to control the spacing between adjacent cells in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.</para>
          <block subset="none" type="note">
            <para>If you set this property to a value greater than 0, and then set the <see cref="P:System.Web.UI.WebControls.DetailsView.GridLines" /> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the <see cref="P:System.Web.UI.WebControls.DetailsView.CellSpacing" /> property controls the size of the gap.</para>
          </block>
          <para>To adjust the spacing between the contents of a cell and the cell's border, use the <see cref="P:System.Web.UI.WebControls.DetailsView.CellPadding" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of space between cells.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.DetailsViewMode" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" /> method to programmatically switch the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control between edit, insert, and read-only mode. This method also updates the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property with the specified mode. The following table lists the different mode values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Mode</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>DetailsViewMode.Edit</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode, which allows the user to update the values of a record.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsViewMode.Insert</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode, which allows the user to add a new record to the data source.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsView.ReadOnly</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in read-only mode, which is the normal display mode.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Switches the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to the specified mode. </para>
        </summary>
        <param name="newMode">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Web.UI.WebControls.DetailsViewMode" /> values.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CommandRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CommandRowStyle" /> property to control the appearance of a command row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. A command row contains the command buttons to perform operations such as editing, deleting, and inserting. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, CommandRowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, CommandRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of a command row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateAutoGeneratedRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create an automatically generated row field using the specified field properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> object that represents an automatically generated row field using the specified field properties.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> that contains the field properties specified by the <paramref name="fieldProperties" /> parameter.</para>
        </returns>
        <param name="fieldProperties">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" /> that contains the properties for the <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" />.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateAutoGeneratedRows">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property is set to true, the <see cref="M:System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows(System.Object)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create a set of automatically generated row fields for the current data item.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a set of automatically generated row fields for the specified data item.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.ICollection" /> that contains the automatically generated row fields for the specified data item.</para>
        </returns>
        <param name="dataItem">
          <attribution license="cc4" from="Microsoft" modified="false" />The data item for which to create the automatically generated row fields.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable data, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create the control hierarchy for the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the control hierarchy used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of items in the data source.</para>
        </returns>
        <param name="dataBinding">
          <attribution license="cc4" from="Microsoft" modified="false" />true to indicate that this method is being called during data binding; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateControlStyle" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create its default table style object. In addition to the default style setting of a <see cref="T:System.Web.UI.WebControls.TableStyle" /> object, this method also sets the properties in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Property</para>
                </term>
                <description>
                  <para>Initial value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.TableStyle.GridLines" />
                </para>
              </term>
              <description>
                <para>GridLines.Both</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.TableStyle.CellSpacing" />
                </para>
              </term>
              <description>
                <para>0</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a default table style object for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.Style" /> that contains the default table style for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that gets passed to the Select command.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that gets passed to the Select command.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that gets passed to the Select command</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateFieldSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItem" Type="System.Object" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateFieldSet(System.Object,System.Boolean)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create the complete set of row fields for the control. If the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property is set to true, automatically generated row fields are appended to the user-defined row fields contained in the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection. To create the automatically generated row fields based on the data item, pass in true for the <paramref name="useDataSource" /> parameter; otherwise, the automatically generated row fields are created based on properties of the existing row fields in the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the complete set of automatically generated and user-defined row fields used to generate the control hierarchy.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.ICollection" /> that contains both the automatically generated and the user-defined row fields for the specified data item.</para>
        </returns>
        <param name="dataItem">
          <attribution license="cc4" from="Microsoft" modified="false" />The data item for which to create the row fields.</param>
        <param name="useDataSource">
          <attribution license="cc4" from="Microsoft" modified="false" />true to use the data item to create the automatically generated row fields; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object using the specified item index, row type, and row state.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> with the specified item index, row type, and row state.</para>
        </returns>
        <param name="rowIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The zero-based index of the data item to display.</param>
        <param name="rowType">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> values.</param>
        <param name="rowState">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.CreateTable" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create a table that acts as the container for the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the containing table for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.Table" /> that represents the containing table for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. </para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property to determine whether the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit, insert, or read-only mode. The following table lists the different mode values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Mode</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>DetailsViewMode.Edit</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode, which allows the user to update the values of a record.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsViewMode.Insert</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode, which allows the user to add a new record to the data source.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsViewMode.ReadOnly</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in read-only mode, which is the normal display mode.</para>
              </description>
            </item>
          </list>
          <para>This value is normally set automatically by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control by when the New, Update, Insert, Delete, or Cancel command button is clicked. You can also programmatically change the mode by using the <see cref="M:System.Web.UI.WebControls.DetailsView.ChangeMode(System.Web.UI.WebControls.DetailsViewMode)" /> method.</para>
          <para>When the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control changes modes, the events in the following table are raised. This allows you to create a custom event handler that performs a routine when the event occurs.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" />
                </para>
              </term>
              <description>
                <para>Occurs when a command button that changes the mode of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the mode changes.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" />
                </para>
              </term>
              <description>
                <para>Occurs when a command button that changes the mode of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the mode changes.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current data-entry mode of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Data-bound controls should override <see cref="M:System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)" /> instead of <see cref="M:System.Web.UI.WebControls.DetailsView.DataBind" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Calls the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method of the base class. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataItem" /> property to access the data item bound to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The data item is often used to access the field values of the current record directly. The type of the <see cref="T:System.Object" /> returned by this property varies depending on the data source. For example, when a <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control is bound to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, a <see cref="T:System.Data.DataRowView" /> object is returned.</para>
          <block subset="none" type="note">
            <para>This property is available only after data binding has occurred. Before data binding occurs, this property returns null. This property is also not applicable when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode and returns null.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the data item bound to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true), use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" /> property to determine the total number of records in the underlying data source. </para>
          <block subset="none" type="note">
            <para>Because the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control displays only one record at a time, this value also corresponds to the total number of pages required to display every record in the data source.</para>
          </block>
          <para>To determine the index of the current record from the underlying data source, use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of items in the underlying data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true), use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" /> property to determine the index of the currently displayed record. You can also use this property to programmatically change the displayed record.</para>
          <block subset="none" type="note">
            <para>When the paging feature is enabled, you can also use this property to determine the page number of the record displayed; however, be aware that this property is zero-based.</para>
          </block>
          <para>To determine the total number of items in the data source, use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemCount" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the index of the item being displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control from the underlying data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property is set, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically creates a <see cref="T:System.Web.UI.WebControls.DataKey" /> object that represents the key field or fields for the current record. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKey" /> property to get this <see cref="T:System.Web.UI.WebControls.DataKey" /> object. This property is commonly used to obtain the keys and their corresponding values for the fields specified in the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property. </para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the <see cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" /> property to determine the value of the first key field listed in the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.DataKey" /> object that represents the primary key of the displayed record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property to specify a comma-separated list of field names that represent the primary key of the data source. When the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property is set, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically creates a <see cref="T:System.Web.UI.WebControls.DataKey" /> object that represents the key field or fields for the current record and stores it in the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKey" /> property. When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property is also set to true, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically ensures that the field or fields specified in the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property are read-only.</para>
          <block subset="none" type="note">
            <para>You must set the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property for the automatic updating, deleting, and inserting features of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to work.</para>
          </block>
          <para>If the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of a row field is set to false, the row is not displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control and the data for the row does not make a round trip to the client. If you want the data for a row that is not visible to make a round trip, add the field name to the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an array that contains the names of the key fields for the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.DetailsViewMode.ReadOnly)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property to specify whether the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control returns to edit, insert, or read-only mode after an edit or insert operation is performed. By default, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control returns to read-only mode; however, you can keep the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in edit or insert mode by setting this property to the appropriate value. The following table lists the different mode values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Mode</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>DetailsViewMode.Edit</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode, which allows the user to update the values of a record.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsViewMode.Insert</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode, which allows the user to add a new record to the data source.</para>
              </description>
            </item>
            <item>
              <term>
                <para>DetailsViewMode.ReadOnly</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in read-only mode, which is the normal display mode.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Get or sets the default data-entry mode of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The deletion does not occur if the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in Insert mode. The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> event is raised immediately before the item is deleted. Set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property to true to cancel the deletion. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes the current record from the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.EditRowStyle" /> property to control the appearance of the data rows when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, EditRowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, EditRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the data rows when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" /> property to control the appearance of the empty data row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The empty data row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, EmptyDataRowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, EmptyDataRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the empty data row displayed when the data source bound to a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The empty data row is displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> property. To specify a custom template for the null row, first place &lt;EmptyDataTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. You can then list the contents of the template between the opening and closing &lt;EmptyDataTemplate&gt; tags. To control the style of the empty data row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" /> property. Alternatively, you can use the built-in UI for the empty data row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> property takes precedence.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the user-defined content for the empty data row rendered when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is bound to a data source that does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The empty data row is displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the data source that is bound to the control does not contain any records. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" /> property to specify the text to display in the empty data row. To control the style of the empty data row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle" /> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataTemplate" /> property takes precedence.</para>
          </block>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.EmptyDataText" /> is stored in view state.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to display in the empty data row rendered when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is bound to a data source that does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnablePagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnablePagingCallbacks { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" /> property to specify whether paging operations are performed using client-side callback functions. When enabled, paging is performed using the callback feature, which prevents the need to post the page back to the server.</para>
          <block subset="none" type="note">
            <para>The client-side paging feature is only supported in Microsoft Internet Explorer 5.5 and later and Netscape 6.0 and later.</para>
          </block>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks" /> is stored in view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether client-side callback functions are used for paging operations in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The data binding does not occur if the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in Insert mode.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Calls the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method after verifying that the data listing control requires data binding and that a valid data source control is specified. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrimaryKey">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean,System.Boolean)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to retrieve the values of each field. The values can them be used for data source operations. You can specify whether the extracted values include read-only fields and key fields by using the <paramref name="includeReadOnlyFields" /> and <paramref name="includePrimaryKey" /> parameters, respectively.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the values of each field displayed and stores them in the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object.</para>
        </summary>
        <param name="fieldValues">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> used to store the field values.</param>
        <param name="includeReadOnlyFields">
          <attribution license="cc4" from="Microsoft" modified="false" />true to include read-only fields; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FieldHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.FieldHeaderStyle" /> property to control the appearance of the field header column in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This is the column that contains the field names of the data values. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, FieldHeaderStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, FieldHeaderStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the header column in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you explicitly declare the row fields for a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, these row fields are stored in the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> property (collection). The <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection also allows you to programmatically manage the collection of explicitly declared rows.</para>
          <block subset="none" type="note">
            <para>Explicitly declared row fields can be used in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields. Automatically generated row fields are not added to the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection.</para>
          </block>
          <para>Different row field types determine the behavior of the rows in the control. The following table shows the different row field types that can be used in the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Row field type </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.BoundField" />
                </para>
              </term>
              <description>
                <para>Displays the value of a field in a data source as text.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.ButtonField" />
                </para>
              </term>
              <description>
                <para>Displays a command button in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This allows you to display a row with a custom button control, such as an Add or a Remove button.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.CheckBoxField" />
                </para>
              </term>
              <description>
                <para>Displays a check box in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This row field type is commonly used to display fields with a Boolean value.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.CommandField" />
                </para>
              </term>
              <description>
                <para>Displays built-in command buttons to perform edit, insert, or delete operations in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.HyperLinkField" />
                </para>
              </term>
              <description>
                <para>Displays the value of a field in a data source as a hyperlink. This row field type allows you to bind a second field to the hyperlink's URL.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.ImageField" />
                </para>
              </term>
              <description>
                <para>Displays an image in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.TemplateField" />
                </para>
              </term>
              <description>
                <para>Displays user-defined content for a row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control according to a specified template. This row field type allows you to create a custom row field.</para>
              </description>
            </item>
          </list>
          <para>To explicitly declare the row fields for a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, first set the <see cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateRows" /> property to false. Next, add opening and closing &lt;Fields&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. Finally, list the row fields that you want to include between the opening and closing &lt;Fields&gt; tags. The row fields are displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in the order that the row fields appear in the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection.</para>
          <para>Although you can programmatically add row fields to the <see cref="P:System.Web.UI.WebControls.DetailsView.Fields" /> collection, it is easier to list the row fields declaratively in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control and then use the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of each row field to show or hide the row field.</para>
          <para>If the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of a row field is set to false, the row is not displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control and the data for the row does not make a round trip to the client. If you want the data for a row that is not visible to make a round trip, add the field name to the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKeyNames" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataControlField" /> objects that represent the explicitly declared row fields in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The footer row is displayed at the bottom of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the footer row.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.FooterRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control creates the footer row in the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will overwrite any changes.</para>
          <para>To control the style of the footer row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the footer row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The footer row is displayed at the bottom of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" /> property to control the appearance of the footer row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, FooterStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, FooterStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the footer row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The footer row is displayed at the bottom of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property is set. You can define your own custom user interface (UI) for the footer row by using the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property. To specify a custom template for the footer row, first place &lt;FooterTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. You can then list the contents of the template between the opening and closing &lt;FooterTemplate&gt; tags. To control the style of the footer row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" /> property. Alternatively, you can simply display text in the footer row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property takes precedence.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the user-defined content for the footer row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The footer row is displayed at the bottom of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> property to specify the text to display in the footer row. To control the style of the footer row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterStyle" /> property. Alternatively, you can define your own custom user interface (UI) for the footer row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.FooterTemplate" /> property takes precedence.</para>
          </block>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.FooterText" /> is stored in view state.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to display in the footer row of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control implements the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and uses the <see cref="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" /> to retrieve data and the <see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" /> method to return the retrieved data to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the result of a callback event that targets a control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The results of the callback.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the callback string created using the specified argument.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The complete callback string to be sent to the client.</para>
        </returns>
        <param name="buttonControl">
          <attribution license="cc4" from="Microsoft" modified="false" />The control that initiated the callback.</param>
        <param name="argument">
          <attribution license="cc4" from="Microsoft" modified="false" />The callback code.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.GridLines.Both)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.GridLines" /> property to specify the gridline style for a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The following table lists the available styles.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Style </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>GridLines.None</para>
              </term>
              <description>
                <para>No gridlines are displayed.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Horizontal</para>
              </term>
              <description>
                <para>Displays the horizontal gridlines only.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Vertical</para>
              </term>
              <description>
                <para>Displays the vertical gridlines only.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Both</para>
              </term>
              <description>
                <para>Displays both the horizontal and vertical gridlines.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the gridline style for a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The header row is displayed at the top of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the header row.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.HeaderRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control creates the header row in the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the header row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the header row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The header row is displayed at the top of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" /> property to control the appearance of the header row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, HeaderStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, HeaderStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the header row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The header row is displayed at the top of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property is set. You can define your own custom user interface (UI) for the header row by using the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property. To specify a custom template for the header row, first place &lt;HeaderTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. You can then list the contents of the template between the opening and closing &lt;HeaderTemplate&gt; tags. To control the style of the header row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" /> property. Alternatively, you can simply display text in the header row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property takes precedence.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the user-defined content for the header row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The header row is displayed at the top of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> or <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property is set. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> property to specify the text to display in the header row. To control the style of the header row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderStyle" /> property. Alternatively, you can define your own custom user interface (UI) for the header row by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> and <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderTemplate" /> property takes precedence.</para>
          </block>
          <para>The value of <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderText" /> is stored in view state.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to display in the header row of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.HorizontalAlign.NotSet)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.HorizontalAlign" /> property to specify the horizontal alignment of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control within the page. The following table lists the different horizontal alignment styles.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>HorizontalAlign value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>HorizontalAlign.NotSet</para>
              </term>
              <description>
                <para>The horizontal alignment of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has not been set.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Left</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is left-aligned on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Center</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is centered on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Right</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is right-aligned on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Justify</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is aligned with both the left and right margins of the page.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the horizontal alignment of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control on the page.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource dataSource);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.InitializePager(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.PagedDataSource)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create the pager row. It creates a <see cref="T:System.Web.UI.WebControls.TableCell" /> object that contains the navigation controls using the properties of the <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> object contained in the <paramref name="pagedDataSource" /> parameter. The cell is then added to the row specified by the <paramref name="row" /> parameter.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the pager row for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <param name="row">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> that contains the pager row.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.DetailsViewRow" />
        <Parameter Name="field" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.InitializeRow(System.Web.UI.WebControls.DetailsViewRow,System.Web.UI.WebControls.DataControlField)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to initialize the specified <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object. The row is initialized for the <see cref="T:System.Web.UI.WebControls.DataControlField" /> object contained in the <paramref name="field" /> parameter.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes the specified <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object.</para>
        </summary>
        <param name="row">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> to initialize.</param>
        <param name="field">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.DataControlField" /> that corresponds to the row.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode, use the <see cref="M:System.Web.UI.WebControls.DetailsView.InsertItem(System.Boolean)" /> method to programmatically insert the current record in the data source. This method is commonly used when you need to insert the current record from outside of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, such as from a different control on the page.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control must be in insert mode when this method is called; otherwise, an <see cref="T:System.Web.HttpException" /> exception is thrown.</para>
          </block>
          <para>To specify whether page validation is performed before the insert operation, use the <paramref name="causesValidation" /> parameter. Calling this method also raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> and <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> events.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Inserts the current record in the data source.</para>
        </summary>
        <param name="causesValidation">
          <attribution license="cc4" from="Microsoft" modified="false" />true to perform page validation when the method is called; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The data rows in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control are displayed using this style when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.InsertRowStyle" /> property to control the appearance of the data rows in insert mode. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, InsertRowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, InsertRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in insert mode.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.IsBindableType(System.Type)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to determine whether the specified data type can be bound to a field in the control. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control supports the following data types:</para>
          <para>All primitive data types, such as <see cref="T:System.Boolean" />, <see cref="T:System.Byte" />, and <see cref="T:System.Int32" /></para>
          <para>
            <see cref="T:System.DateTime" />
          </para>
          <para>
            <see cref="T:System.Decimal" />
          </para>
          <para>
            <see cref="T:System.Guid" />
          </para>
          <para>
            <see cref="T:System.String" />
          </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified data type can be bound to a field in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified data type can be bound to a field in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control; otherwise, false.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Type" /> that represents the data type to check.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> event is raised when a button within the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" /> object is passed to the event handler, which allows you to determine the command name and command argument of the button clicked. To determine the index of the current record, use the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event is raised each time a record is created in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This can occur when the control is first rendered, or when the user navigates to another record. You can use this event to provide an event handler that performs a custom routine, such as adding custom content to a row, whenever this event occurs.</para>
          <para>You can access the header, footer, and pager rows in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control by using the <see cref="P:System.Web.UI.WebControls.DetailsView.HeaderRow" />, <see cref="P:System.Web.UI.WebControls.DetailsView.FooterRow" />, <see cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" />, or <see cref="P:System.Web.UI.WebControls.DetailsView.BottomPagerRow" /> properties, respectively. To access one of the data rows, use the <see cref="P:System.Web.UI.WebControls.DetailsView.Rows" /> collection.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a record is created in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" /> event is raised when a Delete button within the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the delete operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" /> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <see cref="P:System.Web.UI.WebControls.DetailsViewDeletedEventArgs.ExceptionHandled" /> property.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a Delete button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the delete operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> event is raised when a Delete button within the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the delete operation. This allows you to provide an event handler that performs a custom routine, such as canceling the delete operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" /> object is passed to the event handler, which allows you to determine the index of the record being deleted and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property to true. You can also manipulate the <see cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Keys" /> and <see cref="P:System.Web.UI.WebControls.DetailsViewDeleteEventArgs.Values" /> collections, if necessary, before the values are passed to the data source.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a Delete button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the delete operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> event is raised when an Insert button within the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the insert operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the insert operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" /> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <see cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.ExceptionHandled" /> property. To keep the control in insert mode after an insert operation, set the <see cref="P:System.Web.UI.WebControls.DetailsViewInsertedEventArgs.KeepInInsertMode" /> property to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when an Insert button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the insert operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> event is raised when an Insert button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the insert operation. This allows you to provide an event handler that performs a custom routine, such as canceling the insert operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" /> object is passed to the event handler, which allows you to indicate that the insert operation should be canceled. To cancel the insert operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property to true. You can also manipulate the <see cref="P:System.Web.UI.WebControls.DetailsViewInsertEventArgs.Values" /> collection, if necessary, before the values are passed to the data source.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when an Insert button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the insert operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event is raised when an Update button within the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the update operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" /> property. To keep the control in edit mode after an update operation, set the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" /> property to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when an Update button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but after the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> event is raised when an Update button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the update operation. This allows you to provide an event handler that performs a custom routine, such as canceling the update operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" /> object is passed to the event handler, which allows you to determine the index of the record being updated and to indicate that the update operation should be canceled. To cancel the update operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property to true. You can also manipulate the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys" />, <see cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues" />, and <see cref="P:System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues" /> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when an Update button within a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is clicked, but before the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object ob);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ob" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ob">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.LoadControlState(System.Object)" /> method is used to load the state of the properties in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <format type="text/html"><a href="0218d965-5d30-445b-b6a6-8870e70e63ce">ASP.NET State Management Overview</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.LoadViewState(System.Object)" /> method is used to load the previously saved view state of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <param name="savedState">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Object" /> that represents the state of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" /> event is raised when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control attempts to change between edit, insert, and read-only mode, but after the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property is updated. This allows you to provide an event handler that performs a custom routine, such as synchronizing the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control with another control, whenever this event occurs.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control attempts to change between edit, insert, and read-only mode, but after the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property is updated.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> event is raised when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control attempts to change between edit, insert, and read-only mode, but before the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property is updated. This allows you to provide an event handler that performs a custom routine, such as canceling the mode change, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" /> object is passed to the event handler, which allows you to determine the new mode, to determine whether the mode change was a result of the user canceling an edit operation, or to cancel the mode change. To determine the new mode, use the <see cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.NewMode" /> property. To determine whether the mode change was a result of the user canceling an edit operation, use the <see cref="P:System.Web.UI.WebControls.DetailsViewModeEventArgs.CancelingEdit" /> property. You can cancel the mode change by setting the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control attempts to change between edit, insert, and read-only mode, but before the <see cref="P:System.Web.UI.WebControls.DetailsView.CurrentMode" /> property is updated.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnBubbleEvent(System.Object,System.EventArgs)" /> method implements the <see cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" /> method to pass events from child controls to the page hierarchy.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the event for the Web server control is passed up the page's user interface (UI) server control hierarchy.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the event has been canceled; otherwise, false.</para>
        </returns>
        <param name="source">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event.</para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.Control.Init" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnInit(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemCreated(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleted(System.Web.UI.WebControls.DetailsViewDeletedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleted" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewDeletedEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemDeleting(System.Web.UI.WebControls.DetailsViewDeleteEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemDeleting" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewDeleteEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserted(System.Web.UI.WebControls.DetailsViewInsertedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserted" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemInserting(System.Web.UI.WebControls.DetailsViewInsertEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemInserting" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewInsertEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdated(System.Web.UI.WebControls.DetailsViewUpdatedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnItemUpdating(System.Web.UI.WebControls.DetailsViewUpdateEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewUpdateEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanged" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewModeEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnModeChanging(System.Web.UI.WebControls.DetailsViewModeEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ModeChanging" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewModeEventArgs" /> that contains the event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DetailsViewPageEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to raise the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPageIndexChanging(System.Web.UI.WebControls.DetailsViewPageEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)" /> method is used to control when data binding occurs within the life cycle of the page. It does this by setting the internal initialized state of the data-bound control. Because the control's initialized state is set during the <see cref="E:System.Web.UI.Page.PreLoad" /> phase of the page's life cycle, the <see cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged" /> event handler is called any time a data property of the control is changed after that phase, to signal that the control must re-bind to its data before rendering. </para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPagePreLoad(System.Object,System.EventArgs)" /> method is overridden by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class to set the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding" /> property to true in cases where the HTTP request is a postback and view state is enabled but the data-bound control has not yet been bound. This scenario is common with controls such as <see cref="T:System.Web.UI.WebControls.Wizard" /> and <see cref="T:System.Web.UI.WebControls.MultiView" />, where the visibility of the control is changed at run time.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the initialized state of the data-bound control before the control is loaded.</para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.Page" /> that raised the event.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method notifies the server control to perform any necessary prerendering steps prior to saving view state and rendering content .It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.DetailsView" /> class.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.OnPreRender(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property is null, 0 is returned.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of records in the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true, System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (when the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property is set to true), use the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property to determine the index of the currently displayed record. You can also use this property to programmatically change the displayed record.</para>
          <block subset="none" type="note">
            <para>When the paging feature is enabled, you can also use this property to determine the page number of the record displayed; however, be aware that this property is zero-based.</para>
          </block>
          <para>To determine the total number of items in the data source, use the <see cref="P:System.Web.UI.WebControls.DetailsView.PageCount" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the index of the displayed record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control raises the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanged" /> event when a pager button (a button with its CommandName property set to "Page") within the control is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This allows you to provide an event handler that performs a custom routine whenever this event occurs.</para>
          <block subset="none" type="note">
            <para>This event is not raised when you programmatically set the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property.</para>
          </block>
          <para>Pager buttons are usually located in the pager row of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This event is often used to synchronize a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control with a <see cref="T:System.Web.UI.WebControls.GridView" /> control or to set the behavior of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control after a paging operation.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when the value of the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property changes after a paging operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control raises the <see cref="E:System.Web.UI.WebControls.DetailsView.PageIndexChanging" /> event when a pager button (a button with its CommandName property set to "Page") within the control is clicked, but before the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control handles the paging operation. This allows you to provide an event handler that performs a custom routine, such as canceling the paging operation, whenever this event occurs.</para>
          <block subset="none" type="note">
            <para>This event is not raised when you programmatically set the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property.</para>
          </block>
          <para>Pager buttons are usually located in the pager row of a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" /> object is passed to the event handler, which allows you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To determine the index of the page selected by the user, use the <see cref="P:System.Web.UI.WebControls.DetailsViewPageEventArgs.NewPageIndex" /> property. To cancel the paging operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.DetailsViewPageEventArgs" /> object to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when the value of the <see cref="P:System.Web.UI.WebControls.DetailsView.PageIndex" /> property changes before a paging operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerSettings" /> property to control the settings of the pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The pager row is displayed when the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true) and contains the controls that allow the user to navigate to the different records in the control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object (for example, PagerSetting-Mode). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, PagerSetting.Mode). Common settings usually include the pager row's display mode and custom text or images for the navigation controls.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object that allows you to set the properties of the pager buttons in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" /> property to control the appearance of the pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The pager row is displayed when the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, PagerStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, PagerStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DetailsView), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A pager row is displayed in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerTemplate" /> property. To specify a custom template for the pager row, first place &lt;PagerTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. You can then list the contents of the template between the opening and closing &lt;PagerTemplate&gt; tags. To control the appearance of the pager row, use the <see cref="P:System.Web.UI.WebControls.DetailsView.PagerStyle" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the custom content for the pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.PerformDataBinding(System.Collections.IEnumerable)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to bind the specified data source to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Binds the specified data source to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <param name="data">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Collections.IEnumerable" /> that represents the data source.</param>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to set up the control hierarchy in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control before the control is rendered.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets up the control hierarchy of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgs">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent(System.String)" /> method is a helper method used by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to create the arguments for the callback handler in the <see cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the arguments for the callback handler in the <see cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" /> method.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The page calls the <see cref="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" /> method when a postback event occurs that raises the appropriate events for a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> object for the events that are raised.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the appropriate events for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control when it posts back to the server.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />The event argument from which to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> for the event or events that are raised.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.Render(System.Web.UI.HtmlTextWriter)" /> method is used to render the server control content to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Displays the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control on the client using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</param>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.DetailsView.Rows" /> property (collection) is used to store the data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control automatically populates the <see cref="P:System.Web.UI.WebControls.DetailsView.Rows" /> collection by creating a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object for each record in the data source and then adding the object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.</para>
          <block subset="none" type="note">
            <para>Only data rows are stored in the <see cref="P:System.Web.UI.WebControls.DetailsView.Rows" /> collection. The <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> objects that represent the header, footer, and pager rows are not included in the collection.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> objects that represent the data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" /> property to control the appearance of the data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. When the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> property is also set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.DetailsView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.DetailsView.AlternatingRowStyle" /> settings. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, RowStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, RowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that allows you to set the appearance of the data rows in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to save the state of the properties in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.DetailsView.SaveViewState" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to save the state of the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Object" /> that contains the saved state of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsView.SelectedValue" /> property to determine the data key value for the current record. To retrieve the actual <see cref="T:System.Web.UI.WebControls.DataKey" /> object that represents the data key for the record, use the <see cref="P:System.Web.UI.WebControls.DetailsView.DataKey" /> property.</para>
          <para>This property is the default property that a <see cref="T:System.Web.UI.WebControls.ControlParameter" /> object binds to at run time. For more information, see <see cref="T:System.Web.UI.ControlValuePropertyAttribute" />, <see cref="T:System.Web.UI.WebControls.ControlParameter" />, and <format type="text/html"><a href="88622d04-2989-484e-93fe-594cd98dcf5f">Using Parameters with Data Source Controls</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the data key value of the current record in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control implements the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and uses the <see cref="M:System.Web.UI.WebControls.DetailsView.RaisePostBackEvent(System.String)" /> to retrieve data and the <see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" /> method to return the retrieved data to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>See the method <see cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The results of the callback.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgs">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the callback event using the specified arguments.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> instance is cast to the <see cref="T:System.Web.UI.IDataItemContainer" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="P:System.Web.UI.WebControls.DetailsView.DataItemIndex" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> instance is cast to the <see cref="T:System.Web.UI.IDataItemContainer" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> instance is cast to the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that represents an optional event argument to pass to the event handler. </param>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl control, string argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is a helper method that is called by the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to generate its callback script. If the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control does not render client script, or if the <paramref name="argument" /> parameter is null or an empty string (""), this method returns null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the callback script for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The callback script for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </returns>
        <param name="argument">
          <attribution license="cc4" from="Microsoft" modified="false" />The argument for the callback event.</param>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Web.UI.WebControls.DetailsView" /> instance is cast to the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.PostBackOptions" /> with the information required for <see cref="Overload:System.Web.UI.Page.GetPostBackEventReference" /> to construct a valid script that, when executed on the client, initiates a client postback. </para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.DetailsView.TagKey" /> property allows the output stream to write the appropriate HTML markup for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DetailsViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When paging is enabled (by setting the <see cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" /> property to true), an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control. The pager row contains controls that allow the user to navigate to other records, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the <see cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the top pager row in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control creates the bottom pager row in the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.DetailsView.TopPagerRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.DetailsViewRow" /> object that represents the top pager row in a <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the control's view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Marks the starting point to begin tracking and saving view-state changes to the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control is in edit mode, use the <see cref="M:System.Web.UI.WebControls.DetailsView.UpdateItem(System.Boolean)" /> method to programmatically update the current record in the data source. This method is commonly used when you need to update the current record from outside of the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control, such as from a different control on the page.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control must be in edit mode when this method is called; otherwise, an <see cref="T:System.Web.HttpException" /> exception is thrown.</para>
          </block>
          <para>To specify whether page validation is performed before the update operation, use the <paramref name="causesValidation" /> parameter. Calling this method also raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> and <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" /> events.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Updates the current record in the data source.</para>
        </summary>
        <param name="causesValidation">
          <attribution license="cc4" from="Microsoft" modified="false" />true to perform page validation when the method is called; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>