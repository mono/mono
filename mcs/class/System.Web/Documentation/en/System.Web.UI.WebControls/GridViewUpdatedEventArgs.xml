<?xml version="1.0" encoding="utf-8"?>
<Type Name="GridViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.GridViewUpdatedEventArgs">
  <TypeSignature Language="C#" Value="public class GridViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control raises the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event when an Update button in the control is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the record. (An Update button is a button control whose CommandName property is set to "Update".) You can perform a custom routine whenever this event occurs, such as checking the results of an update operation.</para>
      <para>A <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> object is passed to the event handler, which enables you to determine the number of records that were affected and any exceptions that might have occurred. To determine the number of records that were affected by the update operation, use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" /> property. To determine whether any exceptions occurred, use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" /> property. You can also indicate whether the exception was handled in the event handler by setting the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" /> property. </para>
      <para>To access the key field values for the updated record, use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" /> property. You can access the original non-key field values by using the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" /> property. You can access the updated non-key field values by using the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" /> properties.</para>
      <para>By default, the <see cref="T:System.Web.UI.WebControls.GridView" /> control returns to read-only mode after an update operation. When you handle an exception that occurred during the update operation, you can keep the <see cref="T:System.Web.UI.WebControls.GridView" /> control in edit mode by setting the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" /> property to true.</para>
      <para>For more information about how to handle events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
      <para>For a list of initial property values for an instance of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> class, see the <see cref="M:System.Web.UI.WebControls.GridViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" /> constructor.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides data for the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table shows initial property values for an instance of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> class.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Property</para>
                </term>
                <description>
                  <para>Initial Value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" />
                </para>
              </term>
              <description>
                <para>The value of the <paramref name="affectedRows" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" />
                </para>
              </term>
              <description>
                <para>The <see cref="T:System.Exception" /> object that is contained in the <paramref name="e" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This constructor is primarily used by control developers when they raise events.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> class.</para>
        </summary>
        <param name="affectedRows">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of rows that were affected by the update operation.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />The exception that was raised when the update operation was performed. If no exception was raised, use null for this parameter.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because only one record is typically updated, this property usually contains a value of 0 or 1.</para>
          <para>An error can occur during the update operation that does not raise an exception. You can use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.AffectedRows" /> property to make sure that a record was updated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of rows that were affected by the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If an exception was raised and you decide to handle the exception in the event handler, set the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" /> property to true. Otherwise, the exception is thrown again by the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the exception (if any) that was raised during the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When an exception is raised during the update operation, use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" /> property to indicate whether you handled the exception in the event handler. When this property is set to true, the exception is considered handled and is not thrown again by the <see cref="T:System.Web.UI.WebControls.GridView" /> control. If this property is set to false, the exception is thrown again. To determine which exception was raised, use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Exception" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether an exception that was raised during the update operation was handled in the event handler.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, the <see cref="T:System.Web.UI.WebControls.GridView" /> control returns to read-only mode after an update operation. To keep the <see cref="T:System.Web.UI.WebControls.GridView" /> control in edit mode, set the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.KeepInEditMode" /> property to true.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.GridView" /> control should remain in edit mode after an update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" /> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.Keys" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the key field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" /> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.NewValues" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the new field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" /> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.OldValues" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record with their original values.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the original field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>