<?xml version="1.0" encoding="utf-8"?>
<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>In this topic:</para>
      <list type="bullet">
        <item>
          <para>
            <format type="text/html">
              <a href="#introduction">Introduction</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#menu_items">Menu Items</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#static_data">Static Data</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#binding_to_data">Binding to Data</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#customizing_the_user_interface">Customizing the User Interface</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#events">Events</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#accessibility">Accessibility</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#declarative_syntax">Declarative Syntax</a>
            </format>
          </para>
        </item>
      </list>
      <format type="text/html">
        <a href="#introduction" />
      </format>
      <format type="text/html">
        <h2>Introduction</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control is used to display a menu in an ASP.NET Web page and is often used in combination with a <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> control for navigating a Web site. The <see cref="T:System.Web.UI.WebControls.Menu" /> control supports the following features:</para>
      <list type="bullet">
        <item>
          <para>Data binding that allows the control's menu items to be bound to hierarchal data sources.</para>
        </item>
        <item>
          <para>Site navigation through integration with the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> control.</para>
        </item>
        <item>
          <para>Programmatic access to the <see cref="T:System.Web.UI.WebControls.Menu" /> object model to dynamically create menus, populate menu items, set properties, and so on.</para>
        </item>
        <item>
          <para>Customizable appearance through themes, user-defined images, styles, and user-defined templates.</para>
        </item>
      </list>
      <para>When the user clicks a menu item, the <see cref="T:System.Web.UI.WebControls.Menu" /> control can either navigate to a linked Web page or simply post back to the server. If the <see cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" /> property of a menu item is set, the <see cref="T:System.Web.UI.WebControls.Menu" /> control navigates to the linked page; otherwise, it posts the page back to the server for processing. By default, a linked page is displayed in the same window or frame as the <see cref="T:System.Web.UI.WebControls.Menu" /> control. To display the linked content in a different window or frame, use the <see cref="P:System.Web.UI.WebControls.Menu.Target" /> property of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
      <block subset="none" type="note">
        <para>The <see cref="P:System.Web.UI.WebControls.Menu.Target" /> property affects every menu item in the control. To specify a window or frame for an individual menu item, set the <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> property of the <see cref="T:System.Web.UI.WebControls.MenuItem" /> object directly.</para>
      </block>
      <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control displays two types of menus: a static menu and a dynamic menu. The static menu is always displayed in a <see cref="T:System.Web.UI.WebControls.Menu" /> control. By default, the menu items at the root level (level 0) are displayed in the static menu. You can display additional menu levels (static submenus) within the static menu by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property. Menu items (if any) with a higher level than the value specified by the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property are displayed in a dynamic menu. A dynamic menu appears only when the user positions the mouse pointer over the parent menu item that contains a dynamic submenu. Dynamic menus automatically disappear after a certain duration. Use the <see cref="P:System.Web.UI.WebControls.Menu.DisappearAfter" /> property to specify the duration.</para>
      <block subset="none" type="note">
        <para>A dynamic menu also disappears when the user clicks outside of the menu.</para>
      </block>
      <para>You can also limit the number of levels displayed in a dynamic menu by setting the <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> property. Menu levels higher than the specified value are discarded.</para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control is not designed to be used inside an <see cref="T:System.Web.UI.UpdatePanel" /> control. You can add the <see cref="T:System.Web.UI.WebControls.Menu" /> control only to a page outside an <see cref="T:System.Web.UI.UpdatePanel" /> control. <see cref="T:System.Web.UI.UpdatePanel" /> controls are used to update selected regions of a page instead of updating the whole page with a postback. For more information, see <format type="text/html"><a href="29a2265d-9674-4c19-b70e-e5560ee9689a">UpdatePanel Control Overview</a></format> and <format type="text/html"><a href="5c12736d-d9e9-464a-9388-3fe0f9f49e49">Partial-Page Rendering Overview</a></format>.</para>
      </block>
      <format type="text/html">
        <a href="#menu_items" />
      </format>
      <format type="text/html">
        <h2>Menu Items</h2>
      </format>
      <para>A <see cref="T:System.Web.UI.WebControls.Menu" /> control is made up of a tree of menu items represented by <see cref="T:System.Web.UI.WebControls.MenuItem" /> objects. Menu items at the top level (level 0) are called root menu items. A menu item that has a parent menu item is called a child menu item. All root menu items are stored in the <see cref="P:System.Web.UI.WebControls.Menu.Items" /> collection. Child menu items are stored in a parent menu item's <see cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" /> collection. </para>
      <para>Each menu item has a <see cref="P:System.Web.UI.WebControls.MenuItem.Text" /> and a <see cref="P:System.Web.UI.WebControls.MenuItem.Value" /> property. The value of the <see cref="P:System.Web.UI.WebControls.MenuItem.Text" /> property is displayed in the <see cref="T:System.Web.UI.WebControls.Menu" /> control, while the <see cref="P:System.Web.UI.WebControls.MenuItem.Value" /> property is used to store any additional data about the menu item, such as data passed to the postback event associated with the menu item. When clicked, a menu item can navigate to another Web page indicated by the <see cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" /> property. </para>
      <block subset="none" type="note">
        <para>If the <see cref="P:System.Web.UI.WebControls.MenuItem.NavigateUrl" /> property is not set for a menu item, the <see cref="T:System.Web.UI.WebControls.Menu" /> control simply submits the page to the server for processing when the menu item is clicked. </para>
      </block>
      <para>You can also optionally display an image in a menu item by setting the <see cref="P:System.Web.UI.WebControls.MenuItem.ImageUrl" /> property.</para>
      <para>For more information on menu items, see <see cref="T:System.Web.UI.WebControls.MenuItem" />.</para>
      <format type="text/html">
        <a href="#static_data" />
      </format>
      <format type="text/html">
        <h2>Static Data</h2>
      </format>
      <para>The simplest data model of the <see cref="T:System.Web.UI.WebControls.Menu" /> control is static menu items. To display static menu items using declarative syntax, first nest opening and closing &lt;Items&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.Menu" /> control. Next, create the menu structure by nesting &lt;asp:MenuItem&gt; elements between the opening and closing &lt;Items&gt; tags. Each &lt;asp:MenuItem&gt; element represents a menu item in the control and maps to a <see cref="T:System.Web.UI.WebControls.MenuItem" /> object. You can set the properties of each menu item by setting the attributes of its &lt;asp:MenuItem&gt; element. To create submenu items, nest additional &lt;asp:MenuItem&gt; elements between the opening and closing &lt;asp:MenuItem&gt; tags of the parent menu item.</para>
      <format type="text/html">
        <a href="#binding_to_data" />
      </format>
      <format type="text/html">
        <h2>Binding to Data</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control can use any hierarchal data source control, such as an <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control or a <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> control. To bind to a hierarchal data source control, set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property of the <see cref="T:System.Web.UI.WebControls.Menu" /> control to the <see cref="P:System.Web.UI.Control.ID" /> value of the data source control. The <see cref="T:System.Web.UI.WebControls.Menu" /> control automatically binds to the specified data source control. This is the preferred method to bind to data.</para>
      <para>When binding to a data source where each data item contains multiple properties (such as an XML element with several attributes), a menu item displays the value returned by the ToString method of the data item by default. In the case of an XML element, the menu item displays the element name, which shows the underlying structure of the menu tree but is not very useful otherwise. You can bind a menu item to a specific data item property by using the <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection to specify menu item bindings. The <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection contains <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects that define the relationship between a data item and the menu item it is binding to. You can specify the criteria for binding and the data item property to display in the node. For more information on menu item bindings, see <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />.</para>
      <para>You cannot create empty nodes in a <see cref="T:System.Web.UI.WebControls.Menu" /> control by setting the <see cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" /> or <see cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" /> properties to the empty string (""). Setting these properties to the empty string has the same effect as not setting the properties. In that case, the <see cref="T:System.Web.UI.WebControls.Menu" /> control creates a default binding using the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property. For more information, see <format type="text/html"><a href="ab7b2846-975b-4057-a948-45527497c742">Binding to Databases</a></format>.</para>
      <format type="text/html">
        <a href="#customizing_the_user_interface" />
      </format>
      <format type="text/html">
        <h2>Customizing the User Interface</h2>
      </format>
      <para>There are many ways to customize the appearance of the <see cref="T:System.Web.UI.WebControls.Menu" /> control. First, you can specify whether the <see cref="T:System.Web.UI.WebControls.Menu" /> control is rendered horizontally or vertically by setting the <see cref="P:System.Web.UI.WebControls.Menu.Orientation" /> property. You can also specify a different style (such as font size and color) for each of the menu item types. </para>
      <para>If you use cascading style sheets (CSS) to customize the appearance of the control, use either inline styles or a separate CSS file, but not both. Using both inline styles and a separate CSS file could cause unexpected results. For more information on using style sheets with controls, see <format type="text/html"><a href="782c2db6-fc9b-4243-8df9-a8ffe2f4cc42">ASP.NET Web Server Controls and CSS Styles</a></format>.</para>
      <para>The following table lists the available menu item styles.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Menu item style property</para>
            </term>
            <description>
              <para>Description</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for a dynamic menu item when the mouse pointer is positioned over it.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for an individual dynamic menu item.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for a dynamic menu.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the currently selected dynamic menu item.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for a static menu item when the mouse pointer is positioned over it.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for an individual static menu item.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for a static menu.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the currently selected static menu item.</para>
          </description>
        </item>
      </list>
      <para>Instead of setting the individual style properties, you can specify styles that are applied to menu items based on their level by using the following style collections.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Level style collections</para>
            </term>
            <description>
              <para>Description</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
            </para>
          </term>
          <description>
            <para>A collection of <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> objects that control the style of the menu items on a level basis.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
            </para>
          </term>
          <description>
            <para>A collection of <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> objects that control the style of selected menu items on a level basis.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
            </para>
          </term>
          <description>
            <para>A collection of <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> objects that control the style of the submenu items on a level basis.</para>
          </description>
        </item>
      </list>
      <para>The first style in the collection corresponds to the style of the menu items at the first depth level in the menu tree. The second style in the collection corresponds to the style of the menu items at the second depth level in the menu tree, and so on. This is most often used to generate table of contents-style navigation menus where menu items at a certain depth should have the same appearance, regardless of whether they have submenus.</para>
      <block subset="none" type="note">
        <para>If you use any of the level style collections listed in the previous table to define the style for the <see cref="T:System.Web.UI.WebControls.Menu" /> control, these style settings override the individual menu item style properties.</para>
      </block>
      <para>Another way to alter the appearance of the control is to customize the images displayed in the <see cref="T:System.Web.UI.WebControls.Menu" /> control. You can specify your own custom image for the different parts of the control by setting the properties shown in the following table.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Image property</para>
            </term>
            <description>
              <para>Description</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed at the bottom of a dynamic menu item to separate it from other menu items.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed in a dynamic menu item to indicate that it has a submenu.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed at the top of a dynamic menu item to separate it from other menu items.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
            </para>
          </term>
          <description>
            <para>The image displayed at the bottom of a menu item to indicate that the user can scroll down to view additional menu items.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
            </para>
          </term>
          <description>
            <para>The image displayed at the top of a menu item to indicate that the user can scroll up to view additional menu items.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed at the bottom of a static menu item to separate it from other menu items.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed in a static menu item to indicate that it has a submenu.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
            </para>
          </term>
          <description>
            <para>An optional image displayed at the top of a static menu item to separate it from other menu items.</para>
          </description>
        </item>
      </list>
      <para>For complete control of the user interface (UI), you can define your own custom templates for the <see cref="T:System.Web.UI.WebControls.Menu" /> control using the following template properties.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Template property</para>
            </term>
            <description>
              <para>Description</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
            </para>
          </term>
          <description>
            <para>The template that contains the custom content to render for a dynamic menu item.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
            </para>
          </term>
          <description>
            <para>The template that contains the custom content to render for a static menu item.</para>
          </description>
        </item>
      </list>
      <para>You can control the vertical and horizontal position of a dynamic menu relative to its parent menu item by setting the <see cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" /> and <see cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" /> properties, respectively. To control the indentation of the static submenu items within a static menu, use the <see cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" /> property.</para>
      <format type="text/html">
        <a href="#events" />
      </format>
      <format type="text/html">
        <h2>Events</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control provides several events that you can program against. This allows you to run a custom routine whenever an event occurs. The following table lists the supported events.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Event</para>
            </term>
            <description>
              <para>Description</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
            </para>
          </term>
          <description>
            <para>Occurs when a menu item is clicked. This event is commonly used to synchronize a <see cref="T:System.Web.UI.WebControls.Menu" /> control with another control on the page.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
            </para>
          </term>
          <description>
            <para>Occurs when a menu item is bound to data. This event is commonly used to modify a menu item before it is rendered in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </description>
        </item>
      </list>
      <format type="text/html">
        <a href="#accessibility" />
      </format>
      <format type="text/html">
        <h2>Accessibility</h2>
      </format>
      <para>For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <format type="text/html"><a href="7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Accessibility in Visual Studio 2010 and ASP.NET 4</a></format> and <format type="text/html"><a href="847a37e3-ce20-41da-b0d3-7dfb0fdae9a0">ASP.NET Controls and Accessibility</a></format>.</para>
      <format type="text/html">
        <a href="#declarative_syntax" />
      </format>
      <format type="text/html">
        <h2>Declarative Syntax</h2>
      </format>
      <code>&lt;asp:Menu
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CssClass="string"
    DataSource="string"
    DataSourceID="string"
    DisappearAfter="integer"
    DynamicBottomSeparatorImageUrl="uri"
    DynamicEnableDefaultPopOutImage="<codeFeaturedElement>True</codeFeaturedElement>|False"
    DynamicHorizontalOffset="integer"
    DynamicItemFormatString="string"
    DynamicPopOutImageTextFormatString="string"
    DynamicPopOutImageUrl="uri"
    DynamicTopSeparatorImageUrl="uri"
    DynamicVerticalOffset="integer"
    Enabled="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnableTheming="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnableViewState="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Names="string"
    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    ItemWrap="True|<codeFeaturedElement>False</codeFeaturedElement>"
    MaximumDynamicDisplayLevels="integer"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnMenuItemClick="MenuItemClick event handler"
    OnMenuItemDataBound="MenuItemDataBound event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    Orientation="Horizontal|<codeFeaturedElement>Vertical</codeFeaturedElement>"
    PathSeparator="string"
    runat="server"
    ScrollDownImageUrl="uri"
    ScrollDownText="string"
    ScrollUpImageUrl="uri"
    ScrollUpText="string"
    SkinID="string"
    SkipLinkText="string"
    StaticBottomSeparatorImageUrl="uri"
    StaticDisplayLevels="integer"
    StaticEnableDefaultPopOutImage="<codeFeaturedElement>True</codeFeaturedElement>|False"
    StaticItemFormatString="string"
    StaticPopOutImageTextFormatString="string"
    StaticPopOutImageUrl="uri"
    StaticSubMenuIndent="size"
    StaticTopSeparatorImageUrl="uri"
    Style="string"
    TabIndex="integer"
    Target="string"
    ToolTip="string"
    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Width="size"
&gt;
        &lt;DataBindings&gt;
                &lt;asp:MenuItemBinding
                    DataMember="string"
                    Depth="integer"
                    Enabled="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    EnabledField="string"
                    FormatString="string"
                    ImageUrl="uri"
                    ImageUrlField="string"
                    NavigateUrl="uri"
                    NavigateUrlField="string"
                    PopOutImageUrl="uri"
                    PopOutImageUrlField="string"
                    Selectable="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SelectableField="string"
                    SeparatorImageUrl="uri"
                    SeparatorImageUrlField="string"
                    Target="string"
                    TargetField="string"
                    Text="string"
                    TextField="string"
                    ToolTip="string"
                    ToolTipField="string"
                    Value="string"
                    ValueField="string"
                /&gt;
        &lt;/DataBindings&gt;
        &lt;DynamicHoverStyle /&gt;
        &lt;DynamicItemTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/DynamicItemTemplate&gt;
        &lt;DynamicMenuItemStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ItemSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
        &lt;DynamicMenuStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
        &lt;DynamicSelectedStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ItemSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
        &lt;Items /&gt;
        &lt;LevelMenuItemStyles&gt;
                &lt;asp:MenuItemStyle
                    BackColor="color name|#dddddd"
                    BorderColor="color name|#dddddd"
                    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|
                        Double|Groove|Ridge|Inset|Outset"
                    BorderWidth="size"
                    CssClass="string"
                    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Names="string"
                    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Size="string|Smaller|Larger|XX-Small|
                        X-Small|Small|Medium|Large|X-Large|XX-Large"
                    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ForeColor="color name|#dddddd"
                    Height="size"
                    HorizontalPadding="size"
                    ItemSpacing="size"
                    OnDisposed="Disposed event handler"
                    VerticalPadding="size"
                    Width="size"
                /&gt;
        &lt;/LevelMenuItemStyles&gt;
        &lt;LevelSelectedStyles&gt;
                &lt;asp:MenuItemStyle
                    BackColor="color name|#dddddd"
                    BorderColor="color name|#dddddd"
                    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|
                        Double|Groove|Ridge|Inset|Outset"
                    BorderWidth="size"
                    CssClass="string"
                    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Names="string"
                    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Size="string|Smaller|Larger|XX-Small|
                        X-Small|Small|Medium|Large|X-Large|XX-Large"
                    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ForeColor="color name|#dddddd"
                    Height="size"
                    HorizontalPadding="size"
                    ItemSpacing="size"
                    OnDisposed="Disposed event handler"
                    VerticalPadding="size"
                    Width="size"
                /&gt;
        &lt;/LevelSelectedStyles&gt;
        &lt;LevelSubMenuStyles&gt;
                &lt;asp:SubMenuStyle
                    BackColor="color name|#dddddd"
                    BorderColor="color name|#dddddd"
                    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|
                        Double|Groove|Ridge|Inset|Outset"
                    BorderWidth="size"
                    CssClass="string"
                    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Names="string"
                    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Size="string|Smaller|Larger|XX-Small|
                        X-Small|Small|Medium|Large|X-Large|XX-Large"
                    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ForeColor="color name|#dddddd"
                    Height="size"
                    HorizontalPadding="size"
                    OnDisposed="Disposed event handler"
                    VerticalPadding="size"
                    Width="size"
                /&gt;
        &lt;/LevelSubMenuStyles&gt;
        &lt;StaticHoverStyle /&gt;
        &lt;StaticItemTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/StaticItemTemplate&gt;
        &lt;StaticMenuItemStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|
                X-Small|Small|Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ItemSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
        &lt;StaticMenuStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
        &lt;StaticSelectedStyle
            BackColor="color name|#dddddd"
            BorderColor="color name|#dddddd"
            BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|
                Groove|Ridge|Inset|Outset"
            BorderWidth="size"
            CssClass="string"
            Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Names="string"
            Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|
                Medium|Large|X-Large|XX-Large"
            Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
            Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
            ForeColor="color name|#dddddd"
            Height="size"
            HorizontalPadding="size"
            ItemSpacing="size"
            OnDisposed="Disposed event handler"
            VerticalPadding="size"
            Width="size"
        /&gt;
&lt;/asp:Menu&gt;</code>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Displays a menu in an ASP.NET Web page.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to create and initialize a new instance of the <see cref="T:System.Web.UI.WebControls.Menu" /> class. To dynamically add a <see cref="T:System.Web.UI.WebControls.Menu" /> control to a page, create a new <see cref="T:System.Web.UI.WebControls.Menu" /> object, set its properties, and then add it to the <see cref="P:System.Web.UI.Control.Controls" /> collection of a container control, such as <see cref="T:System.Web.UI.WebControls.PlaceHolder" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control overrides the <see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method to reset the <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> property to <see cref="F:System.String.Empty" />. This member is primarily used by control developers when deriving a custom control from the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds HTML attributes and styles that need to be rendered to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The output stream that renders HTML contents to the client.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.Menu.Controls" /> property allows you programmatic access to the instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the <see cref="T:System.Web.UI.WebControls.Menu" /> control. You can add controls to the collection, remove controls from the collection, or iterate through the server controls in the collection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.ControlCollection" /> that contains the child controls of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is primarily used by control developers when deriving a custom control from the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>This method is called by the ASP.NET infrastructure to notify any controls that use composition-based implementation, including controls that derive from <see cref="T:System.Web.UI.WebControls.CompositeDataBoundControl" /> and <see cref="T:System.Web.UI.WebControls.CompositeControl" />. to create any child controls they contain in preparation for postback or rendering. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the child controls of a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is used primarily by control developers when deriving a custom control from the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>Use the <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> method to bind data from a data source to the <see cref="T:System.Web.UI.WebControls.Menu" /> control. This method resolves all data-binding expressions in the active template of the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Binds the data source to the <see cref="T:System.Web.UI.WebControls.Menu" /> control. This method cannot be inherited.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection contains <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects that define the relationship between a data item and the menu item it is binding to. When binding to a data source where each data item contains multiple properties (such as an XML element with several attributes), a menu item displays the value returned by the ToString() method of the data item by default. In the case of an XML element, the menu item displays the element name, which shows the underlying structure of the tree, but is not very useful otherwise. You can bind a menu item to a specific data item property by specifying menu item bindings.</para>
          <para>When defining the relationship between a data item and a menu item, you must specify both the criteria for binding and the property of a data item to bind to. The criteria indicate when a data item should be bound to a menu item. The criteria can be specified with a depth, a data member, or both. The depth specifies the menu level that gets bound. For example, if you specify a depth of 0, all menu items in the tree structure at level 0 are bound using the menu item binding. A data member specifies the type of the data item in the underlying data source, but can represent different information depending on the data source. For example, the data member for an XML element specifies the name of the element.</para>
          <para>If multiple <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects are defined that conflict with each other, the <see cref="T:System.Web.UI.WebControls.Menu" /> control applies the menu item bindings in the following order of precedence: </para>
          <list type="ordered">
            <item>
              <para>The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object that defines both a depth and a data member.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object that defines only the depth.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object that defines only the data member.</para>
            </item>
            <item>
              <para>The <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object that defines neither the depth nor the data member.</para>
            </item>
          </list>
          <para>Once the binding criteria are established, you can then bind a property of a <see cref="T:System.Web.UI.WebControls.MenuItem" /> object that is able to be bound to an attribute or field of a data item. For example, you can bind the <see cref="P:System.Web.UI.WebControls.MenuItem.Text" /> property of a menu item to the text attribute on an XML element by setting the <see cref="P:System.Web.UI.WebControls.MenuItemBinding.TextField" /> property of a <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object. You can also bind to a static value. If you set the <see cref="P:System.Web.UI.WebControls.MenuItemBinding.Text" /> property of a <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object, all menu items to which the <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> object is applied share the same static text value. For more information on binding the properties of a <see cref="T:System.Web.UI.WebControls.MenuItem" /> object to a value, see <see cref="T:System.Web.UI.WebControls.MenuItemBinding" />.</para>
          <para>Although the <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection can be programmatically populated, it is usually set declaratively. To specify the menu item bindings, first nest opening and closing &lt;DataBindings&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.Menu" /> control. Next, place &lt;asp:MenuItemBinding&gt; elements between the opening and closing &lt;DataBindings&gt; tags for each menu item binding you want to specify.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> objects that define the relationship between a data item and the menu item it is binding to. </para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, a dynamic menu automatically disappears after a certain duration when the mouse pointer is no longer positioned over the menu. Use the <see cref="P:System.Web.UI.WebControls.Menu.DisappearAfter" /> property to specify the duration.</para>
          <block subset="none" type="note">
            <para>A dynamic menu disappears immediately if the user clicks outside of the menu.</para>
          </block>
          <para>You can also specify that a dynamic menu should never automatically disappear by setting this property to -1. In this case, the dynamic menu item will disappear only when the user clicks outside the menu.</para>
          <para>This property cannot be set by themes or style sheet themes. For more information, see <see cref="T:System.Web.UI.ThemeableAttribute" /> and <format type="text/html"><a href="5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET Themes Overview</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the duration for which a dynamic menu is displayed after the mouse pointer is no longer positioned over the menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" /> property to specify an optional custom image to display at the bottom of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line. </para>
          <block subset="none" type="note">
            <para>You can also display a separator image at the top of each dynamic menu item by setting the <see cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image to display at the bottom of each dynamic menu item to separate it from other menu items.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property is set, that image overrides the built-in image.</para>
          <block subset="none" type="note">
            <para>If the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property is not set and the <see cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" /> property is set to false, no image is displayed.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" /> property. This text is displayed as a ToolTip when the user positions the mouse pointer over the image. This text also provides assistive technology devices with a description of the image that can be used to make the control more accessible.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the built-in image that indicates that a dynamic menu item has a submenu is displayed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" /> property to adjust the horizontal position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <see cref="T:System.Web.UI.WebControls.Menu" /> control is displayed vertically or horizontally (as specified by the <see cref="P:System.Web.UI.WebControls.Menu.Orientation" /> property). The following table describes the differences.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Orientation</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Horizontal</para>
              </term>
              <description>
                <para>By default, a dynamic menu is displayed directly below its parent menu item. Setting this property shifts the dynamic menu position horizontally from this base position.</para>
              </description>
            </item>
            <item>
              <term>
                <para>Vertical</para>
              </term>
              <description>
                <para>By default, a dynamic menu item is displayed next to its parent menu item without any spacing in between. Setting this property controls the horizontal spacing between the dynamic menu and its parent menu item.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a vertical menu, a negative value causes a dynamic menu and its parent menu item to overlap.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of pixels to shift a dynamic menu horizontally relative to its parent menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" /> property to control the appearance of a dynamic menu item when the mouse pointer is positioned over it. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.Style" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.Style" /> object (for example, DynamicHoverStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, DynamicHoverStyle.ForeColor).</para>
          <para>Style properties for a dynamic menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style" /> object that allows you to set the appearance of a dynamic menu item when the mouse pointer is positioned over it.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property can be used to insert text to format dynamic menu items in a menu displayed on mobile devices. The <see cref="T:System.Web.UI.WebControls.Menu" /> control supports templates for the display of static and dynamic menu items. For mobile devices, templates are ignored, so this property allows you to add characters or text to apply formatting to menu items without using a template.</para>
          <block subset="none" type="note">
            <para>To achieve consistent formatting when you use this property, you should also set the <see cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" /> property if you want the formatting to be identical between the static and dynamic menu items.</para>
          </block>
          <para>If both template formatting and this property are applied, the template formatting is ignored for mobile devices.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets additional text shown with all menu items that are dynamically displayed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Instead of using the built-in rendering for a dynamic menu, you can define your own look and feel for a dynamic menu item by using the <see cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" /> property. To specify a custom template for a dynamic menu item, first place &lt;DynamicItemTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.Menu" /> control. You can then list the contents of the template between the opening and closing &lt;DynamicItemTemplate&gt; tags. You can further control the style of a dynamic menu by using the <see cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the template that contains the custom content to render for a dynamic menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" /> property to control the appearance of the menu items within a dynamic menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, DynamicMenuItemStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, DynamicMenuItemStyle.ForeColor).</para>
          <para>Style properties for a dynamic menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of the menu items within a dynamic menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" /> property to control the appearance of a dynamic menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, DynamicMenuStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, DynamicMenuStyle.ForeColor).</para>
          <para>Style properties for a dynamic menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of a dynamic menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" /> property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.</para>
          <para>There are two ways to display the image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This property applies to both the built-in image and the custom image.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the alternate text for the image used to indicate that a dynamic menu item has a submenu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property is set, that image overrides the built-in image.</para>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" /> property is not set and the <see cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" /> property is set to false, no image is displayed.</para>
          <block subset="none" type="note">
            <para>When you set this property, use a slash mark (/) instead of a backslash (\). If you use backslashes in the path, the specified image will not be displayed.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to a custom image that is displayed in a dynamic menu item when the dynamic menu item has a submenu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" /> property to control the appearance of a dynamic menu item when the user selects it from the menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, DynamicSelectedStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, DynamicSelectedStyle.ForeColor).</para>
          <para>Style properties for a dynamic menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of the dynamic menu item selected by the user.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" /> property to specify an optional custom image to display at the top of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line. </para>
          <block subset="none" type="note">
            <para>You can also display a separator image at the bottom of each dynamic menu item by setting the <see cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image to display at the top of each dynamic menu item to separate it from other menu items.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" /> property to adjust the vertical position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <see cref="T:System.Web.UI.WebControls.Menu" /> control is displayed vertically or horizontally (as specified by the <see cref="P:System.Web.UI.WebControls.Menu.Orientation" /> property). The following table describes the differences.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Orientation</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Horizontal</para>
              </term>
              <description>
                <para>By default, a dynamic menu is displayed directly below its parent menu item without any spacing in between. Setting this property controls the vertical spacing between the dynamic menu and its parent menu item.</para>
              </description>
            </item>
            <item>
              <term>
                <para>Vertical</para>
              </term>
              <description>
                <para>By default, a dynamic menu item is displayed next to its parent menu item with the top edges aligned. Setting this property shifts the dynamic menu position vertically from this base position.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a horizontal menu, a negative value causes a dynamic menu and its parent menu item to overlap.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of pixels to shift a dynamic menu vertically relative to its parent menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Verifies that the menu control requires data binding and that a valid data source control is specified before calling the <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> method.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" /> method to retrieve a <see cref="T:System.Web.UI.WebControls.MenuItem" /> object from the <see cref="T:System.Web.UI.WebControls.Menu" /> control. To retrieve the <see cref="T:System.Web.UI.WebControls.MenuItem" /> object, you must specify a menu path to the menu item. The menu path is a string of delimited values that form the path from a root menu item to the current menu item. To determine the delimiter character, use the <see cref="P:System.Web.UI.WebControls.Menu.PathSeparator" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the menu item at the specified value path.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.MenuItem" /> that represents the menu item at the specified value path.</para>
        </returns>
        <param name="valuePath">
          <attribution license="cc4" from="Microsoft" modified="false" />The value path to the menu item to retrieve.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.GetDesignModeState" /> method is a helper method used to get the current design-time state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the design-time state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.IDictionary" /> containing the design-time state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MenuItemCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.Items" /> property (collection) to get a <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> object that contains all the menu items in a <see cref="T:System.Web.UI.WebControls.Menu" /> control. This collection is commonly used to quickly iterate through all the menu items, or to access a specific menu item.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.Menu.Items" /> collection can also be used to programmatically manage the menu items. You can add, insert, remove, and retrieve <see cref="T:System.Web.UI.WebControls.MenuItem" /> collection objects. Any updates to the collection will automatically be reflected in the <see cref="T:System.Web.UI.WebControls.Menu" /> control after the next round trip to the server.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> object that contains all menu items in the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.ItemWrap" /> property to specify whether the text displayed in each menu item wraps. When the text runs out of space, it is automatically split and continued on the following line.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the text for menu items should wrap.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection as an alternative to the individual style properties (such as <see cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />) to control the style of menu items at the individual levels of the menu. The styles contained in this collection are applied to the menu items based on their menu level. The first style in the collection corresponds to the style of menu items in the first level of the menu. The second style in the collection corresponds to the style of menu items in the second level of the menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.</para>
          <block subset="none" type="note">
            <para>If a style is defined for a certain level using the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection, this overrides any menu item style settings for the menu items at that level.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object that contains the style settings that are applied to menu items based on their level in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection as an alternative to the <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" /> and <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" /> properties to control the style of a selected menu item at the individual levels of the menu. The styles contained in this collection are applied to a selected menu item based on its menu level. The first style in the collection corresponds to the style of a selected menu item in the first level of the menu. The second style in the collection corresponds to the style of a selected menu item in the second level of the menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.</para>
          <block subset="none" type="note">
            <para>If a style is defined for a certain level using the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection, this overrides the <see cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" /> and <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" /> properties at that level.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object that contains the style settings that are applied to the selected menu item based on its level in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection as an alternative to the individual style properties (such as <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />) to control the style of the static submenu items displayed in the static menu at the individual levels. The styles contained in this collection are applied to the static submenu items based on their menu level. The first style in the collection corresponds to the style of the first static submenu level displayed in the static menu. The second style in the collection corresponds to the style of the second submenu level displayed in the static menu, and so on. This collection is most often used to generate table of contents-style navigation menus where menu items at a certain level should have the same appearance, regardless of whether they have submenus.</para>
          <block subset="none" type="note">
            <para>If a style is defined for a certain level using the <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection, this overrides any static submenu item style settings at that level.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object that contains the style settings that are applied to the submenu items in the static menu based on their level in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object ob);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ob" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ob">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.Menu" /> control that need to be persisted.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can display multiple menu levels in the static menu by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property to a value greater than 1. You can also display additional levels in dynamic menus by setting this property to a value greater than 0. For example, if you display two menu levels in the static menu (by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property to 2) and then set this property to 3, three additional menu levels are displayed in dynamic menus. All remaining higher menu levels (if any) are discarded.</para>
          <block subset="none" type="note">
            <para>Setting this property to 0 displays a flat menu up to the level specified by the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property, without any dynamic menus.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of menu levels to render for a dynamic menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> event is raised when a menu item is clicked in a <see cref="T:System.Web.UI.WebControls.Menu" /> control. This allows you to provide an event handler that performs a custom routine, such as synchronizing with another control on the page, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> object is passed to the event handler, which allows you to access the properties of the menu item that raised the event.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a menu item in a <see cref="T:System.Web.UI.WebControls.Menu" /> control is clicked.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This read-only field contains the name of the command used to access menu items. The default value is "Click".</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Contains the command name.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> event is raised when a menu item is bound to data in a <see cref="T:System.Web.UI.WebControls.Menu" /> control. This allows you to provide an event handler that performs a custom routine, such as adding custom content or modifying a menu item before it is rendered, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> object is passed to the event handler, which allows you to access the properties of the menu item that raised the event.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a menu item in a <see cref="T:System.Web.UI.WebControls.Menu" /> control is bound to data.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs args);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member overrides <see cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />. </para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the event for the <see cref="T:System.Web.UI.WebControls.Menu" /> control is passed up the page's user interface (UI) server control hierarchy.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the event has been canceled; otherwise, false. The default is false.</para>
        </returns>
        <param name="source">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.Control.DataBinding" /> event is raised when data is bound to the <see cref="T:System.Web.UI.WebControls.Menu" /> control. This method notifies the control to perform any data-binding logic that is associated with it. </para>
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
          <para>This method is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="d98fd58b-fa4f-4598-8378-addf4355a115">Events and Delegates</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.DataBinding" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control's life cycle, the control's view state has yet to be populated. Additionally, you cannot access another server control when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.Menu" /> control to raise the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="d98fd58b-fa4f-4598-8378-addf4355a115">Events and Delegates</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.Menu" /> control to raise the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="d98fd58b-fa4f-4598-8378-addf4355a115">Events and Delegates</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.MenuEventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> method is called by the <see cref="T:System.Web.UI.WebControls.Menu" /> control to raise the <see cref="E:System.Web.UI.Control.PreRender" /> event. It is generally used by control developers when extending the <see cref="T:System.Web.UI.WebControls.Menu" /> class.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="d98fd58b-fa4f-4598-8378-addf4355a115">Events and Delegates</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.Orientation.Vertical)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.Orientation" /> property to specify the direction in which to render the <see cref="T:System.Web.UI.WebControls.Menu" /> control. The following table lists the available directions.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Orientation</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Orientation.Horizontal</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control is rendered horizontally.</para>
              </description>
            </item>
            <item>
              <term>
                <para>Orientation.Vertical</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control is rendered vertically.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the direction in which to render the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(/)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Each menu item (represented by a <see cref="T:System.Web.UI.WebControls.MenuItem" /> object) in the <see cref="T:System.Web.UI.WebControls.Menu" /> control has a <see cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" /> property that specifies the position of the menu item. The value path is a string of delimited values that form the path from a root menu item to the current menu item. Use the <see cref="P:System.Web.UI.WebControls.Menu.PathSeparator" /> property to specify the delimiting character used to separate the values in the menu path. This value is commonly used when parsing the list for the individual values.</para>
          <para>Depending on the text displayed in the <see cref="T:System.Web.UI.WebControls.Menu" /> control, the delimiter character might need to be changed to prevent any conflicts. For example, if you set the delimiter character to a comma, the displayed text should not contain any commas; otherwise, the <see cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" /> property cannot be parsed accurately.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the character used to delimit the path of a menu item in a <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.Menu" /> control to bind the items in the data source to the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Binds the items from the data source to the menu items in the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Processes an event raised when a form is posted to the server.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that represents the event argument passed to the event handler.</param>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Renders the menu control on the client browser.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream used to write content to a Web page.</param>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> method adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the response stream for the client browser.</para>
          <para>Override <see cref="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> when you want to implement custom behavior, for example to write multiple tags to the response stream before any control content, such as &lt;table&gt;&lt;tr&gt;&lt;td&gt;. This method overrides the <see cref="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" /> method to add the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property. </para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds tag attributes and writes the markup for the opening tag of the control to the output stream emitted to the browser or device.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Override the <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" /> method to render the contents of the control between the begin and end tags. The default implementation of this method renders any child controls.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member overrides <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output.</param>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method overrides <see cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" /> to render <see cref="T:System.Web.UI.WebControls.Menu" /> submenus and the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Performs final markup and writes the HTML closing tag of the control to the output stream emitted to the browser or device.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.HtmlTextWriter" /> containing methods to build and render the device-specific output.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to save the state of the properties in the <see cref="T:System.Web.UI.WebControls.Menu" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false. The <see cref="M:System.Web.UI.WebControls.Menu.SaveControlState" /> method is concerned with state data that is essential for a control's operation (such as an index or keyword) and is separate from the control's view-state data.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.Menu" /> control that need to be persisted.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that contains the state data for the control. If there have been no changes to the state, this method returns null.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Object" /> that contains the state of the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:</para>
          <code>menuInstance.RenderingCompatibility = new Version(3, 5);</code>
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> property to specify a custom image to display at the bottom of each dynamic menu to indicate that the user can scroll down for additional menu items.</para>
          <block subset="none" type="note">
            <para>If this property is not set, the internal, default image is used.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image displayed in a dynamic menu to indicate that the user can scroll down for additional menu items.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:</para>
          <code>menuInstance.RenderingCompatibility = new Version(3, 5);</code>
          <para>When a dynamic menu item contains additional items at the bottom of the menu, an image is displayed to indicate that the user can scroll down to view additional menu items. Use the <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" /> property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the alternate text for the image specified in the <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> property.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:</para>
          <code>menuInstance.RenderingCompatibility = new Version(3, 5);</code>
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> property to specify a custom image to display at the top of each dynamic menu to indicate that the user can scroll up for additional menu items. </para>
          <block subset="none" type="note">
            <para>If this property is not set, the internal, default image is used.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image displayed in a dynamic menu to indicate that the user can scroll up for additional menu items.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is not supported in the .NET 4.0 rendering mode. If this property is required, you can set the menu to the .NET 3.5 rendering mode by adding the following in the page's code:</para>
          <code>menuInstance.RenderingCompatibility = new Version(3, 5);</code>
          <para>When a dynamic menu item contains additional items at the top of the menu, an image is displayed to indicate that the user can scroll up to view additional menu items. Use the <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" /> property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the alternate text for the image specified in the <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> property.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.SelectedItem" /> property to determine the menu item selected by the user.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also determine the text of the selected menu item directly by using the <see cref="P:System.Web.UI.WebControls.Menu.SelectedValue" /> property.</para>
          </block>
          <para>When the user selects a menu item from a <see cref="T:System.Web.UI.WebControls.Menu" /> control, the <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> event is raised, which allows you to perform a custom routine by providing an event handler.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the selected menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.SelectedValue" /> property as a shortcut to determine the text of the selected menu item. To access the other properties of the selected menu item, use the <see cref="P:System.Web.UI.WebControls.Menu.SelectedItem" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the selected menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method overrides <see cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets design-time data for the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</para>
        </summary>
        <param name="data">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Collections.IDictionary" /> that contains state data for displaying the control.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" /> method is a helper method used by derived classes to set the <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object with the specified value.</para>
        </summary>
        <param name="node">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.MenuItem" /> to set.</param>
        <param name="dataBound">
          <attribution license="cc4" from="Microsoft" modified="false" />true to set the node as data-bound; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" /> method is a helper method used by derived classes to set the <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object with the specified value.</para>
        </summary>
        <param name="node">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.MenuItem" /> to set.</param>
        <param name="dataItem">
          <attribution license="cc4" from="Microsoft" modified="false" />The data item for the <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" /> method is a helper method used by derived classes to set the <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> property of the specified <see cref="T:System.Web.UI.WebControls.MenuItem" /> object with the specified value.</para>
        </summary>
        <param name="node">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.MenuItem" /> to set.</param>
        <param name="dataPath">
          <attribution license="cc4" from="Microsoft" modified="false" />The data path for the <see cref="T:System.Web.UI.WebControls.MenuItem" />.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property to specify the alternate text for a hidden image read by screen readers to provide the ability to skip the list of links. The text that you specify provides assistive technology devices with a description of the hidden skip link image that can be used to make the control more accessible.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.Menu" /> control provides the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property as a way for the entire control to be skipped by screen readers. If the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property is set, an invisible image with alternate text is rendered, giving the user the option to jump to the end of the control. Screen readers read the alternate text aloud, and the image occupies only one pixel space. For pixel-precise control over the rendering of the page, set the <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property to an empty string ("") and provide your own mechanism to skip the menu. The <see cref="P:System.Web.UI.WebControls.Menu.SkipLinkText" /> property is set to the empty string by default.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the alternate text for a hidden image read by screen readers to provide the ability to skip the list of links.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" /> property to specify a custom image to display at the bottom of each static menu item that acts as a separator between menu items. </para>
          <block subset="none" type="note">
            <para>As an alternative, you can also display a separator image at the top of each static menu item by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image displayed as the separator at the bottom of each static menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property to specify the number of menu levels to display in a static menu. All menu levels below the specified value are displayed in a dynamic menu. You can also limit the number of menu levels to display in a dynamic menu by setting the <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of menu levels to display in a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. There are two ways to display this image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property is set, that image overrides the built-in image, regardless of the value of the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property.</para>
          <block subset="none" type="note">
            <para>If the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property is not set and the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property is set to false, no image is displayed.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the built-in image is displayed to indicate that a static menu item has a submenu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" /> property to control the appearance of a static menu item when the mouse pointer is positioned over it. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.Style" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.Style" /> object (for example, StaticHoverStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, StaticHoverStyle.ForeColor).</para>
          <para>Style properties for a static menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.Style" /> object that allows you to set the appearance of a static menu item when the mouse pointer is positioned over it.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property can be used to insert text to format static menu items in a menu. This is particularly useful for mobile devices. The <see cref="T:System.Web.UI.WebControls.Menu" /> control supports templates for the display of static and dynamic menu items, but templates are ignored on mobile devices. This property allows you to add characters or text and to apply formatting to menu items for both mobile and desktop devices without using a template.</para>
          <block subset="none" type="note">
            <para>To achieve consistent formatting when you use this property, you should also set the <see cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" /> property if you want the formatting to be identical between the static and dynamic menu items.</para>
          </block>
          <para>If both template formatting and this property are applied, the template formatting is ignored for mobile devices.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets additional text shown with all menu items that are statically displayed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Instead of using the built-in rendering for a static menu, you can define your own user interface (UI) for a static menu item by using the <see cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" /> property. To specify a custom template for a static menu item, first place &lt;StaticTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.Menu" /> control. You can then list the contents of the template between the opening and closing &lt;StaticTemplate&gt; tags. You can further control the style of a static menu by using the <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the template that contains the custom content to render for a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" /> property to control the appearance of the menu items in a static menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, StaticMenuItemStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, StaticMenuItemStyle.ForeColor).</para>
          <para>Style properties for a static menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of the menu items in a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" /> property to control the appearance of a static menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, StaticMenuStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, StaticMenuStyle.ForeColor).</para>
          <para>Style properties for a static menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" /> property to specify the alternate text for this image.</para>
          <para>There are two ways to display the image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This property applies to both the built-in image and the custom image.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the alternate text for the pop-out image used to indicate that a static menu item has a submenu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a static menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. There are two ways to display this image:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property to true to use the built-in image (default).</para>
            </item>
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property to specify a custom image.</para>
            </item>
          </list>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property is set, that image overrides the built-in image, regardless of the value of the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property.</para>
          <para>If the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" /> property is not set and the <see cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" /> property is set to false, no image is displayed.</para>
          <block subset="none" type="note">
            <para>When you set this property, use a slash mark (/) instead of a backslash (\). If you use backslashes in the path, the specified image will not be displayed.</para>
          </block>
          <para>You can specify alternate text for the image by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image displayed to indicate that a static menu item has a submenu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" /> property to control the appearance of the menu item selected by the user in a static menu. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object it returns. The properties can be set declaratively in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object (for example, StaticSelectedStyle-ForeColor). The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, StaticSelectedStyle.ForeColor).</para>
          <para>Style properties for a static menu item are applied in the following order:</para>
          <list type="ordered">
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" /> collection or <see cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />. If the <see cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" /> collection is defined, it is applied at this time, overriding the other menu item style properties.</para>
            </item>
            <item>
              <para>
                <see cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> object that allows you to set the appearance of the menu item selected by the user in a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "16px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the static menu displays more than one menu level (if the <see cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" /> property is set to a value higher than 1), use the <see cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" /> property to specify the number of pixels by which to indent the submenu items within the static menu.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of space, in pixels, to indent submenus within a static menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" /> property to specify a custom image to display at the top of each static menu item that acts as a separator between menu items. </para>
          <block subset="none" type="note">
            <para>As an alternative, you can also display a separator image at the bottom of each static menu item by setting the <see cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" /> property.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image displayed as the separator at the top of each static menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Processes an event raised when a form is posted to the server.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that represents the event argument passed to the event handler.</param>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.TagKey" /> property to determine the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that is associated with a <see cref="T:System.Web.UI.WebControls.Menu" /> control. This property is used primarily by control developers.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value that corresponds to a <see cref="T:System.Web.UI.WebControls.Menu" /> control. This property is used primarily by control developers.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.Menu.Target" /> property to specify the window or frame in which to display the Web content linked to a menu item when that menu item is clicked. Values must begin with a letter in the range of A through Z (case-insensitive), except for certain special values that begin with an underscore, as shown in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Target value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>_blank </para>
              </term>
              <description>
                <para>Renders the content in a new window without frames. </para>
              </description>
            </item>
            <item>
              <term>
                <para>_parent </para>
              </term>
              <description>
                <para>Renders the content in the immediate frameset parent. </para>
              </description>
            </item>
            <item>
              <term>
                <para>_search</para>
              </term>
              <description>
                <para>Renders the content in the search pane.</para>
              </description>
            </item>
            <item>
              <term>
                <para>_self </para>
              </term>
              <description>
                <para>Renders the content in the frame with focus. </para>
              </description>
            </item>
            <item>
              <term>
                <para>_top </para>
              </term>
              <description>
                <para>Renders the content in the full window without frames. </para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>Check your browser documentation to determine if the _search value is supported.  For example, Internet Explorer versions 5.0 and above support the _search target value</para>
          </block>
          <para>This property applies to all menu items in a <see cref="T:System.Web.UI.WebControls.Menu" /> control. You can selectively override this property by setting the <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> property of each <see cref="T:System.Web.UI.WebControls.MenuItem" /> object directly.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> property renders as a target attribute. The target attribute on anchor elements is not allowed in the XHTML 1.1 strict document type definition. If rendered output must conform to XHTML or accessibility standards, do not set the <see cref="P:System.Web.UI.WebControls.MenuItem.Target" /> property. For more information, see <format type="text/html"><a href="1b78d416-66bb-43a5-ac77-c703aab55b97">ASP.NET and XHTML Compliance</a></format> and <format type="text/html"><a href="7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Accessibility in Visual Studio 2010 and ASP.NET 4</a></format>. </para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the target window or frame in which to display the Web page content associated with a menu item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.Menu" /> control so they can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>