<?xml version="1.0" encoding="utf-8"?>
<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.UI.WebControls.FormView" /> control raises the <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> event when an Insert button (a button with its CommandName property set to "Insert") within the control is clicked, but after the <see cref="T:System.Web.UI.WebControls.FormView" /> control inserts the record. This allows you to provide an event-handling method that performs a custom routine, such as checking the results of an insert operation, whenever this event occurs.</para>
      <para>A <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> object is passed to the event-handling method, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the insert operation, use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" /> property. Use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" /> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" /> property. If you need to access the values of the inserted record, use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" /> property.</para>
      <para>By default, the <see cref="T:System.Web.UI.WebControls.FormView" /> control returns to the mode specified by the <see cref="P:System.Web.UI.WebControls.FormView.DefaultMode" /> property after an insert operation. If an exception occurs during the insert operation, you can keep the <see cref="T:System.Web.UI.WebControls.FormView" /> control in insert mode by setting the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" /> property to true.</para>
      <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
      <para>For a list of initial property values for an instance of the <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" /> class, see the <see cref="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" /> constructor.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides data for the <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> event.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to initialize a new instance of the <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> class.</para>
          <para>The following table shows the initial property values for an instance of <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Property </para>
                </term>
                <description>
                  <para>Initial value </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
                </para>
              </term>
              <description>
                <para>The value of the <paramref name="affectedRows" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
                </para>
              </term>
              <description>
                <para>The <see cref="T:System.Exception" /> object contained in the <paramref name="e" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This constructor is used primarily by control developers when raising events.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> class.</para>
        </summary>
        <param name="affectedRows">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of rows affected by the insert operation.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Exception" /> that represents the exception raised when the insert operation was performed. If no exception was raised, use null for this parameter.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" /> property to determine the number of records affected by the insert operation. This property is commonly used to verify that the correct number of records was inserted in the following situations:</para>
          <list type="bullet">
            <item>
              <para>Verify that only a single record was inserted. Sometimes an improperly written insert statement can insert multiple records.</para>
            </item>
            <item>
              <para>Verify that a record was inserted when an error occurs during the insert operation that does not raise an exception.</para>
            </item>
            <item>
              <para>Verify that a record was inserted when a data source control that supports conflict detection (optimistic concurrency), such as the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> and <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> controls, has its <see cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" /> property set to the ConflictOptions.CompareAllValues enumeration value. Under this setting, a record that has the same key value as a record by another user concurrently might not be inserted.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of rows affected by the insert operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" /> property to determine the exception (if any) that was raised during the insert operation. If no exceptions were raised, this property returns null.</para>
          <block subset="none" type="note">
            <para>If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" /> property to true; otherwise, the <see cref="T:System.Web.UI.WebControls.FormView" /> control re-throws the exception.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the exception (if any) that was raised during the insert operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When an exception is raised during the insert operation, use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" /> property to indicate whether the exception was handled in the event handler. When this property is set to true, the exception is considered handled and is not re-thrown. If this property is set to false, the <see cref="T:System.Web.UI.WebControls.FormView" /> control re-throws the exception. To determine which exception was raised, use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether an exception that was raised during the insert operation was handled in the event handler.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, the <see cref="T:System.Web.UI.WebControls.FormView" /> control returns to the mode specified by the <see cref="P:System.Web.UI.WebControls.FormView.DefaultMode" /> property. Use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" /> property to specify whether the <see cref="T:System.Web.UI.WebControls.FormView" /> control should remain in insert mode after an insert operation. To keep the <see cref="T:System.Web.UI.WebControls.FormView" /> control in insert mode, set this property to true.</para>
          <block subset="none" type="note">
            <para>This property should be used only when a situation occurs (such as an exception being raised) that requires the control to behave differently than it normally would. If the <see cref="T:System.Web.UI.WebControls.FormView" /> control needs to remain in insert mode by default, set the <see cref="P:System.Web.UI.WebControls.FormView.DefaultMode" /> property instead.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.FormView" /> control should remain in insert mode after an insert operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" /> property to access the values of the fields for the inserted record. For example, you can use these values to keep a log of inserted records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" /> property returns an <see cref="T:System.Collections.Specialized.OrderedDictionary" /> object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The <see cref="T:System.Collections.Specialized.OrderedDictionary" /> object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the inserted record. To access the field names, use the <see cref="P:System.Collections.Specialized.OrderedDictionary.Keys" /> property of the <see cref="T:System.Collections.Specialized.OrderedDictionary" /> object. Similarly, you can access the field values by using the <see cref="P:System.Collections.Specialized.OrderedDictionary.Values" /> property.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.OrderedDictionary" /> object to access the field values directly. The advantage in using the indexer is that it returns field values directly. Data source controls that rely on the field order (such as <see cref="T:System.Web.UI.WebControls.AccessDataSource" />) can access field values only by index.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the field name/value pairs for the inserted record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>