<?xml version="1.0" encoding="utf-8"?>
<Type Name="DetailsViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs">
  <TypeSignature Language="C#" Value="public class DetailsViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control raises the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event when an Update button (a button with its CommandName property set to "Update") within the control is clicked, but after the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control updates the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.</para>
      <para>A <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the update operation, use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" /> property. Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" /> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event handler by setting the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" /> property. If you need to access the key field values for the updated record, use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" /> property. The original and updated non-key field values can be accessed using the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" /> and <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" /> properties, respectively.</para>
      <para>By default, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control returns to the mode specified by the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property after an update operation. To keep the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in edit mode, set the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" /> property to true.</para>
      <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
      <para>For a list of initial property values for an instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> class, see the <see cref="M:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" /> constructor.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides data for the <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> event.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to initialize a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> class.</para>
          <para>The following table shows initial property values for an instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> class.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Property</para>
                </term>
                <description>
                  <para>Initial value</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
                </para>
              </term>
              <description>
                <para>The value of the <paramref name="affectedRows" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
                </para>
              </term>
              <description>
                <para>The <see cref="T:System.Exception" /> object contained in the <paramref name="e" /> parameter.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
                </para>
              </term>
              <description>
                <para>Initialized to false.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This constructor is used primarily by control developers when raising events.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> class.</para>
        </summary>
        <param name="affectedRows">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of rows affected by the update operation.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Exception" /> that represents the exception raised when the update operation was performed. If no exception is raised, use null for this parameter.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" /> property to determine the number of rows affected by the update operation. This value is commonly used to verify that the appropriate number of rows was updated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of rows affected by the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" /> property to determine the exception (if any) that was raised during the update operation. If no exceptions were raised, this property returns null.</para>
          <block subset="none" type="note">
            <para>If an exception was raised and you decide to handle the exception in the event handler, be sure to set the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" /> property to true; otherwise, the exception is passed to the next method on the call stack for handling.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the exception (if any) that was raised during the update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When an exception is raised during the update operation, use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" /> property to indicate whether the exception was handled in the event handler. When this property is set to true, the exception is considered handled and is not passed further up the call stack. If this property is set to false, the exception is passed to the next method on the call stack for handling. To determine which exception was raised, use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether an exception that was raised during the update operation was handled in the event handler.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control returns to the mode specified by the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property after an update operation. Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" /> property to specify whether the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control should remain in edit mode. To keep the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control in edit mode, set this property to true.</para>
          <block subset="none" type="note">
            <para>This property should be used if you want to override the default mode at a specific occasion. If the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control needs to remain in edit mode by default, set the <see cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" /> property instead.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control should remain in edit mode after an update operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" /> property to access the values of the key field for an updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the key field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" /> property to access the new field values for the updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the new field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" /> property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.</para>
          <para>The <see cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" /> property returns an object that implements the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> interface. The object contains <see cref="T:System.Collections.DictionaryEntry" /> objects that represent the fields of the updated record.</para>
          <block subset="none" type="note">
            <para>As a shortcut, you can also use the indexer of the <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object to access the field values directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a dictionary that contains the original field name/value pairs for the updated record.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>