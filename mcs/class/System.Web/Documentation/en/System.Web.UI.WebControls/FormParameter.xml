<?xml version="1.0" encoding="utf-8"?>
<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>You can use the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class to bind the value of a form variable in the <see cref="P:System.Web.HttpRequest.Form" /> collection to a parameter used in a parameterized query or command. Controls that bind data to the parameter might throw an exception if a <see cref="T:System.Web.UI.WebControls.FormParameter" /> is specified but no corresponding form variable is passed. They might also display no data if the form variable is passed with no corresponding value. Set the <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> to avoid these situations where appropriate.</para>
      <para>The <see cref="T:System.Web.UI.WebControls.FormParameter" /> class provides the <see cref="P:System.Web.UI.WebControls.FormParameter.FormField" /> property, which identifies the name of the form variable to bind to, in addition to those inherited from the <see cref="T:System.Web.UI.WebControls.Parameter" /> class.</para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Web.UI.WebControls.FormParameter" /> does not validate the value passed by the form element in any way; it uses the raw value. In most cases you can validate the value of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> before it is used by a data source control by handling an event, such as the Selecting, Updating, Inserting, or Deleting event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the associated <see cref="T:System.ComponentModel.CancelEventArgs" /> class to true.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Binds the value of an HTTP request <see cref="P:System.Web.HttpRequest.Form" /> field to a parameter object.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.FormParameter" /> object created with the <see cref="M:System.Web.UI.WebControls.FormParameter.#ctor" /> constructor is initialized with default values for all its properties. The <see cref="P:System.Web.UI.WebControls.FormParameter.FormField" /> is initialized to <see cref="F:System.String.Empty" />. Additionally, the <see cref="P:System.Web.UI.WebControls.Parameter.Name" /> property is initialized to <see cref="F:System.String.Empty" />, the <see cref="P:System.Web.UI.WebControls.Parameter.Type" /> property is initialized to <see cref="F:System.TypeCode.Object" />, the <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> property is initialized to <see cref="F:System.Data.ParameterDirection.Input" />, and the <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> property is initialized to null (Nothing in Visual Basic).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new unnamed instance of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" /> constructor is a protected copy constructor used to clone a <see cref="T:System.Web.UI.WebControls.FormParameter" /> instance. The values of the <see cref="T:System.Web.UI.WebControls.FormParameter" />, including <see cref="P:System.Web.UI.WebControls.FormParameter.FormField" />, <see cref="P:System.Web.UI.WebControls.Parameter.Name" />, and <see cref="P:System.Web.UI.WebControls.Parameter.Type" /> are all transferred to the new instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class with the values of the instance specified by the <paramref name="original" /> parameter.</para>
        </summary>
        <param name="original">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.FormParameter" /> instance that the current instance is initialized from. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.FormParameter" /> object created with the <see cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" /> constructor is initialized with the specified parameter name and string that identifies the form variable that the parameter binds to. The <see cref="P:System.Web.UI.WebControls.Parameter.Type" /> and <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> properties are initialized with default values.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new named instance of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class, using the specified string to identify which form variable field to bind to.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the parameter. </param>
        <param name="formField">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the form variable that the parameter object is bound to. The default is <see cref="F:System.String.Empty" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.FormParameter" /> object created with the <see cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" /> constructor is initialized with the specified parameter name, <see cref="P:System.Web.UI.WebControls.Parameter.Type" />, and string that identifies the form variable that the parameter binds to. Only the <see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> and <see cref="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" /> properties are initialized with default values.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new named and strongly typed instance of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class, using the specified string to identify which form variable to bind to.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the parameter. </param>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The type that the parameter represents. The default is <see cref="F:System.TypeCode.Object" />. </param>
        <param name="formField">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the form variable that the parameter object is bound to. The default is <see cref="F:System.String.Empty" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.FormParameter.Clone" /> method calls the <see cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" /> copy constructor to initialize a new instance of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> class with the values of the current instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a duplicate of the current <see cref="T:System.Web.UI.WebControls.FormParameter" /> instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.FormParameter" /> that is an exact duplicate of the current one.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected override object Evaluate (System.Web.HttpContext ctx, System.Web.UI.Control control);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.FormParameter" /> attempts to bind to the form variable every time the <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> method is called.</para>
          <para>The <paramref name="context" /> parameter is used by the <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> method to retrieve the value of the specified form field from the request. The <paramref name="control" /> parameter is ignored.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Updates and returns the value of the <see cref="T:System.Web.UI.WebControls.FormParameter" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents the updated and current value of the parameter. If the context or the request is null (Nothing in Visual Basic), the <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> method returns null.</para>
        </returns>
        <param name="control">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.Control" /> that is associated with the page where the <see cref="T:System.Web.UI.WebControls.FormParameter" /> is used. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.FormParameter.FormField" /> identifies a name/value pair that is passed in the <see cref="P:System.Web.HttpRequest.Form" /> collection. While the <see cref="P:System.Web.UI.WebControls.FormParameter.FormField" /> property identifies the name of the pair, the <see cref="T:System.Web.UI.WebControls.FormParameter" /> binds to its corresponding value at run time. If the expected form variable string name/value pair is not passed to the ASP.NET Web page in the collection, the <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> method binds the parameter to the value of the <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> property, if it is set. If the <see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> is not set, the <see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> method fails to bind the parameter to a value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the name of the form variable that the parameter binds to.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>