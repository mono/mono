<?xml version="1.0" encoding="utf-8"?>
<Type Name="GridView" FullName="System.Web.UI.WebControls.GridView">
  <TypeSignature Language="C#" Value="public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>In this topic:</para>
      <list type="bullet">
        <item>
          <para>
            <format type="text/html">
              <a href="#introduction">Introduction</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#column_fields">Column Fields</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#binding_to_data">Binding to Data</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#data_operations">Data Operations</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#customizing_the_user_interface">Customizing the User Interface</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#events">Events</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#accessibility">Accessibility</a>
            </format>
          </para>
        </item>
        <item>
          <para>
            <format type="text/html">
              <a href="#declarative_syntax">Declarative Syntax</a>
            </format>
          </para>
        </item>
      </list>
      <format type="text/html">
        <a href="#introduction" />
      </format>
      <format type="text/html">
        <h2>Introduction</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is used to display the values of a data source in a table. Each column represents a field, while each row represents a record. The <see cref="T:System.Web.UI.WebControls.GridView" /> control supports the following features: </para>
      <list type="bullet">
        <item>
          <para>Binding to data source controls, such as <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</para>
        </item>
        <item>
          <para>Built-in sort capabilities.</para>
        </item>
        <item>
          <para>Built-in update and delete capabilities.</para>
        </item>
        <item>
          <para>Built-in paging capabilities.</para>
        </item>
        <item>
          <para>Built-in row selection capabilities.</para>
        </item>
        <item>
          <para>Programmatic access to the <see cref="T:System.Web.UI.WebControls.GridView" /> object model to dynamically set properties, handle events, and so on.</para>
        </item>
        <item>
          <para>Multiple key fields.</para>
        </item>
        <item>
          <para>Multiple data fields for the hyperlink columns.</para>
        </item>
        <item>
          <para>Customizable appearance through themes and styles.</para>
        </item>
        <item>
          <para>To learn about the other data-bound controls that are available in ASP.NET, see <format type="text/html"><a href="f9cf026e-d8b8-49f8-a3c4-64de2edbbb96">ASP.NET Data-Bound Web Server Controls Overview</a></format>.</para>
        </item>
      </list>
      <block subset="none" type="note">
        <para>If you are familiar with the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control from the .NET Framework version 1.0, the <see cref="T:System.Web.UI.WebControls.GridView" /> control is the successor to the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</para>
      </block>
      <format type="text/html">
        <a href="#column_fields" />
      </format>
      <format type="text/html">
        <h2>Column Fields</h2>
      </format>
      <para>Each column in the <see cref="T:System.Web.UI.WebControls.GridView" /> control is represented by a <see cref="T:System.Web.UI.WebControls.DataControlField" /> object. By default, the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property is set to true, which creates an <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> object for each field in the data source. Each field is then rendered as a column in the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the order that each field appears in the data source.</para>
      <para>You can also manually control which column fields appear in the <see cref="T:System.Web.UI.WebControls.GridView" /> control by setting the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property to false and then defining your own column field collection. Different column field types determine the behavior of the columns in the control. The following table lists the different column field types that can be used.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Column field type </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.BoundField" />
            </para>
          </term>
          <description>
            <para>Displays the value of a field in a data source. This is the default column type of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.ButtonField" />
            </para>
          </term>
          <description>
            <para>Displays a command button for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to create a column of custom button controls, such as the Add or the Remove button. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.CheckBoxField" />
            </para>
          </term>
          <description>
            <para>Displays a check box for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This column field type is commonly used to display fields with a Boolean value. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.CommandField" />
            </para>
          </term>
          <description>
            <para>Displays predefined command buttons to perform select, edit, or delete operations.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.HyperLinkField" />
            </para>
          </term>
          <description>
            <para>Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.ImageField" />
            </para>
          </term>
          <description>
            <para>Displays an image for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="T:System.Web.UI.WebControls.TemplateField" />
            </para>
          </term>
          <description>
            <para>Displays user-defined content for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control according to a specified template. This column field type enables you to create a custom column field. </para>
          </description>
        </item>
      </list>
      <para>To define a column field collection declaratively, first add opening and closing &lt;Columns&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. Next, list the column fields that you want to include between the opening and closing &lt;Columns&gt; tags. The columns specified are added to the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection in the order listed. The <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection stores all the column fields in the control and enables you to programmatically manage the column fields in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
      <para>Explicitly declared column fields can be displayed in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields.</para>
      <block subset="none" type="note">
        <para>Automatically generated column fields are not added to the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection.</para>
      </block>
      <format type="text/html">
        <a href="#binding_to_data" />
      </format>
      <format type="text/html">
        <h2>Binding to Data</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control can be bound to a data source control (such as the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control or <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> control) or to any data source collection that implements the <see cref="T:System.Collections.IEnumerable" /> interface, such as <see cref="T:System.Data.DataView" />, <see cref="T:System.Collections.ArrayList" />, <see cref="T:System.Collections.Generic.List`1" />, or other collection types. Use one of the following methods to bind the <see cref="T:System.Web.UI.WebControls.GridView" /> control to the appropriate data source type:</para>
      <list type="bullet">
        <item>
          <para>To bind to a data source control, set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property of the <see cref="T:System.Web.UI.WebControls.GridView" /> control to the <see cref="P:System.Web.UI.Control.ID" /> value of the data source control. The <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically binds to the specified data source control and can take advantage of the data source control's capabilities to perform sorting, updating, deleting, and paging. This is the preferred method to bind to data.</para>
        </item>
        <item>
          <para>To bind to a data source that implements the <see cref="T:System.Collections.IEnumerable" /> interface, programmatically set the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property of the <see cref="T:System.Web.UI.WebControls.GridView" /> control to the data source and then call the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method. When using this method, the <see cref="T:System.Web.UI.WebControls.GridView" /> control does not provide built-in sort, update, delete, and paging functionality. You need to provide this functionality by using the appropriate event.</para>
        </item>
      </list>
      <para>For more information about data binding, see <format type="text/html"><a href="f9219396-a0fa-481f-894d-e3d9c67d64f2">Accessing Data with ASP.NET</a></format>.</para>
      <block subset="none" type="note">
        <para>This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. Whenever possible, it is strongly recommended that values are HTML-encoded before they are displayed in this control (the <see cref="T:System.Web.UI.WebControls.BoundField" /> class HTML-encodes values by default). ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see <format type="text/html"><a href="3c0e7514-cff2-4bed-936d-ee3f7b740190">Introduction to the Validation Controls</a></format>.</para>
      </block>
      <format type="text/html">
        <a href="#data_operations" />
      </format>
      <format type="text/html">
        <h2>Data Operations</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides many built-in capabilities that allow the user to sort, update, delete, select, and page through items in the control. When the <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to a data source control, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can take advantage of the data source control's capabilities and provide automatic sort, update, and delete functionality.</para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control can provide support for sorting, updating, and deleting with other types of data sources. However, you will need to provide an appropriate event handler with the implementation for these operations.</para>
      </block>
      <para>Sorting allows the user to sort the items in the <see cref="T:System.Web.UI.WebControls.GridView" /> control with respect to a specific column by clicking on the column's header. To enable sorting, set the <see cref="P:System.Web.UI.WebControls.GridView.AllowSorting" /> property to true.</para>
      <para>The automatic updating, deleting, and selection functionalities are enabled when a button in a <see cref="T:System.Web.UI.WebControls.ButtonField" /> or <see cref="T:System.Web.UI.WebControls.TemplateField" /> column field, with a command name of "Edit", "Delete", and "Select", respectively, is clicked. The <see cref="T:System.Web.UI.WebControls.GridView" /> control can automatically add a <see cref="T:System.Web.UI.WebControls.CommandField" /> column field with an Edit, Delete, or Select button if the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />, <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />, or <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" /> property is set to true, respectively.</para>
      <block subset="none" type="note">
        <para>Inserting records into the data source is not directly supported by the <see cref="T:System.Web.UI.WebControls.GridView" /> control. However, it is possible to insert records by using the <see cref="T:System.Web.UI.WebControls.GridView" /> control in conjunction with the DetailsView or FormView control. For more information, see <see cref="T:System.Web.UI.WebControls.DetailsView" /> or <see cref="T:System.Web.UI.WebControls.FormView" />, respectively.</para>
      </block>
      <para>Instead of displaying all the records in the data source at the same time, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can automatically break the records up into pages. To enable paging, set the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true.</para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is re-created on postback based on the information that is stored in <see cref="P:System.Web.UI.PageStatePersister.ViewState" />. If the <see cref="T:System.Web.UI.WebControls.GridView" /> control includes a <see cref="T:System.Web.UI.WebControls.TemplateField" /> or a <see cref="T:System.Web.UI.WebControls.CommandField" /> with the <see cref="P:System.Web.UI.WebControls.CommandField.CausesValidation" /> property set to true, then the <see cref="P:System.Web.UI.Page.EnableViewState" /> property must also be set to true to ensure that concurrent data operations, such as updates and deletes, apply to the appropriate row.</para>
      </block>
      <format type="text/html">
        <a href="#customizing_the_user_interface" />
      </format>
      <format type="text/html">
        <h2>Customizing the User Interface</h2>
      </format>
      <para>You can customize the appearance of the <see cref="T:System.Web.UI.WebControls.GridView" /> control by setting the style properties for the different parts of the control. The following table lists the different style properties.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Style property </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the alternating data rows in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this property is set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> settings. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the row being edited in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the empty data row displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control when the data source does not contain any records. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the footer row of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the header row of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the pager row of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the data rows in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> property is also set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> settings. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
            </para>
          </term>
          <description>
            <para>The style settings for the selected row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
            </para>
          </term>
          <description>
            <para>The style setting for the data column the data is sorted by in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in ascending order.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
            </para>
          </term>
          <description>
            <para>The style setting for the data column the data is sorted by in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this style is set, an arrow indicating the data is sorted ascending is placed on the header of the <see cref="T:System.Web.UI.WebControls.GridView" /> control when the data is sorted in ascending order.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
            </para>
          </term>
          <description>
            <para>The style setting for the data column the data is sorted by in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this style is set, the style (for example, highlighted column) is applied to cells when the data is sorted in descending order.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
            </para>
          </term>
          <description>
            <para>The style setting for the data column the data is sorted by in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this style is set, an arrow pointing down is placed on the header of the <see cref="T:System.Web.UI.WebControls.GridView" /> when the data is sorted in descending order.</para>
          </description>
        </item>
      </list>
      <para>You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Property </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
            </para>
          </term>
          <description>
            <para>Shows or hides the footer section of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
            </para>
          </term>
          <description>
            <para>Shows or hides the header section of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </description>
        </item>
      </list>
      <format type="text/html">
        <a href="#events" />
      </format>
      <format type="text/html">
        <h2>Events</h2>
      </format>
      <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can program against. This enables you to run a custom routine whenever an event occurs. The following table lists the events that are supported by the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Event </para>
            </term>
            <description>
              <para>Description </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
            </para>
          </term>
          <description>
            <para>Occurs when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
            </para>
          </term>
          <description>
            <para>Occurs when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This event is often used to cancel the paging operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Cancel button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control exits edit mode. This event is often used to stop the canceling operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
            </para>
          </term>
          <description>
            <para>Occurs when a button is clicked in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This event is often used to perform a task when a button is clicked in the control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
            </para>
          </term>
          <description>
            <para>Occurs when a new row is created in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This event is often used to modify the contents of a row when the row is created. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
            </para>
          </term>
          <description>
            <para>Occurs when a data row is bound to data in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This event is often used to modify the contents of a row when the row is bound to data. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the record from the data source. This event is often used to check the results of the delete operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the record from the data source. This event is often used to cancel the deleting operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Edit button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode. This event is often used to cancel the editing operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This event is often used to check the results of the update operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This event is often used to cancel the updating operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Select button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This event is often used to perform a task after a row is selected in the control. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
            </para>
          </term>
          <description>
            <para>Occurs when a row's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This event is often used to cancel the selection operation. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.Sorted" />
            </para>
          </term>
          <description>
            <para>Occurs when the hyperlink to sort a column is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column. </para>
          </description>
        </item>
        <item>
          <term>
            <para>
              <see cref="E:System.Web.UI.WebControls.GridView.Sorting" />
            </para>
          </term>
          <description>
            <para>Occurs when the hyperlink to sort a column is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine. </para>
          </description>
        </item>
      </list>
      <format type="text/html">
        <a href="#accessibility" />
      </format>
      <format type="text/html">
        <h2>Accessibility</h2>
      </format>
      <para>For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <format type="text/html"><a href="7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13">Accessibility in Visual Studio 2010 and ASP.NET 4</a></format> and <format type="text/html"><a href="847a37e3-ce20-41da-b0d3-7dfb0fdae9a0">ASP.NET Controls and Accessibility</a></format>.</para>
      <format type="text/html">
        <a href="#declarative_syntax" />
      </format>
      <format type="text/html">
        <h2>Declarative Syntax</h2>
      </format>
      <code>&lt;asp:GridView
    AccessKey="string"
    AllowPaging="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AllowSorting="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateColumns="<codeFeaturedElement>True</codeFeaturedElement>|False"
    AutoGenerateDeleteButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateEditButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    AutoGenerateSelectButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
    BackColor="color name|#dddddd"
    BackImageUrl="uri"
    BorderColor="color name|#dddddd"
    BorderStyle="<codeFeaturedElement>NotSet</codeFeaturedElement>|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    Caption="string"
    CaptionAlign="<codeFeaturedElement>NotSet</codeFeaturedElement>|Top|Bottom|Left|Right"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    EditIndex="integer"
    EmptyDataText="string"
    Enabled="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnableSortingAndPagingCallbacks="True|<codeFeaturedElement>False</codeFeaturedElement>"
    EnableTheming="<codeFeaturedElement>True</codeFeaturedElement>|False"
    EnableViewState="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Font-Bold="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Italic="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Names="string"
    Font-Overline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|<codeFeaturedElement>False</codeFeaturedElement>"
    Font-Underline="True|<codeFeaturedElement>False</codeFeaturedElement>"
    ForeColor="color name|#dddddd"
    GridLines="<codeFeaturedElement>None</codeFeaturedElement>|Horizontal|Vertical|Both"
    Height="size"
    HorizontalAlign="<codeFeaturedElement>NotSet</codeFeaturedElement>|Left|Center|Right|Justify"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPageIndexChanged="PageIndexChanged event handler"
    OnPageIndexChanging="PageIndexChanging event handler"
    OnPreRender="PreRender event handler"
    OnRowCancelingEdit="RowCancelingEdit event handler"
    OnRowCommand="RowCommand event handler"
    OnRowCreated="RowCreated event handler"
    OnRowDataBound="RowDataBound event handler"
    OnRowDeleted="RowDeleted event handler"
    OnRowDeleting="RowDeleting event handler"
    OnRowEditing="RowEditing event handler"
    OnRowUpdated="RowUpdated event handler"
    OnRowUpdating="RowUpdating event handler"
    OnSelectedIndexChanged="SelectedIndexChanged event handler"
    OnSelectedIndexChanging="SelectedIndexChanging event handler"
    OnSorted="Sorted event handler"
    OnSorting="Sorting event handler"
    OnUnload="Unload event handler"
    PageIndex="integer"
    PagerSettings-FirstPageImageUrl="uri"
    PagerSettings-FirstPageText="string"
    PagerSettings-LastPageImageUrl="uri"
    PagerSettings-LastPageText="string"
    PagerSettings-Mode="NextPrevious|<codeFeaturedElement>Numeric</codeFeaturedElement>|NextPreviousFirstLast|
        NumericFirstLast"
    PagerSettings-NextPageImageUrl="uri"
    PagerSettings-NextPageText="string"
    PagerSettings-PageButtonCount="integer"
    PagerSettings-Position="<codeFeaturedElement>Bottom</codeFeaturedElement>|Top|TopAndBottom"
    PagerSettings-PreviousPageImageUrl="uri"
    PagerSettings-PreviousPageText="string"
    PagerSettings-Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
    PageSize="integer"
    RowHeaderColumn="string"
    runat="server"
    SelectedIndex="integer"
    ShowFooter="True|<codeFeaturedElement>False</codeFeaturedElement>"
    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    UseAccessibleHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
    Width="size"
&gt;
        &lt;AlternatingRowStyle /&gt;
        &lt;Columns&gt;
                &lt;asp:BoundField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:BoundField&gt;
                &lt;asp:ButtonField
                    AccessibleHeaderText="string"
                    ButtonType="<codeFeaturedElement>Button</codeFeaturedElement>|Image|Link"
                    CausesValidation="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    CommandName="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    ImageUrl="uri"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowHeader="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    SortExpression="string"
                    Text="string"
                    ValidationGroup="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:ButtonField&gt;
                &lt;asp:CheckBoxField
                    AccessibleHeaderText="string"
                    DataField="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Text="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:CheckBoxField&gt;
                &lt;asp:CommandField
                    AccessibleHeaderText="string"
                    ButtonType="<codeFeaturedElement>Button</codeFeaturedElement>|Image|Link"
                    CancelImageUrl="uri"
                    CancelText="string"
                    CausesValidation="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DeleteImageUrl="uri"
                    DeleteText="string"
                    EditImageUrl="uri"
                    EditText="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertImageUrl="uri"
                    InsertText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NewImageUrl="uri"
                    NewText="string"
                    SelectImageUrl="uri"
                    SelectText="string"
                    ShowCancelButton="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowDeleteButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowEditButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowInsertButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowSelectButton="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    SortExpression="string"
                    UpdateImageUrl="uri"
                    UpdateText="string"
                    ValidationGroup="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:CommandField&gt;
                &lt;asp:DynamicField
                    AccessibleHeaderText="string"
                    ApplyFormatInEditMode="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ConvertEmptyStringToNull="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    DataField="string"
                    DataFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    HtmlEncode="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    UIHint="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:DynamicField&gt;
                &lt;asp:HyperLinkField
                    AccessibleHeaderText="string"
                    DataNavigateUrlFields="string"
                    DataNavigateUrlFormatString="string"
                    DataTextField="string"
                    DataTextFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NavigateUrl="uri"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Target="string|_blank|_parent|_search|_self|<codeFeaturedElement>_top</codeFeaturedElement>"
                    Text="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:HyperLinkField&gt;
                &lt;asp:ImageField
                    AccessibleHeaderText="string"
                    AlternateText="string"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    DataAlternateTextField="string"
                    DataAlternateTextFormatString="string"
                    DataImageUrlField="string"
                    DataImageUrlFormatString="string"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    NullDisplayText="string"
                    NullImageUrl="uri"
                    ReadOnly="True|<codeFeaturedElement>False</codeFeaturedElement>"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                        &lt;ControlStyle /&gt;
                        &lt;FooterStyle /&gt;
                        &lt;HeaderStyle /&gt;
                        &lt;ItemStyle /&gt;
                &lt;/asp:ImageField&gt;
                &lt;asp:TemplateField
                    AccessibleHeaderText="string"
                    ConvertEmptyStringToNull="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    FooterText="string"
                    HeaderImageUrl="uri"
                    HeaderText="string"
                    InsertVisible="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    ShowHeader="<codeFeaturedElement>True</codeFeaturedElement>|False"
                    SortExpression="string"
                    Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
&gt;
                            &lt;ControlStyle /&gt;
                            &lt;FooterStyle /&gt;
                            &lt;HeaderStyle /&gt;
                            &lt;ItemStyle /&gt;
                        &lt;AlternatingItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/AlternatingItemTemplate&gt;
                        &lt;EditItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/EditItemTemplate&gt;
                        &lt;FooterTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/FooterTemplate&gt;
                        &lt;HeaderTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/HeaderTemplate&gt;
                        &lt;InsertItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/InsertItemTemplate&gt;
                        &lt;ItemTemplate&gt;
                            &lt;!-- child controls --&gt;
                        &lt;/ItemTemplate&gt;
                &lt;/asp:TemplateField&gt;
        &lt;/Columns&gt;
        &lt;EditRowStyle /&gt;
        &lt;EmptyDataRowStyle /&gt;
        &lt;EmptyDataTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/EmptyDataTemplate&gt;
        &lt;FooterStyle /&gt;
        &lt;HeaderStyle /&gt;
        &lt;PagerSettings
            FirstPageImageUrl="uri"
            FirstPageText="string"
            LastPageImageUrl="uri"
            LastPageText="string"
            Mode="NextPrevious|<codeFeaturedElement>Numeric</codeFeaturedElement>|NextPreviousFirstLast|
                NumericFirstLast"
            NextPageImageUrl="uri"
            NextPageText="string"
            OnPropertyChanged="PropertyChanged event handler"
            PageButtonCount="integer"
            Position="<codeFeaturedElement>Bottom</codeFeaturedElement>|Top|TopAndBottom"
            PreviousPageImageUrl="uri"
            PreviousPageText="string"
            Visible="<codeFeaturedElement>True</codeFeaturedElement>|False"
        /&gt;
        &lt;PagerStyle /&gt;
        &lt;PagerTemplate&gt;
            &lt;!-- child controls --&gt;
        &lt;/PagerTemplate&gt;
        &lt;RowStyle /&gt;
        &lt;SelectedRowStyle /&gt;
&lt;/asp:GridView&gt;</code>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Displays the values of a data source in a table where each column represents a field and each row represents a record. The <see cref="T:System.Web.UI.WebControls.GridView" /> control enables you to select, sort, and edit these items.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridView ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this constructor to initialize a new instance of the <see cref="T:System.Web.UI.WebControls.GridView" /> class. To dynamically add a <see cref="T:System.Web.UI.WebControls.GridView" /> control to a page, create a new <see cref="T:System.Web.UI.WebControls.GridView" /> object, set its properties, and then add it to the <see cref="P:System.Web.UI.Control.Controls" /> collection of a container control, such as <see cref="T:System.Web.UI.WebControls.PlaceHolder" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.GridView" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Instead of displaying all the records in the data source at the same time, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can automatically break the records up into pages. If the data source supports the paging capability, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can take advantage of that and provide built-in paging functionality. The paging feature can be used with any data source object that supports the <see cref="T:System.Collections.ICollection" /> interface or a data source that supports paging capability.</para>
          <para>To enable the paging feature, set the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true. By default, the <see cref="T:System.Web.UI.WebControls.GridView" /> control displays 10 records on a page at a time. You can change the number of records displayed on a page by setting the <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> property. To determine the total number of pages required to display the data source contents, use the <see cref="P:System.Web.UI.WebControls.GridView.PageCount" /> property. You can determine the index of the currently displayed page by using the <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> property.</para>
          <para>When paging is enabled, an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. The pager row contains controls that allow the user to navigate to the other pages. You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control's text labels) by using the <see cref="P:System.Web.UI.WebControls.GridView.PagerSettings" /> property. The pager row can be displayed at the top, bottom, or both the top and bottom of the control by setting the <see cref="P:System.Web.UI.WebControls.PagerSettings.Position" /> property. You can also select from one of four built-in pager display modes by setting the <see cref="P:System.Web.UI.WebControls.PagerSettings.Mode" /> property. The following table describes the built-in display modes.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Mode</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>PagerButton.NextPrevious</para>
              </term>
              <description>
                <para>A set of pagination controls consisting of previous and next buttons.</para>
              </description>
            </item>
            <item>
              <term>
                <para>PagerButton.NextPreviousFirstLast</para>
              </term>
              <description>
                <para>A set of pagination controls consisting of previous, next, first, and last buttons.</para>
              </description>
            </item>
            <item>
              <term>
                <para>PagerButton.Numeric</para>
              </term>
              <description>
                <para>A set of pagination controls consisting of numbered link buttons to access pages directly. This is the default mode.</para>
              </description>
            </item>
            <item>
              <term>
                <para>PagerButton.NumericFirstLast</para>
              </term>
              <description>
                <para>A set of pagination controls consisting of numbered and first and last link buttons.</para>
              </description>
            </item>
          </list>
          <para>To control the appearance of the pager row (including its background color, font color, and position), use the <see cref="P:System.Web.UI.WebControls.GridView.PagerStyle" /> property.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically hides the pager row when the data source contains only one page of records.</para>
          </block>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control also enables you to define a custom template for the pager row. For more information about creating a custom pager row template, see <see cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> </para>
              </term>
              <description>
                <para>Occurs when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different page in the control. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> </para>
              </term>
              <description>
                <para>Occurs when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This event is often used to cancel the paging operation. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the paging feature is enabled.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a data source control that supports sorting is bound to the <see cref="T:System.Web.UI.WebControls.GridView" /> control, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can take advantage of the data source control's capabilities and provide automatic sorting functionality. When the <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to a data source by setting the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property programmatically, you must provide the sorting functionality by using the <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> event.</para>
          <block subset="none" type="note">
            <para>Different data sources have different requirements for enabling their sorting capabilities. To determine the requirements, see the documentation for the specific data source.</para>
          </block>
          <para>To enable sorting, set the <see cref="P:System.Web.UI.WebControls.GridView.AllowSorting" /> property to true. When sorting is enabled, the heading text for each column field with its <see cref="P:System.Web.UI.WebControls.DataControlField.SortExpression" /> property set is displayed as a link button.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.DataControlField.SortExpression" /> property for an automatically generated columns field is automatically populated. If you define your own columns through the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection, you must set the <see cref="P:System.Web.UI.WebControls.DataControlField.SortExpression" /> property for each column; otherwise, the column will not display the link button in the header.</para>
          </block>
          <para>Clicking the link button for a column causes the items in the <see cref="T:System.Web.UI.WebControls.GridView" /> control to be sorted based on the sort expression. Typically, the sort expression is simply the name of the field displayed in the column, which causes the <see cref="T:System.Web.UI.WebControls.GridView" /> control to sort with respect to that column. To sort by multiple fields, use a sort expression that contains a comma-separated list of field names. You can determine the sort expression that the <see cref="T:System.Web.UI.WebControls.GridView" /> control is applying by using the <see cref="P:System.Web.UI.WebControls.GridView.SortExpression" /> property. Clicking a column's link button repeatedly toggles the sort direction between ascending and descending order. To determine the current sort direction, use the <see cref="P:System.Web.UI.WebControls.GridView.SortDirection" /> property.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can use to perform a custom action when sorting occurs. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> </para>
              </term>
              <description>
                <para>Occurs when the hyperlink to sort a column is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This event is commonly used to perform a task after the user clicks a hyperlink to sort a column. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> </para>
              </term>
              <description>
                <para>Occurs when the hyperlink to sort a column is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This event is often used to cancel the sorting operation or to perform a custom sorting routine. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the sorting feature is enabled.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> property to control the appearance of alternating data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. When this property is set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> settings. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, AlternatingRowStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest an &lt;AlternatingRowStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, AlternatingRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of alternating data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property is set to true, an <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> object is automatically created for each field in the data source. Each field is then displayed as a column in the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the order that the fields appear in the data source. This option provides a convenient way to display every field in the data source; however, you have limited control of how an automatically generated column field is displayed or behaves.</para>
          <para>Instead of letting the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically generate the column fields, you can manually define the column fields by setting the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property to false and then creating a custom Columns collection. In addition to bound column fields, you can also display a button column field, a check box column field, a command field, a hyperlink column field, an image field, or a column field based on your own custom-defined template.</para>
          <para>You can also combine explicitly declared column fields with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated bound column fields are not added to the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection. For more information, see <see cref="P:System.Web.UI.WebControls.GridView.Columns" />.</para>
          <para>If you set this property to true and set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.ItemType" /> property to a model type, <see cref="T:System.Web.DynamicData.DynamicField" /> controls are generated. If you do not set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.ItemType" /> property, <see cref="T:System.Web.UI.WebControls.BoundField" /> controls are generated. If you do not want <see cref="T:System.Web.DynamicData.DynamicField" /> controls, you have the following options:</para>
          <list type="bullet">
            <item>
              <para>Set the <see cref="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" /> property to null in the Page_Load event handler. In that case, <see cref="T:System.Web.UI.WebControls.BoundField" /> controls are generated.</para>
            </item>
            <item>
              <para>Write custom code to automatically generate fields by creating and assigning your own <see cref="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" /> class and assigning an instance of it to the control.</para>
            </item>
            <item>
              <para>Set <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> to false. In that case, no fields are generated, and you must manually specify fields using controls such as <see cref="T:System.Web.UI.WebControls.BoundField" /> or <see cref="T:System.Web.UI.WebControls.ImageField" />.</para>
            </item>
            <item>
              <para>Do not set the <see cref="P:System.Web.UI.WebControls.DataBoundControl.ItemType" /> property. In that case, <see cref="T:System.Web.UI.WebControls.BoundField" /> controls are generated.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether bound fields are automatically created for each field in the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a data source control that supports deleting is bound to a <see cref="T:System.Web.UI.WebControls.GridView" /> control, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can take advantage of the data source control's capabilities and provide automatic deleting functionality.</para>
          <block subset="none" type="note">
            <para>For a data source control to delete data, it must be configured to delete data. To configure a data source control to delete records, see the documentation for the specific data source control.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" /> property is set to true, a column (represented by a <see cref="T:System.Web.UI.WebControls.CommandField" /> object) with a Delete button for each data row is automatically added to the <see cref="T:System.Web.UI.WebControls.GridView" /> control. Clicking the Delete button for a row permanently removes that record from the data source.</para>
          <block subset="none" type="note">
            <para>You must also set the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property to identify the key field or fields of the data source for the automatic deleting feature to work.</para>
          </block>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can use to perform a custom action when a row is deleted. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> </para>
              </term>
              <description>
                <para>Occurs when a row's Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the record from the data source. This event is often used to check the results of the delete operation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> </para>
              </term>
              <description>
                <para>Occurs when a row's Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the record from the data source. This event is often used to cancel the deleting operation. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether a <see cref="T:System.Web.UI.WebControls.CommandField" /> field column with a Delete button for each data row is automatically added to a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a data source control that supports updating is bound to a <see cref="T:System.Web.UI.WebControls.GridView" /> control, the <see cref="T:System.Web.UI.WebControls.GridView" /> control can take advantage of the data source control's capabilities and provide automatic updating functionality.</para>
          <block subset="none" type="note">
            <para>For a data source control to update data, it must be configured to update data. To configure a data source control to update records, see the documentation for the specific data source control.</para>
          </block>
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" /> property is set to true, a column (represented by a <see cref="T:System.Web.UI.WebControls.CommandField" /> object) with an Edit button for each data row is automatically added to the <see cref="T:System.Web.UI.WebControls.GridView" /> control. Clicking an Edit button for a row puts that row in edit mode. When a row is in edit mode, each column field in the row that is not read-only displays the appropriate input control, such as a <see cref="T:System.Web.UI.WebControls.TextBox" /> control, for the field's data type. This allows the user to modify the field's value.</para>
          <para>When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the row in the data source with any value changes and returns the row to display mode. Clicking the Cancel button abandons any value changes and returns the row to display mode.</para>
          <block subset="none" type="note">
            <para>You can programmatically put a row in edit mode by setting the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property with the index of the row. To programmatically exit edit mode, set the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property to -1.</para>
          </block>
          <para>When using the built-in updating functionality, you must set the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property with a comma-separated list of field names to identify the primary key field or fields of the data source; otherwise, the built-in updating functionality will not be able to update the correct record. When using automatically generated field columns (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property to true), the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically ensures that the automatically generated field columns that correspond to the field or fields specified in the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property are read-only.</para>
          <para>You can control the appearance of a row that is in edit mode by using the <see cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" /> property. Common settings usually include a custom background color, foreground color, and font properties.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can use to perform a custom action when a row is updated. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Cancel button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control cancels out of edit mode. This event is often used to stop the canceling operation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Edit button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode. This event is often used to cancel the editing operation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This event is often used to check the results of the update operation. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This event is often used to cancel the updating operation. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether a <see cref="T:System.Web.UI.WebControls.CommandField" /> field column with an Edit button for each data row is automatically added to a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="AutoGenerateSelectButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateSelectButton { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" /> property is set to true, a column (represented by a <see cref="T:System.Web.UI.WebControls.CommandField" /> object) with a Select button for each data row is automatically added to the <see cref="T:System.Web.UI.WebControls.GridView" /> control. Clicking the Select button for a row selects that row in the control, which sets the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property to the index of the row. To retrieve the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the selected row, use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRow" /> property. You can also get the primary key value for the selected record by using the <see cref="P:System.Web.UI.WebControls.GridView.SelectedValue" /> property. The <see cref="P:System.Web.UI.WebControls.GridView.SelectedValue" /> property contains the values of the key fields specified in the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property.</para>
          <block subset="none" type="note">
            <para>You can programmatically select a row by setting the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property. To cancel the selection of a row, set the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property to -1.</para>
          </block>
          <para>You can control the appearance of the selected row by using the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" /> property. Common settings usually include a custom background color, foreground color, and font properties.</para>
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control provides several events that you can use to perform a custom action when a row is selected. The following table lists the available events.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Event </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Select button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This event is often used to perform a task after a row is selected in the control. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
                </para>
              </term>
              <description>
                <para>Occurs when a row's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This event is often used to cancel the selecting operation. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether a <see cref="T:System.Web.UI.WebControls.CommandField" /> field column with a Select button for each data row is automatically added to a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.BackImageUrl" /> property to specify the URL to an image to display in the background of a <see cref="T:System.Web.UI.WebControls.GridView" /> control. </para>
          <block subset="none" type="note">
            <para>If the specified image is smaller than the <see cref="T:System.Web.UI.WebControls.GridView" /> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the URL to an image to display in the background of a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When paging is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true), an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. The pager row contains controls that allow the user to navigate to the other pages, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the <see cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the bottom pager row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.GridView" /> control creates the bottom pager row in the <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.GridView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.GridView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the bottom pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.Caption" /> property to specify the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible. You can also specify the position at which to render the HTML caption element by using the <see cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" /> property.</para>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to render in an HTML caption element in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.TableCaptionAlign.NotSet)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" /> property to specify the horizontal or vertical position of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
          <para>This property is set using one of the <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> enumeration values. The following table lists the possible values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>TableCaptionAlign.Bottom</para>
              </term>
              <description>
                <para>The caption element is aligned with the bottom of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Left</para>
              </term>
              <description>
                <para>The caption element is aligned with the left side of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.NotSet</para>
              </term>
              <description>
                <para>The caption element's alignment is not set.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Right</para>
              </term>
              <description>
                <para>The caption element is aligned with the right side of the table.</para>
              </description>
            </item>
            <item>
              <term>
                <para>TableCaptionAlign.Top</para>
              </term>
              <description>
                <para>The caption element is aligned with the top of the table.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>When this property is set to TableCaptionAlign.NotSet, the default value of the browser is used.</para>
          </block>
          <para>To specify the text for the HTML caption element, use the <see cref="P:System.Web.UI.WebControls.GridView.Caption" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the horizontal or vertical position of the HTML caption element in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.CellPadding" /> property to control the spacing between the contents of a cell and the cell's border. The padding amount specified is added to all four sides of the cell.</para>
          <para>All cells in the same column of a <see cref="T:System.Web.UI.WebControls.GridView" /> control have the same width. The padding amount is applied to the widest cell and all other cells in the column have this cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row have this cell height. Individual cell sizes cannot be specified.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of space between the contents of a cell and the cell's border.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.CellSpacing" /> property to control the spacing between adjacent cells in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.</para>
          <block subset="none" type="note">
            <para>If you set this property to a value greater than 0 and then set the <see cref="P:System.Web.UI.WebControls.GridView.GridLines" /> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the <see cref="P:System.Web.UI.WebControls.Table.CellSpacing" /> property controls the size of the gap.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of space between cells.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A column field represents a column in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> property (collection) is used to store all the explicitly declared column fields that get rendered in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. You can also use the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection to programmatically manage the collection of column fields.</para>
          <block subset="none" type="note">
            <para>Explicitly declared column fields can be used in combination with automatically generated column fields. When both are used, explicitly declared column fields are rendered first, followed by the automatically generated column fields. Automatically generated column fields are not added to the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection.</para>
          </block>
          <para>The column fields are displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the order that the column fields appear in the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection. The following table shows the different column field classes that derive from the <see cref="T:System.Web.UI.WebControls.DataControlField" /> class and can be used in the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Column field type </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.BoundField" />
                </para>
              </term>
              <description>
                <para>Displays the value of a field in a data source. This is the default column type of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.ButtonField" />
                </para>
              </term>
              <description>
                <para>Displays a command button for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to create a column of custom button controls, such as the Add or the Remove button.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.CheckBoxField" />
                </para>
              </term>
              <description>
                <para>Displays a check box for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This column field type is commonly used to display fields with a Boolean value.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.CommandField" />
                </para>
              </term>
              <description>
                <para>Displays predefined command buttons to perform select, edit, or delete operations.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.HyperLinkField" />
                </para>
              </term>
              <description>
                <para>Displays the value of a field in a data source as a hyperlink. This column field type enables you to bind a second field to the hyperlink's URL.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.ImageField" />
                </para>
              </term>
              <description>
                <para>Displays an image for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="T:System.Web.UI.WebControls.TemplateField" />
                </para>
              </term>
              <description>
                <para>Displays user-defined content for each item in the <see cref="T:System.Web.UI.WebControls.GridView" /> control, according to a specified template. This column field type enables you to create a custom column field.</para>
              </description>
            </item>
          </list>
          <para>Although you can programmatically add column fields to the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection, it is easier to list the column fields declaratively in the <see cref="T:System.Web.UI.WebControls.GridView" /> control and then use the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of each column field to show or hide each column field.</para>
          <para>If the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of a column field is set to false, the column is not displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to make a round trip, add the field name to the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataControlField" /> objects that represent the column fields in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateAutoGeneratedColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" /> method is used to create an automatically generated column field when the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property is set to true. The properties of the automatically generated column field are specified through the <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" /> object contained in the <paramref name="fieldProperties" /> parameter.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an automatically generated column field.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> that represents the automatically generated column field specified by the <paramref name="fieldProperties" /> parameter.</para>
        </returns>
        <param name="fieldProperties">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" /> that represents the properties of the automatically generated column field to create.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable data, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" /> method is used to create the control hierarchy of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the control hierarchy used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> control using the specified data source.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of rows created.</para>
        </returns>
        <param name="dataBinding">
          <attribution license="cc4" from="Microsoft" modified="false" />true to indicate that the child controls are bound to data; otherwise, false. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateChildTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateChildTable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateChildTable" /> method is a helper method used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create a child table.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new child table.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Always returns a new <see cref="T:System.Web.UI.WebControls.Table" /> that represents the child table.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateColumns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property is set to true, a bound column field is automatically created for each field in the data source. Each bound column field is then displayed as a row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the order that the fields appear in the data source. The <see cref="M:System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" /> method is used to create the automatically generated column fields.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the set of column fields used to build the control hierarchy.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Collections.ICollection" /> that contains the fields used to build the control hierarchy.</para>
        </returns>
        <param name="dataSource">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> that represents the data source. </param>
        <param name="useDataSource">
          <attribution license="cc4" from="Microsoft" modified="false" />true to use the data source specified by the <paramref name="dataSource" /> parameter; otherwise, false. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateControlStyle" /> method is used to create the default style for the control.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the default style for the control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the style for the control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that contains the arguments passed to the data source. In this implementation, the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object contains the arguments for paging operations.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that contains the arguments that get passed to the data source for processing.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> that contains the arguments that get passed to the data source.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" /> method is used to create a row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control. A data-bound <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically generates the rows needed to display the target data.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> created using the specified parameters.</para>
        </returns>
        <param name="rowIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the row to create. </param>
        <param name="dataSourceIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the data source item to bind to the row. </param>
        <param name="rowType">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> values. </param>
        <param name="rowState">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.GridView.DataBind" /> method to bind data from a data source to the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This method resolves all data-binding expressions in the active template of the control.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.DataBind" /> method is called automatically if the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property of the <see cref="T:System.Web.UI.WebControls.GridView" /> control refers to a valid data source control.</para>
          <para>Instead of manually calling the <see cref="M:System.Web.UI.WebControls.GridView.DataBind" /> method, you can use model binding with your <see cref="M:System.Web.UI.WebControls.GridView.DataBind" /> control by setting the <see cref="P:System.Web.UI.WebControls.DataBoundControl.SelectMethod" /> property to the name of a method that returns data for the <see cref="T:System.Web.UI.WebControls.GridView" />. The <see cref="T:System.Web.UI.WebControls.GridView" /> is then automatically populated with the data that is returned from the select method. Model binding can simplify your code for working with data. For more information, see <see cref="http://go.microsoft.com/fwlink/?LinkId=286117">Model Binding and Web Forms</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Binds the data source to the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This method cannot be inherited.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property to specify the field or fields that represent the primary key of the data source. You should only set this property to the field or fields that are required to uniquely identify each row; for example, the ID column if an integer value uniquely identifies each row. You must set the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property in order for the automatic update and delete features of the <see cref="T:System.Web.UI.WebControls.GridView" /> control to work. The values of these key fields are passed to the data source control in order to specify the row to update or delete.</para>
          <para>If you need to retrieve the data key value when updating or deleting a row, use the Keys property of either the <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" /> or <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" /> class. For example, e.Keys[0] holds the value of the first data key in a <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> or <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> event handler.</para>
          <para>If you need to retrieve the data key value when a row is selected, use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property.</para>
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property is set, the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically populates its <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> collection with the values from the specified field or fields, which provides a convenient way to access the primary keys of each row.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control stores these key field values in the control state. If these values contain sensitive information, it is strongly recommended that you enable view-state encryption by setting the <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property to ViewStateEncryptionMode.Always.</para>
          </block>
          <para>When you use automatically generated field columns (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" /> property to true), the <see cref="T:System.Web.UI.WebControls.GridView" /> control makes sure that the columns that correspond to the field or fields specified in the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property are read-only.</para>
          <para>If the <see cref="P:System.Web.UI.WebControls.DataControlField.Visible" /> property of a column field is set to false, the column is not displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control and the data for the column does not make a round trip to the client. If you want the data for a column that is not visible to be available to the client, add the field name to the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an array that contains the names of the primary key fields for the items displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property is set, the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically creates a <see cref="T:System.Web.UI.WebControls.DataKey" /> object for each row in the control. The <see cref="T:System.Web.UI.WebControls.DataKey" /> object contains the values of the field or fields specified in the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property. The <see cref="T:System.Web.UI.WebControls.DataKey" /> objects are then added to the control's <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> collection. Use the <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> property to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object for a specific data row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>You can use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object for the currently selected row. You can also use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedValue" /> property to retrieve the data key value for the currently selected row directly.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataKey" /> objects that represent the data key value of each row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DeleteRow">
      <MemberSignature Language="C#" Value="public virtual void DeleteRow (int rowIndex);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" /> method to programmatically delete the record at the specified index from the data source. This method is commonly used when you need to delete a record from outside of the <see cref="T:System.Web.UI.WebControls.GridView" /> control, such as from a different control on the page. Calling this method also raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> and <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> events.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes the record at the specified index from the data source.</para>
        </summary>
        <param name="rowIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the row to delete.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The row index is zero-based (the first row is row zero).</para>
          <para>This property is typically used only in the following scenarios, which involve handlers for specific events:</para>
          <list type="bullet">
            <item>
              <para>You want the <see cref="T:System.Web.UI.WebControls.GridView" /> control to open in edit mode for a specific row the first time that the page is displayed. To do this, you can set the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property in the handler for the <see cref="E:System.Web.UI.Control.Load" /> event of the <see cref="T:System.Web.UI.Page" /> class or of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
            <item>
              <para>You want to know which row was edited after the row was updated. To do this, you can retrieve the row index from the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property in the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event handler.</para>
            </item>
            <item>
              <para>You are binding the <see cref="T:System.Web.UI.WebControls.GridView" /> control to a data source by setting the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property programmatically. In this case you must set the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property in the <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> and <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> event handlers.</para>
            </item>
          </list>
          <para>If you set the <see cref="P:System.Web.UI.WebControls.GridView.EditIndex" /> property after a postback or in handlers for events that are raised later than the <see cref="E:System.Web.UI.Control.Load" /> event, the <see cref="T:System.Web.UI.WebControls.GridView" /> control might not enter edit mode for the specified row. If you read the value of this property in other event handlers, the index is not guaranteed to reflect the row that is being edited.</para>
          <para>To determine which row the user has clicked an <ui>Edit</ui> button or hyperlink in before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode, you can retrieve the row index from the <see cref="P:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> object in the <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event handler.</para>
          <para>To prevent the <see cref="T:System.Web.UI.WebControls.GridView" /> control from entering edit mode after a user has clicked an <ui>Edit</ui> button or hyperlink, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> object to true in the <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event handler.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the index of the row to edit.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" /> property to control the appearance of the row being edited in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, EditRowStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest an &lt;EditRowStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, EditRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the row selected for editing in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" /> property to control the appearance of the null row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The null row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, EmptyDataRowStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest an &lt;EmptyDataRowStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, EmptyDataRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the empty data row rendered when a <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to a data source that does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow), System.ComponentModel.BindingDirection.OneWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The empty data row is displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> property.</para>
          <para>To specify a custom template for the empty data row, first place &lt;EmptyDataTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. You can then list the contents of the template between the opening and closing &lt;EmptyDataTemplate&gt; tags. To control the style of the empty data row, use the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" /> property. Alternatively, you can use the built-in UI for the empty data row by setting the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" /> property instead of this property.</para>
          <para>For information about how to programmatically access controls that you declare in an empty data template, see <format type="text/html"><a href="59964ef8-72ef-4159-9f1a-5b230ff46fb3">How to: Access Server Controls by ID</a></format>.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" /> and <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> property takes precedence.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the user-defined content for the empty data row rendered when a <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to a data source that does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The empty data row is displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control when the data source that is bound to the control does not contain any records. Use the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" /> property to specify the text to display in the empty data row. To control the style of the empty data row, use the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" /> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> property instead of this property.</para>
          <block subset="none" type="note">
            <para>If both the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" /> and <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> properties are set, the <see cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" /> property takes precedence.</para>
          </block>
          <para>The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <see cref="T:System.ComponentModel.LocalizableAttribute" /> and <format type="text/html"><a href="8ef3838e-9d05-4236-9dd0-ceecff9df80d">ASP.NET Globalization and Localization</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the text to display in the empty data row rendered when a <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to a data source that does not contain any records.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnableSortingAndPagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnableSortingAndPagingCallbacks { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>By default, when a sorting or paging operation is performed, the <see cref="T:System.Web.UI.WebControls.GridView" /> control posts back to the server to perform the operation. When the <see cref="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" /> property is set to true, a service is called on the client to perform sorting and paging operations, which eliminates the need to post back to the server.</para>
          <block subset="none" type="note">
            <para>Not all browsers support this feature. To determine whether a browser supports this feature, use the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" /> property.</para>
          </block>
          <para>All columns in the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection must support callbacks for this feature to work. If the <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> collection contains a column that does not support callbacks, such as <see cref="T:System.Web.UI.WebControls.TemplateField" />, a <see cref="T:System.NotSupportedException" /> exception is raised.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether client-side callbacks are used for sorting and paging operations.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to retrieve the values of each field declared within the row specified by the <paramref name="row" /> parameter. You can specify whether the extracted values include read-only fields and key fields by using the <paramref name="includeReadOnlyFields" /> and <paramref name="includePrimaryKey" /> parameters, respectively.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the values of each field declared within the specified row and stores them in the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object.</para>
        </summary>
        <param name="fieldValues">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> used to store the field values.</param>
        <param name="row">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.WebControls.GridViewRow" /> from which to retrieve the field values.</param>
        <param name="includeReadOnlyFields">
          <attribution license="cc4" from="Microsoft" modified="false" />true to include read-only fields; otherwise, false.</param>
        <param name="includePrimaryKey">
          <attribution license="cc4" from="Microsoft" modified="false" />true to include the primary key field or fields; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.FooterRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the footer row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.FooterRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.GridView" /> control creates the footer row in the <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.GridView.FooterRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.GridView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.GridView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the footer row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.FooterStyle" /> property to control the appearance of the footer row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, FooterStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest a &lt;FooterStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, FooterStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the footer row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control implements the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and uses the <see cref="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" /> to asynchronously retrieve data and the <see cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" /> method to return the retrieved data to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the result of a callback event that targets a control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The results of the callback.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl control, string argument);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" /> method is a helper method used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create the callback script for a button that performs a sorting operation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the callback script for a button that performs a sorting operation.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The callback script for a button that performs a sorting operation.</para>
        </returns>
        <param name="argument">
          <attribution license="cc4" from="Microsoft" modified="false" />The arguments to pass to the callback script.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.GridLines.Both)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.GridLines" /> property to specify the gridline style for a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The following table lists the available styles.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Style </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>GridLines.None</para>
              </term>
              <description>
                <para>No gridlines are displayed.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Horizontal</para>
              </term>
              <description>
                <para>Displays the horizontal gridlines only.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Vertical</para>
              </term>
              <description>
                <para>Displays the vertical gridlines only.</para>
              </description>
            </item>
            <item>
              <term>
                <para>GridLines.Both</para>
              </term>
              <description>
                <para>Displays both the horizontal and vertical gridlines.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the gridline style for a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.HeaderRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the header row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.HeaderRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.GridView" /> control creates the header row in the <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the header row, for example, when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.GridView.HeaderRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.GridView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.GridView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the header row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" /> property to control the appearance of the header row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, HeaderStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest a &lt;HeaderStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, HeaderStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the header row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.HorizontalAlign.NotSet)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.HorizontalAlign" /> property to specify the horizontal alignment of a <see cref="T:System.Web.UI.WebControls.GridView" /> control within the page. The following table lists the different horizontal alignment styles.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Alignment value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>HorizontalAlign.NotSet</para>
              </term>
              <description>
                <para>The horizontal alignment of the <see cref="T:System.Web.UI.WebControls.GridView" /> control has not been set.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Left</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is left-aligned on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Center</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is centered on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Right</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is right-aligned on the page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>HorizontalAlign.Justify</para>
              </term>
              <description>
                <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control is aligned with both the left and right margins of the page.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the horizontal alignment of a <see cref="T:System.Web.UI.WebControls.GridView" /> control on the page.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource dataSource);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)" /> method is used to initialize the pager row displayed when the paging feature is enabled.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes the pager row displayed when the paging feature is enabled.</para>
        </summary>
        <param name="row">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> that represents the pager row to initialize. </param>
        <param name="columnSpan">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of columns the pager row should span. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="fields" Type="System.Web.UI.WebControls.DataControlField[]" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])" /> method is used to initialize a row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <param name="row">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> that represents the row to initialize. </param>
        <param name="fields">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.Web.UI.WebControls.DataControlField" /> objects that represent the column fields in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.IsBindableType(System.Type)" /> method is a helper method that is commonly used by control developers to programmatically determine whether the specified data type can be bound to a column in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The following data types can be bound to a column in a <see cref="T:System.Web.UI.WebControls.GridView" /> control:</para>
          <list type="bullet">
            <item>
              <para>
                <see cref="T:System.Boolean" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Byte" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Char" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.DateTime" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Decimal" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Double" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Guid" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Int16" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Int32" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Int64" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.SByte" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.Single" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.String" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.UInt16" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.UInt32" />
              </para>
            </item>
            <item>
              <para>
                <see cref="T:System.UInt64" />
              </para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified data type can be bound to a column in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified data type can be bound to a column in a <see cref="T:System.Web.UI.WebControls.GridView" /> control; otherwise, false.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Type" /> that represents the data type to test. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object ob);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ob" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ob">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to load the state of the properties in the <see cref="T:System.Web.UI.WebControls.GridView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.GridView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <format type="text/html"><a href="0218d965-5d30-445b-b6a6-8870e70e63ce">ASP.NET State Management Overview</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <param name="savedState">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Object" /> that contains the saved view state values for the control. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> method implements the <see cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" /> method to pass events from child controls to the page hierarchy.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the event for the Web server control is passed up the page's user interface (UI) server control hierarchy.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the event has been canceled; otherwise, false.</para>
        </returns>
        <param name="source">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event. </param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnDataPropertyChanged" /> method is a helper method used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to rebind the control to its data after the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />, <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />, or <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property is changed.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Rebinds the <see cref="T:System.Web.UI.WebControls.GridView" /> control to its data after the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />, <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />, or <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> property is changed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method notifies a <see cref="T:System.Web.UI.WebControls.GridView" /> control that the underlying data source has changed and that the control should rebind. Typically, the <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method is called when a property of the data source view has changed.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event.</para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When notified by this method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control's life cycle, the control's View state has yet to be populated. Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data. </param>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> event is raised when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> event is raised when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the initialized state of the data-bound control before the control is loaded.</para>
        </summary>
        <param name="sender">
          <attribution license="cc4" from="Microsoft" modified="false" />The source of the event.</param>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method notifies the server control to perform any necessary pre-rendering steps prior to saving view state and rendering content.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      </Docs>
    </Member>
    <Member MemberName="OnRowCancelingEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> event is raised when a button is clicked in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Before the <see cref="T:System.Web.UI.WebControls.GridView" /> control can be rendered, a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object must be created for each row in the control. The <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event is raised when each row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Before the <see cref="T:System.Web.UI.WebControls.GridView" /> control can be rendered, each row in the control must be bound to a record in the data source. The <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> event is raised when a data row (represented by a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object) is bound to data in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
          <para>A Visual Studio Web site project with source code is available to accompany this topic: <see cref="http://go.microsoft.com/fwlink/?LinkId=191882">Download</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> event is raised when a row's Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> event is raised when a row's Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewEditEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event is raised when a row's Edit button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> that contains event data. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event is raised when a row's Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> event is raised when a row's Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> event is raised when a row's Select button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> event is raised when a row's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> event is raised when the hyperlink to sort a column is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.EventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSortEventArgs" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> event is raised when the hyperlink to sort a column is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.</para>
          <para>Raising an event invokes the event handler through a delegate. For more information, see <format type="text/html"><a href="f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2">Raising an Event</a></format>.</para>
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> event.</para>
        </summary>
        <param name="e">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" /> that contains event data.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true), use the <see cref="P:System.Web.UI.WebControls.GridView.PageCount" /> property to determine the total number of pages required to display the records in the data source. This value is calculated by dividing the total number of records in the data source by the number of records displayed in a page (as specified by the <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> property) and rounding up.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of pages required to display the records of the data source in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true), use the <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> property to determine the index of the currently displayed page. You can also use this property to programmatically change the displayed page.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the index of the currently displayed page.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> event is raised when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as a custom paging operation, whenever this event occurs.</para>
          <para>To determine the index of the page selected by the user, use the <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> property of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when one of the pager buttons is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> event is raised when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the paging operation, whenever this event occurs.</para>
          <block subset="none" type="note">
            <para>This event is not raised when you programmatically set the <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> property.</para>
          </block>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To cancel the paging operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" /> object to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when one of the pager buttons is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the paging operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.PagerSettings" /> property to control the settings of the pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The pager row is displayed when the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object (for example, PagerSettings-Mode).</para>
            </item>
            <item>
              <para>Nest a &lt;PagerSettings&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, PagerStyle.Mode). Common settings usually include the pager row's display mode and custom text or images for the navigation controls.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.PagerSettings" /> object that enables you to set the properties of the pager buttons in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.PagerStyle" /> property to control the appearance of the pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The pager row is displayed when the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, PagerStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest a &lt;PagerStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, PagerStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A pager row is displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control when the paging feature is enabled (when the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property is set to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the <see cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" /> property.</para>
          <block subset="none" type="note">
            <para>When the <see cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" /> property is set, it overrides the built-in pager row UI.</para>
          </block>
          <para>To specify a custom template for the pager row, first place &lt;PagerTemplate&gt; tags between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control. You can then list the contents of the template between the opening and closing &lt;PagerTemplate&gt; tags. To control the appearance of the pager row, use the <see cref="P:System.Web.UI.WebControls.GridView.PagerStyle" /> property.</para>
          <para>Typically, button controls are added to the pager template to perform the paging operations. The <see cref="T:System.Web.UI.WebControls.GridView" /> control performs a paging operation when a button control with its CommandName property set to "Page" is clicked. The button's CommandArgument property determines the type of paging operation to perform. The following table lists the command argument values supported by the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>
                    <paramref name="CommandArgument" /> value</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>"Next"</para>
              </term>
              <description>
                <para>Navigates to the next page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Prev"</para>
              </term>
              <description>
                <para>Navigates to the previous page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"First"</para>
              </term>
              <description>
                <para>Navigates to the first page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Last"</para>
              </term>
              <description>
                <para>Navigates to the last page.</para>
              </description>
            </item>
            <item>
              <term>
                <para>Integer value</para>
              </term>
              <description>
                <para>Navigates to the specified page number.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the custom content for the pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the paging feature is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true), use the <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> property to specify the number of records to display on a single page.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of records to display on a page in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)" /> method is a helper method called by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to bind the specified data source to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Binds the specified data source to the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <param name="data">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Collections.IEnumerable" /> that contains the data source.</param>
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to establish the control hierarchy for the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Establishes the control hierarchy.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgs">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)" /> method is a helper method used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create the arguments for the callback handler in the <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the arguments for the callback handler in the <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> method.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The page calls the <see cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" /> method when a postback event occurs that raises the appropriate events for a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> object for the events that are raised.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the appropriate events for the <see cref="T:System.Web.UI.WebControls.GridView" /> control when it posts back to the server.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />The event argument from which to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> for the event or events that are raised.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)" /> method is used to render the server control content to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Renders the Web server control content to the client's browser using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</para>
        </summary>
        <param name="writer">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Web.UI.HtmlTextWriter" /> used to render the server control content on the client's browser. </param>
      </Docs>
    </Member>
    <Member MemberName="RowCancelingEdit">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCancelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> event is raised when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode. This enables you to provide an event-handling method that performs a custom routine, such as stopping the cancel operation if it would put the row in an undesired state, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the cancel operation should be stopped. To stop the cancel operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" /> object to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when the Cancel button of a row in edit mode is clicked, but before the row exits edit mode.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> event is raised when a button is clicked in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to provide an event-handling method that performs a custom routine whenever this event occurs.</para>
          <para>Buttons within a <see cref="T:System.Web.UI.WebControls.GridView" /> control can also invoke some of the built-in functionality of the control. To perform one of these operations, set the CommandName property of a button to one of the values in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>
                    <paramref name="CommandName" /> value</para>
                </term>
                <description>
                  <para>Description</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>"Cancel"</para>
              </term>
              <description>
                <para>Cancels an edit operation and returns the <see cref="T:System.Web.UI.WebControls.GridView" /> control to read-only mode. Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> event.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Delete"</para>
              </term>
              <description>
                <para>Deletes the current record. Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> and <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> events.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Edit"</para>
              </term>
              <description>
                <para>Puts the current record in edit mode. Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Page"</para>
              </term>
              <description>
                <para>Performs a paging operation. Sets the CommandArgument property of the button to "First", "Last", "Next", "Prev", or a page number to specify the type of paging operation to perform. Raises the <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> and <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> events.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Select"</para>
              </term>
              <description>
                <para>Selects the current record. Raises the <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> and <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> events.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Sort"</para>
              </term>
              <description>
                <para>Sorts the <see cref="T:System.Web.UI.WebControls.GridView" /> control. Raises the <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> and <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> events.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"Update"</para>
              </term>
              <description>
                <para>Updates the current record in the data source. Raises the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> and <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> events.</para>
              </description>
            </item>
          </list>
          <para>Although the <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> event is raised when a button listed in the previous table is clicked, it is recommended that you use the events listed in the table for the operation.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> object is passed to the event-handling method, which enables you to determine the command name and command argument of the button clicked.</para>
          <block subset="none" type="note">
            <para>To determine the index of the row that raised the event, use the <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> property of the event argument that is passed to the event. The <see cref="T:System.Web.UI.WebControls.ButtonField" /> class automatically populates the <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> property with the appropriate index value. For other command buttons, you must manually set the <see cref="P:System.Web.UI.WebControls.Button.CommandArgument" /> property of the command button. For example, you can set the <see cref="P:System.Web.UI.WebControls.Button.CommandArgument" /> to &lt;%# Container.DataItemIndex %&gt; when the <see cref="T:System.Web.UI.WebControls.GridView" /> control has no paging enabled.</para>
          </block>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a button is clicked in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Before the <see cref="T:System.Web.UI.WebControls.GridView" /> control can be rendered, a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object must be created for each row in the control. The <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event is raised when each row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control is created. This enables you to provide an event-handling method that performs a custom routine, such as adding custom content to a row, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> object is passed to the event-handling method, which enables you to access the properties of the row being created. To access a specific cell in the row, use the <see cref="P:System.Web.UI.WebControls.TableRow.Cells" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> object. You can determine which row type (header row, data row, and so on) is being created by using the <see cref="P:System.Web.UI.WebControls.GridViewRow.RowType" /> property.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row is created in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Before the <see cref="T:System.Web.UI.WebControls.GridView" /> control can be rendered, each row in the control must be bound to a record in the data source. The <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> event is raised when a data row (represented by a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object) is bound to data in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This enables you to provide an event-handling method that performs a custom routine, such as modifying the values of the data bound to the row, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> object is passed to the event-handling method, which enables you to access the properties of the row being bound. To access a specific cell in the row, use the <see cref="P:System.Web.UI.WebControls.TableRow.Cells" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object contained in the <see cref="P:System.Web.UI.WebControls.GridViewRowEventArgs.Row" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> object. You can determine which row type (header row, data row, and so on) is being bound by using the <see cref="P:System.Web.UI.WebControls.GridViewRow.RowType" /> property.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a data row is bound to data in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> event is raised when a row's Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" /> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <see cref="P:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" /> object.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Delete button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> event is raised when a row's Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the delete operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" /> object to true. You can also manipulate the <see cref="P:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys" /> and <see cref="P:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values" /> collections, if necessary, before the values are passed to the data source.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Delete button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control deletes the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowEditing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> event is raised when a row's Edit button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode. This enables you to provide an event-handling method that performs a custom routine, such as canceling the edit operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the edit operation should be canceled. To cancel the edit operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> object to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Edit button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control enters edit mode.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowHeaderColumn">
      <MemberSignature Language="C#" Value="public virtual string RowHeaderColumn { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In HTML, the header of a table can be associated with either a row or a column. The direction is specified by setting the scope attribute of the &lt;th&gt; elements. The <see cref="T:System.Web.UI.WebControls.GridView" /> control has a built-in header row that can be displayed by setting the <see cref="P:System.Web.UI.WebControls.GridView.ShowHeader" /> property to true. You can also optionally specify a header column (usually the first or last column in the <see cref="T:System.Web.UI.WebControls.GridView" /> control) by setting this property. When this property is set, all cells in the column that corresponds to the specified field name are rendered as &lt;th scope="row"&gt; elements.</para>
          <block subset="none" type="note">
            <para>Although the specified column is treated like a header, the <see cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />, <see cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />, and <see cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" /> properties do not apply to the header column.</para>
          </block>
          <para>The default rendering of the &lt;th&gt; element is preserved, rendering text as bold and centered horizontally. Developers can override the behavior of the &lt;th&gt; element using a cascading style sheet.</para>
          <block subset="none" type="note">
            <para>This property works only with bound fields. It does not work with template fields.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the name of the column to use as the column header for the <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.GridView.Rows" /> property (collection) is used to store the data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. The <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically populates the <see cref="P:System.Web.UI.WebControls.GridView.Rows" /> collection by creating a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object for each record in the data source and then adding each object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.</para>
          <block subset="none" type="note">
            <para>Only rows with their <see cref="P:System.Web.UI.WebControls.GridViewRow.RowType" /> property set to DataControlRowType.DataRow are stored in the <see cref="P:System.Web.UI.WebControls.GridView.Rows" /> collection. The <see cref="T:System.Web.UI.WebControls.GridViewRow" /> objects that represent the header, footer, and pager rows are not included in the collection.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a collection of <see cref="T:System.Web.UI.WebControls.GridViewRow" /> objects that represent the data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" /> property to control the appearance of the data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. When the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> property is also set, the data rows are displayed alternating between the <see cref="P:System.Web.UI.WebControls.GridView.RowStyle" /> settings and the <see cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" /> settings. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, RowStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest a &lt;RowStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, RowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the data rows in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> event is raised when a row's Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> object is passed to the event-handling method, which enables you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event-handling method by setting the <see cref="P:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> object.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Update button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> event is raised when a row's Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row. This enables you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the current row and to indicate that the update operation should be canceled. To cancel the update operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" /> object to true. You can also manipulate the <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys" />, <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues" />, and <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues" /> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys" />, <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues" /> and <see cref="P:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues" /> collections are automatically populated only when the <see cref="T:System.Web.UI.WebControls.GridView" /> control is bound to data by using the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property. </para>
          </block>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Update button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control updates the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is used to save the state of the properties in the <see cref="T:System.Web.UI.WebControls.GridView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.GridView" /> control that need to be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Object" /> that contains the saved view state values for the control.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property is set, the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically creates a <see cref="T:System.Web.UI.WebControls.DataKey" /> object for each row in the control using the value or values of the specified field or fields. The <see cref="T:System.Web.UI.WebControls.DataKey" /> objects are then added to the control's <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> collection. Normally, the <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> property is used to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object for a specific data row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. However, if you just need to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object of the currently selected row, you can simply use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property as a shortcut. </para>
          <block subset="none" type="note">
            <para>This is the same as retrieving the <see cref="T:System.Web.UI.WebControls.DataKey" /> object at the index specified by the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property from the <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> collection. You can also use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedValue" /> property to retrieve the data key value for the currently selected row directly.</para>
          </block>
          <para>If you are creating a <see cref="T:System.Web.UI.WebControls.ControlParameter" /> object and want to access a key field other than the first field, use the indexed <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property in the <see cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" /> property of the <see cref="T:System.Web.UI.WebControls.ControlParameter" /> object. An example is shown below.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Web.UI.WebControls.DataKey" /> object that contains the data key value for the selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property to determine the index of the currently selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. You can also use this property to programmatically select a row in the control. To clear the selection of a row, set this property to -1. The appearance of the currently selected row can be customized by using the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" /> property. To access the currently selected row, use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRow" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the index of the selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> event is raised when a row's Select button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as updating a status label with the currently selected row, whenever this event occurs.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Select button is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> event is raised when a row's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the selection operation, whenever this event occurs.</para>
          <block subset="none" type="note">
            <para>This event is not raised when you programmatically set the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property.</para>
          </block>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" /> object is passed to the event-handling method, which enables you to determine the index of the row selected by the user and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" /> object to true.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when a row's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the select operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a row is selected in a <see cref="T:System.Web.UI.WebControls.GridView" /> control, use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRow" /> property to retrieve the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents that row.</para>
          <block subset="none" type="note">
            <para>This is the same as retrieving the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object at the index specified by the <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> property from the <see cref="P:System.Web.UI.WebControls.GridView.Rows" /> collection.</para>
          </block>
          <para>This object can then be used to access the properties of the selected row.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the selected row in the control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" /> property to control the appearance of the selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This property is read-only; however, you can set the properties of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object it returns. The properties can be set declaratively using one of the following methods:</para>
          <list type="bullet">
            <item>
              <para>Place an attribute in the opening tag of the <see cref="T:System.Web.UI.WebControls.GridView" /> control in the form <paramref name="Property-Subproperty" />, where <paramref name="Subproperty" /> is a property of the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object (for example, SelectedRowStyle-ForeColor).</para>
            </item>
            <item>
              <para>Nest a &lt;SelectedRowStyle&gt; element between the opening and closing tags of the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
            </item>
          </list>
          <para>The properties can also be set programmatically in the form <paramref name="Property.Subproperty" /> (for example, SelectedRowStyle.ForeColor). Common settings usually include a custom background color, foreground color, and font properties.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a reference to the <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> object that enables you to set the appearance of the selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> property is set with a comma-separated list of field names that represent the primary key of the data source, the <see cref="T:System.Web.UI.WebControls.GridView" /> control automatically creates a <see cref="T:System.Web.UI.WebControls.DataKey" /> object for each row in the control using the value or values of the specified field or fields. The <see cref="T:System.Web.UI.WebControls.DataKey" /> objects are then added to the control's <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> collection. Normally, the <see cref="P:System.Web.UI.WebControls.GridView.DataKeys" /> property is used to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object for a specific data row in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. However, if you just need to retrieve the <see cref="T:System.Web.UI.WebControls.DataKey" /> object of the currently selected row, you can simply use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property as a shortcut. As a further shortcut, you can directly determine the data key value of the first key field of the selected row by using the <see cref="P:System.Web.UI.WebControls.GridView.SelectedValue" /> property.</para>
          <para>If you are creating a <see cref="T:System.Web.UI.WebControls.ControlParameter" /> object and want to access a key field other than the first field, use the <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" /> property. For an example, see <see cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the data key value of the selected row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.ShowFooter" /> property to specify whether a <see cref="T:System.Web.UI.WebControls.GridView" /> control displays the footer row. To control the appearance of the footer row, use the <see cref="P:System.Web.UI.WebControls.GridView.FooterStyle" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the footer row is displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.ShowHeader" /> property to specify whether a <see cref="T:System.Web.UI.WebControls.GridView" /> control displays the header row. To control the appearance of the header row, use the <see cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the header row is displayed in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string newSortExpression, System.Web.UI.WebControls.SortDirection newSortDirection);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newSortExpression" Type="System.String" />
        <Parameter Name="newSortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="newSortExpression">To be added.</param>
        <param name="newSortDirection">To be added.</param>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" /> method to programmatically sort the <see cref="T:System.Web.UI.WebControls.GridView" /> control using the specified sort expression and direction. The sort expression specifies the column or columns with which to sort. To sort multiple columns, create a sort expression that contains a comma-separated list of field names. The sort direction indicates whether sorting is performed in ascending or descending order. This method is commonly used when you need to sort the <see cref="T:System.Web.UI.WebControls.GridView" /> control from outside of the control, such as from a different control on the page. This method is also commonly used to programmatically set a default sort order for the <see cref="T:System.Web.UI.WebControls.GridView" /> control when it is first rendered. Calling this method also raises the <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> and <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> events.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sorts the <see cref="T:System.Web.UI.WebControls.GridView" /> control based on the specified sort expression and direction.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(System.Web.UI.WebControls.SortDirection.Ascending)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.SortDirection" /> property to determine whether the column being sorted is sorted in ascending or descending order.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the sort direction or when you are adding your own custom sorting functionality to a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the sort direction of the column being sorted.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> event is raised when the hyperlink to sort a column is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as custom sorting, whenever this event occurs.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when the hyperlink to sort a column is clicked, but after the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.SortExpression" /> property to determine the sort expression associated with the column or columns being sorted.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control has a built-in sorting feature that automatically sets this property. This property is typically used only when you need to programmatically determine the column or columns being sorted or when you are adding your own custom sorting functionality to a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
          <para>When multiple columns are sorted, this property contains a comma-separated list of the fields by which to sort.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the sort expression associated with the column or columns being sorted.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSortEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> event is raised when the hyperlink to sort a column is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation. This enables you to provide an event-handling method that performs a custom routine, such as canceling the sorting operation, whenever this event occurs.</para>
          <para>A <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" /> object is passed to the event-handling method, which enables you to determine the sort expression for the column and to indicate that the selection operation should be canceled. To cancel the selection operation, set the <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> property of the <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" /> object to true.</para>
          <para>For information about how to programmatically initiate a sort operation, see the <see cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" /> method.</para>
          <para>For more information about handling events, see <format type="text/html"><a href="01e4f1bc-e55e-413f-98c7-6588493e5f67">Consuming Events</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs when the hyperlink to sort a column is clicked, but before the <see cref="T:System.Web.UI.WebControls.GridView" /> control handles the sort operation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Web.UI.WebControls.GridView" /> control implements the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and uses the <see cref="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" /> to asynchronously retrieve data and the <see cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" /> method to return the retrieved data to the control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the result of a callback event that targets a control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The results of the callback.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgs">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> is a helper method that is used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create the arguments for the callback handler in the <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the arguments for the callback handler in the <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> method.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The page calls the <see cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" /> method when a postback event occurs to raise the appropriate events for a <see cref="T:System.Web.UI.WebControls.GridView" /> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> object for the event or events that are raised.</para>
          <block subset="none" type="note">
            <para>This method is used primarily by control developers to extend the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Raises the appropriate events for the <see cref="T:System.Web.UI.WebControls.GridView" /> control when it posts back to the server.</para>
        </summary>
        <param name="eventArgument">
          <attribution license="cc4" from="Microsoft" modified="false" />The event argument from which to create a <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> for the event or events that are raised.</param>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl control, string argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" /> is a helper method that is used by the <see cref="T:System.Web.UI.WebControls.GridView" /> control to create the callback script for a button that performs a sorting operation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the callback script for a button that performs a sorting operation.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The callback script for a button that performs a sorting operation.</para>
        </returns>
        <param name="argument">
          <attribution license="cc4" from="Microsoft" modified="false" />The arguments to pass to the callback script.</param>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="control">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a <see cref="T:System.Web.UI.PostBackOptions" /> object that represents the postback behavior of the specified button control.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.UI.PostBackOptions" /> that represents the postback behavior of the specified button control.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.UI.WebControls.GridView.TagKey" /> property allows the output stream to write the appropriate HTML markup for the <see cref="T:System.Web.UI.WebControls.GridView" /> control. When the <see cref="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" /> property is set to true, this property returns HtmlTextWriterTag.Div; otherwise, this property returns HtmlTextWriterTag.Table.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When paging is enabled (by setting the <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> property to true), an additional row called the pager row is automatically displayed in the <see cref="T:System.Web.UI.WebControls.GridView" /> control. The pager row contains controls that allow the user to navigate to the other pages and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the <see cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" /> property to programmatically access the <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the top pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" /> property is available only after the <see cref="T:System.Web.UI.WebControls.GridView" /> control creates the top pager row in the <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> event.</para>
          </block>
          <para>This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the <see cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" /> property must be performed after the <see cref="T:System.Web.UI.WebControls.GridView" /> control has been rendered; otherwise, the <see cref="T:System.Web.UI.WebControls.GridView" /> control will overwrite any changes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Web.UI.WebControls.GridViewRow" /> object that represents the top pager row in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is overridden to mark the starting point at which to begin tracking and saving changes to the control as part of the control's view state.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.GridView" /> control so they can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object. This object is accessible through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UpdateRow">
      <MemberSignature Language="C#" Value="public virtual void UpdateRow (int rowIndex, bool causesValidation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" /> method to programmatically update the record at the specified index in the data source. This method is commonly used when you need to update a record from outside of the <see cref="T:System.Web.UI.WebControls.GridView" /> control, such as from a different control on the page.</para>
          <block subset="none" type="note">
            <para>This method can be called only for the row that is currently in edit mode, or for a row that contains a two-way data-bound input control. For more information about two-way binding expressions, see <format type="text/html"><a href="ab7b2846-975b-4057-a948-45527497c742">ASP.NET Data Binding</a></format>.</para>
          </block>
          <para>To specify whether page validation is performed before the update operation, use the <paramref name="causesValidation" /> parameter. Calling this method also raises the <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> and <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> events.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Updates the record at the specified row index using the field values of the row.</para>
        </summary>
        <param name="rowIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the row to update.</param>
        <param name="causesValidation">
          <attribution license="cc4" from="Microsoft" modified="false" />true to perform page validation when this method is called; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" /> property to specify whether the <see cref="T:System.Web.UI.WebControls.GridView" /> control renders its header row in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices. By default, the value of this property is true and the header for the control is rendered using &lt;th&gt; table header cell tags. In addition, a scope="col" attribute is added to the table header to specify that the header applies to all the cells in the column. The default rendering of the &lt;th&gt; element is preserved, rendering text as bold and centered horizontally. Developers can override the style of the &lt;th&gt; element using a cascading style sheet.</para>
          <para>If the value of this property is false, the header for the control is rendered using &lt;td&gt; table cell tags.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether a <see cref="T:System.Web.UI.WebControls.GridView" /> control renders its header in an accessible format. This property is provided to make the control more accessible to users of assistive technology devices.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>