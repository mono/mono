<?xml version="1.0" encoding="utf-8"?>
<Type Name="HttpWorkerRequest" FullName="System.Web.HttpWorkerRequest">
  <TypeSignature Language="C#" Maintainer="auto" Value="public abstract class HttpWorkerRequest" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>In most cases, your code will not deal with <see cref="T:System.Web.HttpWorkerRequest" /> directly because request and response data are exposed through the <see cref="T:System.Web.HttpRequest" /> and <see cref="T:System.Web.HttpResponse" /> classes. Some internal ASP.NET classes extend this class. If your code implements its own hosting environment, it will need to extend this class to call the <see cref="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)" /> method. In addition, your code could create a derived class for the purpose of child-request execution within a given application in order to pass its instance to <see cref="M:System.Web.HttpRuntime.ProcessRequest(System.Web.HttpWorkerRequest)" />. In this case, the derived class should keep a reference to the current <see cref="T:System.Web.HttpWorkerRequest" /> and delegate most of the methods to it.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests. </para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWorkerRequest ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.HttpWorkerRequest.#ctor" /> constructor is the default constructor for the <see cref="T:System.Web.HttpWorkerRequest" /> class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.HttpWorkerRequest" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="public virtual void CloseConnection ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Terminates the connection with the client.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EndOfRequest">
      <MemberSignature Language="C#" Value="public abstract void EndOfRequest ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Used by the runtime to notify the <see cref="T:System.Web.HttpWorkerRequest" /> that request processing for the current request is complete.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FlushResponse">
      <MemberSignature Language="C#" Value="public abstract void FlushResponse (bool finalFlush);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalFlush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sends all pending response data to the client.</para>
        </summary>
        <param name="finalFlush">
          <attribution license="cc4" from="Microsoft" modified="false" />true if this is the last time response data will be flushed; otherwise, false. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetAppPath">
      <MemberSignature Language="C#" Value="public virtual string GetAppPath ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the virtual path to the currently executing server application.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The virtual path of the current application.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetAppPathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetAppPathTranslated ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the physical path to the currently executing server application.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The physical path of the current application.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetAppPoolID">
      <MemberSignature Language="C#" Value="public virtual string GetAppPoolID ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the application pool ID for the current URL.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Always returns null.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetBytesRead">
      <MemberSignature Language="C#" Value="public virtual long GetBytesRead ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of bytes read in from the client.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A Long containing the number of bytes read.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificate ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If no certificate is sent, the <see cref="P:System.Web.HttpRequest.ClientCertificate" /> collection returns empty.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the certification fields (specified in the X.509 standard) from a request issued by the client.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A byte array containing the stream of the entire certificate content.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificateBinaryIssuer">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificateBinaryIssuer ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the certificate issuer, in binary format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A byte array containing the certificate issuer expressed in binary format.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificateEncoding">
      <MemberSignature Language="C#" Value="public virtual int GetClientCertificateEncoding ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the <see cref="T:System.Text.Encoding" /> object in which the client certificate was encoded. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The certificate encoding, expressed as an integer.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificatePublicKey">
      <MemberSignature Language="C#" Value="public virtual byte[] GetClientCertificatePublicKey ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets a PublicKey object associated with the client certificate.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A PublicKey object.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificateValidFrom">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidFrom ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the date when the certificate becomes valid. The date varies with international settings. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.DateTime" /> object representing when the certificate becomes valid.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetClientCertificateValidUntil">
      <MemberSignature Language="C#" Value="public virtual DateTime GetClientCertificateValidUntil ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the certificate expiration date.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.DateTime" /> object representing the date that the certificate expires.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetConnectionID">
      <MemberSignature Language="C#" Value="public virtual long GetConnectionID ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the ID of the current connection.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Always returns 0.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetFilePath">
      <MemberSignature Language="C#" Value="public virtual string GetFilePath ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the virtual path to the requested URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The path to the requested URI.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetFilePathTranslated">
      <MemberSignature Language="C#" Value="public virtual string GetFilePathTranslated ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the physical file path to the requested URI (and translates it from virtual path to physical path: for example, "/proj1/page.aspx" to "c:\dir\page.aspx") </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The translated physical file path to the requested URI.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetHttpVerbName">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVerbName ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the specified member of the request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTTP verb returned in the request header.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetHttpVersion">
      <MemberSignature Language="C#" Value="public abstract string GetHttpVersion ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides access to the HTTP version of the request (for example, "HTTP/1.1").</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTTP version returned in the request header.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetKnownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetKnownRequestHeader (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>For example to obtain the value of the Content-Length header, you can use:


<example><code lang="C#">
    string value = worker_request.GetKnownRequestHeader (HttpWorkerRequest.HeaderContentLength);
  </code></example></remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the standard HTTP request header that corresponds to the specified index.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTTP request header.</para>
        </returns>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the header. For example, the <see cref="F:System.Web.HttpWorkerRequest.HeaderAllow" /> field. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetKnownRequestHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownRequestHeaderIndex (string header);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the index number of the specified HTTP request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The index number of the HTTP request header specified in the <paramref name="header" /> parameter.</para>
        </returns>
        <param name="header">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetKnownRequestHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownRequestHeaderName (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the name of the specified HTTP request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The name of the HTTP request header specified in the <paramref name="index" /> parameter.</para>
        </returns>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index number of the header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetKnownResponseHeaderIndex">
      <MemberSignature Language="C#" Value="public static int GetKnownResponseHeaderIndex (string header);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="header" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the index number of the specified HTTP response header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The index number of the HTTP response header specified in the <paramref name="header" /> parameter.</para>
        </returns>
        <param name="header">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the HTTP header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetKnownResponseHeaderName">
      <MemberSignature Language="C#" Value="public static string GetKnownResponseHeaderName (int index);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the name of the specified HTTP response header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The name of the HTTP response header specified in the <paramref name="index" /> parameter.</para>
        </returns>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index number of the header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetLocalAddress">
      <MemberSignature Language="C#" Value="public abstract string GetLocalAddress ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides access to the specified member of the request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server IP address returned in the request header.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetLocalPort">
      <MemberSignature Language="C#" Value="public abstract int GetLocalPort ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides access to the specified member of the request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server port number returned in the request header.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPathInfo">
      <MemberSignature Language="C#" Value="public virtual string GetPathInfo ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns additional path information for a resource with a URL extension. That is, for the path /virdir/page.html/tail, the GetPathInfo value is /tail.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Additional path information for a resource.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual byte[] GetPreloadedEntityBody ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>This method should be invoked prior to calling <see cref="M:System.Web.HttpWorkerRequest.ReadEntityBody(byte[], int)" /> as the web server implementing this class might have loaded some data in advance.
<para>
See also: <see cref="M:System.Web.HttpWorkerRequest.HasEntityBody()" /> and <see cref="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()" />.
</para></remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the portion of the HTTP request body that has already been read.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The portion of the HTTP request body that has been read.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetPreloadedEntityBody">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBody (byte[] buffer, int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the portion of the HTTP request body that has currently been read by using the specified buffer data and byte offset.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The portion of the HTTP request body that has been read.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The data to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte offset at which to begin reading.</param>
      </Docs>
    </Member>
    <Member MemberName="GetPreloadedEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetPreloadedEntityBodyLength ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the length of the portion of the HTTP request body that has currently been read.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An integer containing the length of the currently read HTTP request body.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetProtocol">
      <MemberSignature Language="C#" Value="public virtual string GetProtocol ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>HTTPS if the <see cref="M:System.Web.HttpWorkerRequest.IsSecure" /> method is true, otherwise HTTP.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetQueryString">
      <MemberSignature Language="C#" Value="public abstract string GetQueryString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the query string specified in the request URL.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The request query string.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetQueryStringRawBytes">
      <MemberSignature Language="C#" Value="public virtual byte[] GetQueryStringRawBytes ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the response query string as an array of bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of bytes containing the response.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRawUrl">
      <MemberSignature Language="C#" Value="public abstract string GetRawUrl ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the URL path contained in the request header with the query string appended.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The raw URL path of the request header.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRemoteAddress">
      <MemberSignature Language="C#" Value="public abstract string GetRemoteAddress ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides access to the specified member of the request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The client's IP address.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRemoteName">
      <MemberSignature Language="C#" Value="public virtual string GetRemoteName ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the name of the client computer.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The name of the client computer.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRemotePort">
      <MemberSignature Language="C#" Value="public abstract int GetRemotePort ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Provides access to the specified member of the request header.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The client's HTTP port number.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRequestReason">
      <MemberSignature Language="C#" Value="public virtual int GetRequestReason ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the reason for the request.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reason code. The default is ReasonResponseCacheMiss.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetServerName">
      <MemberSignature Language="C#" Value="public virtual string GetServerName ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the name of the local server.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The name of the local server.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetServerVariable">
      <MemberSignature Language="C#" Value="public virtual string GetServerVariable (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a single server variable from a dictionary of server variables associated with the request.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The requested server variable.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the requested server variable. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetStatusDescription">
      <MemberSignature Language="C#" Value="public static string GetStatusDescription (int code);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a string that describes the name of the specified HTTP status code.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The status description. For example, <see cref="M:System.Web.HttpWorkerRequest.GetStatusDescription(System.Int32)" /> (404) returns "Not Found".</para>
        </returns>
        <param name="code">
          <attribution license="cc4" from="Microsoft" modified="false" />The HTTP status code. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetTotalEntityBodyLength">
      <MemberSignature Language="C#" Value="public virtual int GetTotalEntityBodyLength ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the length of the entire HTTP request body.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An integer containing the length of the entire HTTP request body.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetUnknownRequestHeader">
      <MemberSignature Language="C#" Value="public virtual string GetUnknownRequestHeader (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a nonstandard HTTP request header value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The header value.</para>
        </returns>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The header name. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetUnknownRequestHeaders">
      <MemberSignature Language="C#" Value="public virtual string[][] GetUnknownRequestHeaders ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Get all nonstandard HTTP header name-value pairs.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of header name-value pairs.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetUriPath">
      <MemberSignature Language="C#" Value="public abstract string GetUriPath ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the virtual path to the requested URI.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The path to the requested URI.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetUrlContextID">
      <MemberSignature Language="C#" Value="public virtual long GetUrlContextID ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the context ID of the current connection.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Always returns 0.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetUserToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetUserToken ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, returns the client's impersonation token.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A value representing the client's impersonation token. The default is 0.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetVirtualPathToken">
      <MemberSignature Language="C#" Value="public virtual IntPtr GetVirtualPathToken ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the impersonation token for the request virtual path.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An unmanaged memory pointer for the token for the request virtual path.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>See also: <see cref="M:System.Web.HttpWorkerRequest.IsEntireEntityBodyIsPreloaded()" /> ,
<see cref="M:System.Web.HttpWorkerRequest.GetPreloadedEntityBody()" /> and
<see cref="M:System.Web.HttpWorkerRequest.ReadEntityBody(byte[], int)" /></remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether the request contains body data.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the request contains body data; otherwise, false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderAccept">
      <MemberSignature Language="C#" Value="public const int HeaderAccept = 20;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Accept HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>20</MemberValue>
    </Member>
    <Member MemberName="HeaderAcceptCharset">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptCharset = 21;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Accept-Charset HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>21</MemberValue>
    </Member>
    <Member MemberName="HeaderAcceptEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptEncoding = 22;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Accept-Encoding HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>22</MemberValue>
    </Member>
    <Member MemberName="HeaderAcceptLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptLanguage = 23;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Accept-Language HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>23</MemberValue>
    </Member>
    <Member MemberName="HeaderAcceptRanges">
      <MemberSignature Language="C#" Value="public const int HeaderAcceptRanges = 20;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Accept-Ranges HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>20</MemberValue>
    </Member>
    <Member MemberName="HeaderAge">
      <MemberSignature Language="C#" Value="public const int HeaderAge = 21;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Age HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>21</MemberValue>
    </Member>
    <Member MemberName="HeaderAllow">
      <MemberSignature Language="C#" Value="public const int HeaderAllow = 10;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Allow HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>10</MemberValue>
    </Member>
    <Member MemberName="HeaderAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderAuthorization = 24;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Authorization HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>24</MemberValue>
    </Member>
    <Member MemberName="HeaderCacheControl">
      <MemberSignature Language="C#" Value="public const int HeaderCacheControl = 0;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The index that represents the HTTP Cache-Control HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>0</MemberValue>
    </Member>
    <Member MemberName="HeaderConnection">
      <MemberSignature Language="C#" Value="public const int HeaderConnection = 1;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Connection HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>1</MemberValue>
    </Member>
    <Member MemberName="HeaderContentEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderContentEncoding = 13;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Encoding HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>13</MemberValue>
    </Member>
    <Member MemberName="HeaderContentLanguage">
      <MemberSignature Language="C#" Value="public const int HeaderContentLanguage = 14;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Language HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>14</MemberValue>
    </Member>
    <Member MemberName="HeaderContentLength">
      <MemberSignature Language="C#" Value="public const int HeaderContentLength = 11;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Length HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>11</MemberValue>
    </Member>
    <Member MemberName="HeaderContentLocation">
      <MemberSignature Language="C#" Value="public const int HeaderContentLocation = 15;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Location HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>15</MemberValue>
    </Member>
    <Member MemberName="HeaderContentMd5">
      <MemberSignature Language="C#" Value="public const int HeaderContentMd5 = 16;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-MD5 HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>16</MemberValue>
    </Member>
    <Member MemberName="HeaderContentRange">
      <MemberSignature Language="C#" Value="public const int HeaderContentRange = 17;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Range HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>17</MemberValue>
    </Member>
    <Member MemberName="HeaderContentType">
      <MemberSignature Language="C#" Value="public const int HeaderContentType = 12;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Content-Type HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>12</MemberValue>
    </Member>
    <Member MemberName="HeaderCookie">
      <MemberSignature Language="C#" Value="public const int HeaderCookie = 25;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Cookie HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>25</MemberValue>
    </Member>
    <Member MemberName="HeaderDate">
      <MemberSignature Language="C#" Value="public const int HeaderDate = 2;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Date HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>2</MemberValue>
    </Member>
    <Member MemberName="HeaderEtag">
      <MemberSignature Language="C#" Value="public const int HeaderEtag = 22;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the ETag HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>22</MemberValue>
    </Member>
    <Member MemberName="HeaderExpect">
      <MemberSignature Language="C#" Value="public const int HeaderExpect = 26;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Except HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>26</MemberValue>
    </Member>
    <Member MemberName="HeaderExpires">
      <MemberSignature Language="C#" Value="public const int HeaderExpires = 18;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Expires HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>18</MemberValue>
    </Member>
    <Member MemberName="HeaderFrom">
      <MemberSignature Language="C#" Value="public const int HeaderFrom = 27;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the From HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>27</MemberValue>
    </Member>
    <Member MemberName="HeaderHost">
      <MemberSignature Language="C#" Value="public const int HeaderHost = 28;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Host HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>28</MemberValue>
    </Member>
    <Member MemberName="HeaderIfMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfMatch = 29;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the If-Match HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>29</MemberValue>
    </Member>
    <Member MemberName="HeaderIfModifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfModifiedSince = 30;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the If-Modified-Since HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>30</MemberValue>
    </Member>
    <Member MemberName="HeaderIfNoneMatch">
      <MemberSignature Language="C#" Value="public const int HeaderIfNoneMatch = 31;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the If-None-Match HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>31</MemberValue>
    </Member>
    <Member MemberName="HeaderIfRange">
      <MemberSignature Language="C#" Value="public const int HeaderIfRange = 32;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the If-Range HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>32</MemberValue>
    </Member>
    <Member MemberName="HeaderIfUnmodifiedSince">
      <MemberSignature Language="C#" Value="public const int HeaderIfUnmodifiedSince = 33;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the If-Unmodified-Since HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>33</MemberValue>
    </Member>
    <Member MemberName="HeaderKeepAlive">
      <MemberSignature Language="C#" Value="public const int HeaderKeepAlive = 3;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Keep-Alive HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>3</MemberValue>
    </Member>
    <Member MemberName="HeaderLastModified">
      <MemberSignature Language="C#" Value="public const int HeaderLastModified = 19;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Last-Modified HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>19</MemberValue>
    </Member>
    <Member MemberName="HeaderLocation">
      <MemberSignature Language="C#" Value="public const int HeaderLocation = 23;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Location HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>23</MemberValue>
    </Member>
    <Member MemberName="HeaderMaxForwards">
      <MemberSignature Language="C#" Value="public const int HeaderMaxForwards = 34;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Max-Forwards HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>34</MemberValue>
    </Member>
    <Member MemberName="HeaderPragma">
      <MemberSignature Language="C#" Value="public const int HeaderPragma = 4;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Pragma HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>4</MemberValue>
    </Member>
    <Member MemberName="HeaderProxyAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthenticate = 24;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Proxy-Authenticate HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>24</MemberValue>
    </Member>
    <Member MemberName="HeaderProxyAuthorization">
      <MemberSignature Language="C#" Value="public const int HeaderProxyAuthorization = 35;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Proxy-Authorization HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>35</MemberValue>
    </Member>
    <Member MemberName="HeaderRange">
      <MemberSignature Language="C#" Value="public const int HeaderRange = 37;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Range HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>37</MemberValue>
    </Member>
    <Member MemberName="HeaderReferer">
      <MemberSignature Language="C#" Value="public const int HeaderReferer = 36;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Referer HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>36</MemberValue>
    </Member>
    <Member MemberName="HeaderRetryAfter">
      <MemberSignature Language="C#" Value="public const int HeaderRetryAfter = 25;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Retry-After HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>25</MemberValue>
    </Member>
    <Member MemberName="HeaderServer">
      <MemberSignature Language="C#" Value="public const int HeaderServer = 26;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Server HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>26</MemberValue>
    </Member>
    <Member MemberName="HeaderSetCookie">
      <MemberSignature Language="C#" Value="public const int HeaderSetCookie = 27;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Set-Cookie HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>27</MemberValue>
    </Member>
    <Member MemberName="HeadersSent">
      <MemberSignature Language="C#" Value="public virtual bool HeadersSent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether HTTP response headers have been sent to the client for the current request.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if HTTP response headers have been sent to the client; otherwise, false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HeaderTe">
      <MemberSignature Language="C#" Value="public const int HeaderTe = 38;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the TE HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>38</MemberValue>
    </Member>
    <Member MemberName="HeaderTrailer">
      <MemberSignature Language="C#" Value="public const int HeaderTrailer = 5;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Trailer HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>5</MemberValue>
    </Member>
    <Member MemberName="HeaderTransferEncoding">
      <MemberSignature Language="C#" Value="public const int HeaderTransferEncoding = 6;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Transfer-Encoding HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>6</MemberValue>
    </Member>
    <Member MemberName="HeaderUpgrade">
      <MemberSignature Language="C#" Value="public const int HeaderUpgrade = 7;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Upgrade HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>7</MemberValue>
    </Member>
    <Member MemberName="HeaderUserAgent">
      <MemberSignature Language="C#" Value="public const int HeaderUserAgent = 39;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the User-Agent HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>39</MemberValue>
    </Member>
    <Member MemberName="HeaderVary">
      <MemberSignature Language="C#" Value="public const int HeaderVary = 28;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Vary HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>28</MemberValue>
    </Member>
    <Member MemberName="HeaderVia">
      <MemberSignature Language="C#" Value="public const int HeaderVia = 8;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Via HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>8</MemberValue>
    </Member>
    <Member MemberName="HeaderWarning">
      <MemberSignature Language="C#" Value="public const int HeaderWarning = 9;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Warning HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>9</MemberValue>
    </Member>
    <Member MemberName="HeaderWwwAuthenticate">
      <MemberSignature Language="C#" Value="public const int HeaderWwwAuthenticate = 29;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the WWW-Authenticate HTTP header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>29</MemberValue>
    </Member>
    <Member MemberName="IsClientConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsClientConnected ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether the client connection is still active.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the client connection is still active; otherwise, false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsEntireEntityBodyIsPreloaded">
      <MemberSignature Language="C#" Value="public virtual bool IsEntireEntityBodyIsPreloaded ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether all request data is available and no further reads from the client are required.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if all request data is available; otherwise, false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether the connection uses SSL.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the connection is an SSL connection; otherwise, false. The default is false.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MachineConfigPath">
      <MemberSignature Language="C#" Value="public virtual string MachineConfigPath { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the full physical path to the Machine.config file.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MachineInstallDirectory">
      <MemberSignature Language="C#" Value="public virtual string MachineInstallDirectory { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the physical path to the directory where the ASP.NET binaries are installed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string virtualPath);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the physical path corresponding to the specified virtual path.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The physical path that corresponds to the virtual path specified in the <paramref name="virtualPath" /> parameter.</para>
        </returns>
        <param name="virtualPath">
          <attribution license="cc4" from="Microsoft" modified="false" />The virtual path. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int size);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</para>
          <para>Use this overload to specify the response for message bodies greater than 2 GB.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads request data from the client (when not preloaded).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of bytes read.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte array to read data into. </param>
        <param name="size">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum number of bytes to read. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ReadEntityBody">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityBody (byte[] buffer, int offset, int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An implementation is free to return fewer bytes than requested even if the end of the stream has not been reached.</para>
          <para>Use this overload to specify the response for message bodies greater than 2 GB.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads request data from the client (when not preloaded) by using the specified buffer to read from, byte offset, and maximum bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of bytes read.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte array to read data into.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte offset at which to begin reading.</param>
        <param name="size">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum number of bytes to read.</param>
      </Docs>
    </Member>
    <Member MemberName="ReasonCachePolicy">
      <MemberSignature Language="C#" Value="public const int ReasonCachePolicy = 2;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>2</MemberValue>
    </Member>
    <Member MemberName="ReasonCacheSecurity">
      <MemberSignature Language="C#" Value="public const int ReasonCacheSecurity = 3;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>3</MemberValue>
    </Member>
    <Member MemberName="ReasonClientDisconnect">
      <MemberSignature Language="C#" Value="public const int ReasonClientDisconnect = 4;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>4</MemberValue>
    </Member>
    <Member MemberName="ReasonDefault">
      <MemberSignature Language="C#" Value="public const int ReasonDefault = 0;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request. The default value is <see cref="F:System.Web.HttpWorkerRequest.ReasonResponseCacheMiss" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>0</MemberValue>
    </Member>
    <Member MemberName="ReasonFileHandleCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonFileHandleCacheMiss = 1;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>1</MemberValue>
    </Member>
    <Member MemberName="ReasonResponseCacheMiss">
      <MemberSignature Language="C#" Value="public const int ReasonResponseCacheMiss = 0;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies a reason for the request.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>0</MemberValue>
    </Member>
    <Member MemberName="RequestHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int RequestHeaderMaximum = 40;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Maximum HTTP request header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>40</MemberValue>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public virtual Guid RequestTraceIdentifier { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>ASP.NET requests execute with the same trace ID as the corresponding IIS request. This facilitates tracking a request throughout its lifetime, starting with the HTTP.SYS kernel-mode HTTP listener, through the IIS service, and into the ASP.NET system. The IDs provided by IIS differ based on the platform and service pack level.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the corresponding Event Tracking for Windows trace ID for the current request.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ResponseHeaderMaximum">
      <MemberSignature Language="C#" Value="public const int ResponseHeaderMaximum = 30;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the <see cref="M:System.Web.HttpWorkerRequest.GetKnownRequestHeader(System.Int32)" /> and <see cref="M:System.Web.HttpWorkerRequest.SendKnownResponseHeader(System.Int32,System.String)" /> methods.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the index number for the Maximum HTTP response header.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <MemberValue>30</MemberValue>
    </Member>
    <Member MemberName="RootWebConfigPath">
      <MemberSignature Language="C#" Value="public virtual string RootWebConfigPath { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If you are implementing your own hosting environment, you may to override this property to return the location of your environment's root configuration file. An example of this is the <see cref="T:System.Web.Hosting.SimpleWorkerRequest" /> class which provides a simple implementation of the <see cref="T:System.Web.HttpWorkerRequest" />. The <see cref="P:System.Web.Hosting.SimpleWorkerRequest.RootWebConfigPath" /> property of <see cref="T:System.Web.Hosting.SimpleWorkerRequest" /> class overrides the <see cref="P:System.Web.HttpWorkerRequest.RootWebConfigPath" /> property of <see cref="T:System.Web.HttpWorkerRequest" /> class.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the full physical path to the root Web.config file.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (int contentLength);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the content length is not explicitly set, this method enables the <see cref="T:System.Web.HttpWorkerRequest" /> instance to add a Content-Length HTTP header to the response.</para>
          <para>Use this overload to set the Content-Length header when the length of the response message body is less than or equal to 2 GB.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a Content-Length HTTP header to the response for message bodies that are less than or equal to 2 GB.</para>
        </summary>
        <param name="contentLength">
          <attribution license="cc4" from="Microsoft" modified="false" />The length of the response, in bytes.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendCalculatedContentLength">
      <MemberSignature Language="C#" Value="public virtual void SendCalculatedContentLength (long contentLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentLength" Type="System.Int64" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the content length is not explicitly set, this method enables the <see cref="T:System.Web.HttpWorkerRequest" /> instance to add a Content-Length HTTP header to the response. The default implementation calls the overload that takes a <paramref name="contentLength" /> parameter of type <see cref="T:System.Int32" />.</para>
          <para>Use this overload to specify the response for message bodies greater than 2 GB.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a Content-Length HTTP header to the response for message bodies that are greater than 2 GB.</para>
        </summary>
        <param name="contentLength">
          <attribution license="cc4" from="Microsoft" modified="false" />The length of the response, in bytes.</param>
      </Docs>
    </Member>
    <Member MemberName="SendKnownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendKnownResponseHeader (int index, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a standard HTTP header to the response.</para>
        </summary>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The header index. For example, <see cref="F:System.Web.HttpWorkerRequest.HeaderContentLength" />. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (IntPtr handle, long offset, long length);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.</para>
        </summary>
        <param name="handle">
          <attribution license="cc4" from="Microsoft" modified="false" />The handle of the file to send. </param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position in the file. </param>
        <param name="length">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes to send. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendResponseFromFile">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromFile (string filename, long offset, long length);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds the contents of the specified file to the response and specifies the starting position in the file and the number of bytes to send.</para>
        </summary>
        <param name="filename">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the file to send. </param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position in the file. </param>
        <param name="length">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes to send. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public abstract void SendResponseFromMemory (byte[] data, int length);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds the specified number of bytes from a byte array to the response.</para>
        </summary>
        <param name="data">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte array to send. </param>
        <param name="length">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes to send, starting at the first byte. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendResponseFromMemory">
      <MemberSignature Language="C#" Value="public virtual void SendResponseFromMemory (IntPtr data, int length);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds the specified number of bytes from a block of memory to the response.</para>
        </summary>
        <param name="data">
          <attribution license="cc4" from="Microsoft" modified="false" />An unmanaged pointer to the block of memory. </param>
        <param name="length">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes to send. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendStatus">
      <MemberSignature Language="C#" Value="public abstract void SendStatus (int statusCode, string statusDescription);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statusCode" Type="System.Int32" />
        <Parameter Name="statusDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <para>
This methods sends the HTTP status response to the client.  
</para>
You should call this method before writing any other headers.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the HTTP status code and status description of the response, such as SendStatus(200, "Ok").</para>
        </summary>
        <param name="statusCode">
          <attribution license="cc4" from="Microsoft" modified="false" />The status code to send </param>
        <param name="statusDescription">
          <attribution license="cc4" from="Microsoft" modified="false" />The status description to send. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SendUnknownResponseHeader">
      <MemberSignature Language="C#" Value="public abstract void SendUnknownResponseHeader (string name, string value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a nonstandard HTTP header to the response.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the header to send. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the header. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetEndOfSendNotification">
      <MemberSignature Language="C#" Value="public virtual void SetEndOfSendNotification (System.Web.HttpWorkerRequest.EndOfSendNotification callback, object extraData);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.HttpWorkerRequest+EndOfSendNotification" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added: an object of type 'HttpWorkerRequest+EndOfSendNotification'</param>
        <param name="extraData">To be added: an object of type 'object'</param>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>