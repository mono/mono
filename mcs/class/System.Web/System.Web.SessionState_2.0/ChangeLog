2007-07-31  Marek Habersack  <mhabersack@novell.com>

	* SessionInProcHandler.cs: initialize the static session objects
	collection from the application state instead of using
	SessionStateUtility.GetSessionStaticObjects. Fixes bug #82193
	* SessionStateServerHandler.cs: as above

2007-06-20  Marek Habersack  <mhabersack@novell.com>

	* SessionInProcHandler.cs: use HttpRuntime.InternalCache to keep
	the internal entries.

	* SessionStateModule.cs: if session is abandoned and the handler
	supports expiration, disable the handler's session expiration
	callback and call SessionStateUtility.RaiseSessionEnd
	directly. Fixes bug #81853.

2007-04-30  Marek Habersack  <mhabersack@novell.com>

	* SessionInProcHandler.cs: do not end session when setting and
	releasing item in mid-session. Fixes bugs #81440, #81140 and
	#80723

2007-04-18  Marek Habersack  <mhabersack@novell.com>

	* SessionInProcHandler.cs: added protection against raising early
	session end event when resetting item timeout. Fixes bug #81140

2007-03-12  Konstantin Triger <kostat@mainsoft.com>

	* SessionStateModule.cs: TARGET_J2EE: support only J2EE sessions.

2007-03-06  Marek Habersack  <mhabersack@novell.com>

	* SessionInProcHandler.cs: gracefully handle different value types
	in the session removal handler.

	* SessionStateModule.cs: create an empty container if session data
	is null. Fixes bug 80682

2007-02-19  Konstantin Triger <kostat@mainsoft.com>

	* SessionStateModule.cs: call Session_End callback only if the handler
		does not support expiration.

2007-01-20  Miguel de Icaza  <miguel@novell.com>

	* SessionStateModule.cs: Removed unused variables.

2007-01-07  Konstantin Triger <kostat@mainsoft.com>

	* SessionStateModule.cs: Implemented raising of Session_OnEnd event,
		refactoring.

2006-12-27  Konstantin Triger <kostat@mainsoft.com>

	* SessionIDManager.cs: Pass config to SessionStateModule.IsCookieLess.
	* SessionStateStoreData.cs: fix constructor signature.
	* SessionInProcHandler.cs, SessionStateServerHandler.cs: ensure has a default
		constructor to make instantiating same as for custom provider.
	* SessionStateModule.cs: support custom providers.

2006-12-20  Marek Habersack  <grendello@gmail.com>
	* SessionStateServerHandler.cs:
	implemented for the 2.0 model.

	* SessionStateUtility.cs:
	implemented.

	* SessionStateStoreProviderBase.cs:
	implemented.

	* SessionInProcHandler.cs:
	reimplemented for the 2.0 model.

	* SessionIDManager.cs: implemented.

	* SessionStateModule.cs: copied the
	file to new location and implemented the 2.0 model.

	* SessionSQLServerHandler.cs:
	created. Implementation not done yet.

	* HttpSessionStateContainer.cs: copied
	the file to new location and implemented the 2.0 model.

	* StateServerItem.cs: implementation
	for the 2.0 model.

	* HttpSessionState.cs: reimplemented
	for the 2.0 model.

	* RemoteStateServer.cs: copied the
	file to new location and added new code for the 2.0 model.

	* SessionStateItemCollection.cs:
	implemented.

	* SessionStateActions.cs: moved the
	file to new location and added the None member.

	* ISessionIDManager.cs: moved the file
	to new location.

	* SessionStateItemExpireCallback.cs:
	moved the file to new location.

	* IHttpSessionState.cs: moved the file
	to new location.

	* SessionStateStoreData.cs: moved the
	file to new location and modified for the 2.0 model.

	* ISessionStateItemCollection.cs:
	moved the file to new location.
