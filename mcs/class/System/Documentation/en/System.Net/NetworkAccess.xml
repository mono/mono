<?xml version="1.0" encoding="utf-8"?>
<Type Name="NetworkAccess" FullName="System.Net.NetworkAccess" FullNameSP="System_Net_NetworkAccess" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable NetworkAccess extends System.Enum" />
  <TypeSignature Language="C#" Value="public enum NetworkAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed NetworkAccess extends System.Enum" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.NetworkAccess" /> enumeration is used with the <see cref="T:System.Net.WebPermission" /> and <see cref="T:System.Net.SocketPermission" /> classes.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies network access permissions.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Net.NetworkAccess Accept = 128" />
      <MemberSignature Language="C#" Value="Accept" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.NetworkAccess Accept = int32(128)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Accept</MemberValue>
      <Docs>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates that the application is allowed to accept connections from the Internet on a local resource. Notice that this is a protection for the local host that uses Accept to grant access to a local resource (address/port). At the time a socket tries to bind to this local resource a permission check is performed to see if an Accept exists on that resource.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Net.NetworkAccess Connect = 64" />
      <MemberSignature Language="C#" Value="Connect" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.NetworkAccess Connect = int32(64)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Connect</MemberValue>
      <Docs>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates that the application is allowed to connect to specific Internet resources. Notice that, in the case of remote host resource, no check is performed to see that Connect permissions exist. This is because the port of a connecting remote host is unknown and not suitable permissions can be built in advance. It is the application responsibility to check the permissions of the remote host trying to connect to a listening socket.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>