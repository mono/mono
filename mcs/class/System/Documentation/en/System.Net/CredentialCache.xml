<?xml version="1.0" encoding="utf-8"?>
<Type Name="CredentialCache" FullName="System.Net.CredentialCache" FullNameSP="System_Net_CredentialCache" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public CredentialCache extends System.Object implements System.Net.ICredentials, System.Collections.IEnumerable" />
  <TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.CredentialCache" /> class stores credentials for multiple Internet resources. Applications that need to access multiple resources can store the credentials for those resources in a <see cref="T:System.Net.CredentialCache" /> instance that then provides the proper set of credentials to the Internet resource when required. When the <see cref="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" /> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.</para>
      <para>The <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property contains the system credentials of the current security context. For client applications, these represent the user name, password, and domain of the user who is currently logged in. For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides storage for multiple credentials.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor()" />
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The constructor creates a <see cref="T:System.Net.CredentialCache" /> instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new instance of the <see cref="T:System.Net.CredentialCache" /> class.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred)" />
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">The <paramref name="uriPrefix" /> or <paramref name="authType" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The cache already contains a credential for the specified <paramref name="uriPrefix" /> and <paramref name="authType." /></exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" /> method places a <see cref="T:System.Net.NetworkCredential" /> instance for use with protocols other than SMTP into the <see cref="T:System.Net.CredentialCache" />. The cache stores credentials in the order in which they are added to it. When the <see cref="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" /> method is called, it returns the proper matching <see cref="T:System.Net.NetworkCredential" /> instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol. </para>
        </summary>
        <param name="uriPrefix">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to. </param>
        <param name="authType">
          <attribution license="cc4" from="Microsoft" modified="false" />The authentication scheme used by the resource named in <paramref name="uriPrefix" />. </param>
        <param name="cred">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method places a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP into the <see cref="T:System.Net.CredentialCache" />. The cache stores credentials in the order in which they are added to it. When the <see cref="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" /> method is called, it returns a <see cref="T:System.Net.NetworkCredential" /> instance that is selected by matching the <paramref name="host" />, <paramref name="port" />, and <paramref name="authType" />. The comparison is done case-insensitively.</para>
          <para>The supported values for <paramref name="authType " />are "NTLM", "Digest", "Kerberos", and "Negotiate". </para>
          <para>Credentials added with this method are only valid for use with SMTP. This method does not work for HTTP or FTP protocols.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol. Credentials added using this method are valid for SMTP only. This method does not work for HTTP or FTP requests.</para>
        </summary>
        <param name="host">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the host computer.</param>
        <param name="port">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</param>
        <param name="authenticationType">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" /> using <paramref name="cred" />. See Remarks.</param>
        <param name="credential">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache. </param>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="ILASM" Value=".property class System.Net.ICredentials DefaultCredentials { public hidebysig static specialname class System.Net.ICredentials get_DefaultCredentials() }" />
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Need EnvironmentPermission implementation first")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Net.ICredentials" /> instance that represents the system credentials in use for the current process.</para>
        </value>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Requires read access to the environment variable that contains the user name. See <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" />.</permission>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property applies only to NTLM, negotiate, and Kerberos-based authentication.</para>
          <para>
            <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> represents the system credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.</para>
          <para>To get the credentials as a <see cref="T:System.Net.NetworkCredential" /> instance, use the <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" /> property.</para>
          <para>The supported values for <paramref name="authType " />are "NTLM", "Digest", "Kerberos", and "Negotiate". This method does not work for HTTP or FTP protocols.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Net.ICredentials" /> instance returned by <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> cannot be used to view the user name, password, or domain of the current security context.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the system credentials of the application.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The credentials returned by the <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" /> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.</para>
          <para>The credentials returned by <see cref="P:System.Net.CredentialCache.DefaultNetworkCredentials" /> represents the authentication credentials for the current security context in which the application is running. For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application. For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the network credentials of the current security context.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="ILASM" Value=".method public final hidebysig virtual class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType)" />
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">The <paramref name="uriPrefix" /> or <paramref name="authType" /> parameter is <see langword="null" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" /> method searches the <see cref="T:System.Net.CredentialCache" /> and returns the <see cref="T:System.Net.NetworkCredential" /> instance for the specified URI and authorization type. If the <see cref="T:System.Net.CredentialCache" /> contains no matching <see cref="T:System.Net.NetworkCredential" /> instance, null is returned.</para>
          <para>
            <see cref="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" /> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type. The following table shows examples.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>URI Prefix </para>
                </term>
                <description>
                  <para>Matches </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>http://www.contoso.com/portal/news.htm </para>
              </term>
              <description>
                <para>Requests for the specific Web page news.htm. </para>
              </description>
            </item>
            <item>
              <term>
                <para>http://www.contoso.com/portal/ </para>
              </term>
              <description>
                <para>Requests for all content in the portal path, except the page news.htm. </para>
              </description>
            </item>
            <item>
              <term>
                <para>http://www.contoso.com/ </para>
              </term>
              <description>
                <para>Requests for all resources at www.contoso.com, except those in the portal path. </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, null.</para>
        </returns>
        <param name="uriPrefix">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to. </param>
        <param name="authType">
          <attribution license="cc4" from="Microsoft" modified="false" />The authentication scheme used by the resource named in <paramref name="uriPrefix" />. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method searches the <see cref="T:System.Net.CredentialCache" /> and returns the <see cref="T:System.Net.NetworkCredential" /> instance for the specified host, port, and authorization type. The <paramref name="host" />, <paramref name="port" />, and <paramref name="authType" /> values passed to this method are case-insensitively compared to the values specified when the credential was added to the <see cref="T:System.Net.CredentialCache" /> using the <see cref="Overload:System.Net.CredentialCache.Add" /> methods.</para>
          <para>The supported values for <paramref name="authType" /> are "NTLM", "Digest", "Kerberos", and "Negotiate".</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified host, port, and authentication protocol.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, null.</para>
        </returns>
        <param name="host">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the host computer.</param>
        <param name="port">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</param>
        <param name="authenticationType">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />. See Remarks.</param>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="ILASM" Value=".method public final hidebysig virtual class System.Collections.IEnumerator GetEnumerator()" />
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns an enumerator that can iterate through the <see cref="T:System.Net.CredentialCache" /> instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.CredentialCache" />.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType)" />
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method removes a <see cref="T:System.Net.NetworkCredential" /> instance from the <see cref="T:System.Net.CredentialCache" /> if the specified URI prefix and authentication protocol match those associated with the credential. Multiple calls to the <see cref="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" /> method for the same <see cref="T:System.Net.NetworkCredential" /> have no effect.</para>
          <para>If <paramref name="authType" /> is null or <paramref name="uriPrefix" /> is null, or no matching credential is found in the cache, this method does nothing.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.</para>
        </summary>
        <param name="uriPrefix">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential is used for. </param>
        <param name="authType">
          <attribution license="cc4" from="Microsoft" modified="false" />The authentication scheme used by the host named in <paramref name="uriPrefix" />. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method removes a <see cref="T:System.Net.NetworkCredential" /> instance from the <see cref="T:System.Net.CredentialCache" /> if the specified host, port, and authentication protocol match those associated with the credential. Multiple calls to the <see cref="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" /> method for the same <see cref="T:System.Net.NetworkCredential" /> have no effect.</para>
          <para>If <paramref name="authType" /> is null or <paramref name="uriPrefix" /> is null, or no matching credential is found in the cache, this method does nothing.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified host, port, and authentication protocol.</para>
        </summary>
        <param name="host">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the host computer.</param>
        <param name="port">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</param>
        <param name="authenticationType">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />. See Remarks.</param>
      </Docs>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>