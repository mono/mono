<?xml version="1.0" encoding="utf-8"?>
<Type Name="ServicePoint" FullName="System.Net.ServicePoint" FullNameSP="System_Net_ServicePoint" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public ServicePoint extends System.Object" />
  <TypeSignature Language="C#" Value="public class ServicePoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServicePoint extends System.Object" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.ServicePoint" /> class handles connections to an Internet resource based on the host information passed in the resource's Uniform Resource Identifier (URI). The initial connection to the resource determines the information that the <see cref="T:System.Net.ServicePoint" /> object maintains, which is then shared by all subsequent requests to that resource.</para>
      <para>
        <see cref="T:System.Net.ServicePoint" /> objects are managed by the <see cref="T:System.Net.ServicePointManager" /> class and are created, if necessary, by the <see cref="Overload:System.Net.ServicePointManager.FindServicePoint" /> method. <see cref="T:System.Net.ServicePoint" /> objects are never created directly but are always created and managed by the <see cref="T:System.Net.ServicePointManager" /> class. The maximum number of <see cref="T:System.Net.ServicePoint" /> objects that can be created is set by the <see cref="P:System.Net.ServicePointManager.MaxServicePoints" /> property.</para>
      <para>Each <see cref="T:System.Net.ServicePoint" /> object maintains its connection to an Internet resource until it has been idle longer than the time specified in the <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> property. When a <see cref="T:System.Net.ServicePoint" /> exceeds the <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> value, it can be recycled to another connection. The default value of <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> is set by the <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> property.</para>
      <para>When the <see cref="P:System.Net.ServicePoint.ConnectionLeaseTimeout" /> property is set to a value other than -1, and after the specified time elapses, an active <see cref="T:System.Net.ServicePoint" /> connection is closed after it services the next request. This is useful for applications that do not require active connections that are opened indefinitely, as they are by default.</para>
      <block subset="none" type="note">
        <para>In high load conditions, some applications may run out of free threads in the ThreadPool, which may lead to poor system performance (such as high and variable transaction times). See <see cref="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag/html/scalenetchapt17.asp">http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnpag/html/scalenetchapt17.asp</see> for a number of configuration changes you can make to fix this issue.</para>
      </block>
      <para />
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides connection management for HTTP connections.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="ILASM" Value=".property class System.Uri Address { public hidebysig specialname instance class System.Uri get_Address() }" />
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para> A <see cref="T:System.Uri" /> instance
   representing the URI specified at the time the current instance was constructed <see langword="." /></para>
        </value>
        <remarks>
          <para>This property is read-only.</para>
          <para>
            <block subset="none" type="note">The <see cref="P:System.Uri.Host" /> property
   of the <see cref="T:System.Uri" /> returned by this property names the host to which the current instance connects.</block>
          </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the Uniform Resource Identifier (URI) of the server that this <see cref="T:System.Net.ServicePoint" /> object connects to.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="BindIPEndPointDelegate">
      <MemberSignature Language="C#" Value="public System.Net.BindIPEndPoint BindIPEndPointDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.BindIPEndPoint BindIPEndPointDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.BindIPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Some load balancing techniques require a client to use a specific local IP address and port number, rather than <see cref="F:System.Net.IPAddress.Any" /> (or <see cref="F:System.Net.IPAddress.IPv6Any" /> for Internet Protocol Version 6) and an ephemeral port. Your <see cref="P:System.Net.ServicePoint.BindIPEndPointDelegate" /> can satisfy this requirement. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the delegate to associate a local <see cref="T:System.Net.IPEndPoint" /> with a <see cref="T:System.Net.ServicePoint" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Although a <see cref="T:System.Net.ServicePoint" /> object can make multiple connections to an Internet resource, it can maintain only one certificate.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the certificate received for this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the last client certificate sent to the server.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CloseConnectionGroup">
      <MemberSignature Language="C#" Value="public bool CloseConnectionGroup (string connectionGroupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CloseConnectionGroup(string connectionGroupName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Connection groups associate a set of requests with a particular connection or set of connections. This method removes and closes all connections that belong to the specified connection group.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Removes the specified connection group from this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Boolean" /> value that indicates whether the connection group was closed.</para>
        </returns>
        <param name="connectionGroupName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the connection group that contains the connections to close and remove from this service point. </param>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLeaseTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionLeaseTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLeaseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use this property to ensure that a <see cref="T:System.Net.ServicePoint" /> object's active connections do not remain open indefinitely. This property is intended for scenarios where connections should be dropped and reestablished periodically, such as load balancing scenarios.</para>
          <para>By default, when <see cref="P:System.Net.FtpWebRequest.KeepAlive" /> is true for a request, the <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> property sets the time-out for closing <see cref="T:System.Net.ServicePoint" /> connections due to inactivity. If the <see cref="T:System.Net.ServicePoint" /> has active connections, <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> has no effect and the connections remain open indefinitely. </para>
          <para>When the <see cref="P:System.Net.ServicePoint.ConnectionLeaseTimeout" /> property is set to a value other than -1, and after the specified time elapses, an active <see cref="T:System.Net.ServicePoint" /> connection is closed after servicing a request by setting <see cref="P:System.Net.FtpWebRequest.KeepAlive" /> to false in that request.</para>
          <para>Setting this value affects all connections managed by the <see cref="T:System.Net.ServicePoint" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the number of milliseconds after which an active <see cref="T:System.Net.ServicePoint" /> connection is closed.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ConnectionLimit">
      <MemberSignature Language="ILASM" Value=".property int32 ConnectionLimit { public hidebysig specialname instance int32 get_ConnectionLimit() public hidebysig specialname instance void set_ConnectionLimit(int32 value) }" />
      <MemberSignature Language="C#" Value="public int ConnectionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> containing the 
   maximum number of simultaneous connections allowed on the current <see cref="T:System.Net.ServicePoint" />.</para>
        </value>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than or equal to zero. </exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> property sets the maximum number of connections that the <see cref="T:System.Net.ServicePoint" /> object can make to an Internet resource. The value of the <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> property is set to the value of the <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> property when the <see cref="T:System.Net.ServicePoint" /> object is created; subsequent changes to <see cref="P:System.Net.ServicePointManager.DefaultConnectionLimit" /> have no effect on existing <see cref="T:System.Net.ServicePoint" /> objects.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the maximum number of connections allowed on this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ConnectionName">
      <MemberSignature Language="ILASM" Value=".property string ConnectionName { public hidebysig specialname instance string get_ConnectionName() }" />
      <MemberSignature Language="C#" Value="public string ConnectionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.String" /> containing the 
   value of the <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> property of the <see cref="T:System.Net.WebRequest" /> that
   initiated the connection provided
   by the current instance.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="T:System.Net.ServicePoint" /> object was constructed with a <see cref="T:System.Uri" /> object (the <see cref="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)" /> or <see cref="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)" /> methods, for example), then the <see cref="P:System.Net.ServicePoint.ConnectionName" /> property represents the <see cref="P:System.Uri.Scheme" /> property of the <see cref="T:System.Uri" /> object used. </para>
          <para>If the <see cref="T:System.Net.ServicePoint" /> object was constructed from a network host and port, the <see cref="P:System.Net.ServicePoint.ConnectionName" /> property contains a string that represents the host and the network port. If the <see cref="P:System.Net.ServicePoint.ConnectionName" /> property is set when constructed from a host and port, only <see cref="T:System.Net.WebRequest" /> objects with the same <see cref="P:System.Net.WebRequest.ConnectionGroupName" /> value can use this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the connection name. </para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="CurrentConnections">
      <MemberSignature Language="ILASM" Value=".property int32 CurrentConnections { public hidebysig specialname instance int32 get_CurrentConnections() }" />
      <MemberSignature Language="C#" Value="public int CurrentConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
 A <see cref="T:System.Int32" /> containing the number of connections held by
 the current instance.
</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.ServicePoint.CurrentConnections" /> property contains the number of open Internet connections associated with this <see cref="T:System.Net.ServicePoint" /> object. The value of <see cref="P:System.Net.ServicePoint.CurrentConnections" /> cannot exceed that of <see cref="P:System.Net.ServicePoint.ConnectionLimit" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of open connections associated with this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Expect100Continue">
      <MemberSignature Language="C#" Value="public bool Expect100Continue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expect100Continue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When this property is set to true, client requests that use the POST method expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.</para>
          <para>For example, assume the <see cref="P:System.Net.ServicePoint.Expect100Continue" /> property is false. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and sends a 401 response, the client must resend the data with proper authentication headers.</para>
          <para>If the <see cref="P:System.Net.ServicePoint.Expect100Continue" /> property is true, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.</para>
          <para>Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.</para>
          <para>The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether 100-Continue behavior is used.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual int32 GetHashCode()" />
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.ServicePoint.GetHashCode" /> method returns a hash code of this instance. This value can be used as a key in hash tables.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a hash value for a <see cref="T:System.Net.ServicePoint" /> instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An integer hash value.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IdleSince">
      <MemberSignature Language="ILASM" Value=".property valuetype System.DateTime IdleSince { public hidebysig specialname instance valuetype System.DateTime get_IdleSince() }" />
      <MemberSignature Language="C#" Value="public DateTime IdleSince { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IdleSince" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.DateTime" /> instance
   containing the date and time at which the <see cref="T:System.Net.ServicePoint" /> was last
   connected.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.ServicePoint.IdleSince" /> property records the last date and time at which a service point was disconnected from a host. When the difference between the current time and <see cref="P:System.Net.ServicePoint.IdleSince" /> exceeds the value of <see cref="P:System.Net.ServicePoint.MaxIdleTime" />, the <see cref="T:System.Net.ServicePoint" /> object is available for recycling to another connection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the date and time that the <see cref="T:System.Net.ServicePoint" /> object was last connected to a host.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="MaxIdleTime">
      <MemberSignature Language="ILASM" Value=".property int32 MaxIdleTime { public hidebysig specialname instance int32 get_MaxIdleTime() public hidebysig specialname instance void set_MaxIdleTime(int32 value) }" />
      <MemberSignature Language="C#" Value="public int MaxIdleTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxIdleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> containing the number of milliseconds that a <see cref="T:System.Net.ServicePoint" /> can remain idle before it is released by the <see cref="T:System.Net.ServicePointManager" /> 
and subsequently freed.</para>
        </value>
        <exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than <see cref="F:System.Threading.Timeout.Infinite" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can set <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> to <see cref="F:System.Threading.Timeout.Infinite" /> to indicate that a connection associated with the <see cref="T:System.Net.ServicePoint" /> object should never time out.</para>
          <para>The default value of the <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> property is the value of the <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> property when the <see cref="T:System.Net.ServicePoint" /> object is created. Subsequent changes to the <see cref="P:System.Net.ServicePointManager.MaxServicePointIdleTime" /> property have no effect on existing <see cref="T:System.Net.ServicePoint" /> objects.</para>
          <para>When the <see cref="P:System.Net.ServicePoint.MaxIdleTime" /> for a connection associated with a <see cref="T:System.Net.ServicePoint" /> is exceeded, the connection remains open until the application tries to use the connection. At that time, the Framework closes the connection and creates a new connection to the remote host.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the amount of time a connection associated with the <see cref="T:System.Net.ServicePoint" /> object can remain idle before the connection is closed.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="ILASM" Value=".property class System.Version ProtocolVersion { public hidebysig virtual specialname class System.Version get_ProtocolVersion() }" />
      <MemberSignature Language="C#" Value="public virtual Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Version" /> instance
   containing the version of the protocol used by the <see cref="T:System.Net.ServicePoint" /> .</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The HTTP protocol versions are HTTP/1.0 and HTTP/1.1.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the version of the HTTP protocol that the <see cref="T:System.Net.ServicePoint" /> object uses.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For additional information, see <see cref="P:System.Net.Sockets.Socket.ReceiveBufferSize" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the size of the receiving buffer for the socket used by this <see cref="T:System.Net.ServicePoint" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SetTcpKeepAlive">
      <MemberSignature Language="C#" Value="public void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTcpKeepAlive(bool enabled, int32 keepAliveTime, int32 keepAliveInterval) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
        <Parameter Name="keepAliveTime" Type="System.Int32" />
        <Parameter Name="keepAliveInterval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled. </para>
          <para>The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The <paramref name="keepAliveTime" /> parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The <paramref name="keepAliveInterval" /> parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10. </para>
          <para>If a TCP connection is dropped as the result of keep-alives, a <see cref="T:System.Net.Sockets.SocketError" /> of <see cref="F:System.Net.Sockets.SocketError.NetworkReset" /> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <see cref="T:System.Net.Sockets.SocketError" /> of <see cref="F:System.Net.Sockets.SocketError.NotConnected" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Enables or disables the keep-alive option on a TCP connection.</para>
        </summary>
        <param name="enabled">
          <attribution license="cc4" from="Microsoft" modified="false" />If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <paramref name="keepAliveTime " />and <paramref name="keepAliveInterval" /> values. </param>
        <param name="keepAliveTime">
          <attribution license="cc4" from="Microsoft" modified="false" />Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. </param>
        <param name="keepAliveInterval">
          <attribution license="cc4" from="Microsoft" modified="false" />Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.</param>
      </Docs>
    </Member>
    <Member MemberName="SupportsPipelining">
      <MemberSignature Language="ILASM" Value=".property bool SupportsPipelining { public hidebysig specialname instance bool get_SupportsPipelining() }" />
      <MemberSignature Language="C#" Value="public bool SupportsPipelining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsPipelining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>
            <see langword="true" /> if the <see cref="T:System.Net.ServicePoint" /> supports pipelined connections;
   otherwise, <see langword="false" />.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Pipelining allows clients to send multiple requests across a persistent connection without waiting for each response from the server. The server sends the responses in the same order as the requests were received.</para>
          <para>Pipelining is described in detail in IETF RFC 2616 section 8.1.2.2.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether the <see cref="T:System.Net.ServicePoint" /> object supports pipelined connections.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="UseNagleAlgorithm">
      <MemberSignature Language="C#" Value="public bool UseNagleAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseNagleAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The Nagle algorithm is used to buffer small packets of data and transmit them as a single packet. This process, referred to as "nagling," is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.</para>
          <para>Changing the value of this property does not affect existing connections. Only new connections created after the change are affected.</para>
          <para>The Nagle algorithm is fully described in IETF RFC 896.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the Nagle algorithm is used on connections managed by this <see cref="T:System.Net.ServicePoint" /> object.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>