<?xml version="1.0" encoding="utf-8"?>
<Type Name="Authorization" FullName="System.Net.Authorization" FullNameSP="System_Net_Authorization" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public Authorization extends System.Object" />
  <TypeSignature Language="C#" Value="public class Authorization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Authorization extends System.Object" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.AuthenticationManager" /> returns an instance of the <see cref="T:System.Net.Authorization" /> class that contains an authentication message. This message is sent to the Internet server to indicate that the client (such as <see cref="T:System.Net.WebRequest" /> or one of its descendants) is authorized to access the server.</para>
      <para>The <see cref="T:System.Net.Authorization" /> instance is created by the authentication module that the <see cref="T:System.Net.AuthenticationManager" /> designates to handle the request.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Contains an authentication message for an Internet server.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string token)" />
      <MemberSignature Language="C#" Value="public Authorization (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.Authorization" /> instance is created with the <see cref="P:System.Net.Authorization.Message" /> property set to <paramref name="token" /> and the <see cref="P:System.Net.Authorization.Complete" /> property set to true.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new instance of the <see cref="T:System.Net.Authorization" /> class with the specified authorization message.</para>
        </summary>
        <param name="token">
          <attribution license="cc4" from="Microsoft" modified="false" />The encrypted authorization message expected by the server. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string token, bool finished)" />
      <MemberSignature Language="C#" Value="public Authorization (string token, bool finished);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token, bool finished) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="finished" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.Authorization" /> instance is created with the <see cref="P:System.Net.Authorization.Message" /> property set to <paramref name="token" /> and the <see cref="P:System.Net.Authorization.Complete" /> property set to <paramref name="finished" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new instance of the <see cref="T:System.Net.Authorization" /> class with the specified authorization message and completion status.</para>
        </summary>
        <param name="token">
          <attribution license="cc4" from="Microsoft" modified="false" />The encrypted authorization message expected by the server. </param>
        <param name="finished">
          <attribution license="cc4" from="Microsoft" modified="false" />The completion status of the authorization attempt. true if the authorization attempt is complete; otherwise, false. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string token, bool finished, string connectionGroupId)" />
      <MemberSignature Language="C#" Value="public Authorization (string token, bool finished, string connectionGroupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string token, bool finished, string connectionGroupId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="token" Type="System.String" />
        <Parameter Name="finished" Type="System.Boolean" />
        <Parameter Name="connectionGroupId" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <para>This constructor creates a <see cref="T:System.Net.Authorization" /> instance with the <see cref="P:System.Net.Authorization.Message" /> property set to <paramref name="token" />, the
<see cref="P:System.Net.Authorization.Complete" /> property set to <paramref name="finished" />, and 
   the <see cref="P:System.Net.Authorization.ConnectionGroupId" /> property set to <paramref name="connectionGroupId" />. If <paramref name="token" /> is
<see langword="null" /> or a zero-length string, <see cref="P:System.Net.Authorization.Message" /> is set to <see langword="null" />. If 
<paramref name="connectionGroupId " /> is <see langword="null" /> or a zero-length string, 
<see cref="P:System.Net.Authorization.ConnectionGroupId" /> is set to <see langword="null" />.</para>
          <block subset="none" type="note">
            <para>The connection group identifier is used to restrict access to the
      server connection established with the current authorization instance. Only
   <see cref="T:System.Net.WebRequest" />
   instances that have <paramref name="connectionGroupId" /> as their <see cref="P:System.Net.WebRequest.ConnectionGroupName" />
   property value can use the connection. The connection group information
   set by this constructor is also available in the <see cref="P:System.Net.ServicePoint.ConnectionName" /> property of
   the service point that represents the connection.</para>
            <para>The <see cref="P:System.Net.Authorization.Complete" /> property indicates whether the
authentication, as defined by the authentication protocol implemented by the
caller, is finished or requires additional information exchange between the
client and server.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates a new instance of the <see cref="T:System.Net.Authorization" /> class with the specified authorization message, completion status, and connection group identifier.</para>
        </summary>
        <param name="token">
          <attribution license="cc4" from="Microsoft" modified="false" />The encrypted authorization message expected by the server. </param>
        <param name="finished">
          <attribution license="cc4" from="Microsoft" modified="false" />The completion status of the authorization attempt. true if the authorization attempt is complete; otherwise, false. </param>
        <param name="connectionGroupId">
          <attribution license="cc4" from="Microsoft" modified="false" />A unique identifier that can be used to create private client-server connections that are bound only to this authentication scheme. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="ILASM" Value=".property bool Complete { public hidebysig specialname instance bool get_Complete() }" />
      <MemberSignature Language="C#" Value="public bool Complete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Complete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>
            <see langword="true " />if the authentication process is complete; otherwise,
<see langword="false" />.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.Authorization.Complete" /> property is set to true when the authentication process between the client and the server is finished. Some authentication modules, such as the Kerberos module, use multiple round trips between the client and server to complete the authentication process. To keep the <see cref="T:System.Net.WebRequest" /> or descendant that initiated the authentication process from interrupting while authorization is taking place, the authentication module sets the <see cref="P:System.Net.Authorization.Complete" /> property to false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the completion status of the authorization.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ConnectionGroupId">
      <MemberSignature Language="ILASM" Value=".property string ConnectionGroupId { public hidebysig specialname instance string get_ConnectionGroupId() }" />
      <MemberSignature Language="C#" Value="public string ConnectionGroupId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.String" /> containing a unique
   connection identifier, or <see langword="null" /> if no value was specified to the
   constructor for the
   current instance.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.Authorization.ConnectionGroupId" /> property is a unique string that associates a connection with a specific authenticating entity. For example, the NTLM authorization module ties the authentication credential information to a specific connection to prevent invalid reuse of the connection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a unique identifier for user-specific connections.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="ILASM" Value=".property string Message { public hidebysig specialname instance string get_Message() }" />
      <MemberSignature Language="C#" Value="public string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.String" /> containing the message that will be returned to the server in response to an
   authentication challenge.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.Authorization.Message" /> property contains the authorization string that the client will return to the server when accessing protected resources. The actual contents of the message are defined by the authentication type the client and server are using. Basic HTTP authentication, for example, uses a different message than Kerberos authentication.</para>
          <para>When an authentication module supports preauthentication, the <see cref="P:System.Net.Authorization.Message" /> property is sent with the initial request.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the message returned to the server in response to an authentication challenge.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="MutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public bool MutuallyAuthenticated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property returns false if the authentication has not completed.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether mutual authentication occurred.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ProtectionRealm">
      <MemberSignature Language="ILASM" Value=".property class System.String[] ProtectionRealm { public hidebysig specialname instance class System.String[] get_ProtectionRealm() public hidebysig specialname instance void set_ProtectionRealm(class System.String[] value) }" />
      <MemberSignature Language="C#" Value="public string[] ProtectionRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ProtectionRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.String" /> array containing URIs.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.Authorization.ProtectionRealm" /> property contains a list of URI prefixes that the <see cref="P:System.Net.Authorization.Message" /> property can be used to authenticate. <see cref="T:System.Net.WebRequest" /> and its descendants compare a URI to this list to determine if the <see cref="T:System.Net.Authorization" /> is valid for a particular URI.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the prefix for Uniform Resource Identifiers (URIs) that can be authenticated with the <see cref="P:System.Net.Authorization.Message" /> property.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>