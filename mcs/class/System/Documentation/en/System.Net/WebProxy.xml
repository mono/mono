<?xml version="1.0" encoding="utf-8"?>
<Type Name="WebProxy" FullName="System.Net.WebProxy" FullNameSP="System_Net_WebProxy" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public serializable WebProxy extends System.Object implements System.Net.IWebProxy" />
  <TypeSignature Language="C#" Value="public class WebProxy : System.Net.IWebProxy, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit WebProxy extends System.Object implements class System.Net.IWebProxy, class System.Runtime.Serialization.ISerializable" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Net.IWebProxy</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <example>
      <para>The following example sets a <see cref="T:System.Net.WebProxy" /> for a
<see cref="T:System.Net.WebRequest" />. The <see cref="T:System.Net.WebRequest" /> instance uses the proxy to 
   connect to external Internet resources.</para>
      <code lang="C#">using System;
using System.Net;

public class WebProxyExample {

  public static void Main() {

    WebProxy proxyObject =
      new WebProxy("http://proxyserver:80/",true);
    WebRequest req =
      WebRequest.Create("http://www.contoso.com");
    req.Proxy = proxyObject;
  }
}
</code>
    </example>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.WebProxy" /> class contains the proxy settings that <see cref="T:System.Net.WebRequest" /> instances use to determine whether a Web proxy is used to send requests. Global Web proxy settings can be specified in machine and application configuration files, and applications can use instances of the <see cref="T:System.Net.WebProxy" /> class to customize Web proxy use. The <see cref="T:System.Net.WebProxy" /> class is the base implementation of the <see cref="T:System.Net.IWebProxy" /> interface.</para>
      <para>To obtain instances of the Web proxy class, you can use any of the following methods: </para>
      <list type="bullet">
        <item>
          <para>The <see cref="M:System.Net.WebProxy.#ctor" /> constructor.</para>
        </item>
        <item>
          <para>The <see cref="M:System.Net.WebProxy.GetDefaultProxy" /> method.</para>
        </item>
        <item>
          <para>The <see cref="P:System.Net.GlobalProxySelection.Select" /> method.</para>
        </item>
      </list>
      <para>These methods each supply a <see cref="T:System.Net.WebProxy" /> instance that you can further customize; the difference between them is how the instance is initialized before it is returned to your application. The <see cref="M:System.Net.WebProxy.#ctor" /> constructor returns an instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="P:System.Net.WebProxy.Address" /> property set to null. When a request uses a <see cref="T:System.Net.WebProxy" /> instance in this state, no proxy is used to send the request.</para>
      <para>The <see cref="M:System.Net.WebProxy.GetDefaultProxy" /> method returns an instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="P:System.Net.WebProxy.Address" />, <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" />, and <see cref="P:System.Net.WebProxy.BypassList" /> properties set to the values used by Internet Explorer 5.5 and later.</para>
      <para>The <see cref="P:System.Net.GlobalProxySelection.Select" /> method returns an instance of the <see cref="T:System.Net.WebProxy" /> class with it properties set according to a combination of Internet Explorer and configuration file settings.</para>
      <para>The <see cref="T:System.Net.WebProxy" /> class supports automatic detection and execution of proxy configuration scripts. This feature is also known as Web Proxy Auto-Discovery (WPAD). When using automatic proxy configuration, a configuration script, typically named Wpad.dat, must be located, downloaded, compiled, and run. If these operations are successful, the script returns the proxies that can be used for a request.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Contains HTTP proxy settings for the <see cref="T:System.Net.WebRequest" /> class.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor()" />
      <MemberSignature Language="C#" Value="public WebProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The default constructor initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="P:System.Net.WebProxy.Address" /> property set to null.</para>
          <para>When the <see cref="P:System.Net.WebProxy.Address" /> property is null, the <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> method returns true and the <see cref="M:System.Net.WebProxy.GetProxy(System.Uri)" /> method returns the destination address.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes an empty instance of the <see cref="T:System.Net.WebProxy" /> class.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string Address)" />
      <MemberSignature Language="C#" Value="public WebProxy (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.String" /> containing the URI of the proxy server.</param>
        <exception cref="T:System.UriFormatException">
          <paramref name="Address " />is not <see langword="null" /> and not in a valid URI format.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to a <see cref="T:System.Uri" /> instance containing <paramref name="Address" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Uri Address)" />
      <MemberSignature Language="C#" Value="public WebProxy (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri address) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">A <see cref="T:System.Uri" /> containing the address of the proxy server.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to the <paramref name="Address" /> parameter.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class from the specified <see cref="T:System.Uri" /> instance.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebProxy (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is called by the system to deserialize a <see cref="T:System.Net.WebProxy" /> instance; applications do not call it.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes an instance of the <see cref="T:System.Net.WebProxy" /> class using previously serialized content.</para>
        </summary>
        <param name="serializationInfo">
          <attribution license="cc4" from="Microsoft" modified="false" />The serialization data. </param>
        <param name="streamingContext">
          <attribution license="cc4" from="Microsoft" modified="false" />The context for the serialized data. </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string Address, bool BypassOnLocal)" />
      <MemberSignature Language="C#" Value="public WebProxy (string address, bool bypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, bool bypassOnLocal) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <exception cref="T:System.UriFormatException">
          <para>
            <paramref name="Address " />is not in a valid URI format.</para>
        </exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to a <see cref="T:System.Uri" /> instance that contains <paramref name="Address" /> and the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI and bypass setting.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string Host, int32 Port)" />
      <MemberSignature Language="C#" Value="public WebProxy (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string host, int32 port) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <exception cref="T:System.UriFormatException">The URI formed by combining <paramref name="Host" /> and <paramref name="Port" /> is not in a valid URI format.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to a <see cref="T:System.Uri" /> instance of the form http:// <paramref name="Host" /> : <paramref name="Port" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified host and port number.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Uri Address, bool BypassOnLocal)" />
      <MemberSignature Language="C#" Value="public WebProxy (Uri address, bool bypassOnLocal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri address, bool bypassOnLocal) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to <paramref name="Address" /> and with the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the <see cref="T:System.Uri" /> instance and bypass setting.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string Address, bool BypassOnLocal, class System.String[] BypassList)" />
      <MemberSignature Language="C#" Value="public WebProxy (string address, bool bypassOnLocal, string[] bypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, bool bypassOnLocal, string[] bypassList) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
        <Parameter Name="bypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <param name="bypassList">To be added.</param>
        <exception cref="T:System.UriFormatException">
          <para>
            <paramref name="Address " />is not in a valid URI format.</para>
        </exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to a <see cref="T:System.Uri" /> instance that contains <paramref name="Address" />, the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />, and the <see cref="P:System.Net.WebProxy.BypassList" /> property set to <paramref name="BypassList" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, and list of URIs to bypass.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, class System.String[] BypassList)" />
      <MemberSignature Language="C#" Value="public WebProxy (Uri address, bool bypassOnLocal, string[] bypassList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri address, bool bypassOnLocal, string[] bypassList) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
        <Parameter Name="bypassList" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <param name="bypassList">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to <paramref name="Address" />, the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />, and the <see cref="P:System.Net.WebProxy.BypassList" /> property set to <paramref name="BypassList" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, and list of URIs to bypass.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string Address, bool BypassOnLocal, class System.String[] BypassList, class System.Net.ICredentials Credentials)" />
      <MemberSignature Language="C#" Value="public WebProxy (string address, bool bypassOnLocal, string[] bypassList, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, bool bypassOnLocal, string[] bypassList, class System.Net.ICredentials credentials) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
        <Parameter Name="bypassList" Type="System.String[]" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <param name="bypassList">To be added.</param>
        <param name="credentials">To be added.</param>
        <exception cref="T:System.UriFormatException">
          <para>
            <paramref name="Address " />is not in a valid URI format.</para>
        </exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to a <see cref="T:System.Uri" /> instance that contains <paramref name="Address" />, the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />, the <see cref="P:System.Net.WebProxy.BypassList" /> property set to <paramref name="BypassList" />, and the <see cref="P:System.Net.WebProxy.Credentials" /> property set to <paramref name="Credentials" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified URI, bypass setting, list of URIs to bypass, and credentials.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Uri Address, bool BypassOnLocal, class System.String[] BypassList, class System.Net.ICredentials Credentials)" />
      <MemberSignature Language="C#" Value="public WebProxy (Uri address, bool bypassOnLocal, string[] bypassList, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri address, bool bypassOnLocal, string[] bypassList, class System.Net.ICredentials credentials) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="bypassOnLocal" Type="System.Boolean" />
        <Parameter Name="bypassList" Type="System.String[]" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="address">To be added.</param>
        <param name="bypassOnLocal">To be added.</param>
        <param name="bypassList">To be added.</param>
        <param name="credentials">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Net.WebProxy" /> instance is initialized with the <see cref="P:System.Net.WebProxy.Address" /> property set to <paramref name="Address" />, the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property set to <paramref name="BypassOnLocal" />, the <see cref="P:System.Net.WebProxy.BypassList" /> property set to <paramref name="BypassList" />, and the <see cref="P:System.Net.WebProxy.Credentials" /> property set to <paramref name="Credentials" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Net.WebProxy" /> class with the specified <see cref="T:System.Uri" /> instance, bypass setting, list of URIs to bypass, and credentials.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="ILASM" Value=".property class System.Uri Address { public hidebysig specialname instance class System.Uri get_Address() public hidebysig specialname instance void set_Address(class System.Uri value) }" />
      <MemberSignature Language="C#" Value="public Uri Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Uri" /> containing the 
 address of the proxy server represented by the current instance.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.WebProxy.Address" /> property contains the address of the proxy server. When automatic proxy detection is not enabled, and no automatic configuration script is specified, the <see cref="P:System.Net.WebProxy.Address" /> property and <see cref="P:System.Net.WebProxy.BypassList" /> determine the proxy used for a request.</para>
          <para>When the <see cref="P:System.Net.WebProxy.Address" /> property is null, requests bypass the proxy and connect directly to the destination host.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the address of the proxy server.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="BypassArrayList">
      <MemberSignature Language="ILASM" Value=".property class System.Collections.ArrayList BypassArrayList { public hidebysig specialname instance class System.Collections.ArrayList get_BypassArrayList() }" />
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList BypassArrayList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList BypassArrayList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para> A <see cref="T:System.Collections.ArrayList" /> of
<see cref="T:System.String" /> instances. The elements of 
   the list represent the URIs that a <see cref="T:System.Net.WebRequest" />
   instance accesses directly instead of through the proxy server.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.WebProxy.BypassList" /> is an array list of regular expression strings that describe the URIs that a <see cref="T:System.Net.WebRequest" /> instance accesses directly instead of through the proxy server.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a list of addresses that do not use the proxy server.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="BypassList">
      <MemberSignature Language="ILASM" Value=".property class System.String[] BypassList { public hidebysig specialname instance class System.String[] get_BypassList() public hidebysig specialname instance void set_BypassList(class System.String[] value) }" />
      <MemberSignature Language="C#" Value="public string[] BypassList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] BypassList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Array" /> of <see cref="T:System.String" /> instances. The elements of the array represent URIs that
   a <see cref="T:System.Net.WebRequest" />
   instance accesses directly instead of through the
   proxy server. </para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.WebProxy.BypassList" /> property contains an array of regular expressions that describe URIs that a <see cref="T:System.Net.WebRequest" /> instance accesses directly instead of through the proxy server.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an array of addresses that do not use the proxy server.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="ILASM" Value=".property bool BypassProxyOnLocal { public hidebysig specialname instance bool get_BypassProxyOnLocal() public hidebysig specialname instance void set_BypassProxyOnLocal(bool value) }" />
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>
            <see langword="true " />to bypass the proxy server for local resources;
   otherwise, <see langword="false" />. The default value is
<see langword="false" />.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The setting of the <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> property determines whether <see cref="T:System.Net.WebRequest" /> instances use the proxy server when accessing local Internet resources.</para>
          <para>If <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> is true, requests to local Internet resources do not use the proxy server. Local requests are identified by the lack of a period (.) in the URI, as in http://webserver/, or access the local server, including http://localhost, http://loopback, or http://127.0.0.1. When <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> is false, all Internet requests are made through the proxy server.</para>
          <block subset="none" type="note">
            <para>Requests to a local host with a URI that contain a period use the proxy. To avoid using a proxy in these cases, create an entry for the host in the <see cref="P:System.Net.WebProxy.BypassList" />.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="ILASM" Value=".property class System.Net.ICredentials Credentials { public final hidebysig virtual specialname class System.Net.ICredentials get_Credentials() public final hidebysig virtual specialname void set_Credentials(class System.Net.ICredentials value) }" />
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para> A <see cref="T:System.Net.ICredentials" /> object
 containing the credentials to submit to the proxy server
 for authentication.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Net.WebProxy.Credentials" /> property contains the authentication credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code. In most client scenarios, you should use the <see cref="P:System.Net.CredentialCache.DefaultCredentials" />, which are the credentials of the currently logged on user. To do this, set the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property to true instead of setting this property.</para>
          <block subset="none" type="note">
            <para>If you set the <see cref="P:System.Net.WebProxy.Credentials" /> property to credentials other than the <see cref="P:System.Net.CredentialCache.DefaultCredentials" />, setting the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property to true causes a <see cref="T:System.InvalidOperationException" />. To prevent this, you must set the <see cref="P:System.Net.WebProxy.Credentials" /> property to null before setting the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property to true. Likewise, you cannot set this property to any value when <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> is true.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the credentials to submit to the proxy server for authentication.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="GetDefaultProxy">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.Net.WebProxy GetDefaultProxy()" />
      <MemberSignature Language="C#" Value="public static System.Net.WebProxy GetDefaultProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.WebProxy GetDefaultProxy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Can we get this info under windows from the system?")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebProxy</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.WebProxy.GetDefaultProxy" /> method reads the nondynamic proxy settings stored by Internet Explorer 5.5 and later, and creates a <see cref="T:System.Net.WebProxy" /> instance with those settings.</para>
          <para>The <see cref="M:System.Net.WebProxy.GetDefaultProxy" /> method does not pick up any dynamic settings that are generated from scripts run by Internet Explorer, from automatic configuration entries, or from DHCP or DNS lookups. </para>
          <para>Applications should use the <see cref="P:System.Net.WebRequest.DefaultWebProxy" /> property and the <see cref="M:System.Net.WebRequest.GetSystemWebProxy" /> method instead of the <see cref="M:System.Net.WebProxy.GetDefaultProxy" /> method. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the Internet Explorer nondynamic proxy settings.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Net.WebProxy" /> instance that contains the nondynamic proxy settings from Internet Explorer 5.5 and later.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Any objects included in the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> are automatically tracked and serialized by the formatter.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data that is needed to serialize the target object.</para>
        </summary>
        <param name="serializationInfo">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data. </param>
        <param name="streamingContext">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</param>
      </Docs>
    </Member>
    <Member MemberName="GetProxy">
      <MemberSignature Language="ILASM" Value=".method public final hidebysig virtual class System.Uri GetProxy(class System.Uri destination)" />
      <MemberSignature Language="C#" Value="public Uri GetProxy (Uri destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri GetProxy(class System.Uri destination) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Uri" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.WebProxy.GetProxy(System.Uri)" /> method returns the URI that the <see cref="T:System.Net.WebRequest" /> instance uses to access the Internet resource.</para>
          <para>
            <see cref="M:System.Net.WebProxy.GetProxy(System.Uri)" /> compares <paramref name="destination" /> with the contents of <see cref="P:System.Net.WebProxy.BypassList" />, using the <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> method. If <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> returns true, <see cref="M:System.Net.WebProxy.GetProxy(System.Uri)" /> returns <paramref name="destination" /> and the <see cref="T:System.Net.WebRequest" /> instance does not use the proxy server.</para>
          <para>If <paramref name="destination" /> is not in <see cref="P:System.Net.WebProxy.BypassList" />, the <see cref="T:System.Net.WebRequest" /> instance uses the proxy server and the <see cref="P:System.Net.WebProxy.Address" /> property is returned.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the proxied URI for a request.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Uri" /> instance of the Internet resource, if the resource is on the bypass list; otherwise, the <see cref="T:System.Uri" /> instance of the proxy.</para>
        </returns>
        <param name="destination">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Uri" /> instance of the requested Internet resource. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="IsBypassed">
      <MemberSignature Language="ILASM" Value=".method public final hidebysig virtual bool IsBypassed(class System.Uri host)" />
      <MemberSignature Language="C#" Value="public bool IsBypassed (Uri host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBypassed(class System.Uri host) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.Uri" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Net.WebProxy.BypassList" /> of the current instance contains an invalid regular expression.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> method is used to determine whether to bypass the proxy server when accessing an Internet resource.</para>
          <para>The <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> and <see cref="P:System.Net.WebProxy.BypassList" /> properties control the return value of the <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> method.</para>
          <para>
            <see cref="M:System.Net.WebProxy.IsBypassed(System.Uri)" /> returns true under any of the following conditions: </para>
          <list type="bullet">
            <item>
              <para>If <see cref="P:System.Net.WebProxy.BypassProxyOnLocal" /> is true and <paramref name="host" /> is a local URI. Local requests are identified by the lack of a period (.) in the URI, as in "http://webserver/".</para>
            </item>
            <item>
              <para>If <paramref name="host" /> matches a regular expression in <see cref="P:System.Net.WebProxy.BypassList" />.</para>
            </item>
            <item>
              <para>If <see cref="P:System.Net.WebProxy.Address" /> is null.</para>
            </item>
          </list>
          <para>All other conditions return false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether to use the proxy server for the specified host.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the proxy server should not be used for <paramref name="host" />; otherwise, false.</para>
        </returns>
        <param name="host">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Uri" /> instance of the host to check for proxy use. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The system calls this method to serialize an object; applications do not call it directly.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates the serialization data and context that are used by the system to serialize a <see cref="T:System.Net.WebProxy" /> object.</para>
        </summary>
        <param name="serializationInfo">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to populate with data. </param>
        <param name="streamingContext">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure that indicates the destination for this serialization. </param>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Does not affect Credentials, since CredentialCache.DefaultCredentials is not implemented.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Set this property to true when requests made by this <see cref="T:System.Net.WebProxy" /> object should, if requested by the server, be authenticated using the credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios. For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <see cref="P:System.Net.WebProxy.Credentials" /> property to the credentials of the client on whose behalf the request is made.</para>
          <para>The following table shows the effect of setting the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> value, based on the value of the <see cref="P:System.Net.WebProxy.Credentials" /> property.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>
                    <see cref="P:System.Net.WebProxy.Credentials" /> value</para>
                </term>
                <description>
                  <para>
                    <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> value</para>
                </description>
                <description>
                  <para>Effect</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Net.CredentialCache.DefaultCredentials" />
                </para>
              </term>
              <description>
                <para>true</para>
              </description>
              <description>
                <para>No effect.</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Net.CredentialCache.DefaultCredentials" />
                </para>
              </term>
              <description>
                <para>false</para>
              </description>
              <description>
                <para>
                  <see cref="P:System.Net.WebProxy.Credentials" /> is set to null.</para>
              </description>
            </item>
            <item>
              <term>
                <para>null</para>
              </term>
              <description>
                <para>true</para>
              </description>
              <description>
                <para>
                  <see cref="P:System.Net.WebProxy.Credentials" /> is set to <see cref="P:System.Net.CredentialCache.DefaultCredentials" />.</para>
              </description>
            </item>
            <item>
              <term>
                <para>Any value other than <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> or null</para>
              </term>
              <description>
                <para>true or false</para>
              </description>
              <description>
                <para>Setting <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> throws an exception.</para>
              </description>
            </item>
          </list>
          <para>If <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> is false, you can change the <see cref="P:System.Net.WebProxy.Credentials" /> property to any credentials. If <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> is true, changing the <see cref="P:System.Net.WebProxy.Credentials" /> property from <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> (the value that is set when the <see cref="P:System.Net.WebProxy.UseDefaultCredentials" /> property is set to true) will throw an exception.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a <see cref="T:System.Boolean" /> value that controls whether the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> are sent with requests.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>