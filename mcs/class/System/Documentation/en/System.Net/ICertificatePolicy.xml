<?xml version="1.0" encoding="utf-8"?>
<Type Name="ICertificatePolicy" FullName="System.Net.ICertificatePolicy">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface ICertificatePolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICertificatePolicy" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Net.ICertificatePolicy" /> interface is used to provide custom security certificate validation for an application. The default policy is to allow valid certificates, as well as valid certificates that have expired. To change this policy, implement the <see cref="T:System.Net.ICertificatePolicy" /> interface with a different policy, and then assign that policy to <see cref="P:System.Net.ServicePointManager.CertificatePolicy" />.</para>
      <para>
        <see cref="T:System.Net.ICertificatePolicy" /> uses the Security Support Provider Interface (SSPI). For more information, see the SSPI documentation on MSDN.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Validates a server certificate.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="CheckValidationResult">
      <MemberSignature Language="C#" Value="public bool CheckValidationResult (System.Net.ServicePoint srvPoint, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Net.WebRequest request, int certificateProblem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckValidationResult(class System.Net.ServicePoint srvPoint, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Net.WebRequest request, int32 certificateProblem) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srvPoint" Type="System.Net.ServicePoint" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="certificateProblem" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)" /> method implements the application certificate validation policy. The method can examine the <paramref name="srvPoint" />, <paramref name="certificate" />, <paramref name="request" />, and <paramref name="certificateProblem" /> parameters to determine whether the certificate should be honored.</para>
          <para>The <paramref name="certificateProblem" /> parameter is a Security Support Provider Interface (SSPI) status code. For more information, see the SSPI documentation on MSDN.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Validates a server certificate.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the certificate should be honored; otherwise, false.</para>
        </returns>
        <param name="srvPoint">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Net.ServicePoint" /> that will use the certificate. </param>
        <param name="certificate">
          <attribution license="cc4" from="Microsoft" modified="false" />The certificate to validate. </param>
        <param name="request">
          <attribution license="cc4" from="Microsoft" modified="false" />The request that received the certificate. </param>
        <param name="certificateProblem">
          <attribution license="cc4" from="Microsoft" modified="false" />The problem that was encountered when using the certificate. </param>
      </Docs>
    </Member>
  </Members>
</Type>