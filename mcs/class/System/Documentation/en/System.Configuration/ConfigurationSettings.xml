<?xml version="1.0" encoding="utf-8"?>
<Type Name="ConfigurationSettings" FullName="System.Configuration.ConfigurationSettings">
  <TypeSignature Language="C#" Value="public sealed class ConfigurationSettings" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConfigurationSettings extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Using the static methods and properties of the <see cref="T:System.Configuration.ConfigurationSettings" /> type is the recommended method for reading configuration information at runtime for versions 1.0 and 1.1 applications. </para>
      <block subset="none" type="note">
        <para>The <see cref="T:System.Configuration.ConfigurationSettings" /> class provides backward compatibility only. For new applications you should use the <see cref="T:System.Configuration.ConfigurationManager" /> class or <see cref="T:System.Web.Configuration.WebConfigurationManager" /> class instead. To use these two classes, you must add a reference in your project or application to the System.Configuration namespace.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides runtime versions 1.0 and 1.1 support for reading configuration sections and common configuration settings.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.NameValueCollection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.NameValueCollection AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property is obsolete.  Please use System.Configuration.ConfigurationManager.AppSettings")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>a <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing values of the keys contained in the &lt;appSettings&gt; element of the config file.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The appSettings section element of the configuration file contains a series of name/value pairs that your application can use for any purpose. </para>
          <para>This method is deprecated and is maintained for backward compatibility. Please use the GetSection method instead.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Configuration.ConfigurationSettings" /> class provides backward compatibility only. You should use the <see cref="T:System.Configuration.ConfigurationManager" /> class or <see cref="T:System.Web.Configuration.WebConfigurationManager" /> class instead.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a read-only <see cref="T:System.Collections.Specialized.NameValueCollection" /> of the application settings section of the configuration file.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public static object GetConfig (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetConfig(string sectionName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method is obsolete, it has been replaced by System.Configuration!System.Configuration.ConfigurationManager.GetSection")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is deprecated and is maintained for backward compatibility. Please use the GetSection method instead.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the <see cref="T:System.Configuration.ConfigurationSection" /> object for the passed configuration section name and path.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Configuration.ConfigurationSection" /> object for the passed configuration section name and path.</para>
          <block subset="none" type="note">
            <para>The <see cref="T:System.Configuration.ConfigurationSettings" /> class provides backward compatibility only. You should use the <see cref="T:System.Configuration.ConfigurationManager" /> class or <see cref="T:System.Web.Configuration.WebConfigurationManager" /> class instead.</para>
          </block>
        </returns>
        <param name="sectionName">
          <attribution license="cc4" from="Microsoft" modified="false" />A configuration name and path, such as "system.net/settings".</param>
      </Docs>
    </Member>
  </Members>
</Type>