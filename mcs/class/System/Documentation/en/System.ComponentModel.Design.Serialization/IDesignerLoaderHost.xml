<?xml version="1.0" encoding="utf-8"?>
<Type Name="IDesignerLoaderHost" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderHost">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface IDesignerLoaderHost : IServiceProvider, System.ComponentModel.Design.IDesignerHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderHost implements class System.ComponentModel.Design.IDesignerHost, class System.ComponentModel.Design.IServiceContainer, class System.IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesignerHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> can implement this interface to enable support for loading by a <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</para>
      <para>The designer loader informs the designer host that it needs to invoke a load or reload so that the designer host can perform additional tasks at these times.</para>
      <para>This class is isolated from <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to emphasize that the designer loader, not the designer host, must initiate all loading and reloading of the design document.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides an interface that can extend a designer host to support loading from a serialized state.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (string baseClassName, bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndLoad(string baseClassName, bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseClassName" Type="System.String" />
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> that loads the design document calls this method to indicate that the load terminated.</para>
          <para>If errors are encountered during loading, they must be passed in the <paramref name="errorCollection" /> parameter as a collection of exceptions. If they are not exceptions, the designer loader host can call <see cref="M:System.Object.ToString" /> on them and pass them as a collection. If the load is successful, then the <paramref name="errorCollection" /> parameter must be either null or an empty collection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Ends the designer loading operation.</para>
        </summary>
        <param name="baseClassName">
          <attribution license="cc4" from="Microsoft" modified="false" />The fully qualified name of the base class of the document that this designer is designing. </param>
        <param name="successful">
          <attribution license="cc4" from="Microsoft" modified="false" />true if the designer is successfully loaded; otherwise, false. </param>
        <param name="errorCollection">
          <attribution license="cc4" from="Microsoft" modified="false" />A collection containing the errors encountered during load, if any. If no errors were encountered, pass either an empty collection or null. </param>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reload() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> calls this method to reload the design document.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reloads the design document.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>