<?xml version="1.0" encoding="utf-8"?>
<Type Name="CodeCommentStatement" FullName="System.CodeDom.CodeCommentStatement">
  <TypeSignature Language="C#" Value="public class CodeCommentStatement : System.CodeDom.CodeStatement" Maintainer="auto" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeCommentStatement extends System.CodeDom.CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>
        <see cref="T:System.CodeDom.CodeCommentStatement" /> can be used to represent a single-line comment statement. <see cref="T:System.CodeDom.CodeCommentStatement" /> is a statement, so it can be inserted into a statements collection and will appear on its own line. <see cref="T:System.CodeDom.CodeCommentStatement" /> can also be added to the comments collection of <see cref="T:System.CodeDom.CodeNamespace" /> or any object that derives from <see cref="T:System.CodeDom.CodeTypeMember" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a statement consisting of a single comment.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCommentStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <example>
Creating the code for the following statement throws an Exception because the value of the CodeCommentStatement Comment property hasn't been set.
  <code lang="C#">
...
demoNs.Comments.Add(new CodeCommentStatement());
...
  </code></example>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCommentStatement (System.CodeDom.CodeComment comment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeComment comment) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="comment" Type="System.CodeDom.CodeComment" />
      </Parameters>
      <Docs>
        <remarks>To be added
<example><code lang="C#">
...
		CodeComment com=new CodeComment("foo!");
		com.DocComment=true;
		demoNs.Comments.Add(new CodeCommentStatement(com));
...
  </code>
emits
  <code lang="C#">
/// foo!
  </code></example></remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified comment.</para>
        </summary>
        <param name="comment">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.CodeDom.CodeComment" /> that indicates the comment. </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCommentStatement (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <example>
            <code lang="C#">
		demoNs.Comments.Add(new CodeCommentStatement("This is a test"));
  </code>
generates the code
  <code lang="C#">
// This is a test
  </code></example>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified text as contents.</para>
        </summary>
        <param name="text">
          <attribution license="cc4" from="Microsoft" modified="false" />The contents of the comment. </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeCommentStatement (string text, bool docComment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, bool docComment) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="docComment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <paramref name="docComment" /> parameter is true, the <see cref="T:System.CodeDom.CodeCommentStatement" /> is a documentation comment and the comment is structured using triple delimiter characters. For example, in C# the comment is "///", in Visual Basic "'''". Documentation comments are used to identify an XML comment field, such as a type or member summary identified by the &lt;summary&gt; element.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.CodeDom.CodeCommentStatement" /> class using the specified text and documentation comment flag.</para>
        </summary>
        <param name="text">
          <attribution license="cc4" from="Microsoft" modified="false" />The contents of the comment. </param>
        <param name="docComment">
          <attribution license="cc4" from="Microsoft" modified="false" />true if the comment is a documentation comment; otherwise, false. </param>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeComment Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeComment Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeComment</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <value>To be added: an object of type 'CodeComment'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the contents of the comment.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>