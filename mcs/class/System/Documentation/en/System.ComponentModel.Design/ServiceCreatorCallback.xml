<?xml version="1.0" encoding="utf-8"?>
<Type Name="ServiceCreatorCallback" FullName="System.ComponentModel.Design.ServiceCreatorCallback">
  <TypeSignature Language="C#" Maintainer="auto" Value="public delegate object ServiceCreatorCallback(IServiceContainer container, Type serviceType);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ServiceCreatorCallback extends System.MulticastDelegate" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="container" Type="System.ComponentModel.Design.IServiceContainer" />
    <Parameter Name="serviceType" Type="System.Type" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="container">To be added.</param>
    <param name="serviceType">To be added.</param>
    <returns>To be added.</returns>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>
        <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" /> provides a mechanism to publish services that you can request to have created when needed, rather than the service being created immediately when the designer loads. You can use a callback function if the service is not essential and may not be used. A service published by using a <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" /> does not use as many additional resources if it is not requested and created. To use a callback function to publish your service, pass a <see cref="T:System.ComponentModel.Design.ServiceCreatorCallback" /> to the <see cref="M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)" /> method of an <see cref="T:System.ComponentModel.Design.IServiceContainer" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a callback mechanism that can create an instance of a service on demand.</para>
    </summary>
  </Docs>
  <Members />
</Type>