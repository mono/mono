;==++==
;
;   Copyright (c) Microsoft Corporation.  All rights reserved.
;
;==--==

; NOTE: do not use \", use ' instead
; NOTE: Use # or ; for comments
; <owner current="true" primary="true">markash</owner>
; <owner current="true" primary="false">laled</owner>

; These are the managed resources for System.Data.dll.  See
; ResourceManager documentation and the ResGen tool.

;; TODO: Remove Common Code stuff if we ever get Friend Assemblies to work
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; COMMON CODE STUFF
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
ADP_Ascending=Ascending
ADP_CollectionIndexInt32=Invalid index {0} for this {1} with Count={2}.
ADP_CollectionIndexString=An {0} with {1} '{2}' is not contained by this {3}.
ADP_CollectionInvalidType=The {0} only accepts non-null {1} type objects, not {2} objects.
ADP_CollectionIsNotParent=The {0} is already contained by another {1}.
ADP_CollectionIsParent=The {0} with is already contained by this {1}.
ADP_CollectionNullValue=The {0} only accepts non-null {1} type objects.
ADP_CollectionRemoveInvalidObject=Attempted to remove an {0} that is not contained by this {1}.
ADP_CollectionUniqueValue=The {0}.{1} is required to be unique, '{2}' already exists in the collection.
ADP_ConnectionAlreadyOpen=The connection was not closed. {0}
ADP_ConnectionStateMsg_Closed=The connection's current state is closed.
ADP_ConnectionStateMsg_Connecting=The connection's current state is connecting.
ADP_ConnectionStateMsg_Open=The connection's current state is open.
ADP_ConnectionStateMsg_OpenExecuting=The connection's current state is executing.
ADP_ConnectionStateMsg_OpenFetching=The connection's current state is fetching.
ADP_ConnectionStateMsg=The connection's current state: {0}.
ADP_ConnectionStringSyntax=Format of the initialization string does not conform to specification starting at index {0}.
ADP_DataReaderClosed=Invalid attempt to call {0} when reader is closed.
ADP_DelegatedTransactionPresent=Cannot enlist in the transaction because the connection is the primary connection for a delegated or promoted transaction.
ADP_Descending=Descending
ADP_EmptyString=Expecting non-empty string for '{0}' parameter.
ADP_InternalConnectionError=Internal DbConnection Error: {0}
ADP_InvalidDataDirectory=The DataDirectory substitute is not a string.
ADP_InvalidEnumerationValue=The {0} enumeration value, {1}, is invalid.
ADP_InvalidKey=Invalid keyword, contain one or more of 'no characters', 'control characters', 'leading or trailing whitespace' or 'leading semicolons'.
ADP_InvalidOffsetValue=Invalid parameter Offset value '{0}'. The value must be greater than or equal to 0.
ADP_InvalidValue=The value contains embedded nulls (\\u0000).
ADP_InvalidXMLBadVersion=Invalid Xml; can only parse elements of version one.
ADP_NoConnectionString=The ConnectionString property has not been initialized.
ADP_NonCLSException=A Non CLS Exception was caught.
ADP_NotAPermissionElement=Given security element is not a permission element.
ADP_OpenConnectionPropertySet=Not allowed to change the '{0}' property. {1}
ADP_PendingAsyncOperation=Can not start another operation while there is an asynchronous operation pending.
ADP_PermissionTypeMismatch=Type mismatch.
ADP_PooledOpenTimeout=Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.
ADP_NonPooledOpenTimeout=Timeout attempting to open the connection.  The time period elapsed prior to attempting to open the connection has been exceeded.  This may have occurred because of too many simultaneous non-pooled connection attempts.
ADP_InvalidMixedUsageOfSecureAndClearCredential=Cannot use Credential with UserID, UID, Password, or PWD connection string keywords.
ADP_InvalidMixedUsageOfSecureCredentialAndIntegratedSecurity=Cannot use Credential with Integrated Security connection string keyword.
ADP_InvalidMixedUsageOfSecureCredentialAndContextConnection=Cannot use Credential with Context Connection keyword.
ADP_InvalidMixedUsageOfAccessTokenAndUserIDPassword=Cannot set the AccessToken property if 'UserID', 'UID', 'Password', or 'PWD' has been specified in connection string.
ADP_InvalidMixedUsageOfAccessTokenAndIntegratedSecurity=Cannot set the AccessToken property if the 'Integrated Security' connection string keyword has been set to 'true' or 'SSPI'.
ADP_InvalidMixedUsageOfAccessTokenAndContextConnection=Cannot set the AccessToken property with the 'Context Connection' keyword.
ADP_InvalidMixedUsageOfAccessTokenAndCredential=Cannot set the AccessToken property if the Credential property is already set.
ADP_InvalidMixedUsageOfCredentialAndAccessToken=Cannot set the Credential property if the AccessToken property is already set.
ADP_InvalidMixedUsageOfAccessTokenAndAuthentication=Cannot set the AccessToken property if 'Authentication' has been specified in the connection string.
ADP_MustBeReadOnly={0} must be marked as read only.
DataCategory_Data=Data
DataCategory_StateChange=StateChange
DataCategory_Update=Update
DbCommand_CommandTimeout=Time to wait for command to execute.
DbConnection_State=The ConnectionState indicating whether the connection is open or closed.
DbConnection_StateChange=Event triggered when the connection changes state.
DbParameter_DbType=The parameter generic type.
DbParameter_Direction=Input, output, or bidirectional parameter.
DbParameter_IsNullable=a design-time property used for strongly typed code-generation.
DbParameter_Offset=Offset in variable length data types.
DbParameter_ParameterName=Name of the parameter.
DbParameter_Size=Size of variable length data types (string & arrays).
DbParameter_SourceColumn=When used by a DataAdapter.Update, the source column name that is used to find the DataSetColumn name in the ColumnMappings. This is to copy a value between the parameter and a data row.
DbParameter_SourceVersion=When used by a DataAdapter.Update (UpdateCommand only), the version of the DataRow value that is used to update the data source.
DbParameter_SourceColumnNullMapping=When used by DataAdapter.Update, the parameter value is changed from DBNull.Value into (Int32)1 or (Int32)0 if non-null.
DbParameter_Value=Value of the parameter.
MDF_QueryFailed=Unable to build the '{0}' collection because execution of the SQL query failed. See the inner exception for details.
MDF_TooManyRestrictions=More restrictions were provided than the requested schema ('{0}') supports.
MDF_InvalidRestrictionValue= '{2}' is not a valid value for the '{1}' restriction of the '{0}' schema collection.
MDF_UndefinedCollection=The requested collection ({0}) is not defined.
MDF_UndefinedPopulationMechanism=The population mechanism '{0}' is not defined.
MDF_UnsupportedVersion=The requested collection ({0}) is not supported by this version of the provider.
MDF_MissingDataSourceInformationColumn=One of the required DataSourceInformation tables columns is missing.
MDF_IncorrectNumberOfDataSourceInformationRows=The DataSourceInformation table must contain exactly one row.
MDF_MissingRestrictionColumn= One or more of the required columns of the restrictions collection is missing.
MDF_MissingRestrictionRow= A restriction exists for which there is no matching row in the restrictions collection.
MDF_NoColumns=The schema table contains no columns.
MDF_UnableToBuildCollection=Unable to build schema collection '{0}';
MDF_AmbigousCollectionName=The collection name '{0}' matches at least two collections with the same name but with different case, but does not match any of them exactly.
MDF_CollectionNameISNotUnique=There are multiple collections named '{0}'.
MDF_DataTableDoesNotExist=The collection '{0}' is missing from the metadata XML.
MDF_InvalidXml=The metadata XML is invalid.
MDF_InvalidXmlMissingColumn=The metadata XML is invalid. The {0} collection must contain a {1} column and it must be a string column.
MDF_InvalidXmlInvalidValue=The metadata XML is invalid. The {1} column of the {0} collection must contain a non-empty string.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; END OF COMMON CODE STUFF
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Data category / metadata resources
DataCategory_Action=Action
DataCategory_Behavior=Behavior
; COMMON CODE DataCategory_Data=Data
DataCategory_Fill=Fill
DataCategory_InfoMessage=InfoMessage
DataCategory_Mapping=Mapping
DataCategory_StatementCompleted=StatementCompleted
; COMMON CODE DataCategory_StateChange=StateChange
; COMMON CODE DataCategory_Update=Update
DataCategory_Udt=UDT
DataCategory_Notification=Notification
DataCategory_Schema=Schema
DataCategory_Xml=XML

DataCategory_Advanced=Advanced
DataCategory_Context=Context
DataCategory_Initialization=Initialization
DataCategory_Pooling=Pooling
DataCategory_NamedConnectionString=Named ConnectionString
DataCategory_Security=Security
DataCategory_Source=Source
DataCategory_Replication=Replication
DataCategory_ConnectionResilency=Connection Resiliency

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; collections
ExtendedPropertiesDescr=The collection that holds custom user information.

;;; DataSet property descriptions
DataSetCaseSensitiveDescr=Indicates whether comparing strings within the DataSet is case sensitive.
DataSetDataSetNameDescr=The name of this DataSet.
DataSetDefaultViewDescr=Indicates a custom "view" of the data contained by the DataSet. This view allows filtering, searching, and navigating through the custom data view.
DataSetEnforceConstraintsDescr=Indicates whether constraint rules are to be followed.
DataSetHasErrorsDescr=Indicates that the DataSet has errors.
DataSetLocaleDescr=Indicates a locale under which to compare strings within the DataSet.
DataSetNamespaceDescr=Indicates the XML uri namespace for the root element pointed at by this DataSet.
DataSetPrefixDescr=Indicates the prefix of the namespace used for this DataSet.
DataSetRelationsDescr=The collection that holds the relations for this DataSet.
DataSetTablesDescr=The collection that holds the tables for this DataSet.
DataSetMergeFailedDescr=Occurs when it is not possible to merge schemas for two tables with the same name.
DataSetInitializedDescr=Occurs after Initialization is finished.
DataSetDescr=Represents an in-memory cache of data.

;;; DataTable property descriptions
DataTableCaseSensitiveDescr=Indicates whether comparing strings within the table is case sensitive.
DataTableChildRelationsDescr=Returns the child relations for this table.
DataTableColumnsDescr=The collection that holds the columns for this table.
DataTableConstraintsDescr=The collection that holds the constraints for this table.
DataTableDataSetDescr=Indicates the DataSet to which this table belongs.
DataTableDefaultViewDescr=This is the default DataView for the table.
DataTableDisplayExpressionDescr=The expression used to compute the data-bound value of this row.
DataTableHasErrorsDescr=Returns whether the table has errors.
DataTableLocaleDescr=Indicates a locale under which to compare strings within the table.
DataTableMinimumCapacityDescr=Indicates an initial starting size for this table.
DataTableNamespaceDescr=Indicates the XML uri namespace for the elements contained in this table.
DataTablePrefixDescr=Indicates the Prefix of the namespace used for this table in XML representation.
DataTableParentRelationsDescr=Returns the parent relations for this table.
DataTablePrimaryKeyDescr=Indicates the column(s) that represent the primary key for this table.
DataTableRowsDescr=Indicates the collection that holds the rows of data for this table.
DataTableTableNameDescr=Indicates the name used to look up this table in the Tables collection of a DataSet.
;;; DataTableSerializeHierarchy=Indicates serialization of Table Hierarchy.

DataTableRowChangedDescr=Occurs after a row in the table has been successfully edited.
DataTableRowChangingDescr=Occurs when the row is being changed so that the event handler can modify or cancel the change. The user can modify values in the row and should throw an  exception to cancel the edit.
DataTableRowDeletedDescr=Occurs after a row in the table has been successfully deleted.
DataTableRowDeletingDescr=Occurs when a row in the table marked for deletion.  Throw an exception to cancel the deletion.
DataTableColumnChangingDescr=Occurs when a value has been submitted for this column.  The user can modify the proposed value and should throw an exception to cancel the edit.
DataTableColumnChangedDescr=Occurs when a value has been changed for this column.
DataTableRowsClearingDescr=Occurs prior to clearing all rows from the table.
DataTableRowsClearedDescr=Occurs after all rows in the table has been successfully cleared.
DataTableRowsNewRowDescr=Occurs after a new DataRow has been instantiated.

;;; DataRelation property descriptions
DataRelationRelationNameDescr=The name used to look up this relation in the Relations collection of a DataSet.
DataRelationChildColumnsDescr=Indicates the child columns of this relation.
DataRelationParentColumnsDescr=Indicates the parent columns of this relation.
DataRelationNested=Indicates whether relations are nested.

;;; Constraints property descriptions
ForeignKeyConstraintDeleteRuleDescr=For deletions, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintUpdateRuleDescr=For updates, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintAcceptRejectRuleDescr=For accept and reject changes, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintChildColumnsDescr=Indicates the child columns of this constraint.
ForeignKeyConstraintParentColumnsDescr=Indicates the parent columns of this constraint.
ForeignKeyRelatedTableDescr=Indicates the child table of this constraint.
KeyConstraintColumnsDescr=Indicates the columns of this constraint.
KeyConstraintIsPrimaryKeyDescr=Indicates if this constraint is a primary key.
ConstraintNameDescr=Indicates the name of this constraint.
ConstraintTableDescr=Indicates the table of this constraint.

;;; DataColumn property descriptions
DataColumnAllowNullDescr=Indicates whether null values are allowed in this column.
DataColumnAutoIncrementDescr=Indicates whether the column automatically increments itself for new rows added to the table.  The type of this column must be Int16, Int32, or Int64.
DataColumnAutoIncrementSeedDescr=Indicates the starting value for an AutoIncrement column.
DataColumnAutoIncrementStepDescr=Indicates the increment used by an AutoIncrement column.
DataColumnCaptionDescr=Indicates the default user-interface caption for this column.
DataColumnColumnNameDescr=Indicates the name used to look up this column in the Columns collection of a DataTable.
DataColumnDataTableDescr=Returns the DataTable to which this column belongs.
DataColumnDataTypeDescr=Indicates the type of data stored in this column.
DataColumnDefaultValueDescr=Indicates the default column value used when adding new rows to the table.
DataColumnExpressionDescr=Indicates the value that this column computes for each row based on other columns instead of taking user input.
DataColumnMappingDescr=Indicates how this column persists in XML: as an attribute, element, simple content node, or nothing.
DataColumnNamespaceDescr=Indicates the XML uri for elements or attributes stored in this column.
DataColumnPrefixDescr=Indicates the Prefix used for this DataColumn in xml representation.
DataColumnOrdinalDescr=Indicates the index of this column in the Columns collection.
DataColumnReadOnlyDescr=Indicates whether this column allows changes once a row has been added to the table.
DataColumnUniqueDescr=Indicates whether this column should restrict its values in the rows of the table to be unique.
DataColumnMaxLengthDescr=Indicates the maximum length of the value this column allows.
DataColumnDateTimeModeDescr=Indicates DateTimeMode of this DataColumn.


;;; DataView property descriptions
DataViewAllowDeleteDescr=Indicates whether this DataView and the user interface associated with it allows deletes.
DataViewAllowEditDescr=Indicates whether this DataView and the user interface associated with it allows edits.
DataViewAllowNewDescr=Indicates whether this DataView and the user interface associated with it allows new rows to be added.
DataViewCountDescr=Returns the number of items currently in this view.
DataViewDataViewManagerDescr=This returns a pointer to back to the DataViewManager that owns this DataSet (if any).
DataViewIsOpenDescr=Indicates whether the view is open.
DataViewRowFilterDescr=Indicates an expression used to filter the data returned by this DataView.
DataViewRowStateFilterDescr=Indicates the versions of data returned by this DataView.
DataViewSortDescr=Indicates the names of the column and the order in which data is returned by this DataView.
DataViewApplyDefaultSortDescr=Indicates whether to use the default sort if the Sort property is not set.
DataViewTableDescr=Indicates the table this DataView uses to get data.
DataViewListChangedDescr=Indicates that the data returned by this DataView has somehow changed.

;;; DataViewManager property descriptions
DataViewManagerDataSetDescr=Indicates the source of data for this DataViewManager.
DataViewManagerTableSettingsDescr=Indicates the sorting/filtering/state settings for any table in the corresponding DataSet.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; XmlSchema
Xml_SimpleTypeNotSupported=DataSet doesn't support 'union' or 'list' as simpleType.
Xml_MissingAttribute=Invalid {0} syntax: missing required '{1}' attribute.
Xml_ValueOutOfRange=Value '{1}' is invalid for attribute '{0}'.
Xml_AttributeValues=The value of attribute '{0}' should be '{1}' or '{2}'.
Xml_ElementTypeNotFound=Cannot find ElementType name='{0}'.
Xml_RelationParentNameMissing=Parent table name is missing in relation '{0}'.
Xml_RelationChildNameMissing=Child table name is missing in relation '{0}'.
Xml_RelationTableKeyMissing=Parent table key is missing in relation '{0}'.
Xml_RelationChildKeyMissing=Child table key is missing in relation '{0}'.
Xml_UndefinedDatatype=Undefined data type: '{0}'.
Xml_DatatypeNotDefined=Data type not defined.
Xml_InvalidField=Invalid XPath selection inside field node. Cannot find: {0}.
Xml_InvalidSelector=Invalid XPath selection inside selector node: {0}.
Xml_InvalidKey=Invalid 'Key' node inside constraint named: {0}.
Xml_DuplicateConstraint=The constraint name {0} is already used in the schema.
Xml_CannotConvert= Cannot convert '{0}' to type '{1}'.
Xml_MissingRefer=Missing '{0}' part in '{1}' constraint named '{2}'.
Xml_MismatchKeyLength=Invalid Relation definition: different length keys.
Xml_CircularComplexType=DataSet doesn't allow the circular reference in the ComplexType named '{0}'.
Xml_CannotInstantiateAbstract=DataSet cannot instantiate an abstract ComplexType for the node {0}.
Xml_MultipleTargetConverterError=An error occurred with the multiple target converter while writing an Xml Schema.  See the inner exception for details.
Xml_MultipleTargetConverterEmpty=An error occurred with the multiple target converter while writing an Xml Schema.  A null or empty string was returned.

Xml_MergeDuplicateDeclaration=Duplicated declaration '{0}'.
Xml_MissingTable=Cannot load diffGram. Table '{0}' is missing in the destination dataset.
Xml_MissingSQL=Cannot load diffGram. The 'sql' node is missing.
Xml_ColumnConflict=Column name '{0}' is defined for different mapping types.
Xml_InvalidPrefix=Prefix '{0}' is not valid, because it contains special characters.
Xml_NestedCircular=Circular reference in self-nested table '{0}'.
Xml_FoundEntity=DataSet cannot expand entities. Use XmlValidatingReader and set the EntityHandling property accordingly.
Xml_PolymorphismNotSupported=Type '{0}' does not implement IXmlSerializable interface therefore can not proceed with serialization.
Xml_CanNotDeserializeObjectType=Unable to proceed with deserialization. Data does not implement IXMLSerializable, therefore polymorphism is not supported.
Xml_DataTableInferenceNotSupported=DataTable does not support schema inference from Xml.
Xml_MultipleParentRows=Cannot proceed with serializing DataTable '{0}'. It contains a DataRow which has multiple parent rows on the same Foreign Key.
Xml_IsDataSetAttributeMissingInSchema=IsDataSet attribute is missing in input Schema.
Xml_TooManyIsDataSetAtributeInSchema=Cannot determine the DataSet Element. IsDataSet attribute exist more than once.
Xml_DynamicWithoutXmlSerializable=DataSet will not serialize types that implement IDynamicMetaObjectProvider but do not also implement IXmlSerializable.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Expression Language errors
Expr_NYI=The feature not implemented. {0}.
Expr_MissingOperand=Syntax error: Missing operand after '{0}' operator.
Expr_TypeMismatch=Type mismatch in expression '{0}'.
Expr_ExpressionTooComplex=Expression is too complex.
Expr_UnboundName=Cannot find column [{0}].
Expr_InvalidString=The expression contains an invalid string constant: {0}.
Expr_UndefinedFunction=The expression contains undefined function call {0}().
Expr_Syntax=Syntax error in the expression.
Expr_FunctionArgumentCount=Invalid number of arguments: function {0}().
Expr_MissingRightParen=The expression is missing the closing parenthesis.
Expr_UnknownToken=Cannot interpret token '{0}' at position {1}.
Expr_UnknownToken1=Expected {0}, but actual token at the position {2} is {1}.
Expr_DatatypeConvertion=Cannot convert from {0} to {1}.
Expr_DatavalueConvertion=Cannot convert value '{0}' to Type: {1}.
Expr_InvalidName=Invalid column name [{0}].
Expr_InvalidDate=The expression contains invalid date constant '{0}'.
Expr_NonConstantArgument=Only constant expressions are allowed in the expression list for the IN operator.
Expr_InvalidPattern=Error in Like operator: the string pattern '{0}' is invalid.
Expr_InWithoutParentheses=Syntax error: The items following the IN keyword must be separated by commas and be enclosed in parentheses.
Expr_ArgumentType=Type mismatch in function argument: {0}(), argument {1}, expected {2}.
Expr_ArgumentTypeInteger=Type mismatch in function argument: {0}(), argument {1}, expected one of the Integer types.
Expr_TypeMismatchInBinop=Cannot perform '{0}' operation on {1} and {2}.
Expr_AmbiguousBinop=Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'. Cannot mix signed and unsigned types. Please use explicit Convert() function.
Expr_InWithoutList=Syntax error: The IN keyword must be followed by a non-empty list of expressions separated by commas, and also must be enclosed in parentheses.
Expr_UnsupportedOperator=The expression contains unsupported operator '{0}'.
Expr_InvalidNameBracketing=The expression contains invalid name: '{0}'.
Expr_MissingOperandBefore=Syntax error: Missing operand before '{0}' operator.
Expr_TooManyRightParentheses=The expression has too many closing parentheses.
Expr_UnresolvedRelation=The table [{0}] involved in more than one relation. You must explicitly mention a relation name in the expression '{1}'.
Expr_AggregateArgument=Syntax error in aggregate argument: Expecting a single column argument with possible 'Child' qualifier.
Expr_AggregateUnbound=Unbound reference in the aggregate expression '{0}'.
Expr_EvalNoContext=Cannot evaluate non-constant expression without current row.
Expr_ExpressionUnbound=Unbound reference in the expression '{0}'.
Expr_ComputeNotAggregate=Cannot evaluate. Expression '{0}' is not an aggregate.
Expr_FilterConvertion=Filter expression '{0}' does not evaluate to a Boolean term.
Expr_InvalidType=Invalid type name '{0}'.
Expr_LookupArgument=Syntax error in Lookup expression: Expecting keyword 'Parent' followed by a single column argument with possible relation qualifier: Parent[(<relation_name>)].<column_name>.
Expr_InvokeArgument=Need a row or a table to Invoke DataFilter.
Expr_ArgumentOutofRange={0}() argument is out of range.
Expr_IsSyntax=Syntax error: Invalid usage of 'Is' operator. Correct syntax: <expression> Is [Not] Null.
Expr_Overflow=Value is either too large or too small for Type '{0}'.
Expr_DivideByZero=Divide by zero error encountered.
Expr_BindFailure=Cannot find the parent relation '{0}'.
Expr_InvalidHoursArgument='hours' argument is out of range. Value must be between -14 and +14.
Expr_InvalidMinutesArgument='minutes' argument is out of range. Value must be between -59 and +59.
Expr_InvalidTimeZoneRange=Provided range for time one exceeds total of 14 hours.
Expr_MismatchKindandTimeSpan=Kind property of provided DateTime argument, does not match 'hours' and 'minutes' arguments.
Expr_UnsupportedType=A DataColumn of type '{0}' does not support expression.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; DataSet errors

Data_EnforceConstraints=Failed to enable constraints. One or more rows contain values violating non-null, unique, or foreign-key constraints.
Data_CannotModifyCollection=Collection itself is not modifiable.
Data_CaseInsensitiveNameConflict=The given name '{0}' matches at least two names in the collection object with different cases, but does not match either of them with the same case.
Data_NamespaceNameConflict=The given name '{0}' matches at least two names in the collection object with different namespaces.
Data_InvalidOffsetLength=Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection.

Data_ArgumentOutOfRange='{0}' argument is out of range.
Data_ArgumentNull='{0}' argument cannot be null.
Data_ArgumentContainsNull='{0}' argument contains null value.

DataColumns_OutOfRange=Cannot find column {0}.
DataColumns_Add1=Column '{0}' already belongs to this DataTable.
DataColumns_Add2=Column '{0}' already belongs to another DataTable.
DataColumns_Add3=Cannot have more than one SimpleContent columns in a DataTable.
DataColumns_Add4=Cannot add a SimpleContent column to a table containing element columns or nested relations.
DataColumns_AddDuplicate=A column named '{0}' already belongs to this DataTable.
DataColumns_AddDuplicate2=Cannot add a column named '{0}': a nested table with the same name already belongs to this DataTable.
DataColumns_AddDuplicate3=A column named '{0}' already belongs to this DataTable: cannot set a nested table name to the same name.
DataColumns_Remove=Cannot remove a column that doesn't belong to this table.
DataColumns_RemovePrimaryKey=Cannot remove this column, because it's part of the primary key.
DataColumns_RemoveChildKey=Cannot remove this column, because it is part of the parent key for relationship {0}.
DataColumns_RemoveConstraint=Cannot remove this column, because it is a part of the constraint {0} on the table {1}.
DataColumns_RemoveExpression=Cannot remove this column, because it is part of an expression: {0} = {1}.

DataColumn_AutoIncrementAndExpression=Cannot set AutoIncrement property for a computed column.
DataColumn_AutoIncrementAndDefaultValue=Cannot set AutoIncrement property for a column with DefaultValue set.
DataColumn_DefaultValueAndAutoIncrement=Cannot set a DefaultValue on an AutoIncrement column.
DataColumn_AutoIncrementSeed=AutoIncrementStep must be a non-zero value.
DataColumn_NameRequired=ColumnName is required when it is part of a DataTable.
DataColumn_ChangeDataType=Cannot change DataType of a column once it has data.
DataColumn_NullDataType=Column requires a valid DataType.
DataColumn_DefaultValueDataType=The DefaultValue for column {0} is of type {1} and cannot be converted to {2}.
DataColumn_DefaultValueDataType1=The DefaultValue for the column is of type {0} and cannot be converted to {1}.
DataColumn_DefaultValueColumnDataType=The DefaultValue for column {0} is of type {1}, but the column is of type {2}.
DataColumn_ReadOnlyAndExpression=Cannot change ReadOnly property for the expression column.
DataColumn_UniqueAndExpression=Cannot change Unique property for the expression column.
DataColumn_ExpressionAndUnique=Cannot create an expression on a column that has AutoIncrement or Unique.
DataColumn_ExpressionAndReadOnly=Cannot set expression because column cannot be made ReadOnly.
DataColumn_ExpressionAndConstraint=Cannot set Expression property on column {0}, because it is a part of a constraint.
DataColumn_ExpressionInConstraint=Cannot create a constraint based on Expression column {0}.
DataColumn_ExpressionCircular=Cannot set Expression property due to circular reference in the expression.
DataColumn_NullKeyValues=Column '{0}' has null values in it.
DataColumn_NullValues=Column '{0}' does not allow nulls.
DataColumn_ReadOnly=Column '{0}' is read only.
DataColumn_NonUniqueValues=Column '{0}' contains non-unique values.
DataColumn_NotInTheTable=Column '{0}' does not belong to table {1}.
DataColumn_NotInAnyTable=Column must belong to a table.
DataColumn_SetFailed=Couldn't store <{0}> in {1} Column.  Expected type is {2}.
DataColumn_CannotSetToNull=Cannot set Column '{0}' to be null. Please use DBNull instead.
DataColumn_LongerThanMaxLength=Cannot set column '{0}'. The value violates the MaxLength limit of this column.
DataColumn_HasToBeStringType=MaxLength applies to string data type only. You cannot set Column '{0}' property MaxLength to be non-negative number.
DataColumn_CannotSetMaxLength=Cannot set Column '{0}' property MaxLength to '{1}'. There is at least one string in the table longer than the new limit.
DataColumn_CannotSetMaxLength2=Cannot set Column '{0}' property MaxLength. The Column is SimpleContent.
DataColumn_CannotSimpleContentType=Cannot set Column '{0}' property DataType to {1}. The Column is SimpleContent.
DataColumn_CannotSimpleContent=Cannot set Column '{0}' property MappingType to SimpleContent. The Column DataType is {1}.
DataColumn_ExceedMaxLength=Column '{0}' exceeds the MaxLength limit.
DataColumn_NotAllowDBNull=Column '{0}' does not allow DBNull.Value.
DataColumn_CannotChangeNamespace=Cannot change the Column '{0}' property Namespace. The Column is SimpleContent.
DataColumn_AutoIncrementCannotSetIfHasData=Cannot change AutoIncrement of a DataColumn with type '{0}' once it has data.
DataColumn_NotInTheUnderlyingTable=Column '{0}' does not belong to underlying table '{1}'.
DataColumn_InvalidDataColumnMapping=DataColumn with type '{0}' is a complexType. Can not serialize value of a complex type as Attribute
DataColumn_CannotSetDateTimeModeForNonDateTimeColumns=The DateTimeMode can be set only on DataColumns of type DateTime.
DataColumn_InvalidDateTimeMode='{0}' is Invalid DataSetDateTime value.
DataColumn_DateTimeMode=Cannot change DateTimeMode from '{0}' to '{1}' once the table has data.
DataColumn_INullableUDTwithoutStaticNull=Type '{0}' does not contain static Null property or field.
DataColumn_UDTImplementsIChangeTrackingButnotIRevertible=Type '{0}' does not implement IRevertibleChangeTracking; therefore can not proceed with RejectChanges().
DataColumn_SetAddedAndModifiedCalledOnNonUnchanged=SetAdded and SetModified can only be called on DataRows with Unchanged DataRowState.
DataColumn_OrdinalExceedMaximun=Ordinal '{0}' exceeds the maximum number.
DataColumn_NullableTypesNotSupported=DataSet does not support System.Nullable<>.

DataConstraint_NoName=Cannot change the name of a constraint to empty string when it is in the ConstraintCollection.
DataConstraint_Violation=Cannot enforce constraints on constraint {0}.
DataConstraint_ViolationValue=Column '{0}' is constrained to be unique.  Value '{1}' is already present.
DataConstraint_NotInTheTable=Constraint '{0}' does not belong to this DataTable.
DataConstraint_OutOfRange=Cannot find constraint {0}.
DataConstraint_Duplicate=Constraint matches constraint named {0} already in collection.
DataConstraint_DuplicateName=A Constraint named '{0}' already belongs to this DataTable.
DataConstraint_UniqueViolation=These columns don't currently have unique values.
DataConstraint_ForeignTable=These columns don't point to this table.
DataConstraint_ParentValues=This constraint cannot be enabled as not all values have corresponding parent values.
DataConstraint_AddFailed=This constraint cannot be added since ForeignKey doesn't belong to table {0}.
DataConstraint_RemoveFailed=Cannot remove a constraint that doesn't belong to this table.
DataConstraint_NeededForForeignKeyConstraint=Cannot remove unique constraint '{0}'. Remove foreign key constraint '{1}' first.
DataConstraint_CascadeDelete=Cannot delete this row because constraints are enforced on relation {0}, and deleting this row will strand child rows.
DataConstraint_CascadeUpdate=Cannot make this change because constraints are enforced on relation {0}, and changing this value will strand child rows.
DataConstraint_ClearParentTable=Cannot clear table {0} because ForeignKeyConstraint {1} enforces constraints and there are child rows in {2}.
DataConstraint_ForeignKeyViolation=ForeignKeyConstraint {0} requires the child key values ({1}) to exist in the parent table.
DataConstraint_BadObjectPropertyAccess=Property not accessible because '{0}'.
DataConstraint_RemoveParentRow=Cannot remove this row because it has child rows, and constraints on relation {0} are enforced.
DataConstraint_AddPrimaryKeyConstraint=Cannot add primary key constraint since primary key is already set for the table.
DataConstraint_CantAddConstraintToMultipleNestedTable=Cannot add constraint to DataTable '{0}' which is a child table in two nested relations.

DataKey_TableMismatch=Cannot create a Key from Columns that belong to different tables.
DataKey_NoColumns=Cannot have 0 columns.
DataKey_TooManyColumns=Cannot have more than {0} columns.
DataKey_DuplicateColumns=Cannot create a Key when the same column is listed more than once: '{0}'
DataKey_RemovePrimaryKey=Cannot remove unique constraint since it's the primary key of a table.
DataKey_RemovePrimaryKey1=Cannot remove unique constraint since it's the primary key of table {0}.

DataRelation_ColumnsTypeMismatch=Parent Columns and Child Columns don't have type-matching columns.
DataRelation_KeyColumnsIdentical=ParentKey and ChildKey are identical.
DataRelation_KeyLengthMismatch=ParentColumns and ChildColumns should be the same length.
DataRelation_KeyZeroLength=ParentColumns and ChildColumns must not be zero length.
DataRelation_ForeignRow=The row doesn't belong to the same DataSet as this relation.
DataRelation_NoName=RelationName is required when it is part of a DataSet.
DataRelation_ForeignTable=GetChildRows requires a row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_ForeignDataSet=This relation should connect two tables in this DataSet to be added to this DataSet.
DataRelation_GetParentRowTableMismatch=GetParentRow requires a row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_SetParentRowTableMismatch=SetParentRow requires a child row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_DataSetMismatch=Cannot have a relationship between tables in different DataSets.
DataRelation_TablesInDifferentSets=Cannot create a relation between tables in different DataSets.
DataRelation_AlreadyExists=A relation already exists for these child columns.
DataRelation_DoesNotExist=This relation doesn't belong to this relation collection.
DataRelation_AlreadyInOtherDataSet=This relation already belongs to another DataSet.
DataRelation_AlreadyInTheDataSet=This relation already belongs to this DataSet.
DataRelation_DuplicateName=A Relation named '{0}' already belongs to this DataSet.
DataRelation_NotInTheDataSet=Relation {0} does not belong to this DataSet.
DataRelation_OutOfRange=Cannot find relation {0}.
DataRelation_TableNull=Cannot create a collection on a null table.
DataRelation_TableWasRemoved=The table this collection displays relations for has been removed from its DataSet.
DataRelation_ChildTableMismatch=Cannot add a relation to this table's ParentRelation collection where this table isn't the child table.
DataRelation_ParentTableMismatch=Cannot add a relation to this table's ChildRelation collection where this table isn't the parent table.
DataRelation_RelationNestedReadOnly=Cannot set the 'Nested' property to false for this relation.
DataRelation_TableCantBeNestedInTwoTables=The same table '{0}' cannot be the child table in two nested relations.
DataRelation_LoopInNestedRelations=The table ({0}) cannot be the child table to itself in nested relations.
DataRelation_CaseLocaleMismatch=Cannot add a DataRelation or Constraint that has different Locale or CaseSensitive settings between its parent and child tables.
DataRelation_ParentOrChildColumnsDoNotHaveDataSet=Cannot create a DataRelation if Parent or Child Columns are not in a DataSet.
DataRelation_InValidNestedRelation=Nested table '{0}' which inherits its namespace cannot have multiple parent tables in different namespaces.
DataRelation_InValidNamespaceInNestedRelation=Nested table '{0}' with empty namespace cannot have multiple parent tables in different namespaces.

DataRow_NotInTheDataSet=The row doesn't belong to the same DataSet as this relation.
DataRow_NotInTheTable=Cannot perform this operation on a row not in the table.
DataRow_ParentRowNotInTheDataSet=This relation and child row don't belong to same DataSet.
DataRow_EditInRowChanging=Cannot change a proposed value in the RowChanging event.
DataRow_EndEditInRowChanging=Cannot call EndEdit() inside an OnRowChanging event.
DataRow_BeginEditInRowChanging=Cannot call BeginEdit() inside the RowChanging event.
DataRow_CancelEditInRowChanging=Cannot call CancelEdit() inside an OnRowChanging event.  Throw an exception to cancel this update.
DataRow_DeleteInRowDeleting=Cannot call Delete inside an OnRowDeleting event.  Throw an exception to cancel this delete.
DataRow_ValuesArrayLength=Input array is longer than the number of columns in this table.
DataRow_NoCurrentData=There is no Current data to access.
DataRow_NoOriginalData=There is no Original data to access.
DataRow_NoProposedData=There is no Proposed data to access.
DataRow_RemovedFromTheTable=This row has been removed from a table and does not have any data.  BeginEdit() will allow creation of new data in this row.
DataRow_DeletedRowInaccessible=Deleted row information cannot be accessed through the row.
DataRow_InvalidVersion=Version must be Original, Current, or Proposed.
DataRow_OutOfRange=There is no row at position {0}.
DataRow_RowInsertOutOfRange=The row insert position {0} is invalid.
DataRow_RowInsertTwice=The rowOrder value={0} has been found twice for table named '{1}'.
DataRow_RowInsertMissing=Values are missing in the rowOrder sequence for table '{0}'.
DataRow_RowOutOfRange=The given DataRow is not in the current DataRowCollection.
DataRow_AlreadyInOtherCollection=This row already belongs to another table.
DataRow_AlreadyInTheCollection=This row already belongs to this table.
DataRow_AlreadyDeleted=Cannot delete this row since it's already deleted.
DataRow_Empty=This row is empty.
DataRow_AlreadyRemoved=Cannot remove a row that's already been removed.
DataRow_MultipleParents=A child row has multiple parents.
DataRow_InvalidRowBitPattern=Unrecognized row state bit pattern.

DataSet_SetNameToEmpty=Cannot change the name of the DataSet to an empty string.
DataSet_SetDataSetNameConflicting=The name '{0}' is invalid. A DataSet cannot have the same name of the DataTable.
DataSet_UnsupportedSchema=The schema namespace is invalid. Please use this one instead: {0}.
DataSet_CannotChangeCaseLocale=Cannot change CaseSensitive or Locale property. This change would lead to at least one DataRelation or Constraint to have different Locale or CaseSensitive settings between its related tables.
DataSet_CannotChangeSchemaSerializationMode=SchemaSerializationMode property can be set only if it is overridden by derived DataSet.

DataTable_ForeignPrimaryKey=PrimaryKey columns do not belong to this table.
DataTable_CannotAddToSimpleContent=Cannot add a nested relation or an element column to a table containing a SimpleContent column.
DataTable_NoName=TableName is required when it is part of a DataSet.
DataTable_MultipleSimpleContentColumns=DataTable already has a simple content column.
DataTable_MissingPrimaryKey=Table doesn't have a primary key.
DataTable_InvalidSortString= {0} isn't a valid Sort string entry.
DataTable_CanNotSerializeDataTableHierarchy=Cannot serialize the DataTable. A DataTable being used in one or more DataColumn expressions is not a descendant of current DataTable.
DataTable_CanNotRemoteDataTable=This DataTable can only be remoted as part of DataSet. One or more Expression Columns has reference to other DataTable(s).
DataTable_CanNotSetRemotingFormat=Cannot have different remoting format property value for DataSet and DataTable.
DataTable_CanNotSerializeDataTableWithEmptyName=Cannot serialize the DataTable. DataTable name is not set.

DataTable_DuplicateName=A DataTable named '{0}' already belongs to this DataSet.
DataTable_DuplicateName2=A DataTable named '{0}' with the same Namespace '{1}' already belongs to this DataSet.
DataTable_SelfnestedDatasetConflictingName=The table ({0}) cannot be the child table to itself in a nested relation: the DataSet name conflicts with the table name.
DataTable_DatasetConflictingName=The name '{0}' is invalid. A DataTable cannot have the same name of the DataSet.
DataTable_AlreadyInOtherDataSet=DataTable already belongs to another DataSet.
DataTable_AlreadyInTheDataSet=DataTable already belongs to this DataSet.
DataTable_NotInTheDataSet=Table {0} does not belong to this DataSet.
DataTable_OutOfRange=Cannot find table {0}.
DataTable_InRelation=Cannot remove a table that has existing relations.  Remove relations first.
DataTable_InConstraint=Cannot remove table {0}, because it referenced in ForeignKeyConstraint {1}.  Remove the constraint first.
DataTable_TableNotFound=DataTable '{0}' does not match to any DataTable in source.

DataMerge_MissingDefinition=Target DataSet missing definition for {0}.
DataMerge_MissingConstraint=Target DataSet missing {0} {1}.
DataMerge_DataTypeMismatch=<target>.{0} and <source>.{0} have conflicting properties: DataType property mismatch.
DataMerge_PrimaryKeyMismatch=<target>.PrimaryKey and <source>.PrimaryKey have different Length.
DataMerge_PrimaryKeyColumnsMismatch=Mismatch columns in the PrimaryKey : <target>.{0} versus <source>.{1}.
DataMerge_ReltionKeyColumnsMismatch=Relation {0} cannot be merged, because keys have mismatch columns.
DataMerge_MissingColumnDefinition=Target table {0} missing definition for column {1}.
DataMerge_MissingPrimaryKeyColumnInSource=PrimaryKey column {0} does not exist in source Table.

DataIndex_RecordStateRange=The RowStates parameter must be set to a valid combination of values from the DataViewRowState enumeration.
DataIndex_FindWithoutSortOrder=Find finds a row based on a Sort order, and no Sort order is specified.
DataIndex_KeyLength=Expecting {0} value(s) for the key being indexed, but received {1} value(s).

DataStorage_AggregateException=Invalid usage of aggregate function {0}() and Type: {1}.
DataStorage_InvalidStorageType=Invalid storage type: {0}.
DataStorage_ProblematicChars=The DataSet Xml persistency does not support the value '{0}' as Char value, please use Byte storage instead.
DataStorage_SetInvalidDataType=Type of value has a mismatch with column type
DataStorage_IComparableNotDefined= Type '{0}' does not implement IComparable interface. Comparison cannot be done.

DataView_SetFailed=Cannot set {0}.
DataView_SetDataSetFailed=Cannot change DataSet on a DataViewManager that's already the default view for a DataSet.
DataView_SetRowStateFilter=RowStateFilter cannot show ModifiedOriginals and ModifiedCurrents at the same time.
DataView_SetTable=Cannot change Table property on a DefaultView or a DataView coming from a DataViewManager.
DataView_CanNotSetDataSet=Cannot change DataSet property once it is set.
DataView_CanNotUseDataViewManager=DataSet must be set prior to using DataViewManager.
DataView_CanNotSetTable=Cannot change Table property once it is set.
DataView_CanNotUse=DataTable must be set prior to using DataView.
DataView_CanNotBindTable=Cannot bind to DataTable with no name.
DataView_SetIListObject=Cannot set an object into this list.
DataView_AddNewNotAllowNull=Cannot call AddNew on a DataView where AllowNew is false.
DataView_NotOpen=DataView is not open.
DataView_CreateChildView=The relation is not parented to the table to which this DataView points.
DataView_CanNotDelete=Cannot delete on a DataSource where AllowDelete is false.
DataView_CanNotEdit=Cannot edit on a DataSource where AllowEdit is false.
DataView_GetElementIndex=Index {0} is either negative or above rows count.
DataView_AddExternalObject=Cannot add external objects to this list.
DataView_CanNotClear=Cannot clear this list.
DataView_InsertExternalObject=Cannot insert external objects to this list.
DataView_RemoveExternalObject=Cannot remove objects not in the list.

DataROWView_PropertyNotFound={0} is neither a DataColumn nor a DataRelation for table {1}.

Range_Argument=Min ({0}) must be less than or equal to max ({1}) in a Range object.
Range_NullRange=This is a null range.
RecordManager_MinimumCapacity=MinimumCapacity must be non-negative.

; CodeGen Errors
CodeGen_InvalidIdentifier=Cannot generate identifier for name '{0}'.
CodeGen_DuplicateTableName=There is more than one table with the same name '{0}' (even if namespace is different).
CodeGen_TypeCantBeNull=Column '{0}': Type '{1}' cannot be null.
CodeGen_NoCtor0=Column '{0}': Type '{1}' does not have parameterless constructor.
CodeGen_NoCtor1=Column '{0}': Type '{1}' does not have constructor with string argument.


; SqlConvert Error
SqlConvert_ConvertFailed= Cannot convert object of type '{0}' to object of type '{1}'.

;DataSet Default Error
DataSet_DefaultDataException=Data Exception.
DataSet_DefaultConstraintException=Constraint Exception.
DataSet_DefaultDeletedRowInaccessibleException=Deleted rows inaccessible.
DataSet_DefaultDuplicateNameException=Duplicate name not allowed.
DataSet_DefaultInRowChangingEventException=Operation not supported in the RowChanging event.
DataSet_DefaultInvalidConstraintException=Invalid constraint.
DataSet_DefaultMissingPrimaryKeyException=Missing primary key.
DataSet_DefaultNoNullAllowedException=Null not allowed.
DataSet_DefaultReadOnlyException=Column is marked read only.
DataSet_DefaultRowNotInTableException=Row not found in table.
DataSet_DefaultVersionNotFoundException=Version not found.

;Load
Load_ReadOnlyDataModified=ReadOnly Data is Modified.


;DataReader
DataTableReader_InvalidDataTableReader=DataTableReader is invalid for current DataTable '{0}'.
DataTableReader_SchemaInvalidDataTableReader=Schema of current DataTable '{0}' in DataTableReader has changed, DataTableReader is invalid.
DataTableReader_CannotCreateDataReaderOnEmptyDataSet=DataTableReader Cannot be created. There is no DataTable in DataSet.
DataTableReader_DataTableReaderArgumentIsEmpty=Cannot create DataTableReader. Argument is Empty.
DataTableReader_ArgumentContainsNullValue=Cannot create DataTableReader. Arguments contain null value.
DataTableReader_InvalidRowInDataTableReader=Current DataRow is either in Deleted or Detached state.

DataTableReader_DataTableCleared=Current DataTable '{0}' is empty. There is no DataRow in DataTable.



;RbTree
RbTree_InvalidState=DataTable internal index is corrupted: '{0}'.
RbTree_EnumerationBroken=Collection was modified; enumeration operation might not execute.

;NamedSimpleType
NamedSimpleType_InvalidDuplicateNamedSimpleTypeDelaration=Simple type '{0}' has already be declared with different '{1}'.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; DataDocumentNavigator and DataDocument errors
DataDom_Foliation=Invalid foliation.
DataDom_TableNameChange=Cannot change the table name once the associated DataSet is mapped to a loaded XML document.
DataDom_TableNamespaceChange=Cannot change the table namespace once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnNameChange=Cannot change the column name once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnNamespaceChange=Cannot change the column namespace once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnMappingChange=Cannot change the ColumnMapping property once the associated DataSet is mapped to a loaded XML document.
DataDom_TableColumnsChange=Cannot add or remove columns from the table once the DataSet is mapped to a loaded XML document.
DataDom_DataSetTablesChange=Cannot add or remove tables from the DataSet once the DataSet is mapped to a loaded XML document.
DataDom_DataSetNestedRelationsChange=Cannot add, remove, or change Nested relations from the DataSet once the DataSet is mapped to a loaded XML document.
DataDom_DataSetNull=The DataSet parameter is invalid. It cannot be null.
DataDom_DataSetNameChange=Cannot change the DataSet name once the DataSet is mapped to a loaded XML document.
DataDom_CloneNode=This type of node cannot be cloned: {0}.
DataDom_MultipleLoad=Cannot load XmlDataDocument if it already contains data. Please use a new XmlDataDocument.
DataDom_MultipleDataSet=DataSet can be associated with at most one XmlDataDocument. Cannot associate the DataSet with the current XmlDataDocument because the DataSet is already associated with another XmlDataDocument.
DataDom_EnforceConstraintsShouldBeOff=Please set DataSet.EnforceConstraints == false before trying to edit XmlDataDocument using XML operations.
DataDom_NotSupport_GetElementById=GetElementById() is not supported on DataDocument.
DataDom_NotSupport_EntRef=Cannot create entity references on DataDocument.
DataDom_NotSupport_Clear=Clear function on DateSet and DataTable is not supported on XmlDataDocument.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Errors thrown by the strong typed classes
StrongTyping_CannotRemoveColumn=Cannot remove column since it is built in to this dataSet.
StrongTyping_CananotRemoveRelation=Cannot remove relation since it is built in to this dataSet.
propertyChangedEventDescr=Occurs whenever a property for this control changes.
collectionChangedEventDescr=Occurs whenever this collection's membership changes.
StrongTyping_CananotAccessDBNull=Cannot get value because it is DBNull.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; System.Data.Common

;;; WinNt required
ADP_PropertyNotSupported=The '{0}' property requires Microsoft WindowsNT or a WindowsNT based operating system.

;;; DbProviderFactories
ConfigProviderNotFound=Unable to find the requested .Net Framework Data Provider.  It may not be installed.
ConfigProviderInvalid=The requested .Net Framework Data Provider's implementation does not have an Instance field of a System.Data.Common.DbProviderFactory derived type.
ConfigProviderNotInstalled=Failed to find or load the registered .Net Framework Data Provider.
ConfigProviderMissing=The missing .Net Framework Data Provider's assembly qualified name is required.

;;; DbProviderConfigurationHandler
ConfigBaseElementsOnly=Only elements allowed.
ConfigBaseNoChildNodes=Child nodes not allowed.
ConfigUnrecognizedAttributes=Unrecognized attribute '{0}'.
ConfigUnrecognizedElement=Unrecognized element.
ConfigSectionsUnique=The '{0}' section can only appear once per config file.
ConfigRequiredAttributeMissing=Required attribute '{0}' not found.
ConfigRequiredAttributeEmpty=Required attribute '{0}' cannot be empty.

ADP_EmptyArray=Expecting non-empty array for '{0}' parameter.
; COMMON CODE ADP_EmptyString=Expecting non-empty string for '{0}' parameter.

ADP_SingleValuedProperty=The only acceptable value for the property '{0}' is '{1}'.
ADP_DoubleValuedProperty=The acceptable values for the property '{0}' are '{1}' or '{2}'.
ADP_InvalidPrefixSuffix=Specified QuotePrefix and QuoteSuffix values do not match.

ADP_InvalidArgumentLength=The length of argument '{0}' exceeds it's limit of '{1}'.

;;; DBDataPermission
; COMMON CODE ADP_NotAPermissionElement=Given security element is not a permission element.
; COMMON CODE ADP_InvalidXMLBadVersion=Invalid Xml; can only parse elements of version one.
; COMMON CODE ADP_PermissionTypeMismatch=Type mismatch.
SQL_WrongType=Expecting argument of type {1}, but received type {0}.

;;; DbConnectionOptions
; COMMON CODE ADP_ConnectionStringSyntax=Format of the initialization string does not conform to specification starting at index {0}.
ADP_InvalidConnectionOptionValue=Invalid value for key '{0}'.
ADP_MissingConnectionOptionValue=Use of key '{0}' requires the key '{1}' to be present.
ADP_InvalidConnectionOptionValueLength=The value's length for key '{0}' exceeds it's limit of '{1}'.
; COMMON CODE ADP_InvalidDataDirectory=The DataDirectory substitute is not a string.

ADP_KeywordNotSupported=Keyword not supported: '{0}'.
; MDAC 80715
;ADP_EmptyKeyValue=Keyword '{0}' with non-empty value is being unset.
ADP_UdlFileError=Unable to load the UDL file.
ADP_InvalidUDL=Invalid UDL file.
; COMMON CODE ADP_InvalidKey=Invalid keyword, contain one or more of 'no characters', 'control characters', 'leading or trailing whitespace' or 'leading semicolons'.
; COMMON CODE ADP_InvalidValue=The value contains embedded nulls (\\u0000).

;;; : DbConnection
; COMMON CODE ADP_InternalConnectionError=Internal DbConnection Error: {0}
ADP_InternalProviderError=Internal .Net Framework Data Provider error {0}.
; COMMON CODE ADP_NoConnectionString=The ConnectionString property has not been initialized.
; MDAC 82165, if the ConnectionState enum to msg the localization looks weird
; COMMON CODE ADP_ConnectionStateMsg_Closed=The connection's current state is closed.
; COMMON CODE ADP_ConnectionStateMsg_Connecting=The connection's current state is connecting.
; COMMON CODE ADP_ConnectionStateMsg_Open=The connection's current state is open.
; COMMON CODE ADP_ConnectionStateMsg_OpenExecuting=The connection's current state is executing.
; COMMON CODE ADP_ConnectionStateMsg_OpenFetching=The connection's current state is fetching.
; COMMON CODE ADP_ConnectionStateMsg=The connection's current state: {0}.

;;; DbCommandBuilder
ADP_NoQuoteChange=The QuotePrefix and QuoteSuffix properties cannot be changed once an Insert, Update, or Delete command has been generated.
ADP_MissingSourceCommand=The DataAdapter.SelectCommand property needs to be initialized.
ADP_MissingSourceCommandConnection=The DataAdapter.SelectCommand.Connection property needs to be initialized;

;;; MultipartName
ADP_InvalidMultipartName={0} "{1}".
ADP_InvalidMultipartNameQuoteUsage={0} "{1}", incorrect usage of quotes.
ADP_InvalidMultipartNameToManyParts={0} "{1}", the current limit of "{2}" is insufficient.

;;; MultipartName properties
SQL_BulkCopyDestinationTableName=SqlBulkCopy.WriteToServer failed because the SqlBulkCopy.DestinationTableName is an invalid multipart name
SQL_TDSParserTableName=Processing of results from SQL Server failed because of an invalid multipart name
SQL_UDTTypeName=SqlParameter.UdtTypeName is an invalid multipart name
SQL_TypeName=SqlParameter.TypeName is an invalid multipart name
SQL_SqlCommandCommandText=SqlCommand.DeriveParameters failed because the SqlCommand.CommandText property value is an invalid multipart name
ODBC_ODBCCommandText=OdbcCommandBuilder.DeriveParameters failed because the OdbcCommand.CommandText property value is an invalid multipart name
OLEDB_OLEDBCommandText=OleDbCommandBuilder.DeriveParameters failed because the OleDbCommandBuilder.CommandText property value is an invalid multipart name

;;;; MultiSubnetFailover errors (see also SNI_ERROR strings)
SQLMSF_FailoverPartnerNotSupported=Connecting to a mirrored SQL Server instance using the MultiSubnetFailover connection option is not supported.

;;; Data Provider Collection
; ArgumentException
; COMMON CODE ADP_CollectionRemoveInvalidObject=Attempted to remove an {0} that is not contained by this {1}.
; IndexOutOfRangeException
; COMMON CODE ADP_CollectionIndexInt32=Invalid index {0} for this {1} with Count={2}.
; COMMON CODE ADP_CollectionIndexString=An {0} with {1} '{2}' is not contained by this {3}.
; InvalidCastException
; COMMON CODE ADP_CollectionNullValue=The {0} only accepts non-null {1} type objects.
; COMMON CODE ADP_CollectionInvalidType=The {0} only accepts non-null {1} type objects, not {2} objects.

;;; DataColumnMapping
; DataMappingException
ADP_ColumnSchemaExpression=The column mapping from SourceColumn '{0}' failed because the DataColumn '{1}' is a computed column.
ADP_ColumnSchemaMismatch=Inconvertible type mismatch between SourceColumn '{0}' of {1} and the DataColumn '{2}' of {3}.
ADP_ColumnSchemaMissing1=Missing the DataColumn '{0}' for the SourceColumn '{2}'.
ADP_ColumnSchemaMissing2=Missing the DataColumn '{0}' in the DataTable '{1}' for the SourceColumn '{2}'.

;;; DataColumnMappingsCollection
; ArgumentException
ADP_InvalidSourceColumn=SourceColumn is required to be a non-empty string.
; DataMappingException
ADP_MissingColumnMapping=Missing SourceColumn mapping for '{0}'.

;;; DataAdapter
; ArgumentException
; COMMON CODE ADP_InvalidEnumerationValue=The {0} enumeration value, {1}, is invalid.
ADP_NotSupportedEnumerationValue=The {0} enumeration value, {1}, is not supported by the {2} method.
ODBC_NotSupportedEnumerationValue=The {0} enumeration value, {1}, is not supported by the .Net Framework Odbc Data Provider.
OLEDB_NotSupportedEnumerationValue=The {0} enumeration value, {1}, is not supported by the .Net Framework OleDb Data Provider.
SQL_NotSupportedEnumerationValue=The {0} enumeration value, {1}, is not supported by the .Net Framework SqlClient Data Provider.

;;; GetComputerNameEx
; InvalidOperationException
ADP_ComputerNameEx=Unable to retrieve the ComputerNameDnsFullyQualified, {0}.

;;; DataTableMapping
; SystemException
ADP_MissingTableSchema=Missing the '{0}' DataTable for the '{1}' SourceTable.

;;; Adapter.DataTableMappingsCollection
; ArgumentException
ADP_InvalidSourceTable=SourceTable is required to be a non-empty string
; DataMappingException
ADP_MissingTableMapping=Missing SourceTable mapping: '{0}'

;;; IDbCommand
; InvalidOperationException
ADP_CommandTextRequired={0}: CommandText property has not been initialized
ADP_ConnectionRequired={0}: Connection property has not been initialized.
ADP_OpenConnectionRequired={0} requires an open and available Connection. {1}

ADP_ConnectionRequired_Fill=Fill: SelectCommand.Connection property has not been initialized.
ADP_ConnectionRequired_FillPage=FillPage: SelectCommand.Connection property has not been initialized.
ADP_ConnectionRequired_FillSchema=FillSchema: SelectCommand.Connection property has not been initialized.
ADP_ConnectionRequired_Insert=Update requires the InsertCommand to have a connection object. The Connection property of the InsertCommand has not been initialized.
ADP_ConnectionRequired_Update=Update requires the UpdateCommand to have a connection object. The Connection property of the UpdateCommand has not been initialized.
ADP_ConnectionRequired_Delete=Update requires the DeleteCommand to have a connection object. The Connection property of the DeleteCommand has not been initialized.
ADP_ConnectionRequired_Batch=Update requires a connection object.  The Connection property has not been initialized.
ADP_ConnectionRequired_Clone=Update requires the command clone to have a connection object. The Connection property of the command clone has not been initialized.
ADP_ConnecitonRequired_UpdateRows=Update requires a connection.

ADP_OpenConnectionRequired_Insert=Update requires the {0}Command to have an open connection object. {1}
ADP_OpenConnectionRequired_Update=Update requires the {0}Command to have an open connection object. {1}
ADP_OpenConnectionRequired_Delete=Update requires the {0}Command to have an open connection object. {1}
ADP_OpenConnectionRequired_Clone=Update requires the updating command to have an open connection object. {1}

ADP_NoStoredProcedureExists=The stored procedure '{0}' doesn't exist.
ADP_TransactionCompleted=The transaction assigned to this command must be the most nested pending local transaction.
ADP_TransactionConnectionMismatch=The transaction is either not associated with the current connection or has been completed.
ADP_TransactionCompletedButNotDisposed=The transaction associated with the current connection has completed but has not been disposed.  The transaction must be disposed before the connection can be used to execute SQL statements.
ADP_TransactionRequired={0} requires the command to have a transaction when the connection assigned to the command is in a pending local transaction.  The Transaction property of the command has not been initialized.
ADP_OpenResultSetExists=There is already an open SqlResultSet associated with this command which must be closed first.
ADP_OpenReaderExists=There is already an open DataReader associated with this Command which must be closed first.
ADP_DeriveParametersNotSupported={0} DeriveParameters only supports CommandType.StoredProcedure, not CommandType.{1}.
ADP_CalledTwice=The method '{0}' cannot be called more than once for the same execution.
ADP_IncorrectAsyncResult=Incorrect async result.

;;; DbDataAdapter
; IDbDataAdapter.Fill(Schema)
ADP_MissingSelectCommand=The SelectCommand property has not been initialized before calling '{0}'.
ADP_UnwantedStatementType=The StatementType {0} is not expected here.

;;; DbDataAdapter.FillSchema
; System
ADP_FillSchemaRequiresSourceTableName=FillSchema: expected a non-empty string for the SourceTable name.

;;; DbDataAdapter.Fill
; ArgumentException
ADP_InvalidMaxRecords=The MaxRecords value of {0} is invalid; the value must be >= 0.
ADP_InvalidStartRecord=The StartRecord value of {0} is invalid; the value must be >= 0.
; SystemException
ADP_FillRequiresSourceTableName=Fill: expected a non-empty string for the SourceTable name.
ADP_FillChapterAutoIncrement=Hierarchical chapter columns must map to an AutoIncrement DataColumn.
ADP_MissingDataReaderFieldType=DataReader.GetFieldType({0}) returned null.
ADP_OnlyOneTableForStartRecordOrMaxRecords=Only specify one item in the dataTables array when using non-zero values for startRecords or maxRecords.
;;; DbDataAdapter.Update
; InvalidOperationException
ADP_UpdateRequiresSourceTable=Update unable to find TableMapping['{0}'] or DataTable '{0}'.
ADP_UpdateRequiresSourceTableName=Update: expected a non-empty SourceTable name.
ADP_MissingTableMappingDestination=Missing TableMapping when TableMapping.DataSetTable='{0}'.

ADP_UpdateRequiresCommandClone=Update requires the command clone to be valid.
ADP_UpdateRequiresCommandSelect=Auto SQL generation during Update requires a valid SelectCommand.
ADP_UpdateRequiresCommandInsert=Update requires a valid InsertCommand when passed DataRow collection with new rows.
ADP_UpdateRequiresCommandUpdate=Update requires a valid UpdateCommand when passed DataRow collection with modified rows.
ADP_UpdateRequiresCommandDelete=Update requires a valid DeleteCommand when passed DataRow collection with deleted rows.

; SystemException
ADP_UpdateMismatchRowTable=DataRow[{0}] is from a different DataTable than DataRow[0].
ADP_RowUpdatedErrors=RowUpdatedEvent: Errors occurred; no additional is information available.
ADP_RowUpdatingErrors=RowUpdatingEvent: Errors occurred; no additional is information available.

ADP_ResultsNotAllowedDuringBatch=When batching, the command's UpdatedRowSource property value of UpdateRowSource.FirstReturnedRecord or UpdateRowSource.Both is invalid.

ADP_UpdateConcurrencyViolation_Update=Concurrency violation: the UpdateCommand affected {0} of the expected {1} records.
ADP_UpdateConcurrencyViolation_Delete=Concurrency violation: the DeleteCommand affected {0} of the expected {1} records.
ADP_UpdateConcurrencyViolation_Batch=Concurrency violation: the batched command affected {0} of the expected {1} records.

;;; : IDbCommand
ADP_InvalidCommandTimeout=Invalid CommandTimeout value {0}; the value must be >= 0.
;; InvalidOperationException
ADP_UninitializedParameterSize={1}[{0}]: the Size property has an invalid size of 0.
ADP_PrepareParameterType={0}.Prepare method requires all parameters to have an explicitly set type.
ADP_PrepareParameterSize={0}.Prepare method requires all variable length parameters to have an explicitly set non-zero Size.
ADP_PrepareParameterScale={0}.Prepare method requires parameters of type '{1}' have an explicitly set Precision and Scale.
ADP_MismatchedAsyncResult=Mismatched end method call for asyncResult.  Expected call to {0} but {1} was called instead.

;;; : IDbConnection
; InvalidOperationException
ADP_ClosedConnectionError=Invalid operation. The connection is closed.
; COMMON CODE ADP_ConnectionAlreadyOpen=The connection was not closed. {0}
ADP_ConnectionIsDisabled=The connection has been disabled.
; COMMON CODE ADP_DelegatedTransactionPresent=Cannot enlist in the transaction because the connection is the primary connection for a delegated or promoted transaction.
ADP_LocalTransactionPresent=Cannot enlist in the transaction because a local transaction is in progress on the connection.  Finish local transaction and retry.
ADP_TransactionPresent=Connection currently has transaction enlisted.  Finish current transaction and retry.
; COMMON CODE ADP_OpenConnectionPropertySet=Not allowed to change the '{0}' property. {1}
ADP_EmptyDatabaseName=Database cannot be null, the empty string, or string of only whitespace.
ADP_DatabaseNameTooLong=The argument is too long.
ADP_InvalidConnectTimeoutValue=Invalid 'Connect Timeout' value which must be an integer >= 0.
; COMMON CODE ADP_PooledOpenTimeout=Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.

;;;; : DbDataReader
; ArgumentException
ADP_InvalidSourceBufferIndex=Invalid source buffer (size of {0}) offset: {1}
ADP_InvalidDestinationBufferIndex=Invalid destination buffer (size of {0}) offset: {1}
; InvalidCast
ADP_DataReaderNoData=No data exists for the row/column.
; InvalidOperationException
; COMMON CODE ADP_DataReaderClosed=Invalid attempt to {0} when reader is closed.
ADP_NumericToDecimalOverflow=The numerical value is too large to fit into a 96 bit decimal.

;;; : DbDataStream
ADP_StreamClosed=Invalid attempt to {0} when stream is closed.
ADP_InvalidSeekOrigin=Specified SeekOrigin value is invalid.

;;; : DbCommandBuilder
ADP_DynamicSQLJoinUnsupported=Dynamic SQL generation is not supported against multiple base tables.
ADP_DynamicSQLNoTableInfo=Dynamic SQL generation is not supported against a SelectCommand that does not return any base table information.
ADP_DynamicSQLNoKeyInfoDelete=Dynamic SQL generation for the DeleteCommand is not supported against a SelectCommand that does not return any key column information.
ADP_DynamicSQLNoKeyInfoUpdate=Dynamic SQL generation for the UpdateCommand is not supported against a SelectCommand that does not return any key column information.
ADP_DynamicSQLNoKeyInfoRowVersionDelete=Dynamic SQL generation for the DeleteCommand is not supported against a SelectCommand that does not contain a row version column.
ADP_DynamicSQLNoKeyInfoRowVersionUpdate=Dynamic SQL generation for the UpdateCommand is not supported against a SelectCommand that does not contain a row version column.
ADP_DynamicSQLNestedQuote=Dynamic SQL generation not supported against table names '{0}' that contain the QuotePrefix or QuoteSuffix character '{1}'.
ADP_NonSequentialColumnAccess=Invalid attempt to read from column ordinal '{0}'.  With CommandBehavior.SequentialAccess, you may only read from column ordinal '{1}' or greater.

ADP_InvalidDateTimeDigits=Data type '{0}' can not be formatted as a literal because it has an invalid date time digits.
ADP_InvalidFormatValue=The value can not be formatted as a literal of the requested type.
ADP_InvalidMaximumScale=Data type '{0}' can not be formatted as a literal because it has an invalid maximum scale.
ADP_LiteralValueIsInvalid=The literal value provided is not a valid literal for the data type '{0}'.
ADP_EvenLengthLiteralValue='{0}':The length of the literal value must be even.
ADP_HexDigitLiteralValue='{0}':The literal value must be a string with hexadecimal digits
ADP_QuotePrefixNotSet={0} requires open connection when the quote prefix has not been set.
ADP_UnableToCreateBooleanLiteral=Can not determine the correct boolean literal values. Boolean literals can not be created.
ADP_UnsupportedNativeDataTypeOleDb=Literals of the native data type associated with data type '{0}' are not supported.

;;; : IDataParameter
; ArgumentException
ADP_InvalidDataType=The parameter data type of {0} is invalid.
ADP_UnknownDataType=No mapping exists from object type {0} to a known managed provider native type.
ADP_UnknownDataTypeCode=Unable to handle an unknown TypeCode {0} returned by Type {1}.
ADP_DbTypeNotSupported=No mapping exists from DbType {0} to a known {1}.
ADP_VersionDoesNotSupportDataType=The version of SQL Server in use does not support datatype '{0}'.
ADP_ParameterValueOutOfRange=Parameter value '{0}' is out of range.
ADP_BadParameterName=Specified parameter name '{0}' is not valid.
ADP_MultipleReturnValue=Multiple return value parameters are not supported.

; COMMON CODE ADP_InvalidOffsetValue=Invalid parameter Offset value '{0}'. The value must be greater than or equal to 0.
ADP_InvalidSizeValue=Invalid parameter Size value '{0}'. The value must be greater than or equal to 0.
ADP_NegativeParameter=Invalid value for argument '{0}'. The value must be greater than or equal to 0.

ADP_InvalidMetaDataValue=Invalid value for this metadata.
ADP_NotRowType=Metadata must be SqlDbType.Row
ADP_ParameterConversionFailed=Failed to convert parameter value from a {0} to a {1}.

;;;; : IDbTransaction
; InvalidOperationException
ADP_ParallelTransactionsNotSupported={0} does not support parallel transactions.
ADP_TransactionZombied=This {0} has completed; it is no longer usable.

ADP_DbRecordReadOnly='{0}' cannot be called when the record is read only.

;;;; : ISqlUpdatableRecord
ADP_DbDataUpdatableRecordReadOnly='{0}' cannot be called when the DbDataRecord is read only.
ADP_InvalidImplicitConversion=Implicit conversion of object type '{0}' to data type '{1}' is not supported.

ADP_InvalidBufferSizeOrIndex=Buffer offset '{1}' plus the bytes available '{0}' is greater than the length of the passed in buffer.
ADP_InvalidDataLength=Data length '{0}' is less than 0.
ADP_InvalidDataLength2=Specified length '{0}' is out of range.
ADP_NonSeqByteAccess=Invalid {2} attempt at dataIndex '{0}'.  With CommandBehavior.SequentialAccess, you may only read from dataIndex '{1}' or greater.

ADP_OffsetOutOfRangeException=Offset must refer to a location within the value.

;;;; : dbMetaDataFactory
; ArgumentException
; COMMON CODE MDF_QueryFailed=Unable to build the '{0}' collection because execution of the SQL query failed. See the inner exception for details.
; COMMON CODE MDF_TooManyRestrictions=More restrictions were provided than the requested schema ('{0}') supports.
; COMMON CODE MDF_InvalidRestrictionValue= '{2}' is not a valid value for the '{1}' restriction of the '{0}' schema collection.
; COMMON CODE MDF_UndefinedCollection=The requested collection ({0}) is not defined.
; COMMON CODE MDF_UndefinedPopulationMechanism=The population mechanism '{0}' is not defined.
; COMMON CODE MDF_UnsupportedVersion=The requested collection ({0}) is not supported by this version of the provider.
; COMMON CODE MDF_MissingDataSourceInformationColumn=One of the required DataSourceInformation tables columns is missing.
; COMMON CODE MDF_IncorrectNumberOfDataSourceInformationRows=The DataSourceInformation table must contain exactly one row.
; COMMON CODE MDF_MissingRestrictionDefault=Missing restriction default.
; COMMON CODE MDF_NoColumns=The schema table contains no columns.
; COMMON CODE MDF_UnableToBuildCollection=Unable to build schema collection '{0}';
; COMMON CODE MDF_AmbigousCollectionName=The collection name '{0}' matches at least two collections with the same name but with different case, but does not match any of them exactly.
; COMMON CODE MDF_CollectionNameISNotUnique=There are multiple collections named '{0}'.
; COMMON CODE MDF_DataTableDoesNotExist=The collection '{0}' is missing from the metadata XML.
; COMMON CODE MDF_InvalidXml=The metadata XML is invalid.
; COMMON CODE MDF_InvalidXmlMissingColumn=The metadata XML is invalid. The {0} collection must contain a {1} column and it must be a string column.
; COMMON CODE MDF_InvalidXmlInvalidValue=The metadata XML is invalid. The {1} column of the {0} collection must contain a non-empty string.
ODBC_GetSchemaRestrictionRequired="The ODBC managed provider requires that the TABLE_NAME restriction be specified and non-null for the GetSchema indexes collection.

;;; : SqlUpdatableRecord
ADP_InvalidArgumentValue=Invalid argument value for method '{0}'.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; System.Data.Odbc
ADP_OdbcNoTypesFromProvider=The ODBC provider did not return results from SQLGETTYPEINFO.

; COMMON CODE ADP_CollectionIsNotParent=The {0} is already contained by another {1}.
; COMMON CODE ADP_CollectionIsParent=The {0} with is already contained by this {1}.
ADP_NullDataTable=Unexpected null DataTable argument
ADP_NullDataSet=Unexpected null DataSet argument.


; ArgumentException
OdbcConnection_ConnectionStringTooLong=Connection string exceeds maximum allowed length of {0}.
; SystemException
Odbc_GetTypeMapping_UnknownType={0} - unable to map type.
Odbc_UnknownSQLType=Unknown SQL type - {0}.
Odbc_UnknownURTType=Unknown URT type - {0}.
Odbc_NegativeArgument=Invalid negative argument!
Odbc_CantSetPropertyOnOpenConnection=Can't set property on an open connection.
Odbc_NoMappingForSqlTransactionLevel=No valid mapping for a SQL_TRANSACTION '{0}' to a System.Data.IsolationLevel enumeration value.
Odbc_CantEnableConnectionpooling={0} - unable to enable connection pooling...
Odbc_CantAllocateEnvironmentHandle={0} - unable to allocate an environment handle.
Odbc_FailedToGetDescriptorHandle={0} - unable to get descriptor handle.
Odbc_NotInTransaction=Not in a transaction
Odbc_UnknownOdbcType=Invalid OdbcType enumeration value={0}.
Odbc_NullData=Use IsDBNull when DBNull.Value data is expected.
Odbc_ExceptionMessage={0} [{1}] {2}
Odbc_ExceptionNoInfoMsg={0} - no error information available
; InvalidOperationException
Odbc_ConnectionClosed=The connection is closed.
Odbc_OpenConnectionNoOwner=An internal connection does not have an owner.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; System.Data.OleDb

Odbc_MDACWrongVersion=The .Net Framework Odbc Data Provider requires Microsoft Data Access Components(MDAC) version 2.6 or later.  Version {0} was found currently installed.
OleDb_MDACWrongVersion=The .Net Framework OleDb Data Provider requires Microsoft Data Access Components(MDAC) version 2.6 or later.  Version {0} was found currently installed.

;;; OleDb.OleDbConnection
; SystemException
OleDb_SchemaRowsetsNotSupported='{0}' interface is not supported by the '{1}' provider.  GetOleDbSchemaTable is unavailable with the current provider.
OleDb_NoErrorInformation2='{0}' failed with no error message available, result code: {1}.
OleDb_NoErrorInformation=No error message available, result code: {0}.
OleDb_MDACNotAvailable=The .Net Framework Data Providers require Microsoft Data Access Components(MDAC).  Please install Microsoft Data Access Components(MDAC) version 2.6 or later.
OleDb_MSDASQLNotSupported=The .Net Framework Data Provider for OLEDB (System.Data.OleDb) does not support the Microsoft OLE DB Provider for ODBC Drivers (MSDASQL). Use the .Net Framework Data Provider for ODBC (System.Data.Odbc).
OleDb_PossiblePromptNotUserInteractive=The .Net Framework Data Provider for OLEDB will not allow the OLE DB Provider to prompt the user in a non-interactive environment.
OleDb_ProviderUnavailable=The '{0}' provider is not registered on the local machine.
OleDb_CommandTextNotSupported=The ICommandText interface is not supported by the '{0}' provider. Use CommandType.TableDirect instead.
OleDb_TransactionsNotSupported=The ITransactionLocal interface is not supported by the '{0}' provider.  Local transactions are unavailable with the current provider.
OleDb_ConnectionStringSyntax=Format of the initialization string does not conform to the OLE DB specification.  Starting around char[{0}] in the connection string.
OleDb_AsynchronousNotSupported='Asynchronous Processing' is not a supported feature of the .Net Framework Data OLE DB Provider(System.Data.OleDb).
OleDb_NoProviderSpecified=An OLE DB Provider was not specified in the ConnectionString.  An example would be, 'Provider=SQLOLEDB;'.
OleDb_InvalidProviderSpecified=The OLE DB Provider specified in the ConnectionString is too long.
OleDb_InvalidRestrictionsDbInfoKeywords=No restrictions are expected for the DbInfoKeywords OleDbSchemaGuid.
OleDb_InvalidRestrictionsDbInfoLiteral=No restrictions are expected for the DbInfoLiterals OleDbSchemaGuid.
OleDb_InvalidRestrictionsSchemaGuids=No restrictions are expected for the schema guid OleDbSchemaGuid.
OleDb_NotSupportedSchemaTable=The {0} OleDbSchemaGuid is not a supported schema by the '{1}' provider.
OleDb_ConfigWrongNumberOfValues=The '{0}' configuration setting has the wrong number of values.
OleDb_ConfigUnableToLoadXmlMetaDataFile=Unable to load the XML file specified in configuration setting '{0}'.

;;; OleDb.OleDbCommand
OleDb_CommandParameterBadAccessor=Command parameter[{0}] '{1}' is invalid.
OleDb_CommandParameterCantConvertValue=Command parameter[{0}] '{1}' data value could not be converted for reasons other than sign mismatch or data overflow.
OleDb_CommandParameterSignMismatch=Conversion failed for command parameter[{0}] '{1}' because the data value was signed and the type used by the provider was unsigned.
OleDb_CommandParameterDataOverflow=Conversion failed for command parameter[{0}] '{1}' because the data value overflowed the type used by the provider.
OleDb_CommandParameterUnavailable=Provider encountered an error while sending command parameter[{0}] '{1}' value and stopped processing.
OleDb_CommandParameterDefault=Parameter[{0}] '{1}' has no default value.
OleDb_CommandParameterError=Error occurred with parameter[{0}]: {1}.

OleDb_BadStatus_ParamAcc=System.Data.OleDb.OleDbDataAdapter internal error: invalid parameter accessor: {0} {1}.
OleDb_UninitializedParameters=Parameter[{0}]: the OleDbType property is uninitialized: OleDbType.{1}.
OleDb_NoProviderSupportForParameters=The ICommandWithParameters interface is not supported by the '{0}' provider.  Command parameters are unsupported with the current provider.
OleDb_NoProviderSupportForSProcResetParameters=Retrieving procedure parameter information is not supported by the '{0}' provider.

;;; OleDb.OleDbCommandBuilder
OleDb_CanNotDetermineDecimalSeparator=Can not determine the server's decimal separator. Non-integer numeric literals can not be created.

;;; OleDb.OleDbDataAdapter
OleDb_Fill_NotADODB=Object is not an ADODB.RecordSet or an ADODB.Record.
OleDb_Fill_EmptyRecordSet=Unable to retrieve the '{0}' interface from the ADODB.RecordSet object.
OleDb_Fill_EmptyRecord=Unable to retrieve the IRow interface from the ADODB.Record object.

;;; OleDb.OleDbEnumerator
OleDb_ISourcesRowsetNotSupported=Type does not support the OLE DB interface ISourcesRowset

;;; OleDb.OleDbMetaDataFactory
OleDb_IDBInfoNotSupported=Cannot construct the ReservedWords schema collection because the provider does not support IDBInfo.

;;; OleDb.OleDbPropertyCollection
; InvalidOperation
OleDb_PropertyNotSupported=The property's value was not set because the provider did not support the '{0}' property, or the consumer attempted to get or set values of properties not in the Initialization property group and the data source object is uninitialized.
OleDb_PropertyBadValue=Failed to initialize the '{0}' property for one of the following reasons:\r\n\tThe value data type was not the data type of the property or was not null. For example, the property was DBPROP_MEMORYUSAGE, which has a data type of Int32, and the data type was Int64.\r\n\tThe value was not a valid value. For example, the property was DBPROP_MEMORYUSAGE and the value was negative.\r\n\tThe value was a valid value for the property and the provider supports the property as a settable property, but the provider does not support the value specified. This includes the case where the value was added to the property in OLE DB after the provider was written.
OleDb_PropertyBadOption=The value of Options was invalid.
OleDb_PropertyBadColumn=The ColumnID element was invalid.
OleDb_PropertyNotAllSettable=A '{0}' property was specified to be applied to all columns but could not be applied to one or more of them.
OleDb_PropertyNotSettable=The '{0}' property was read-only, or the consumer attempted to set values of properties in the Initialization property group after the data source object was initialized. Consumers can set the value of a read-only property to its current value. This status is also returned if a settable column property could not be set for the particular column.
OleDb_PropertyNotSet=The optional '{0}' property's value was not set to the specified value and setting the property to the specified value was not possible.
OleDb_PropertyConflicting=The '{0}'property's value was not set because doing so would have conflicted with an existing property.
OleDb_PropertyNotAvailable=(Reserved).
OleDb_PropertyStatusUnknown=The provider returned an unknown DBPROPSTATUS_ value '{0}'.

;;; OleDb.OleDbDataReader
; SystemException
OleDb_BadAccessor=Accessor validation was deferred and was performed while the method returned data. The binding was invalid for this column or parameter.
OleDb_BadStatusRowAccessor=OleDbDataAdapter internal error: invalid row set accessor: Ordinal={0} Status={1}.
OleDb_CantConvertValue=The data value could not be converted for reasons other than sign mismatch or data overflow. For example, the data was corrupted in the data store but the row was still retrievable.
OleDb_CantCreate=The provider could not allocate memory in which to return {0} data.
OleDb_DataOverflow=Conversion failed because the {0} data value overflowed the type specified for the {0} value part in the consumer's buffer.
OleDb_GVtUnknown=OleDbDataAdapter internal error: [get] Unknown OLE DB data type: 0x{0} ({1}).
OleDb_SignMismatch=Conversion failed because the {0} data value was signed and the type specified for the {0} value part in the consumer's buffer was unsigned.
OleDb_SVtUnknown=OleDbDataAdapter internal error: [set] Unknown OLE DB data type: 0x{0} ({1}).
OleDb_Unavailable=The provider could not determine the {0} value. For example, the row was just created, the default for the {0} column was not available, and the consumer had not yet set a new {0} value.
OleDb_UnexpectedStatusValue=OLE DB Provider returned an unexpected status value of {0}.
OleDb_ThreadApartmentState=The OleDbDataReader.Read must be used from the same thread on which is was created if that thread's ApartmentState was not ApartmentState.MTA.

OleDb_NoErrorMessage=Unspecified error: {0}
OleDb_FailedGetDescription=IErrorInfo.GetDescription failed with {0}.
OleDb_FailedGetSource=IErrorInfo.GetSource failed with {0}.
OleDb_DBBindingGetVector=DBTYPE_VECTOR data is not supported by the .Net Framework Data OLE DB Provider(System.Data.OleDb).

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; System.Data.SqlClient

;;; SQLServer.Connection
; ArgumentException
ADP_InvalidMinMaxPoolSizeValues=Invalid min or max pool size values, min pool size cannot be greater than the max pool size.
ADP_ObsoleteKeyword=The '{0}' keyword is obsolete. Use '{1}' instead.
SQL_CannotGetDTCAddress=Unable to get the address of the distributed transaction coordinator for the server, from the server.  Is DTC enabled on the server?
SQL_InvalidOptionLength=The length of the value for the connection parameter <{0}> exceeds the maximum allowed 65535 characters.
SQL_InvalidPacketSizeValue=Invalid 'Packet Size'.  The value must be an integer >= 512 and <= 32768.
SQL_NullEmptyTransactionName=Invalid transaction or invalid name for a point at which to save within the transaction.
SQL_SnapshotNotSupported=The {0} enumeration value, {1}, is not supported by SQL Server 7.0 or SQL Server 2000.
SQL_UserInstanceFailoverNotCompatible=User Instance and Failover are not compatible options.  Please choose only one of the two in the connection string.
SQL_AuthenticationAndIntegratedSecurity=Cannot use 'Authentication' with 'Integrated Security'.
SQL_IntegratedWithUserIDAndPassword=Cannot use 'Authentication=Active Directory Integrated' with 'User ID', 'UID', 'Password' or 'PWD' connection string keywords.
SQL_SettingIntegratedWithCredential=Cannot use 'Authentication=Active Directory Integrated', if the Credential property has been set.
SQL_SettingCredentialWithIntegrated=Cannot set the Credential property if 'Authentication=Active Directory Integrated' has been specified in the connection string.

; DataProviderException
SQL_EncryptionNotSupportedByClient=The instance of SQL Server you attempted to connect to requires encryption but this machine does not support it.
SQL_EncryptionNotSupportedByServer=The instance of SQL Server you attempted to connect to does not support encryption.
SQL_InvalidSQLServerVersionUnknown=Unsupported SQL Server version.  The .Net Framework SqlClient Data Provider can only be used with SQL Server versions 7.0 and later.
;InvalidOperationException
SQL_CannotModifyPropertyAsyncOperationInProgress={0} cannot be changed while async operation is in progress.
SQL_AsyncConnectionRequired=This command requires an asynchronous connection. Set \"Asynchronous Processing=true\" in the connection string.
SQL_FatalTimeout=Timeout expired.  The connection has been broken as a result.
SQL_InstanceFailure=Instance failure.
SQL_CredentialsNotProvided=Either Credential or both 'User ID' and 'Password' (or 'UID' and 'PWD') connection string keywords must be specified, if 'Authentication={0}'.

SQL_ChangePasswordArgumentMissing=The '{0}' argument must not be null or empty.
SQL_ChangePasswordConflictsWithSSPI=ChangePassword can only be used with SQL authentication, not with integrated security.
SQL_ChangePasswordUseOfUnallowedKey=The keyword '{0}' must not be specified in the connectionString argument to ChangePassword.
SQL_UnknownSysTxIsolationLevel=Unrecognized System.Transactions.IsolationLevel enumeration value: {0}.
SQL_InvalidPartnerConfiguration=Server {0}, database {1} is not configured for database mirroring.
SQL_MarsUnsupportedOnConnection=The connection does not support MultipleActiveResultSets.
SQL_ADALFailure=Failed to authenticate the user {0} in Active Directory (Authentication={1}).
SQL_ADALInnerException=Error code 0x{0}; state {1}

;NotSupportedException
SQL_ChangePasswordRequiresYukon=ChangePassword requires SQL Server 9.0 or later.
SQL_NonLocalSSEInstance=SSE Instance re-direction is not supported for non-local user instances.

;;; SQLServer.DataCommand
; InvalidOperationException
SQL_AsyncOperationCompleted=The asynchronous operation has already completed.
SQL_PendingBeginXXXExists=The command execution cannot proceed due to a pending asynchronous operation already in progress.
SQL_NonXmlResult=Invalid command sent to ExecuteXmlReader.  The command must return an Xml result.
;NotSupportedException
SQL_NotificationsRequireYukon=Notifications require SQL Server 9.0 or later.

;;; SQLServer.DataParameter
; ArgumentException
SQL_InvalidUdt3PartNameFormat=Invalid 3 part name format for UdtTypeName.
SQL_InvalidParameterTypeNameFormat=Invalid 3 part name format for TypeName.
SQL_InvalidParameterNameLength=The length of the parameter '{0}' exceeds the limit of 128 characters.
SQL_PrecisionValueOutOfRange=Precision value '{0}' is either less than 0 or greater than the maximum allowed precision of 38.
SQL_ScaleValueOutOfRange=Scale value '{0}' is either less than 0 or greater than the maximum allowed scale of 38.
SQL_TimeScaleValueOutOfRange=Scale value '{0}' is either less than 0 or greater than the maximum allowed scale of 7.
; InvalidOperationException
SQL_ParameterInvalidVariant=Parameter '{0}' exceeds the size limit for the sql_variant datatype.
SQL_ParameterTypeNameRequired=The {0} type parameter '{1}' must have a valid type name.

;;; SQLServer.SQLServerAdapter

;;; SQLServer.TDSParser
; InvalidOperationException
SQL_ADALInitializeError=Unable to load adalsql.dll (Authentication={0}). Error code: 0x{1}. For more information, see http://go.microsoft.com/fwlink/?LinkID=513072
SQL_InvalidInternalPacketSize=Invalid internal packet size:
SQL_InvalidTDSVersion=The SQL Server instance returned an invalid or unsupported protocol version during login negotiation.
SQL_InvalidTDSPacketSize=Invalid Packet Size.
SQL_ParsingError=Internal connection fatal error.
SQL_ParsingErrorWithState=Internal connection fatal error. Error state: {0}
SQL_ParsingErrorValue=Internal connection fatal error. Error state: {0}, Value: {1}
SQL_ParsingErrorOffset=Internal connection fatal error. Error state: {0}, Offset: {1}
SQL_ParsingErrorFeatureId=Internal connection fatal error. Error state: {0}, Feature Id: {1}
SQL_ParsingErrorToken=Internal connection fatal error. Error state: {0}, Token : {1}
SQL_ParsingErrorLength=Internal connection fatal error. Error state: {0}, Length: {1}
SQL_ParsingErrorStatus=Internal connection fatal error. Error state: {0}, Status: {1}
SQL_ParsingErrorAuthLibraryType=Internal connection fatal error. Error state: {0}, Authentication Library Type: {1}
SQL_ConnectionLockedForBcpEvent=The connection cannot be used because there is an ongoing operation that must be finished.
SQL_SNIPacketAllocationFailure=Memory allocation for internal connection failed.
; OverflowException
SQL_SmallDateTimeOverflow=SqlDbType.SmallDateTime overflow.  Value '{0}' is out of range.  Must be between 1/1/1900 12:00:00 AM and 6/6/2079 11:59:59 PM.
SQL_TimeOverflow=SqlDbType.Time overflow.  Value '{0}' is out of range.  Must be between 00:00:00.0000000 and 23:59:59.9999999.
SQL_MoneyOverflow=SqlDbType.SmallMoney overflow.  Value '{0}' is out of range.  Must be between -214,748.3648 and 214,748.3647.
; SQLServerException
SQL_CultureIdError=The Collation specified by SQL Server is not supported.
SQL_OperationCancelled=Operation cancelled by user.
SQL_SevereError=A severe error occurred on the current command.  The results, if any, should be discarded.
SQL_SSPIGenerateError=The target principal name is incorrect.  Cannot generate SSPI context.
SQL_InvalidSSPIPacketSize=Invalid SSPI packet size.
SQL_SSPIInitializeError=Cannot initialize SSPI package.
SQL_Timeout=Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.
SQL_Timeout_PreLogin_Begin=Connection Timeout Expired.  The timeout period elapsed at the start of the pre-login phase.  This could be because of insufficient time provided for connection timeout.
SQL_Timeout_PreLogin_InitializeConnection=Connection Timeout Expired.  The timeout period elapsed while attempting to create and initialize a socket to the server.  This could be either because the server was unreachable or unable to respond back in time.
SQL_Timeout_PreLogin_SendHandshake=Connection Timeout Expired.  The timeout period elapsed while making a pre-login handshake request.  This could be because the server was unable to respond back in time.
SQL_Timeout_PreLogin_ConsumeHandshake=Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.
SQL_Timeout_Login_Begin=Connection Timeout Expired.  The timeout period elapsed at the start of the login phase.  This could be because of insufficient time provided for connection timeout.
SQL_Timeout_Login_ProcessConnectionAuth=Connection Timeout Expired.  The timeout period elapsed while attempting to authenticate the login.  This could be because the server failed to authenticate the user or the server was unable to respond back in time.
SQL_Timeout_PostLogin=Connection Timeout Expired.  The timeout period elapsed during the post-login phase.  The connection could have timed out while waiting for server to complete the login process and respond; Or it could have timed out while attempting to create multiple active connections.
SQL_Timeout_FailoverInfo=This failure occured while attempting to connect to the {0} server.
SQL_Timeout_RoutingDestinationInfo=This failure occurred while attempting to connect to the routing destination. The duration spent while attempting to connect to the original server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; [Post-Login] complete={4};  
SQL_Duration_PreLogin_Begin=The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0};
SQL_Duration_PreLoginHandshake=The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; 
SQL_Duration_Login_Begin=The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; 
SQL_Duration_Login_ProcessConnectionAuth=The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; 
SQL_Duration_PostLogin=The duration spent while attempting to connect to this server was - [Pre-Login] initialization={0}; handshake={1}; [Login] initialization={2}; authentication={3}; [Post-Login] complete={4}; 
SQL_UserInstanceFailure=A user instance was requested in the connection string but the server specified does not support this option.

;;; SQLServer.SQLServerDataReader
; IndexOutOfRangeException
SQL_ExceedsMaxDataLength=Specified data length {0} exceeds the allowed maximum length of {1}.
; NotSupportedException
SQL_InvalidRead=Invalid attempt to read when no data is present.
SQL_NonBlobColumn=Invalid attempt to GetBytes on column '{0}'.  The GetBytes function can only be used on columns of type Text, NText, or Image.
SQL_NonCharColumn=Invalid attempt to GetChars on column '{0}'.  The GetChars function can only be used on columns of type Text, NText, Xml, VarChar or NVarChar.
SQL_StreamNotSupportOnColumnType=Invalid attempt to GetStream on column '{0}'. The GetStream function can only be used on columns of type Binary, Image, Udt or VarBinary.
SQL_TextReaderNotSupportOnColumnType=Invalid attempt to GetTextReader on column '{0}'. The GetTextReader function can only be used on columns of type Char, NChar, NText, NVarChar, Text or VarChar.
SQL_XmlReaderNotSupportOnColumnType=Invalid attempt to GetXmlReader on column '{0}'. The GetXmlReader function can only be used on columns of type Xml.

SQL_InvalidBufferSizeOrIndex=Buffer offset '{1}' plus the bytes available '{0}' is greater than the length of the passed in buffer.
SQL_InvalidDataLength=Data length '{0}' is less than 0.

;;;; : ISqlResultSet
; InvalidOperationException
SQL_SqlResultSetClosed=Invalid attempt to call method {0} when SqlResultSet is closed.
SQL_SqlResultSetClosed2=Operation cannot be completed because the SqlResultSet is closed.
SQL_SqlRecordReadOnly='{0}' cannot be called when the record is read only.
SQL_SqlRecordReadOnly2=Operation cannot be completed because the record is read only.
SQL_SqlResultSetRowDeleted=Invalid attempt to call method {0} when the current row is deleted
SQL_SqlResultSetRowDeleted2=Operation cannot be completed because the current row is deleted
SQL_SqlResultSetCommandNotInSameConnection=Operation cannot be completed because the command that created the SqlResultSet has been dissociated from the original connection. SqlResultSet is closed.
SQL_SqlResultSetNoAcceptableCursor=SqlResultSet could not be created for the given query with the desired options.

SQL_SqlUpdatableRecordReadOnly='{0}' cannot be called when the SqlDataRecord is read only.

;;;
;;; BulkLoad messages
SQL_BulkLoadMappingInaccessible=The mapped collection is in use and cannot be accessed at this time;
SQL_BulkLoadMappingsNamesOrOrdinalsOnly=Mappings must be either all name or all ordinal based.
SQL_BulkLoadCannotConvertValue=The given value of type {0} from the data source cannot be converted to type {1} of the specified target column.
SQL_BulkLoadNonMatchingColumnMapping=The given ColumnMapping does not match up with any column in the source or destination.
SQL_BulkLoadNonMatchingColumnName=The given ColumnName '{0}' does not match up with any column in data source.
SQL_BulkLoadStringTooLong=String or binary data would be truncated.
SQL_BulkLoadInvalidTimeout=Timeout Value '{0}' is less than 0.
SQL_BulkLoadInvalidVariantValue=Value cannot be converted to SqlVariant.
SQL_BulkLoadExistingTransaction=Unexpected existing transaction.
SQL_BulkLoadNoCollation=Failed to obtain column collation information for the destination table. If the table is not in the current database the name must be qualified using the database name (e.g. [mydb]..[mytable](e.g. [mydb]..[mytable]); this also applies to temporary-tables (e.g. #mytable would be specified as tempdb..#mytable).
SQL_BulkLoadConflictingTransactionOption=Must not specify SqlBulkCopyOption.UseInternalTransaction and pass an external Transaction at the same time.
SQL_BulkLoadInvalidOperationInsideEvent=Function must not be called during event.
SQL_BulkLoadMissingDestinationTable=The DestinationTableName property must be set before calling this method.
SQL_BulkLoadInvalidDestinationTable=Cannot access destination table '{0}'.
SQL_BulkLoadNotAllowDBNull=Column '{0}' does not allow DBNull.Value.
Sql_BulkLoadLcidMismatch=The locale id '{0}' of the source column '{1}' and the locale id '{2}' of the destination column '{3}' do not match.
SQL_BulkLoadPendingOperation=Attempt to invoke bulk copy on an object that has a pending operation.

;;;
;;; transactions.
SQL_ConnectionDoomed=The requested operation cannot be completed because the connection has been broken.
SQL_OpenResultCountExceeded=Open result count exceeded.

;;;
;;; Global Transactions
GT_Disabled=Global Transactions are not enabled for this Azure SQL Database. Please contact Azure SQL DB support for assistance.
GT_UnsupportedSysTxVersion=The System.Transactions.dll loaded does not support Global Transactions. Please upgrade to .NET 4.6.1 or later.

;;; Merged Provider
SQL_BatchedUpdatesNotAvailableOnContextConnection=Batching updates is not supported on the context connection.
SQL_ContextAllowsLimitedKeywords=The only additional connection string keyword that may be used when requesting the context connection is the Type System Version keyword.
SQL_ContextAllowsOnlyTypeSystem2005=The context connection does not support Type System Version=SQL Server 2000.
SQL_ContextConnectionIsInUse=The context connection is already in use.
SQL_ContextUnavailableOutOfProc=The requested operation requires a SqlClr context, which is only available when running in the Sql Server process.
SQL_ContextUnavailableWhileInProc=The requested operation requires a Sql Server execution thread.  The current thread was started by user code or other non-Sql Server engine code.
SQL_NestedTransactionScopesNotSupported=Nested TransactionScopes are not supported.
SQL_NotAvailableOnContextConnection=The requested operation is not available on the context connection.
SQL_NotificationsNotAvailableOnContextConnection=Notifications are not available on the context connection.
SQL_UnexpectedSmiEvent=Unexpected server event: {0}.
SQL_UserInstanceNotAvailableInProc=User instances are not allowed when running in the Sql Server process.
SQL_ArgumentLengthMismatch=The length of '{0}' must match the length of '{1}'.
SQL_InvalidSqlDbTypeWithOneAllowedType=The SqlDbType '{0}' is invalid for {1}.  Only {2} is supported.
SQL_PipeErrorRequiresSendEnd=An error occurred with a prior row sent to the SqlPipe.  SendResultsEnd must be called before anything else can be sent.
SQL_TooManyValues=Too many values.
SQL_StreamWriteNotSupported=The Stream does not support writing.
SQL_StreamReadNotSupported=The Stream does not support reading.
SQL_StreamSeekNotSupported=The Stream does not support seeking.

;;;
;;; SqlException (Other than error messages)
SQL_ExClientConnectionId=ClientConnectionId:{0}
SQL_ExErrorNumberStateClass=Error Number:{0},State:{1},Class:{2}
SQL_ExOriginalClientConnectionId=ClientConnectionId before routing:{0}
SQL_ExRoutingDestination=Routing Destination:{0}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Sql Misc. Errors
SqlMisc_NullString=Null
SqlMisc_MessageString=Message
SqlMisc_ArithOverflowMessage=Arithmetic Overflow.
SqlMisc_DivideByZeroMessage=Divide by zero error encountered.
SqlMisc_NullValueMessage=Data is Null. This method or property cannot be called on Null values.
SqlMisc_TruncationMessage=Numeric arithmetic causes truncation.
SqlMisc_DateTimeOverflowMessage=SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
SqlMisc_ConcatDiffCollationMessage=Two strings to be concatenated have different collation.
SqlMisc_CompareDiffCollationMessage=Two strings to be compared have different collation.
SqlMisc_InvalidFlagMessage=Invalid flag value.
SqlMisc_NumeToDecOverflowMessage=Conversion from SqlDecimal to Decimal overflows.
SqlMisc_ConversionOverflowMessage=Conversion overflows.
SqlMisc_InvalidDateTimeMessage=Invalid SqlDateTime.
SqlMisc_TimeZoneSpecifiedMessage=A time zone was specified. SqlDateTime does not support time zones.
SqlMisc_InvalidArraySizeMessage=Invalid array size.
SqlMisc_InvalidPrecScaleMessage=Invalid numeric precision/scale.
SqlMisc_FormatMessage=The input wasn't in a correct format.
SqlMisc_SqlTypeMessage=SqlType error.
SqlMisc_LenTooLargeMessage=The SqlBytes and SqlChars don't support length of more than 2GB in this version.
SqlMisc_StreamErrorMessage=An error occurred while reading.
SqlMisc_StreamClosedMessage=Stream has been closed or disposed.
SqlMisc_NoBufferMessage=There is no buffer. Read or write operation failed.
SqlMisc_SetNonZeroLenOnNullMessage=Cannot set to non-zero length, because current value is Null.
SqlMisc_BufferInsufficientMessage=The buffer is insufficient. Read or write operation failed.
SqlMisc_WriteNonZeroOffsetOnNullMessage=Cannot write to non-zero offset, because current value is Null.
SqlMisc_WriteOffsetLargerThanLenMessage=Cannot write from an offset that is larger than current length. It would leave uninitialized data in the buffer.
SqlMisc_TruncationMaxDataMessage=Data returned is larger than 2Gb in size. Use SequentialAccess command behavior in order to get all of the data.
SqlMisc_InvalidFirstDayMessage=Argument to GetDayOfWeek must be integer between 1 and 7.
SqlMisc_NotFilledMessage=SQL Type has not been loaded with data.
SqlMisc_AlreadyFilledMessage=SQL Type has already been loaded with data.
SqlMisc_ClosedXmlReaderMessage=Invalid attempt to access a closed XmlReader.
SqlMisc_InvalidOpStreamClosed=Invalid attempt to call {0} when the stream is closed.
SqlMisc_InvalidOpStreamNonWritable=Invalid attempt to call {0} when the stream non-writable.
SqlMisc_InvalidOpStreamNonReadable=Invalid attempt to call {0} when the stream non-readable.
SqlMisc_InvalidOpStreamNonSeekable=Invalid attempt to call {0} when the stream is non-seekable.
SqlMisc_SubclassMustOverride=Subclass did not override a required method.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; System.Data.Sql Errors
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
Sql_CanotCreateNormalizer=Cannot create normalizer for '{0}'.
Sql_InternalError=Internal Error
Sql_NullCommandText=Command parameter must have a non null and non empty command text.
Sql_MismatchedMetaDataDirectionArrayLengths=MetaData parameter array must have length equivalent to ParameterDirection array argument.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Default Exception messages
ADP_AdapterMappingExceptionMessage=Data adapter mapping error.
ADP_DataAdapterExceptionMessage=Data adapter error.
ADP_DBConcurrencyExceptionMessage=DB concurrency violation.
ADP_OperationAborted=Operation aborted.
ADP_OperationAbortedExceptionMessage=Operation aborted due to an exception (see InnerException for details).

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; required to remain in this resource file because DataSysDescriptionAttribute is public

;;; DataAdapter Property/Event Descriptions
DataAdapter_AcceptChangesDuringFill=Whether or not Fill will call DataRow.AcceptChanges.
DataAdapter_AcceptChangesDuringUpdate=Whether or not Update will call DataRow.AcceptChanges.
DataAdapter_ContinueUpdateOnError=Whether or not to continue to the next DataRow when the Update events, RowUpdating and RowUpdated, Status is UpdateStatus.ErrorsOccurred.
DataAdapter_FillLoadOption=How the adapter fills the DataTable from the DataReader.
DataAdapter_MissingMappingAction=The action taken when a table or column in the TableMappings is missing.
DataAdapter_MissingSchemaAction=The action taken when a table or column in the DataSet is missing.
DataAdapter_TableMappings=How to map source table to DataSet table.
DataAdapter_FillError=Event triggered when a recoverable error occurs during Fill.
DataAdapter_ReturnProviderSpecificTypes=Should Fill return provider specific values or common CLSCompliant values.

;;; DataColumnMapping Property Descriptions
DataColumnMapping_DataSetColumn=DataColumn.ColumnName
DataColumnMapping_SourceColumn=Source column name - case sensitive.

;;; DataColumnMappingCollection Property Descriptions
DataColumnMappings_Count=The number of items in the collection
DataColumnMappings_Item=The specified DataColumnMapping object.

;;; DataTableMapping Property Descriptions
DataTableMapping_ColumnMappings=Individual columns mappings when this table mapping is matched.
DataTableMapping_DataSetTable=DataTable.TableName
DataTableMapping_SourceTable=The DataTableMapping source table name. This name is case sensitive.

;;; DataTableMappingCollection Property Descriptions
DataTableMappings_Count=The number of items in the collection
DataTableMappings_Item=The specified DataTableMapping object

;;; DbDataAdapter Property/Event Descriptions
DbDataAdapter_DeleteCommand=Used during Update for deleted rows in DataSet.
DbDataAdapter_InsertCommand=Used during Update for new rows in DataSet.
DbDataAdapter_SelectCommand=Used during Fill/FillSchema.
DbDataAdapter_UpdateCommand=Used during Update for modified rows in DataSet.
DbDataAdapter_RowUpdated=Event triggered before every DataRow during Update.
DbDataAdapter_RowUpdating=Event triggered after every DataRow during Update.
DbDataAdapter_UpdateBatchSize=Number of rows to batch together before executing against the data source.

;; DbTable Property Descriptions
DbTable_Connection=Connection used if the the Select/Insert/Update/DeleteCommands do not already have a connection.
DbTable_DeleteCommand=Used during Update for deleted rows in the DataTable.
DbTable_InsertCommand=Used during Update for new rows in the DataTable.
DbTable_SelectCommand=Used during Fill.
DbTable_UpdateCommand=Used during Update for modified rows in the DataTable.
DbTable_ReturnProviderSpecificTypes=Should Fill return provider specific values or common CLSCompliant values.
DbTable_TableMapping=How to map source table to DataTable.
DbTable_ConflictDetection=How are the Insert/Update/DeleteCommands generated when not set by the user.
DbTable_UpdateBatchSize=Number of rows to batch together before executing against the data source.

;;;
;;; DbConnectionStringBuilder Property Descriptions
DbConnectionString_ConnectionString=The connection string used to connect to the Data Source.
DbConnectionString_Driver=The name of the ODBC Driver to use when connecting to the Data Source.
DbConnectionString_DSN=The DSN to use when connecting to the Data Source.
DbConnectionString_AdoNetPooler=When true, indicates that managed connection pooling should be used.
DbConnectionString_FileName=The UDL file to use when connecting to the Data Source.
DbConnectionString_OleDbServices=Specifies which OLE DB Services to enable or disable with the OleDb Provider.
DbConnectionString_Provider=The name of the OLE DB Provider to use when connecting to the Data Source.
DbConnectionString_ApplicationName=The name of the application.
DbConnectionString_AsynchronousProcessing=When true, enables usage of the Asynchronous functionality in the .Net Framework Data Provider.
DbConnectionString_AttachDBFilename=The name of the primary file, including the full path name, of an attachable database.
DbConnectionString_ConnectTimeout=The length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.
DbConnectionString_ConnectionReset=When true, indicates the connection state is reset when removed from the pool.
DbConnectionString_ContextConnection=When true, indicates the connection should be from the Sql Server context.  Available only when running in the Sql Server process.
DbConnectionString_CurrentLanguage=The SQL Server Language record name.
DbConnectionString_DataSource=Indicates the name of the data source to connect to.
DbConnectionString_Encrypt=When true, SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.
DbConnectionString_Enlist=Sessions in a Component Services (or MTS, if you are using Microsoft Windows NT) environment should automatically be enlisted in a global transaction where required.
DbConnectionString_InitialCatalog=The name of the initial catalog or database in the data source.
DbConnectionString_FailoverPartner=The name or network address of the instance of SQL Server that acts as a failover partner.
DbConnectionString_IntegratedSecurity=Whether the connection is to be a secure connection or not.
DbConnectionString_LoadBalanceTimeout=The minimum amount of time (in seconds) for this connection to live in the pool before being destroyed.
DbConnectionString_MaxPoolSize=The maximum number of connections allowed in the pool.
DbConnectionString_MinPoolSize=The minimum number of connections allowed in the pool.
DbConnectionString_MultipleActiveResultSets=When true, multiple result sets can be returned and read from one connection.
DbConnectionString_MultiSubnetFailover=If your application is connecting to a high-availability, disaster recovery (AlwaysOn) availability group (AG) on different subnets, MultiSubnetFailover=Yes configures SqlConnection to provide faster detection of and connection to the (currently) active server.
DbConnectionString_TransparentNetworkIPResolution=If your application connects to different networks, TransparentNetworkIPResolution=Yes configures SqlConnection to provide transparent connection resolution to the currently active server, independently of the network IP topology.
DbConnectionString_NetworkLibrary=The network library used to establish a connection to an instance of SQL Server.
DbConnectionString_PacketSize=Size in bytes of the network packets used to communicate with an instance of SQL Server.
DbConnectionString_Password=Indicates the password to be used when connecting to the data source.
DbConnectionString_PersistSecurityInfo=When false, security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.
DbConnectionString_Pooling=When true, the connection object is drawn from the appropriate pool, or if necessary, is created and added to the appropriate pool.
DbConnectionString_Replication=Used by SQL Server in Replication.
DbConnectionString_TransactionBinding=Indicates binding behavior of connection to a System.Transactions Transaction when enlisted.
DbConnectionString_TrustServerCertificate=When true (and encrypt=true), SQL Server uses SSL encryption for all data sent between the client and server without validating the server certificate.
DbConnectionString_TypeSystemVersion=Indicates which server type system the provider will expose through the DataReader.
DbConnectionString_UserID=Indicates the user ID to be used when connecting to the data source.
DbConnectionString_UserInstance=Indicates whether the connection will be re-directed to connect to an instance of SQL Server running under the user's account.
DbConnectionString_WorkstationID=The name of the workstation connecting to SQL Server.
DbConnectionString_ApplicationIntent=Declares the application workload type when connecting to a server.
;DbConnectionString_Unicode=If true, the client supports Unicode functionality available in Oracle, or if false, is non-Unicode aware.
DbConnectionString_ConnectRetryCount=Number of attempts to restore connection.
DbConnectionString_ConnectRetryInterval=Delay between attempts to restore connection.
DbConnectionString_Authentication=Specifies the method of authenticating with SQL Server.
;;;
;;; DbConnection Property Descriptions
; COMMON CODE DbConnection_State=The ConnectionState indicating whether the connection is open or closed.

OdbcConnection_ConnectionString=Information used to connect to a Data Source.
OdbcConnection_ConnectionTimeout=Current connection timeout value, not settable in the ConnectionString.
OdbcConnection_Database=Current data source catalog value, 'Database=X' in the connection string.
OdbcConnection_DataSource=Current data source, 'Server=X' in the connection string.
OdbcConnection_Driver=Current ODBC driver.
OdbcConnection_ServerVersion=Version of the product accessed by the ODBC Driver.

OleDbConnection_ConnectionString=Information used to connect to a Data Source.
OleDbConnection_ConnectionTimeout=Current connection timeout value, 'Connect Timeout=X' in the ConnectionString.
OleDbConnection_Database=Current data source catalog value, 'Initial Catalog=X' in the connection string.
OleDbConnection_DataSource=Current data source, 'Data Source=X' in the connection string.
OleDbConnection_Provider=Current OLE DB provider ProgID, 'Provider=X' in the connection string.
OleDbConnection_ServerVersion=Version of the product accessed by the OLE DB Provider.

SqlConnection_AccessToken=Access token to use for authentication.
SqlConnection_Asynchronous=State of connection, synchronous or asynchronous.  'Asynchronous Processing=x' in the connection string.
SqlConnection_Replication=Information used to connect for replication.
SqlConnection_ConnectionString=Information used to connect to a DataSource, such as 'Data Source=x;Initial Catalog=x;Integrated Security=SSPI'.
SqlConnection_ConnectionTimeout=Current connection timeout value, 'Connect Timeout=X' in the ConnectionString.
SqlConnection_Database=Current SQL Server database, 'Initial Catalog=X' in the connection string.
SqlConnection_DataSource=Current SqlServer that the connection is opened to, 'Data Source=X' in the connection string.
SqlConnection_PacketSize=Network packet size, 'Packet Size=x' in the connection string.
SqlConnection_ServerVersion=Version of the SQL Server accessed by the SqlConnection.
SqlConnection_WorkstationId=Workstation Id, 'Workstation ID=x' in the connection string.
SqlConnection_StatisticsEnabled=Collect statistics for this connection.
SqlConnection_CustomColumnEncryptionKeyStoreProviders=Custom column encryption key store providers.
SqlConnection_ClientConnectionId=A guid to represent the physical connection.
SqlConnection_Credential=User Id and secure password to use for authentication.
;;;
;;; DbConnection Event Descriptions
DbConnection_InfoMessage=Event triggered when messages arrive from the DataSource.
; COMMON CODE DbConnection_StateChange=Event triggered when the connection changes state.


;;;
;;; DbCommand Property Descriptions
DbCommand_CommandText=Command text to execute.
; COMMON CODE DbCommand_CommandTimeout=Time to wait for command to execute.
DbCommand_CommandType=How to interpret the CommandText.
DbCommand_Connection=Connection used by the command.
DbCommand_Parameters=The parameters collection.
DbCommand_Transaction=The transaction used by the command.
DbCommand_UpdatedRowSource=When used by a DataAdapter.Update, how command results are applied to the current DataRow.
DbCommand_StatementCompleted=When records are affected by a given statement by the execution of the command.

SqlCommand_Notification=Notification values used by Microsoft SQL Server.
SqlCommand_NotificationAutoEnlist=Automatic enlistment in notifications used by Microsoft SQL Server.
;;;
;;; DbCommandBuilder
DbCommandBuilder_ConflictOption=How the where clause is auto-generated for the Update and Delete commands when not specified by the user.
DbCommandBuilder_CatalogLocation=Indicates the position of the catalog name in a qualified table name in a text command.
DbCommandBuilder_CatalogSeparator=The character that separates the catalog name from the rest of the identifier in a text command.
DbCommandBuilder_SchemaSeparator=The character that separates the schema name from the rest of the identifier in a text command.
DbCommandBuilder_QuotePrefix=The prefix string wrapped around sql objects.
DbCommandBuilder_QuoteSuffix=The suffix string wrapped around sql objects.
DbCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate Commands.
DbCommandBuilder_SchemaLocation=Use schema from DataTable or the SelectCommand.
DbCommandBuilder_SetAllValues=How the set clause is auto-generated for the Update command when not specified by the user.

OdbcCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate OdbcCommands
OdbcCommandBuilder_QuotePrefix=The character used in a text command as the opening quote for quoting identifiers that contain special characters.
OdbcCommandBuilder_QuoteSuffix=The character used in a text command as the closing quote for quoting identifiers that contain special characters.

OleDbCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate OleDbCommands
OleDbCommandBuilder_DecimalSeparator=The decimal separator used in numeric literals.
OleDbCommandBuilder_QuotePrefix=The prefix string wrapped around sql objects
OleDbCommandBuilder_QuoteSuffix=The suffix string wrapped around sql objects

SqlCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate SqlCommands
SqlCommandBuilder_DecimalSeparator=The decimal separator used in numeric literals.
SqlCommandBuilder_QuotePrefix=The character used in a text command as the opening quote for quoting identifiers that contain special characters.
SqlCommandBuilder_QuoteSuffix=The character used in a text command as the closing quote for quoting identifiers that contain special characters.

;;;
;;; DbParameter Property Descriptions
; COMMON CODE DbParameter_DbType=The parameter generic type.
; COMMON CODE DbParameter_Direction=Input, output, or bidirectional parameter.
; COMMON CODE DbParameter_IsNullable=a design-time property used for strongly typed code-generation.
; COMMON CODE DbParameter_ParameterName=Name of the parameter.
; COMMON CODE DbParameter_SourceColumn=When used by a DataAdapter.Update, the source column name that is used to find the DataSetColumn name in the ColumnMappings. This is to copy a value between the parameter and a data row.
; COMMON CODE DbParameter_SourceVersion=When used by a DataAdapter.Update (UpdateCommand only), the version of the DataRow value that is used to update the data source.
; COMMON CODE DbParameter_SourceColumnNullMapping=When used by DataAdapter.Update, the parameter value is changed from DBNull.Value into (Int32)1 or (Int32)0 if non-null.
; COMMON CODE DbParameter_Value=Value of the parameter.

DbDataParameter_Precision=Only necessary to set for decimal and numeric parameters when using with Prepare, FillSchema and CommandBuilder scenarios.
DbDataParameter_Scale=Only necessary to set for decimal and numeric parameters when using with Prepare, FillSchema and CommandBuilder scenarios.

; COMMON CODE DbParameter_Offset=Offset in variable length data types.

OdbcParameter_OdbcType=The parameter native type.

OleDbParameter_OleDbType=The parameter native type.

SqlParameter_ParameterName=Name of the parameter, like '@p1'
SqlParameter_SqlDbType=The parameter native type.
SqlParameter_TypeName=The server's name for the type.
SqlParameter_Offset=Offset in variable length data types.
SqlParameter_XmlSchemaCollectionDatabase=XmlSchemaCollectionDatabase
SqlParameter_XmlSchemaCollectionOwningSchema=XmlSchemaCollectionOwningSchema
SqlParameter_XmlSchemaCollectionName=XmlSchemaCollectionName
SqlParameter_UnsupportedTVPOutputParameter=ParameterDirection '{0}' specified for parameter '{1}' is not supported. Table-valued parameters only support ParameterDirection.Input.
SqlParameter_DBNullNotSupportedForTVP=DBNull value for parameter '{0}' is not supported. Table-valued parameters cannot be DBNull.
SqlParameter_InvalidTableDerivedPrecisionForTvp=Precision '{0}' required to send all values in column '{1}' exceeds the maximum supported precision '{2}'. The values must all fit in a single precision.
SqlParameter_UnexpectedTypeNameForNonStruct=TypeName specified for parameter '{0}'.  TypeName must only be set for Structured parameters.
MetaType_SingleValuedStructNotSupported=SqlDbType.Structured type is only supported for multiple valued types.
NullSchemaTableDataTypeNotSupported=DateType column for field '{0}' in schema table is null.  DataType must be non-null.
InvalidSchemaTableOrdinals=Invalid column ordinals in schema table.  ColumnOrdinals, if present, must not have duplicates or gaps.
SQL_EnumeratedRecordMetaDataChanged=Metadata for field '{0}' of record '{1}' did not match the original record's metadata.
SQL_EnumeratedRecordFieldCountChanged=Number of fields in record '{0}' does not match the number in the original record.

;;;
;;;
;;;
SQLUDT_MaxByteSizeValue=range: 0-8000

SQLUDT_Unexpected=unexpected error encountered in SqlClient data provider. {0}
SQLUDT_InvalidDbId=Unable to get Type Info for {0},{1}
SQLUDT_CantLoadAssembly=The provider has failed to load the following assembly: {0}
SQLUDT_InvalidUdtTypeName=UdtTypeName property must be set for UDT parameters.
;Auto assembly download is disabled for Whidbey.
;SQLUDT_AssemblyDownloadNotEnabled=Option to dynamically download assemblies from the server has not been enabled.
SQLUDT_UnexpectedUdtTypeName=UdtTypeName property must be set only for UDT parameters.
SQLUDT_InvalidSqlType=Specified type is not registered on the target server.{0}.
SQLUDT_InWhereClause=UDT parameters not permitted in the where clause unless part of the primary key.

SqlUdt_InvalidUdtMessage='{0}' is an invalid user defined type, reason: {1}.
SqlUdtReason_MultipleSerFormats=supports both in-memory and user-defined formats
SqlUdtReason_CannotSupportNative=Native format can't be supported.
SqlUdtReason_CannotSupportUserDefined=does not implement IBinarySerialize
SqlUdtReason_NotSerializable=not serializable
SqlUdtReason_NoPublicConstructors=no public constructors
SqlUdtReason_NotNullable=does not implement INullable
SqlUdtReason_NoPublicConstructor=does not have a public constructor
SqlUdtReason_NoUdtAttribute=no UDT attribute
SqlUdtReason_MaplessNotYetSupported=Serialization without mapping is not yet supported.
SqlUdtReason_ParseMethodMissing='public static x Parse(System.Data.SqlTypes.SqlString)' method is missing
SqlUdtReason_ToStringMethodMissing='public override string ToString()' method is missing
SqlUdtReason_NullPropertyMissing='public static x Null { get; }' method is missing
SqlUdtReason_NativeFormatNoFieldSupport=Native format does not support fields (directly or through another field) of type '{0}'
SqlUdtReason_TypeNotPublic=Type is not public
SqlUdtReason_NativeUdtNotSequentialLayout=Native UDT not sequential layout due to type '{0}'
SqlUdtReason_NativeUdtMaxByteSize=Native UDT specifies a max byte size
SqlUdtReason_NonSerializableField=field '{0}' is marked non-serialized
SqlUdtReason_NativeFormatExplictLayoutNotAllowed=The type of field '{0}' is marked as explicit layout which is not allowed in Native format
SqlUdtReason_MultivaluedAssemblyId=Multiple valued assembly references must have a nonzero Assembly Id.

;;
;;
SQLTVP_TableTypeCanOnlyBeParameter=Structured, multiple-valued types can only be used for parameters, and cannot be nested within another type.

;;
;;
SqlFileStream_InvalidPath=The path name is not valid.
SqlFileStream_InvalidParameter=An invalid parameter was passed to the function.
SqlFileStream_FileAlreadyInTransaction=The process cannot access the file specified because it has been opened in another transaction.
SqlFileStream_PathNotValidDiskResource=The path name is invalid or does not point to a disk file.

;;
;;
SqlDelegatedTransaction_PromotionFailed=Failure while attempting to promote transaction.
;;
;;

;; Property descriptions for SqlDependency

SqlDependency_SqlDependency=Dependency object used to receive query notifications.
SqlDependency_HasChanges=Property to indicate if this dependency is invalid.
SqlDependency_Id=A string that uniquely identifies this dependency object.
SqlDependency_OnChange=Event that can be used to subscribe for change notifications.
SqlDependency_AddCommandDependency=To add a command to existing dependency object.
SqlDependency_Duplicate=Command is already associated with another dependency object. Can not overwrite.

;; Errors thrown by SqlDependency

SQLNotify_AlreadyHasCommand=This SqlCommand object is already associated with another SqlDependency object.
SqlNotify_SqlDepCannotBeCreatedInProc=SqlDependency object cannot be created when running inside the SQL Server process.

SqlDependency_DatabaseBrokerDisabled=The SQL Server Service Broker for the current database is not enabled, and as a result query notifications are not supported.  Please enable the Service Broker for this database if you wish to use notifications.
SqlDependency_DefaultOptionsButNoStart=When using SqlDependency without providing an options value, SqlDependency.Start() must be called prior to execution of a command added to the SqlDependency instance.
SqlDependency_EventNoDuplicate=SqlDependency.OnChange does not support multiple event registrations for the same delegate.
SqlDependency_DuplicateStart=SqlDependency does not support calling Start() with different connection strings having the same server, user, and database in the same app domain.
SqlDependency_IdMismatch=No SqlDependency exists for the key.
SqlDependency_NoMatchingServerStart=When using SqlDependency without providing an options value, SqlDependency.Start() must be called for each server that is being executed against.
SqlDependency_NoMatchingServerDatabaseStart=SqlDependency.Start has been called for the server the command is executing against more than once, but there is no matching server/user/database Start() call for current command.
SqlDependency_InvalidTimeout=Timeout specified is invalid. Timeout cannot be < 0.
SQLNotify_ErrorFormat=Notification Error. Type={0}, Info={1}, Source={2}.

;;; SqlNotification

;;; SqlMetaData
SqlMetaData_NoMetadata=GetMetaData is not valid for this SqlDbType.
SqlMetaData_InvalidSqlDbTypeForConstructorFormat=The dbType {0} is invalid for this constructor.
SqlMetaData_NameTooLong=The name is too long.
SqlMetaData_SpecifyBothSortOrderAndOrdinal=The sort order and ordinal must either both be specified, or neither should be specified (SortOrder.Unspecified and -1).  The values given were: order = {0}, ordinal = {1}.
SqlProvider_InvalidDataColumnType=The type of column '{0}' is not supported.  The type is '{1}'
SqlProvider_InvalidDataColumnMaxLength=The size of column '{0}' is not supported. The size is {1}.
SqlProvider_NotEnoughColumnsInStructuredType=There are not enough fields in the Structured type.  Structured types must have at least one field.
SqlProvider_DuplicateSortOrdinal=The sort ordinal {0} was specified twice.
SqlProvider_MissingSortOrdinal=The sort ordinal {0} was not specified.
SqlProvider_SortOrdinalGreaterThanFieldCount=The sort ordinal {0} on field {1} exceeds the total number of fields.
IEnumerableOfSqlDataRecordHasNoRows=There are no records in the SqlDataRecord enumeration. To send a table-valued parameter with no rows, use a null reference for the value instead.

;;; SqlPipe
SqlPipe_CommandHookedUpToNonContextConnection=SqlPipe does not support executing a command with a connection that is not a context connection.
SqlPipe_MessageTooLong=Message length {0} exceeds maximum length supported of 4000.
SqlPipe_IsBusy=Could not use the pipe while it is busy with another operation.
SqlPipe_AlreadyHasAnOpenResultSet=A result set is currently being sent to the pipe. End the current result set before calling {0}.
SqlPipe_DoesNotHaveAnOpenResultSet=Result set has not been initiated.  Call SendResultSetStart before calling {0}.

;;; SNI
; ProviderNames
SNI_PN0=HTTP Provider
SNI_PN1=Named Pipes Provider
SNI_PN2=Session Provider
SNI_PN3=Sign Provider
SNI_PN4=Shared Memory Provider
SNI_PN5=SMux Provider
SNI_PN6=SSL Provider
SNI_PN7=TCP Provider
SNI_PN8=VIA Provider
SNI_PN9=
SNI_PN10=SQL Network Interfaces

;  SNI_Error_Strings
SNI_ERROR_1=I/O Error detected in read/write operation
SNI_ERROR_2=Connection was terminated
SNI_ERROR_3=Asynchronous operations not supported
SNI_ERROR_4=
SNI_ERROR_5=Invalid parameter(s) found
SNI_ERROR_6=Unsupported protocol specified
SNI_ERROR_7=Invalid connection found when setting up new session protocol
SNI_ERROR_8=Protocol not supported
SNI_ERROR_9=Associating port with I/O completion mechanism failed
SNI_ERROR_10=
SNI_ERROR_11=Timeout error
SNI_ERROR_12=No server name supplied
SNI_ERROR_13=TerminateListener() has been called
SNI_ERROR_14=Win9x not supported
SNI_ERROR_15=Function not supported
SNI_ERROR_16=Shared-Memory heap error
SNI_ERROR_17=Cannot find an ip/ipv6 type address to connect
SNI_ERROR_18=Connection has been closed by peer
SNI_ERROR_19=Physical connection is not usable
SNI_ERROR_20=Connection has been closed
SNI_ERROR_21=Encryption is enforced but there is no valid certificate
SNI_ERROR_22=Couldn't load library
SNI_ERROR_23=Cannot open a new thread in server process
SNI_ERROR_24=Cannot post event to completion port
SNI_ERROR_25=Connection string is not valid
SNI_ERROR_26=Error Locating Server/Instance Specified
SNI_ERROR_27=Error getting enabled protocols list from registry
SNI_ERROR_28=Server doesn't support requested protocol
SNI_ERROR_29=Shared Memory is not supported for clustered server connectivity
SNI_ERROR_30=Invalid attempt bind to shared memory segment
SNI_ERROR_31=Encryption(ssl/tls) handshake failed
SNI_ERROR_32=Packet size too large for SSL Encrypt/Decrypt operations
SNI_ERROR_33=SSRP error
SNI_ERROR_34=Could not connect to the Shared Memory pipe
SNI_ERROR_35=An internal exception was caught
SNI_ERROR_36=The Shared Memory dll used to connect to SQL Server 2000 was not found
SNI_ERROR_37=The SQL Server 2000 Shared Memory client dll appears to be invalid/corrupted
SNI_ERROR_38=Cannot open a Shared Memory connection to SQL Server 2000
SNI_ERROR_39=Shared memory connectivity to SQL Server 2000 is either disabled or not available on this machine
SNI_ERROR_40=Could not open a connection to SQL Server
SNI_ERROR_41=Cannot open a Shared Memory connection to a remote SQL server
SNI_ERROR_42=Could not establish dedicated administrator connection (DAC) on default port. Make sure that DAC is enabled
SNI_ERROR_43=An error occurred while obtaining the dedicated administrator connection (DAC) port. Make sure that SQL Browser is running, or check the error log for the port number
SNI_ERROR_44=Could not compose Service Principal Name (SPN) for Windows Integrated Authentication. Possible causes are server(s) incorrectly specified to connection API calls, Domain Name System (DNS) lookup failure or memory shortage

; this are for errors for non-integrated SNI features
;SNI_ERROR_45=No client protocols are enabled and no protocol was specified in the connection string
;SNI_ERROR_46=No remote client protocols are enabled and no remote protocol was specified in the connection string

; MultiSubnetFailover errors - they are raised as a different kind of exception, thus each one has a dot in the end.
SNI_ERROR_47=Connecting with the MultiSubnetFailover connection option to a SQL Server instance configured with more than 64 IP addresses is not supported.
SNI_ERROR_48=Connecting to a named SQL Server instance using the MultiSubnetFailover connection option is not supported.
SNI_ERROR_49=Connecting to a SQL Server instance using the MultiSubnetFailover connection option is only supported when using the TCP protocol.

;LocalDB errors:
SNI_ERROR_50=Local Database Runtime error occurred. 
SNI_ERROR_51=An instance name was not specified while connecting to a Local Database Runtime. Specify an instance name in the format (localdb)\\instance_name.
SNI_ERROR_52=Unable to locate a Local Database Runtime installation. Verify that SQL Server Express is properly installed and that the Local Database Runtime feature is enabled.
SNI_ERROR_53=Invalid Local Database Runtime registry configuration found. Verify that SQL Server Express is properly installed.
SNI_ERROR_54=Unable to locate the registry entry for SQLUserInstance.dll file path. Verify that the Local Database Runtime feature of SQL Server Express is properly installed.
SNI_ERROR_55=Registry value contains an invalid SQLUserInstance.dll file path. Verify that the Local Database Runtime feature of SQL Server Express is properly installed.
SNI_ERROR_56=Unable to load the SQLUserInstance.dll from the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed.
SNI_ERROR_57=Invalid SQLUserInstance.dll found at the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed.

; SNIx error messages
Snix_Connect=A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections.
Snix_PreLoginBeforeSuccessfullWrite=The client was unable to establish a connection because of an error during connection initialization process before login. Possible causes include the following:  the client tried to connect to an unsupported version of SQL Server; the server was too busy to accept new connections; or there was a resource limitation (insufficient memory or maximum allowed connections) on the server.
Snix_PreLogin=A connection was successfully established with the server, but then an error occurred during the pre-login handshake.
Snix_LoginSspi=A connection was successfully established with the server, but then an error occurred when obtaining the security/SSPI context information for integrated security login.
Snix_Login=A connection was successfully established with the server, but then an error occurred during the login process.
Snix_EnableMars=Connection open and login was successful, but then an error occurred while enabling MARS for this connection.
Snix_AutoEnlist=Connection open and login was successful, but then an error occurred while enlisting the connection into the current distributed transaction.
Snix_GetMarsSession=Failed to establish a MARS session in preparation to send the request to the server.
Snix_Execute=A transport-level error has occurred when sending the request to the server.
Snix_Read=A transport-level error has occurred when receiving results from the server.
Snix_Close=A transport-level error has occurred during connection clean-up.
Snix_SendRows=A transport-level error has occurred while sending information to the server.
Snix_ProcessSspi=A transport-level error has occured during SSPI handshake.

; LocalDB error messages
LocalDB_CreateFailed=Local Database Runtime: Cannot create named instance.
LocalDB_BadConfigSectionType=Local Database Runtime: system.data.localdb configuration file section is of unknown type.
LocalDB_FailedGetDLLHandle=Local Database Runtime: Cannot load SQLUserInstance.dll.
LocalDB_MethodNotFound=Invalid SQLUserInstance.dll found at the location specified in the registry. Verify that the Local Database Runtime feature of SQL Server Express is properly installed.
LocalDB_UnobtainableMessage=Cannot obtain Local Database Runtime error message
LocalDB_InvalidVersion=Local Database Runtime: Invalid instance version specification found in the configuration file.

;;; TCE 
; CertificateStoreProvider error messages
TCE_InvalidKeyEncryptionAlgorithm=Invalid key encryption algorithm specified: '{0}'. Expected value: '{1}'.
TCE_InvalidKeyEncryptionAlgorithmSysErr=Internal error. Invalid key encryption algorithm specified: '{0}'. Expected value: '{1}'.
TCE_NullKeyEncryptionAlgorithm=Key encryption algorithm cannot be null.
TCE_NullKeyEncryptionAlgorithmSysErr=Internal error. Key encryption algorithm cannot be null.
TCE_EmptyColumnEncryptionKey=Empty column encryption key specified.
TCE_NullColumnEncryptionKey=Column encryption key cannot be null.
TCE_EmptyEncryptedColumnEncryptionKey=Internal error. Empty encrypted column encryption key specified.
TCE_NullEncryptedColumnEncryptionKey=Internal error. Encrypted column encryption key cannot be null.
TCE_LargeCertificatePathLength=Specified certificate path has {0} bytes, which exceeds maximum length of {1} bytes.
TCE_LargeCertificatePathLengthSysErr=Internal error. Specified certificate path has {0} bytes, which exceeds maximum length of {1} bytes.
TCE_NullCertificatePath=Certificate path cannot be null. Use the following format: <certificate location>{2}<certificate store>{2}<certificate thumbprint>, where <certificate location> is either '{0}' or '{1}'.
TCE_NullCertificatePathSysErr=Internal error. Certificate path cannot be null. Use the following format: <certificate location>{2}<certificate store>{2}<certificate thumbprint>, where <certificate location> is either '{0}' or '{1}'.
TCE_NullCspPath=Column master key path cannot be null. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{0}<Key Identifier>.
TCE_NullCspPathSysErr=Internal error. Column master key path cannot be null. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{0}<Key Identifier>.
TCE_NullCngPath=Column master key path cannot be null. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{0}<Key Identifier>.
TCE_NullCngPathSysErr=Internal error. Column master key path cannot be null. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{0}<Key Identifier>.
TCE_InvalidCertificatePath=Invalid certificate path: '{0}'. Use the following format: <certificate location>{3}<certificate store>{3}<certificate thumbprint>, where <certificate location> is either '{1}' or '{2}'.
TCE_InvalidCertificatePathSysErr=Internal error. Invalid certificate path: '{0}'. Use the following format: <certificate location>{3}<certificate store>{3}<certificate thumbprint>, where <certificate location> is either '{1}' or '{2}'.
TCE_InvalidCspPath=Invalid column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_InvalidCspPathSysErr=Internal error. Invalid column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_InvalidCngPath=Invalid column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_InvalidCngPathSysErr=Internal error. Invalid column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_InvalidCertificateLocation=Invalid certificate location '{0}' in certificate path '{1}'. Use the following format: <certificate location>{4}<certificate store>{4}<certificate thumbprint>, where <certificate location> is either '{2}' or '{3}'.
TCE_InvalidCertificateLocationSysErr=Internal error. Invalid certificate location '{0}' in certificate path '{1}'. Use the following format: <certificate location>{4}<certificate store>{4}<certificate thumbprint>, where <certificate location> is either '{2}' or '{3}'.
TCE_InvalidCertificateStore=Invalid certificate store '{0}' specified in certificate path '{1}'. Expected value: '{2}'.
TCE_InvalidCertificateStoreSysErr=Internal error. Invalid certificate store '{0}' specified in certificate path '{1}'. Expected value: '{2}'.
TCE_EmptyCertificateThumbprint=Empty certificate thumbprint specified in certificate path '{0}'.
TCE_EmptyCertificateThumbprintSysErr=Internal error. Empty certificate thumbprint specified in certificate path '{0}'.
TCE_EmptyCspName=Empty Microsoft cryptographic service provider (CSP) name specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_EmptyCspNameSysErr=Internal error. Empty Microsoft cryptographic service provider (CSP) name specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_EmptyCngName=Empty Microsoft Cryptography API: Next Generation (CNG) provider name specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_EmptyCngNameSysErr=Internal error. Empty Microsoft Cryptography API: Next Generation (CNG) provider name specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_EmptyCspKeyId=Empty key identifier specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_EmptyCspKeyIdSysErr=Internal error. Empty key identifier specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft cryptographic service provider (CSP): <CSP Provider Name>{1}<Key Identifier>.
TCE_EmptyCngKeyId=Empty key identifier specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_EmptyCngKeyIdSysErr=Internal error. Empty key identifier specified in column master key path: '{0}'. Use the following format for a key stored in a Microsoft Cryptography API: Next Generation (CNG) provider: <CNG Provider Name>{1}<Key Identifier>.
TCE_InvalidCspName=Invalid Microsoft cryptographic service provider (CSP) name: '{0}'. Verify that the CSP provider name in column master key path: '{1}' is valid and installed on the machine.
TCE_InvalidCspNameSysErr=Internal error. Invalid Microsoft cryptographic service provider (CSP) name: '{0}'. Verify that the CSP provider name in column master key path: '{1}' is valid and installed on the machine.
TCE_InvalidCspKeyId=Invalid key identifier: '{0}'. Verify that the key identifier in column master key path: '{1}' is valid and exists in the CSP.
TCE_InvalidCspKeyIdSysErr=Internal error. Invalid key identifier: '{0}'. Verify that the key identifier in column master key path: '{1}' is valid and exists in the CSP.
TCE_InvalidCngKey=An error occurred while opening the Microsoft Cryptography API: Next Generation (CNG) key: '{0}'. Verify that the CNG provider name '{1}' is valid, installed on the machine, and the key '{2}' exists.
TCE_InvalidCngKeySysErr=Internal error. An error occurred while opening the Microsoft Cryptography API: Next Generation (CNG) key: '{0}'. Verify that the CNG provider name '{1}' is valid, installed on the machine, and the key '{2}' exists.
TCE_CertificateNotFound=Certificate with thumbprint '{0}' not found in certificate store '{1}' in certificate location '{2}'.
TCE_CertificateNotFoundSysErr=Certificate with thumbprint '{0}' not found in certificate store '{1}' in certificate location '{2}'. Verify the certificate path in the column master key definition in the database is correct, and the certificate has been imported correctly into the certificate location/store.
TCE_InvalidAlgorithmVersionInEncryptedCEK=Specified encrypted column encryption key contains an invalid encryption algorithm version '{0}'. Expected version is '{1}'.
TCE_InvalidCiphertextLengthInEncryptedCEK=The specified encrypted column encryption key's ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (certificate) in '{2}'. The encrypted column encryption key may be corrupt, or the specified certificate path may be incorrect.
TCE_InvalidCiphertextLengthInEncryptedCEKCsp=The specified encrypted column encryption key's ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (asymmetric key) in '{2}'. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptographic Service provider (CSP) path may be incorrect.
TCE_InvalidCiphertextLengthInEncryptedCEKCng=The specified encrypted column encryption key's ciphertext length: {0} does not match the ciphertext length: {1} when using column master key (asymmetric key) in '{2}'. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptography API: Next Generation (CNG) provider path may be incorrect.
TCE_InvalidSignatureInEncryptedCEK=The specified encrypted column encryption key's signature length: {0} does not match the signature length: {1} when using column master key (certificate) in '{2}'. The encrypted column encryption key may be corrupt, or the specified certificate path may be incorrect.
TCE_InvalidSignatureInEncryptedCEKCsp=The specified encrypted column encryption key's signature length: {0} does not match the signature length: {1} when using column master key (asymmetric key) in '{2}'. The encrypted column encryption key may be corrupt, or the specified Microsoft cryptographic service provider (CSP) path may be incorrect.
TCE_InvalidSignatureInEncryptedCEKCng=The specified encrypted column encryption key's signature length: {0} does not match the signature length: {1} when using column master key (asymmetric key) in '{2}'. The encrypted column encryption key may be corrupt, or the specified Microsoft Cryptography API: Next Generation (CNG) provider path may be incorrect.
TCE_InvalidCertificateSignature=The specified encrypted column encryption key signature does not match the signature computed with the column master key (certificate) in '{0}'. The encrypted column encryption key may be corrupt, or the specified path may be incorrect.
TCE_InvalidSignature=The specified encrypted column encryption key signature does not match the signature computed with the column master key (asymmetric key) in '{0}'. The encrypted column encryption key may be corrupt, or the specified path may be incorrect.
TCE_CertificateWithNoPrivateKey=Certificate specified in key path '{0}' does not have a private key to encrypt a column encryption key. Verify the certificate is imported correctly.
TCE_CertificateWithNoPrivateKeySysErr=Certificate specified in key path '{0}' does not have a private key to decrypt a column encryption key. Verify the certificate is imported correctly.

; Cryptographic algorithms error messages
TCE_NullColumnEncryptionKeySysErr=Internal error. Column encryption key cannot be null.
TCE_InvalidKeySize=The column encryption key has been successfully decrypted but it's length: {1} does not match the length: {2} for algorithm '{0}'. Verify the encrypted value of the column encryption key in the database.
TCE_InvalidEncryptionType=Encryption type '{1}' specified for the column in the database is either invalid or corrupted. Valid encryption types for algorithm '{0}' are: {2}.
TCE_NullPlainText=Internal error. Plaintext value cannot be null.
TCE_VeryLargeCiphertext=Cannot encrypt. Encrypting resulted in {0} bytes of ciphertext which exceeds the maximum allowed limit of {1} bytes. The specified plaintext value is likely too large (plaintext size is: {2} bytes).
TCE_NullCipherText=Internal error. Ciphertext value cannot be null.
TCE_InvalidCipherTextSize=Specified ciphertext has an invalid size of {0} bytes, which is below the minimum {1} bytes required for decryption.
TCE_InvalidAlgorithmVersion=The specified ciphertext's encryption algorithm version '{0}' does not match the expected encryption algorithm version '{1}'.
TCE_InvalidAuthenticationTag=Specified ciphertext has an invalid authentication tag.
TCE_NullColumnEncryptionAlgorithm=Internal error. Encryption algorithm cannot be null. Valid algorithms are: {0}.

; Errors from sp_describe_parameter_encryption
TCE_UnexpectedDescribeParamFormat=Internal error. The format of the resultset returned by {0} is invalid. One of the resultsets is missing.
TCE_InvalidEncryptionKeyOrdinal=Internal error. The referenced column encryption key ordinal '{1}' is missing in the encryption metadata returned by {0}. Max ordinal is '{2}'.
TCE_ParamEncryptionMetaDataMissing=Internal error. Metadata for parameter '{1}' in statement or procedure '{2}' is missing in resultset returned by {0}.
TCE_ProcEncryptionMetaDataMissing=Internal error. Metadata for parameters for command '{1}' in a batch is missing in the resultset returned by {0}.

; Generic toplevel cryptofailures
TCE_ParamEncryptionFailed=Failed to encrypt parameter '{0}'.
TCE_ColumnDecryptionFailed=Failed to decrypt column '{0}'.
TCE_ParamDecryptionFailed=Failed to decrypt parameter '{0}'.

; Query processing error messages
TCE_UnknownColumnEncryptionAlgorithm=Encryption algorithm '{0}' for the column in the database is either invalid or corrupted. Valid algorithms are: {1}.
TCE_UnknownColumnEncryptionAlgorithmId=Encryption algorithm id '{0}' for the column in the database is either invalid or corrupted. Valid encryption algorithm ids are: {1}.
TCE_UnsupportedNormalizationVersion=Normalization version '{0}' received from {2} is not supported. Valid normalization versions are: {1}.
TCE_UnrecognizedKeyStoreProviderName=Failed to decrypt a column encryption key. Invalid key store provider name: '{0}'. A key store provider name must denote either a system key store provider or a registered custom key store provider. Valid system key store provider names are: {1}. Valid (currently registered) custom key store provider names are: {2}. Please verify key store provider information in column master key definitions in the database, and verify all custom key store providers used in your application are registered properly.
TCE_KeyDecryptionFailedCertStore=Failed to decrypt a column encryption key using key store provider: '{0}'. The last 10 bytes of the encrypted column encryption key are: '{1}'.
TCE_UntrustedKeyPath=Column master key path '{0}' received from server '{1}' is not a trusted key path.
TCE_KeyDecryptionFailed=Failed to decrypt a column encryption key using key store provider: '{0}'. Verify the properties of the column encryption key and its column master key in your database. The last 10 bytes of the encrypted column encryption key are: '{1}'.
TCE_UnsupportedDatatype=Encryption and decryption of data type '{0}' is not supported.
TCE_DecryptionFailed=Decryption failed. The last 10 bytes of the encrypted column encryption key are: '{0}'. The first 10 bytes of ciphertext are: '{1}'.

; TCE Generic errors
TCE_ParamInvalidForceColumnEncryptionSetting=Cannot set {0} for {3} '{1}' because encryption is not enabled for the statement or procedure '{2}'.
TCE_ParamUnExpectedEncryptionMetadata=Cannot execute statement or procedure '{1}' because {2} was set for {3} '{0}' and the database expects this parameter to be sent as plaintext. This may be due to a configuration error.

; TCE specific SQL connection related error messages
TCE_NotSupportedByServer={0} instance in use does not support column encryption.

; TCE specific SQL command/adapter related error messages
TCE_BatchedUpdateColumnEncryptionSettingMismatch={0} should be identical on all commands ({1}, {2}, {3}, {4}) when doing batch updates.
TCE_StreamNotSupportOnEncryptedColumn=Retrieving encrypted column '{0}' as a {1} is not supported.
TCE_SequentialAccessNotSupportedOnEncryptedColumn=Retrieving encrypted column '{0}' with {1} is not supported.

; Provider Extensibility error messages
TCE_CanOnlyCallOnce=Key store providers cannot be set more than once.
TCE_NullCustomKeyStoreProviderDictionary=Column encryption key store provider dictionary cannot be null. Expecting a non-null value.
TCE_InvalidCustomKeyStoreProviderName=Invalid key store provider name '{0}'. '{1}' prefix is reserved for system key store providers.
TCE_NullProviderValue=Null reference specified for key store provider '{0}'. Expecting a non-null value.
TCE_EmptyProviderName=Invalid key store provider name specified. Key store provider names cannot be null or empty.

; TCE Generic Property descriptions
TCE_SqlCommand_ColumnEncryptionSetting=Column encryption setting for the command. Overrides the connection level default.
TCE_DbConnectionString_ColumnEncryptionSetting=Default column encryption setting for all the commands on the connection.
TCE_SqlParameter_ForceColumnEncryption=Forces parameter to be encrypted before sending sensitive data to server. 
TCE_SqlConnection_TrustedColumnMasterKeyPaths=Dictionary object containing SQL Server names and their trusted column master key paths.

; Read-only routing error message
SQLROR_RecursiveRoutingNotSupported=Two or more redirections have occurred. Only one redirection per login is allowed.
SQLROR_FailoverNotSupported=Connecting to a mirrored SQL Server instance using the ApplicationIntent ReadOnly connection option is not supported.
SQLROR_UnexpectedRoutingInfo=Unexpected routing information received.
SQLROR_InvalidRoutingInfo=Invalid routing information received.
SQLROR_TimeoutAfterRoutingInfo=Server provided routing information, but timeout already expired.

; Connection reiliency error messages
SQLCR_InvalidConnectRetryCountValue=Invalid ConnectRetryCount value (should be 0-255).
SQLCR_InvalidConnectRetryIntervalValue=Invalid ConnectRetryInterval value (should be 1-60).
SQLCR_NextAttemptWillExceedQueryTimeout=Next reconnection attempt will exceed query timeout. Reconnection was terminated.
SQLCR_EncryptionChanged=The server did not preserve SSL encryption during a recovery attempt, connection recovery is not possible.
SQLCR_TDSVestionNotPreserved=The server did not preserve the exact client TDS version requested during a recovery attempt, connection recovery is not possible.
SQLCR_AllAttemptsFailed=The connection is broken and recovery is not possible.  The client driver attempted to recover the connection one or more times and all attempts failed.  Increase the value of ConnectRetryCount to increase the number of recovery attempts.
SQLCR_UnrecoverableServer=The connection is broken and recovery is not possible.  The connection is marked by the server as unrecoverable.  No attempt was made to restore the connection.
SQLCR_UnrecoverableClient=The connection is broken and recovery is not possible.  The connection is marked by the client driver as unrecoverable.  No attempt was made to restore the connection.
SQLCR_NoCRAckAtReconnection=The server did not acknowledge a recovery attempt, connection recovery is not possible.

DbConnectionString_PoolBlockingPeriod=Defines the blocking period behavior for a connection pool.

; Azure endpoints
AZURESQL_GenericEndpoint=.database.windows.net
AZURESQL_GermanEndpoint=.database.cloudapi.de
AZURESQL_UsGovEndpoint=.database.usgovcloudapi.net
AZURESQL_ChinaEndpoint=.database.chinacloudapi.cn

; TCE Generic Property descriptions .Net 4.6.2
TCE_SqlConnection_ColumnEncryptionQueryMetadataCacheEnabled=Defines whether query metadata caching is enabled.
TCE_SqlConnection_ColumnEncryptionKeyCacheTtl=Defines the time-to-live of entries in the column encryption key cache.

;;; SQLServer.TDSParser .Net 4.6.2 
SQL_Timeout_Execution=Execution Timeout Expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.