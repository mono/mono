// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 1.33.0.0
// from information in SR.strings.
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
// 
#if Microsoft_CONTROL
namespace System.Windows.Forms.DataVisualization.Charting
#else
namespace System.Web.UI.DataVisualization.Charting
#endif
{
	using System;
	using System.Resources;
	using System.Globalization;
	
	
	[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class SR
	{
		
		protected SR()
		{
		}
		
		public static CultureInfo Culture
		{
			get
			{
				return Keys.Culture;
			}
			set
			{
				Keys.Culture = value;
			}
		}
		
		public static string ExceptionElementPositionConverter
		{
			get
			{
				return Keys.GetString(Keys.ExceptionElementPositionConverter);
			}
		}
		
		public static string ExceptionInvalidServiceContainer
		{
			get
			{
				return Keys.GetString(Keys.ExceptionInvalidServiceContainer);
			}
		}
		
		public static string ExceptionImageLoaderInvalidServiceContainer
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageLoaderInvalidServiceContainer);
			}
		}
		
		public static string ExceptionImageMapAddedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageMapAddedHasWrongType);
			}
		}
		
		public static string ExceptionImageMapInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageMapInsertedHasWrongType);
			}
		}
		
		public static string ExceptionImageMapCircleShapeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageMapCircleShapeInvalid);
			}
		}
		
		public static string ExceptionImageMapRectangleShapeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageMapRectangleShapeInvalid);
			}
		}
		
		public static string ExceptionImageMapPolygonShapeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageMapPolygonShapeInvalid);
			}
		}
		
		public static string ExceptionAnnotationNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationNameIsEmpty);
			}
		}
		
		public static string ExceptionAnnotationPathAddLineAsSegmentsInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationPathAddLineAsSegmentsInvalid);
			}
		}
		
		public static string ExceptionAnnotationLineWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationLineWidthIsNegative);
			}
		}
		
		public static string ExceptionAnnotationAnchorOffsetInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationAnchorOffsetInvalid);
			}
		}
		
		public static string ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty);
			}
		}
		
		public static string ExceptionAnnotationGroupedUnableToStartPlacement
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationGroupedUnableToStartPlacement);
			}
		}
		
		public static string ExceptionAnnotationNotInCollection
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationNotInCollection);
			}
		}
		
		public static string ExceptionAnnotationGroupedAxisMustBeEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationGroupedAxisMustBeEmpty);
			}
		}
		
		public static string ExceptionAnnotationArrowSizeIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationArrowSizeIsZero);
			}
		}
		
		public static string ExceptionAnnotationArrowSizeMustBeLessThen100
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationArrowSizeMustBeLessThen100);
			}
		}
		
		public static string ExceptionAnnotationArrowStyleUnknown
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAnnotationArrowStyleUnknown);
			}
		}
		
		public static string ExceptionInvalidIndexerArgumentType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionInvalidIndexerArgumentType);
			}
		}
		
		public static string ExceptionTitleNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionTitleNameIsEmpty);
			}
		}
		
		public static string ExceptionDataSeriesObjectRequired
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataSeriesObjectRequired);
			}
		}
		
		public static string ExceptionDataSeriesNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataSeriesNameIsEmpty);
			}
		}
		
		public static string ExceptionDataSeriesYValuesPerPointIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataSeriesYValuesPerPointIsZero);
			}
		}
		
		public static string ExceptionDataSeriesYValueNumberInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataSeriesYValueNumberInvalid);
			}
		}
		
		public static string ExceptionSeriesNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSeriesNameIsEmpty);
			}
		}
		
		public static string ExceptionEditorChartTypeRegistryServiceInaccessible
		{
			get
			{
				return Keys.GetString(Keys.ExceptionEditorChartTypeRegistryServiceInaccessible);
			}
		}
		
		public static string ExceptionEditorMultipleSeriesEditiingUnsupported
		{
			get
			{
				return Keys.GetString(Keys.ExceptionEditorMultipleSeriesEditiingUnsupported);
			}
		}
		
		public static string ExceptionEditorContectInstantsIsNotChartObject
		{
			get
			{
				return Keys.GetString(Keys.ExceptionEditorContectInstantsIsNotChartObject);
			}
		}
		
		public static string ExceptionEditorUITypeEditorInapplicable
		{
			get
			{
				return Keys.GetString(Keys.ExceptionEditorUITypeEditorInapplicable);
			}
		}
		
		public static string ExceptionEditorUITypeEditorInt32ApplicableOnly
		{
			get
			{
				return Keys.GetString(Keys.ExceptionEditorUITypeEditorInt32ApplicableOnly);
			}
		}
		
		public static string ExceptionRectangleConverterStringFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRectangleConverterStringFormatInvalid);
			}
		}
		
		public static string ExceptionChartAreaObjectRequired
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaObjectRequired);
			}
		}
		
		public static string ExceptionChartAreaInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaInsertedHasWrongType);
			}
		}
		
		public static string ExceptionChartAreaAlreadyExistsShort
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaAlreadyExistsShort);
			}
		}
		
		public static string ExceptionChartAreaNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaNameIsEmpty);
			}
		}
		
		public static string ExceptionChartArea3DPerspectiveInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DPerspectiveInvalid);
			}
		}
		
		public static string ExceptionChartArea3DInclinationInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DInclinationInvalid);
			}
		}
		
		public static string ExceptionChartArea3DRotationInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DRotationInvalid);
			}
		}
		
		public static string ExceptionChartArea3DWallWidthInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DWallWidthInvalid);
			}
		}
		
		public static string ExceptionChartArea3DPointsDepthInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DPointsDepthInvalid);
			}
		}
		
		public static string ExceptionChartArea3DPointsGapInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartArea3DPointsGapInvalid);
			}
		}
		
		public static string ExceptionCursorIntervalOffsetIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionCursorIntervalOffsetIsNegative);
			}
		}
		
		public static string ExceptionCursorLineWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionCursorLineWidthIsNegative);
			}
		}
		
		public static string ExceptionGraphicsMarkerStyleUnknown
		{
			get
			{
				return Keys.GetString(Keys.ExceptionGraphicsMarkerStyleUnknown);
			}
		}
		
		public static string ExceptionGraphics3DMarkerStyleUnknown
		{
			get
			{
				return Keys.GetString(Keys.ExceptionGraphics3DMarkerStyleUnknown);
			}
		}
		
		public static string ExceptionGraphics3DCoordinatesInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionGraphics3DCoordinatesInvalid);
			}
		}
		
		public static string ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid);
			}
		}
		
		public static string ExceptionAxisLabelRowIndexIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelRowIndexIsNegative);
			}
		}
		
		public static string ExceptionAxisLabelRowIndexMustBe1Or2
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelRowIndexMustBe1Or2);
			}
		}
		
		public static string ExceptionAxisLabelIndexIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelIndexIsNegative);
			}
		}
		
		public static string ExceptionAxisLabelFontAngleInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelFontAngleInvalid);
			}
		}
		
		public static string ExceptionCustomLabelAddedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionCustomLabelAddedHasWrongType);
			}
		}
		
		public static string ExceptionCustomLabelInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionCustomLabelInsertedHasWrongType);
			}
		}
		
		public static string ExceptionSmartLabelsDirectionUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSmartLabelsDirectionUndefined);
			}
		}
		
		public static string ExceptionSmartLabelsMinMovingDistanceIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSmartLabelsMinMovingDistanceIsNegative);
			}
		}
		
		public static string ExceptionSmartLabelsMaxMovingDistanceIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSmartLabelsMaxMovingDistanceIsNegative);
			}
		}
		
		public static string ExceptionStripLineAddedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStripLineAddedHasWrongType);
			}
		}
		
		public static string ExceptionStripLineWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStripLineWidthIsNegative);
			}
		}
		
		public static string ExceptionAxisWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisWidthIsNegative);
			}
		}
		
		public static string ExceptionAxisDynamicIntervalCalculationFailed
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisDynamicIntervalCalculationFailed);
			}
		}
		
		public static string ExceptionAxisIntervalDecreasingFailed
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisIntervalDecreasingFailed);
			}
		}
		
		public static string ExceptionAxisIntervalIncreasingFailed
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisIntervalIncreasingFailed);
			}
		}
		
		public static string ExceptionAxisLabelsAutoFitMaxFontSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisLabelsAutoFitMaxFontSizeInvalid);
			}
		}
		
		public static string ExceptionAxisMinimumMaximumInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisMinimumMaximumInvalid);
			}
		}
		
		public static string ExceptionAxisStackedChartsDataPointsNumberMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisStackedChartsDataPointsNumberMismatch);
			}
		}
		
		public static string ExceptionAxisSeriesNotAligned
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisSeriesNotAligned);
			}
		}
		
		public static string ExceptionAxisScaleLogarithmBaseInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleLogarithmBaseInvalid);
			}
		}
		
		public static string ExceptionAxisScalePositionInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScalePositionInvalid);
			}
		}
		
		public static string ExceptionAxisScalePositionToValueCallFailed
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScalePositionToValueCallFailed);
			}
		}
		
		public static string ExceptionAxisScaleIntervalIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleIntervalIsZero);
			}
		}
		
		public static string ExceptionAxisScaleMinimumMaximumInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleMinimumMaximumInvalid);
			}
		}
		
		public static string ExceptionAxisScaleIntervalIsLessThen1Year
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleIntervalIsLessThen1Year);
			}
		}
		
		public static string ExceptionAxisScaleAutoIntervalInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleAutoIntervalInvalid);
			}
		}
		
		public static string ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint);
			}
		}
		
		public static string ExceptionAxisScaleLogarithmicNegativeValues
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleLogarithmicNegativeValues);
			}
		}
		
		public static string ExceptionChartAreaAxisScaleLogarithmicUnsuitable
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaAxisScaleLogarithmicUnsuitable);
			}
		}
		
		public static string ExceptionChartAreaChartTypesCanNotCombine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaChartTypesCanNotCombine);
			}
		}
		
		public static string ExceptionChartAreaSeriesNotFound
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartAreaSeriesNotFound);
			}
		}
		
		public static string ExceptionAxisScaleBreaksNumberInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleBreaksNumberInvalid);
			}
		}
		
		public static string ExceptionAxisScaleBreaksCollapsibleSpaceInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleBreaksCollapsibleSpaceInvalid);
			}
		}
		
		public static string ExceptionAxisScaleBreaksSpacingInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleBreaksSpacingInvalid);
			}
		}
		
		public static string ExceptionAxisScaleBreaksLineWidthInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleBreaksLineWidthInvalid);
			}
		}
		
		public static string ExceptionAxisScaleSegmentsPositionInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleSegmentsPositionInvalid);
			}
		}
		
		public static string ExceptionAxisScaleSegmentsSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleSegmentsSizeInvalid);
			}
		}
		
		public static string ExceptionAxisScaleSegmentsSpacingInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAxisScaleSegmentsSpacingInvalid);
			}
		}
		
		public static string ExceptionTickMarksIntervalIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionTickMarksIntervalIsZero);
			}
		}
		
		public static string ExceptionTickMarksIntervalIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionTickMarksIntervalIsNegative);
			}
		}
		
		public static string ExceptionScrollBarSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionScrollBarSizeInvalid);
			}
		}
		
		public static string ExceptionScrollBarZoomResetsNumberInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionScrollBarZoomResetsNumberInvalid);
			}
		}
		
		public static string ExceptionMarkerStepNegativeValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMarkerStepNegativeValue);
			}
		}
		
		public static string ExceptionTextThresholdIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionTextThresholdIsNegative);
			}
		}
		
		public static string ExceptionNamedImageObjectRequired
		{
			get
			{
				return Keys.GetString(Keys.ExceptionNamedImageObjectRequired);
			}
		}
		
		public static string ExceptionNamedImageInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionNamedImageInsertedHasWrongType);
			}
		}
		
		public static string ExceptionLegendNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendNameIsEmpty);
			}
		}
		
		public static string ExceptionLegendAddedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendAddedHasWrongType);
			}
		}
		
		public static string ExceptionLegendInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendInsertedHasWrongType);
			}
		}
		
		public static string ExceptionBackSecondaryColorIsTransparent
		{
			get
			{
				return Keys.GetString(Keys.ExceptionBackSecondaryColorIsTransparent);
			}
		}
		
		public static string ExceptionLegendAutoFitMinFontSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendAutoFitMinFontSizeInvalid);
			}
		}
		
		public static string ExceptionLegendMaximumAutoSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendMaximumAutoSizeInvalid);
			}
		}
		
		public static string ExceptionLegendColumnSpacingInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendColumnSpacingInvalid);
			}
		}
		
		public static string ExceptionLegendMarkerBorderWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendMarkerBorderWidthIsNegative);
			}
		}
		
		public static string ExceptionLegendItemAddedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendItemAddedHasWrongType);
			}
		}
		
		public static string ExceptionLegendItemInsertedHasWrongType
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendItemInsertedHasWrongType);
			}
		}
		
		public static string ExceptionLegendColumnIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendColumnIsEmpty);
			}
		}
		
		public static string ExceptionSeriesSymbolSizeIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSeriesSymbolSizeIsNegative);
			}
		}
		
		public static string ExceptionMinimumCellWidthIsWrong
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMinimumCellWidthIsWrong);
			}
		}
		
		public static string ExceptionMaximumCellWidthIsWrong
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMaximumCellWidthIsWrong);
			}
		}
		
		public static string ExceptionLegendCellNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendCellNameIsEmpty);
			}
		}
		
		public static string ExceptionLegendCellImageSizeIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendCellImageSizeIsNegative);
			}
		}
		
		public static string ExceptionLegendCellSeriesSymbolSizeIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendCellSeriesSymbolSizeIsNegative);
			}
		}
		
		public static string ExceptionLegendCellSpanIsLessThenOne
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendCellSpanIsLessThenOne);
			}
		}
		
		public static string ExceptionMarginTopIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMarginTopIsNegative);
			}
		}
		
		public static string ExceptionMarginBottomIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMarginBottomIsNegative);
			}
		}
		
		public static string ExceptionMarginLeftIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMarginLeftIsNegative);
			}
		}
		
		public static string ExceptionMarginRightIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMarginRightIsNegative);
			}
		}
		
		public static string ExceptionElementPositionArgumentOutOfRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionElementPositionArgumentOutOfRange);
			}
		}
		
		public static string ExceptionChartHeightIsNotInPixels
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartHeightIsNotInPixels);
			}
		}
		
		public static string ExceptionChartWidthIsNotInPixels
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartWidthIsNotInPixels);
			}
		}
		
		public static string ExceptionChartBorderIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartBorderIsNegative);
			}
		}
		
		public static string ExceptionChartCompressionInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartCompressionInvalid);
			}
		}
		
		public static string ExceptionChartDataPointsAlignmentFaild
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartDataPointsAlignmentFaild);
			}
		}
		
		public static string ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid);
			}
		}
		
		public static string ExceptionChartDataPointsInsertionFailedYValuesEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartDataPointsInsertionFailedYValuesEmpty);
			}
		}
		
		public static string ExceptionChartTypeHasNoInterface
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartTypeHasNoInterface);
			}
		}
		
		public static string ExceptionBorderTypeHasNoInterface
		{
			get
			{
				return Keys.GetString(Keys.ExceptionBorderTypeHasNoInterface);
			}
		}
		
		public static string ExceptionChartSerializerContentFlagUnsupported
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerContentFlagUnsupported);
			}
		}
		
		public static string ExceptionChartSerializerContentStringFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerContentStringFormatInvalid);
			}
		}
		
		public static string ExceptionChartSerializerClassNameUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerClassNameUndefined);
			}
		}
		
		public static string ExceptionChartSerializerPropertyNameUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerPropertyNameUndefined);
			}
		}
		
		public static string ExceptionChartSerializerWriterObjectInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerWriterObjectInvalid);
			}
		}
		
		public static string ExceptionChartSerializerReaderObjectInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerReaderObjectInvalid);
			}
		}
		
		public static string ExceptionChartSerializerDestinationObjectInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerDestinationObjectInvalid);
			}
		}
		
		public static string ExceptionChartSerializerSourceObjectInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerSourceObjectInvalid);
			}
		}
		
		public static string ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported);
			}
		}
		
		public static string ExceptionChartSerializerBinaryFromatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerBinaryFromatInvalid);
			}
		}
		
		public static string ExceptionChartSerializerPropertyNotFound
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartSerializerPropertyNotFound);
			}
		}
		
		public static string ExceptionDataManipulatorPointCountIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorPointCountIsZero);
			}
		}
		
		public static string ExceptionDataManipulatorIndexUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorIndexUndefined);
			}
		}
		
		public static string ExceptionDataManipulatorIndexFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorIndexFormatInvalid);
			}
		}
		
		public static string ExceptionDataManipulatorGroupedSeriesNotSorted
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorGroupedSeriesNotSorted);
			}
		}
		
		public static string ExceptionDataManipulatorGroupingFormulaUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorGroupingFormulaUndefined);
			}
		}
		
		public static string ExceptionDataManipulatorGroupingFormulaUnsupported
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorGroupingFormulaUnsupported);
			}
		}
		
		public static string ExceptionDataManipulatorGroupingInputSeriesUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorGroupingInputSeriesUndefined);
			}
		}
		
		public static string ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch);
			}
		}
		
		public static string ExceptionDataBindYValuesToString
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataBindYValuesToString);
			}
		}
		
		public static string ExceptionDataBindXValuesToString
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataBindXValuesToString);
			}
		}
		
		public static string ExceptionDataBindSeriesToString
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataBindSeriesToString);
			}
		}
		
		public static string ExceptionDataBindSeriesGroupByParameterIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataBindSeriesGroupByParameterIsEmpty);
			}
		}
		
		public static string ExceptionImageUrlIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageUrlIsEmpty);
			}
		}
		
		public static string ExceptionImageUrlInvalidFormatters
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageUrlInvalidFormatters);
			}
		}
		
		public static string ExceptionImageUrlInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageUrlInvalidFormat);
			}
		}
		
		public static string ExceptionImageUrlMissedFormatter
		{
			get
			{
				return Keys.GetString(Keys.ExceptionImageUrlMissedFormatter);
			}
		}
		
		public static string ExceptionDataManager100StackedSeriesPointsNumeberMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataManager100StackedSeriesPointsNumeberMismatch);
			}
		}
		
		public static string ExceptionFormulaModuleHasNoInterface
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaModuleHasNoInterface);
			}
		}
		
		public static string ExceptionDataPointConverterInvalidSorting
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointConverterInvalidSorting);
			}
		}
		
		public static string ExceptionDataPointConverterWrongTypes
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointConverterWrongTypes);
			}
		}
		
		public static string ExceptionDataPointInsertionXValuesQtyIsLessYValues
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointInsertionXValuesQtyIsLessYValues);
			}
		}
		
		public static string ExceptionDataPointValueNameInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointValueNameInvalid);
			}
		}
		
		public static string ExceptionDataPointValueNameYIndexOutOfRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointValueNameYIndexOutOfRange);
			}
		}
		
		public static string ExceptionDataPointValueNameYIndexIsNotPositive
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointValueNameYIndexIsNotPositive);
			}
		}
		
		public static string ExceptionDataPointInsertionNoDataSource
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointInsertionNoDataSource);
			}
		}
		
		public static string ExceptionDataPointBindingYValueNotSpecified
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointBindingYValueNotSpecified);
			}
		}
		
		public static string ExceptionDataPointInsertionYValueNotSpecified
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointInsertionYValueNotSpecified);
			}
		}
		
		public static string ExceptionAttributeUnableToDelete
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAttributeUnableToDelete);
			}
		}
		
		public static string ExceptionAttributeNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAttributeNameIsEmpty);
			}
		}
		
		public static string ExceptionAttributeInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAttributeInvalidFormat);
			}
		}
		
		public static string ExceptionAttributeDrawSideBySideInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAttributeDrawSideBySideInvalid);
			}
		}
		
		public static string ExceptionLabelBorderIsNotPositive
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLabelBorderIsNotPositive);
			}
		}
		
		public static string ExceptionBorderWidthIsNotPositive
		{
			get
			{
				return Keys.GetString(Keys.ExceptionBorderWidthIsNotPositive);
			}
		}
		
		public static string ExceptionAngleRangeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionAngleRangeInvalid);
			}
		}
		
		public static string ExceptionDataPointYValueStringFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDataPointYValueStringFormat);
			}
		}
		
		public static string ExceptionParameterFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionParameterFormatInvalid);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidAlphaValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidAlphaValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidProbabilityValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidProbabilityValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidDegreeOfFreedom
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidDegreeOfFreedom);
			}
		}
		
		public static string ExceptionStatisticalAnalysesNegativeMeanDifference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesNegativeMeanDifference);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidSeriesNumber
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidSeriesNumber);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidMeanDifference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidMeanDifference);
			}
		}
		
		public static string ExceptionStatisticalAnalysesNotEnoughDataPoints
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesNotEnoughDataPoints);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidVariance
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidVariance);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidTValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidTValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesGammaBetaNegativeParameters
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesGammaBetaNegativeParameters);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidZValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidZValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesZeroVariance
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesZeroVariance);
			}
		}
		
		public static string ExceptionStatisticalAnalysesNotEnoughInputSeries
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesNotEnoughInputSeries);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidVariableRanges
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidVariableRanges);
			}
		}
		
		public static string ExceptionStatisticalAnalysesStudentsInvalidTValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesStudentsInvalidTValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree);
			}
		}
		
		public static string ExceptionStatisticalAnalysesNormalInvalidProbabilityValue
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesNormalInvalidProbabilityValue);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidTailedParameter
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidTailedParameter);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidInputParameter
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidInputParameter);
			}
		}
		
		public static string ExceptionStatisticalAnalysesIncompleteBetaFunction
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesIncompleteBetaFunction);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidAnovaTest
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidAnovaTest);
			}
		}
		
		public static string ExceptionStatisticalAnalysesCovariance
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesCovariance);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidMedianConditions
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidMedianConditions);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidMeanConditions
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidMeanConditions);
			}
		}
		
		public static string ExceptionStatisticalAnalysesInvalidVarianceConditions
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStatisticalAnalysesInvalidVarianceConditions);
			}
		}
		
		public static string ExceptionPeriodParameterIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPeriodParameterIsNegative);
			}
		}
		
		public static string ExceptionPeriodAverageParameterIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPeriodAverageParameterIsNegative);
			}
		}
		
		public static string ExceptionPeriodShortParameterIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPeriodShortParameterIsNegative);
			}
		}
		
		public static string ExceptionPeriodLongParameterIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPeriodLongParameterIsNegative);
			}
		}
		
		public static string ExceptionIndicatorsDeviationMissing
		{
			get
			{
				return Keys.GetString(Keys.ExceptionIndicatorsDeviationMissing);
			}
		}
		
		public static string ExceptionIndicatorsLongPeriodLessThenShortPeriod
		{
			get
			{
				return Keys.GetString(Keys.ExceptionIndicatorsLongPeriodLessThenShortPeriod);
			}
		}
		
		public static string ExceptionOscillatorObjectInvalidPeriod
		{
			get
			{
				return Keys.GetString(Keys.ExceptionOscillatorObjectInvalidPeriod);
			}
		}
		
		public static string ExceptionOscillatorNegativeSignalPeriod
		{
			get
			{
				return Keys.GetString(Keys.ExceptionOscillatorNegativeSignalPeriod);
			}
		}
		
		public static string ExceptionOscillatorNegativePeriodParameter
		{
			get
			{
				return Keys.GetString(Keys.ExceptionOscillatorNegativePeriodParameter);
			}
		}
		
		public static string ExceptionVolumeIndicatorStartValueMissing
		{
			get
			{
				return Keys.GetString(Keys.ExceptionVolumeIndicatorStartValueMissing);
			}
		}
		
		public static string ExceptionPriceIndicatorsShiftParameterMissing
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsShiftParameterMissing);
			}
		}
		
		public static string ExceptionPriceIndicatorsSameYNumber
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsSameYNumber);
			}
		}
		
		public static string ExceptionPriceIndicatorsSameXYNumber
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsSameXYNumber);
			}
		}
		
		public static string ExceptionPriceIndicatorsPeriodMissing
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsPeriodMissing);
			}
		}
		
		public static string ExceptionPriceIndicatorsNotEnoughPoints
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsNotEnoughPoints);
			}
		}
		
		public static string ExceptionPriceIndicatorsFormulaRequiresOneArray
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsFormulaRequiresOneArray);
			}
		}
		
		public static string ExceptionPriceIndicatorsFormulaRequiresTwoArrays
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsFormulaRequiresTwoArrays);
			}
		}
		
		public static string ExceptionPriceIndicatorsFormulaRequiresThreeArrays
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsFormulaRequiresThreeArrays);
			}
		}
		
		public static string ExceptionPriceIndicatorsFormulaRequiresFourArrays
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPriceIndicatorsFormulaRequiresFourArrays);
			}
		}
		
		public static string ExceptionObjectReferenceIsNull
		{
			get
			{
				return Keys.GetString(Keys.ExceptionObjectReferenceIsNull);
			}
		}
		
		public static string ExceptionThreeLineBreakCanNotCobine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakCanNotCobine);
			}
		}
		
		public static string ExceptionThreeLineBreakNullReference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakNullReference);
			}
		}
		
		public static string ExceptionThreeLineBreakUsedYValueOutOfRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakUsedYValueOutOfRange);
			}
		}
		
		public static string ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid);
			}
		}
		
		public static string ExceptionThreeLineBreakUpBrickColorInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakUpBrickColorInvalid);
			}
		}
		
		public static string ExceptionThreeLineBreakUsedYValueInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakUsedYValueInvalid);
			}
		}
		
		public static string ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid);
			}
		}
		
		public static string ExceptionRenkoCanNotCobine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoCanNotCobine);
			}
		}
		
		public static string ExceptionRenkoNullReference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoNullReference);
			}
		}
		
		public static string ExceptionRenkoUsedYValueOutOfRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoUsedYValueOutOfRange);
			}
		}
		
		public static string ExceptionRenkoBoxSizeFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoBoxSizeFormatInvalid);
			}
		}
		
		public static string ExceptionRenkoUpBrickColorInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoUpBrickColorInvalid);
			}
		}
		
		public static string ExceptionRenkoUsedYValueFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionRenkoUsedYValueFormatInvalid);
			}
		}
		
		public static string ExceptionPieIntervalsInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieIntervalsInvalid);
			}
		}
		
		public static string ExceptionPieUnassignedFrontBackPoints
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieUnassignedFrontBackPoints);
			}
		}
		
		public static string ExceptionPiePointOrderInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPiePointOrderInvalid);
			}
		}
		
		public static string ExceptionPieHorizontalLineSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieHorizontalLineSizeInvalid);
			}
		}
		
		public static string ExceptionPieRadialLineSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieRadialLineSizeInvalid);
			}
		}
		
		public static string ExceptionPie3DLabelLineSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPie3DLabelLineSizeInvalid);
			}
		}
		
		public static string ExceptionPieRadiusInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieRadiusInvalid);
			}
		}
		
		public static string ExceptionPieMinimumRelativePieSizeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieMinimumRelativePieSizeInvalid);
			}
		}
		
		public static string ExceptionPieOrderOperationInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieOrderOperationInvalid);
			}
		}
		
		public static string ExceptionPieIntervalsOverlapping
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPieIntervalsOverlapping);
			}
		}
		
		public static string ExceptionDoughnutNullReference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutNullReference);
			}
		}
		
		public static string ExceptionDoughnutThresholdInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutThresholdInvalid);
			}
		}
		
		public static string ExceptionDoughnutCollectedThresholdUsePercentInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutCollectedThresholdUsePercentInvalid);
			}
		}
		
		public static string ExceptionDoughnutCollectedColorInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutCollectedColorInvalidFormat);
			}
		}
		
		public static string ExceptionDoughnutCollectedThresholdInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutCollectedThresholdInvalidFormat);
			}
		}
		
		public static string ExceptionDoughnutCollectedThresholdInvalidRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionDoughnutCollectedThresholdInvalidRange);
			}
		}
		
		public static string ExceptionPointAndFigureUpBrickColorInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureUpBrickColorInvalidFormat);
			}
		}
		
		public static string ExceptionPointAndFigureCanNotCombine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureCanNotCombine);
			}
		}
		
		public static string ExceptionPointAndFigureNullReference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureNullReference);
			}
		}
		
		public static string ExceptionPointAndFigureUsedYValueHighOutOfRange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureUsedYValueHighOutOfRange);
			}
		}
		
		public static string ExceptionPointAndFigureUsedYValueLowOutOfrange
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureUsedYValueLowOutOfrange);
			}
		}
		
		public static string ExceptionPointAndFigureReversalAmountInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureReversalAmountInvalidFormat);
			}
		}
		
		public static string ExceptionPointAndFigureUsedYValueHighInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureUsedYValueHighInvalidFormat);
			}
		}
		
		public static string ExceptionPointAndFigureUsedYValueLowInvalidFormat
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPointAndFigureUsedYValueLowInvalidFormat);
			}
		}
		
		public static string ExceptionFastPointMarkerStyleUnknown
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFastPointMarkerStyleUnknown);
			}
		}
		
		public static string ExceptionFunnelAngleRangeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFunnelAngleRangeInvalid);
			}
		}
		
		public static string ExceptionFunnelCanNotCombine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFunnelCanNotCombine);
			}
		}
		
		public static string ExceptionFunnelNeckHeightInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFunnelNeckHeightInvalid);
			}
		}
		
		public static string ExceptionFunnelNeckWidthInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFunnelNeckWidthInvalid);
			}
		}
		
		public static string ExceptionKagiNullReference
		{
			get
			{
				return Keys.GetString(Keys.ExceptionKagiNullReference);
			}
		}
		
		public static string ExceptionKagiCanNotCombine
		{
			get
			{
				return Keys.GetString(Keys.ExceptionKagiCanNotCombine);
			}
		}
		
		public static string ExceptionStackedAreaChartSeriesDataPointsNumberMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionStackedAreaChartSeriesDataPointsNumberMismatch);
			}
		}
		
		public static string Exception3DPieLabelsIndexInvalid
		{
			get
			{
				return Keys.GetString(Keys.Exception3DPieLabelsIndexInvalid);
			}
		}
		
		public static string Exception3DChartPointsXValuesUnsorted
		{
			get
			{
				return Keys.GetString(Keys.Exception3DChartPointsXValuesUnsorted);
			}
		}
		
		public static string ExceptionFunnelMinimumPointHeightAttributeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFunnelMinimumPointHeightAttributeInvalid);
			}
		}
		
		public static string ExceptionErrorBarParameterUndefined
		{
			get
			{
				return Keys.GetString(Keys.ExceptionErrorBarParameterUndefined);
			}
		}
		
		public static string Exception3DSplineY1ValueIsLessThenY2
		{
			get
			{
				return Keys.GetString(Keys.Exception3DSplineY1ValueIsLessThenY2);
			}
		}
		
		public static string ExceptionCustomAttributeDefaultValueTypeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionCustomAttributeDefaultValueTypeInvalid);
			}
		}
		
		public static string ExceptionFormulaDataItemsNumberMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaDataItemsNumberMismatch);
			}
		}
		
		public static string ExceptionFormulaDataItemsNumberMismatch2
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaDataItemsNumberMismatch2);
			}
		}
		
		public static string ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect);
			}
		}
		
		public static string ExceptionFormulaYIndexInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaYIndexInvalid);
			}
		}
		
		public static string ExceptionFormulaXValuesNotAligned
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaXValuesNotAligned);
			}
		}
		
		public static string ExceptionFormulaInputOutputSeriesMismatch
		{
			get
			{
				return Keys.GetString(Keys.ExceptionFormulaInputOutputSeriesMismatch);
			}
		}
		
		public static string ExceptionForecastingDegreeInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionForecastingDegreeInvalid);
			}
		}
		
		public static string ExceptionForecastingExponentialRegressionHasZeroYValues
		{
			get
			{
				return Keys.GetString(Keys.ExceptionForecastingExponentialRegressionHasZeroYValues);
			}
		}
		
		public static string ExceptionForecastingPowerRegressionHasZeroYValues
		{
			get
			{
				return Keys.GetString(Keys.ExceptionForecastingPowerRegressionHasZeroYValues);
			}
		}
		
		public static string ExceptionBorderWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionBorderWidthIsNegative);
			}
		}
		
		public static string ExceptionBorderWidthIsZero
		{
			get
			{
				return Keys.GetString(Keys.ExceptionBorderWidthIsZero);
			}
		}
		
		public static string ExceptionLegendBorderWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionLegendBorderWidthIsNegative);
			}
		}
		
		public static string ExceptionTitleBorderWidthIsNegative
		{
			get
			{
				return Keys.GetString(Keys.ExceptionTitleBorderWidthIsNegative);
			}
		}
		
		public static string ExceptionMatrix3DNotinitialized
		{
			get
			{
				return Keys.GetString(Keys.ExceptionMatrix3DNotinitialized);
			}
		}
		
		public static string ExceptionPaletteIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionPaletteIsEmpty);
			}
		}
		
		public static string ExceptionChartPreviewNotAvailable
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartPreviewNotAvailable);
			}
		}
		
		public static string ExceptionChartPreviewNotAvailableShort
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartPreviewNotAvailableShort);
			}
		}
		
		public static string ExceptionChartOutOfLimits
		{
			get
			{
				return Keys.GetString(Keys.ExceptionChartOutOfLimits);
			}
		}
		
		public static string ExceptionHttpHandlerCanNotSave
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerCanNotSave);
			}
		}
		
		public static string ExceptionHttpHandlerValueInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerValueInvalid);
			}
		}
		
		public static string ExceptionHttpHandlerTimeoutParameterInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerTimeoutParameterInvalid);
			}
		}
		
		public static string ExceptionHttpHandlerUrlMissing
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerUrlMissing);
			}
		}
		
		public static string ExceptionHttpHandlerUrlInvalid
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerUrlInvalid);
			}
		}
		
		public static string ExceptionHttpHandlerInvalidLocation
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerInvalidLocation);
			}
		}
		
		public static string ExceptionHttpHandlerImageNotFound
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHttpHandlerImageNotFound);
			}
		}
		
		public static string DescriptionCustomAttributeEmptyPointValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeEmptyPointValue);
			}
		}
		
		public static string DescriptionCustomAttributeIsXAxisQuantitive
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeIsXAxisQuantitive);
			}
		}
		
		public static string DescriptionCustomAttributePieDonutExploded
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePieDonutExploded);
			}
		}
		
		public static string DescriptionCustomAttributeProportionalSymbols
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeProportionalSymbols);
			}
		}
		
		public static string DescriptionCustomAttributeDrawSideBySide
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeDrawSideBySide);
			}
		}
		
		public static string DescriptionCustomAttributeShowMarkerLines
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeShowMarkerLines);
			}
		}
		
		public static string DescriptionCustomAttributeShowOpenClose
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeShowOpenClose);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotShowAverage
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotShowAverage);
			}
		}
		
		public static string DescriptionCustomAttributeBubbleUseSizeForLabel
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBubbleUseSizeForLabel);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotShowMedian
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotShowMedian);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotShowUnusualValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotShowUnusualValues);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotSeries
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotSeries);
			}
		}
		
		public static string DescriptionCustomAttributePieStartAngle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePieStartAngle);
			}
		}
		
		public static string DescriptionCustomAttributeLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeLabelStyle);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelLabelStyle);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelStyle);
			}
		}
		
		public static string DescriptionCustomAttributePolarDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePolarDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributePyramidLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidLabelStyle);
			}
		}
		
		public static string DescriptionCustomAttributeRadarDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeRadarDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributeBoxSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxSize);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedColor);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedLabel
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedLabel);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedLegendText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedLegendText);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedLegendDefaultText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedLegendDefaultText);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedLabelDefaultText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedLabelDefaultText);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedToolTip
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedToolTip);
			}
		}
		
		public static string DescriptionCustomAttributePyramidValueType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidValueType);
			}
		}
		
		public static string DescriptionCustomAttribute_3DLabelLineSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttribute_3DLabelLineSize);
			}
		}
		
		public static string DescriptionCustomAttributeFunnel3DRotationAngle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnel3DRotationAngle);
			}
		}
		
		public static string DescriptionCustomAttributePyramid3DRotationAngle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramid3DRotationAngle);
			}
		}
		
		public static string DescriptionCustomAttributePixelPointDepth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePixelPointDepth);
			}
		}
		
		public static string DescriptionCustomAttributePixelPointGapDepth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePixelPointGapDepth);
			}
		}
		
		public static string DescriptionCustomAttributeErrorBarCenterMarkerStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeErrorBarCenterMarkerStyle);
			}
		}
		
		public static string DescriptionCustomAttributePointFigureBoxSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePointFigureBoxSize);
			}
		}
		
		public static string DescriptionCustomAttributeBubbleScaleMax
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBubbleScaleMax);
			}
		}
		
		public static string DescriptionCustomAttributeBubbleScaleMin
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBubbleScaleMin);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedThreshold
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedThreshold);
			}
		}
		
		public static string DescriptionCustomAttributePieLineColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePieLineColor);
			}
		}
		
		public static string DescriptionCustomAttributeCalloutLineColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCalloutLineColor);
			}
		}
		
		public static string DescriptionCustomAttributePieLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePieLabelStyle);
			}
		}
		
		public static string DescriptionCustomAttributeFunnel3DDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnel3DDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributePyramid3DDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramid3DDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributeDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributePieDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePieDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedSliceExploded
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedSliceExploded);
			}
		}
		
		public static string DescriptionCustomAttributeCollectedThresholdUsePercent
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCollectedThresholdUsePercent);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelNeckHeight
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelNeckHeight);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelNeckWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelNeckWidth);
			}
		}
		
		public static string DescriptionCustomAttributePyramidPointGap
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidPointGap);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelPointGap
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelPointGap);
			}
		}
		
		public static string DescriptionCustomAttributeLabelsHorizontalLineSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeLabelsHorizontalLineSize);
			}
		}
		
		public static string DescriptionCustomAttributeDoughnutRadius
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeDoughnutRadius);
			}
		}
		
		public static string DescriptionCustomAttributePolarCircularLabelsStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePolarCircularLabelsStyle);
			}
		}
		
		public static string DescriptionCustomAttributeRadarCircularLabelsStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeRadarCircularLabelsStyle);
			}
		}
		
		public static string DescriptionCustomAttributeOpenCloseStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeOpenCloseStyle);
			}
		}
		
		public static string DescriptionCustomAttributeBubbleMaxSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBubbleMaxSize);
			}
		}
		
		public static string DescriptionCustomAttributeMaxPixelPointWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeMaxPixelPointWidth);
			}
		}
		
		public static string DescriptionCustomAttributePyramidMinPointHeight
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidMinPointHeight);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelMinPointHeight
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelMinPointHeight);
			}
		}
		
		public static string DescriptionCustomAttributeMinimumRelativePieSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeMinimumRelativePieSize);
			}
		}
		
		public static string DescriptionCustomAttributeMinPixelPointWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeMinPixelPointWidth);
			}
		}
		
		public static string DescriptionCustomAttributeErrorBarSeries
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeErrorBarSeries);
			}
		}
		
		public static string DescriptionCustomAttributeNumberOfLinesInBreak
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeNumberOfLinesInBreak);
			}
		}
		
		public static string DescriptionCustomAttributePyramidOutsideLabelPlacement
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidOutsideLabelPlacement);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelOutsideLabelPlacement
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelOutsideLabelPlacement);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotPercentile
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotPercentile);
			}
		}
		
		public static string DescriptionCustomAttributeBoxPlotWhiskerPercentile
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBoxPlotWhiskerPercentile);
			}
		}
		
		public static string DescriptionCustomAttributeBarLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBarLabelStyle);
			}
		}
		
		public static string DescriptionCustomAttributeLabelsRadialLineSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeLabelsRadialLineSize);
			}
		}
		
		public static string DescriptionCustomAttributePointWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePointWidth);
			}
		}
		
		public static string DescriptionCustomAttributeReversalAmount
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeReversalAmount);
			}
		}
		
		public static string DescriptionCustomAttributePolarAreaDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePolarAreaDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributeRadarAreaDrawingStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeRadarAreaDrawingStyle);
			}
		}
		
		public static string DescriptionCustomAttributeStackedGroupName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeStackedGroupName);
			}
		}
		
		public static string DescriptionCustomAttributeLineTension
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeLineTension);
			}
		}
		
		public static string DescriptionCustomAttributeCandlePriceUpColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeCandlePriceUpColor);
			}
		}
		
		public static string DescriptionCustomAttributeBarsPriceUpColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeBarsPriceUpColor);
			}
		}
		
		public static string DescriptionCustomAttributePriceDownColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePriceDownColor);
			}
		}
		
		public static string DescriptionCustomAttributeUsedYValueHigh
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeUsedYValueHigh);
			}
		}
		
		public static string DescriptionCustomAttributeUsedYValueLow
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeUsedYValueLow);
			}
		}
		
		public static string DescriptionCustomAttributeRenkoUsedYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeRenkoUsedYValue);
			}
		}
		
		public static string DescriptionCustomAttributeThreeLineBreakUsedYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeThreeLineBreakUsedYValue);
			}
		}
		
		public static string DescriptionCustomAttributePyramidInsideLabelAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePyramidInsideLabelAlignment);
			}
		}
		
		public static string DescriptionCustomAttributeFunnelInsideLabelAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeFunnelInsideLabelAlignment);
			}
		}
		
		public static string DescriptionCustomAttributeErrorBarStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeErrorBarStyle);
			}
		}
		
		public static string DescriptionCustomAttributePixelPointWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributePixelPointWidth);
			}
		}
		
		public static string DescriptionCustomAttributeLabelValueType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeLabelValueType);
			}
		}
		
		public static string DescriptionCustomAttributeUsedYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeUsedYValue);
			}
		}
		
		public static string DescriptionCustomAttributeKagiReversalAmount
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeKagiReversalAmount);
			}
		}
		
		public static string DescriptionCustomAttributeErrorBarType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionCustomAttributeErrorBarType);
			}
		}
		
		public static string DescriptionAttributeChart_ImageStorageMode
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_ImageStorageMode);
			}
		}
		
		public static string DescriptionKeyWordAverageYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordAverageYValues);
			}
		}
		
		public static string DescriptionKeyWordAxisLabelDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordAxisLabelDataPoint);
			}
		}
		
		public static string DescriptionKeyWordIndexDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordIndexDataPoint);
			}
		}
		
		public static string DescriptionKeyWordLabelDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordLabelDataPoint);
			}
		}
		
		public static string DescriptionKeyWordYValuePercentTotal
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordYValuePercentTotal);
			}
		}
		
		public static string DescriptionKeyWordIndexDataPoint2
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordIndexDataPoint2);
			}
		}
		
		public static string DescriptionKeyWordLegendText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordLegendText);
			}
		}
		
		public static string DescriptionKeyWordMaximumYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordMaximumYValues);
			}
		}
		
		public static string DescriptionKeyWordMinimumYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordMinimumYValues);
			}
		}
		
		public static string DescriptionKeyWordSeriesName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordSeriesName);
			}
		}
		
		public static string DescriptionKeyWordTotalYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordTotalYValues);
			}
		}
		
		public static string DescriptionKeyWordXValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordXValue);
			}
		}
		
		public static string DescriptionKeyWordFirstPointYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordFirstPointYValue);
			}
		}
		
		public static string DescriptionKeyWordLastPointYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordLastPointYValue);
			}
		}
		
		public static string DescriptionKeyWordYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordYValue);
			}
		}
		
		public static string DescriptionKeyWordNameIndexDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameIndexDataPoint);
			}
		}
		
		public static string DescriptionKeyWordNameXValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameXValue);
			}
		}
		
		public static string DescriptionKeyWordNameYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameYValue);
			}
		}
		
		public static string DescriptionKeyWordNameTotalYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameTotalYValues);
			}
		}
		
		public static string DescriptionKeyWordNameYValuePercentTotal
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameYValuePercentTotal);
			}
		}
		
		public static string DescriptionKeyWordNameIndexTheDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameIndexTheDataPoint);
			}
		}
		
		public static string DescriptionKeyWordNameLabelDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameLabelDataPoint);
			}
		}
		
		public static string DescriptionKeyWordNameAxisLabelDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameAxisLabelDataPoint);
			}
		}
		
		public static string DescriptionKeyWordNameLegendText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameLegendText);
			}
		}
		
		public static string DescriptionKeyWordNameSeriesName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameSeriesName);
			}
		}
		
		public static string DescriptionKeyWordNameAverageYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameAverageYValues);
			}
		}
		
		public static string DescriptionKeyWordNameMaximumYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameMaximumYValues);
			}
		}
		
		public static string DescriptionKeyWordNameMinimumYValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameMinimumYValues);
			}
		}
		
		public static string DescriptionKeyWordNameLastPointYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameLastPointYValue);
			}
		}
		
		public static string DescriptionKeyWordNameFirstPointYValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionKeyWordNameFirstPointYValue);
			}
		}
		
		public static string DescriptionNumberFormatTypeCurrency
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeCurrency);
			}
		}
		
		public static string DescriptionNumberFormatTypeDecimal
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeDecimal);
			}
		}
		
		public static string DescriptionNumberFormatTypeScientific
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeScientific);
			}
		}
		
		public static string DescriptionNumberFormatTypeFixedPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeFixedPoint);
			}
		}
		
		public static string DescriptionNumberFormatTypeGeneral
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeGeneral);
			}
		}
		
		public static string DescriptionNumberFormatTypeNumber
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypeNumber);
			}
		}
		
		public static string DescriptionNumberFormatTypePercent
		{
			get
			{
				return Keys.GetString(Keys.DescriptionNumberFormatTypePercent);
			}
		}
		
		public static string DescriptionTypeNone
		{
			get
			{
				return Keys.GetString(Keys.DescriptionTypeNone);
			}
		}
		
		public static string DescriptionTypeCustom
		{
			get
			{
				return Keys.GetString(Keys.DescriptionTypeCustom);
			}
		}
		
		public static string DescriptionTypeEmpty
		{
			get
			{
				return Keys.GetString(Keys.DescriptionTypeEmpty);
			}
		}
		
		public static string DescriptionTypePoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionTypePoint);
			}
		}
		
		public static string LabelKeyFormat
		{
			get
			{
				return Keys.GetString(Keys.LabelKeyFormat);
			}
		}
		
		public static string LabelKeyCustomFormat
		{
			get
			{
				return Keys.GetString(Keys.LabelKeyCustomFormat);
			}
		}
		
		public static string LabelStringWithKeywords
		{
			get
			{
				return Keys.GetString(Keys.LabelStringWithKeywords);
			}
		}
		
		public static string LabelEditKeyword
		{
			get
			{
				return Keys.GetString(Keys.LabelEditKeyword);
			}
		}
		
		public static string LabelInsertNewKeyword
		{
			get
			{
				return Keys.GetString(Keys.LabelInsertNewKeyword);
			}
		}
		
		public static string LabelStringKeywordsEditor
		{
			get
			{
				return Keys.GetString(Keys.LabelStringKeywordsEditor);
			}
		}
		
		public static string LabelKeywordEditor
		{
			get
			{
				return Keys.GetString(Keys.LabelKeywordEditor);
			}
		}
		
		public static string LabelDescription
		{
			get
			{
				return Keys.GetString(Keys.LabelDescription);
			}
		}
		
		public static string LabelFormatKeySample
		{
			get
			{
				return Keys.GetString(Keys.LabelFormatKeySample);
			}
		}
		
		public static string LabelKeyYValueIndex
		{
			get
			{
				return Keys.GetString(Keys.LabelKeyYValueIndex);
			}
		}
		
		public static string LabelKeyPrecision
		{
			get
			{
				return Keys.GetString(Keys.LabelKeyPrecision);
			}
		}
		
		public static string LabelKeyKeywords
		{
			get
			{
				return Keys.GetString(Keys.LabelKeyKeywords);
			}
		}
		
		public static string LabelValueFormatting
		{
			get
			{
				return Keys.GetString(Keys.LabelValueFormatting);
			}
		}
		
		public static string LabelButtonOk
		{
			get
			{
				return Keys.GetString(Keys.LabelButtonOk);
			}
		}
		
		public static string LabelButtonCancel
		{
			get
			{
				return Keys.GetString(Keys.LabelButtonCancel);
			}
		}
		
		public static string DescriptionToolTipCustomFormatCharacters
		{
			get
			{
				return Keys.GetString(Keys.DescriptionToolTipCustomFormatCharacters);
			}
		}
		
		public static string DesciptionCustomLabelEditorTitle
		{
			get
			{
				return Keys.GetString(Keys.DesciptionCustomLabelEditorTitle);
			}
		}
		
		public static string DesciptionCustomLabelFormatInvalid
		{
			get
			{
				return Keys.GetString(Keys.DesciptionCustomLabelFormatInvalid);
			}
		}
		
		public static string LabelStatisticalSumOfSquaresBetweenGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalSumOfSquaresBetweenGroups);
			}
		}
		
		public static string LabelStatisticalSumOfSquaresWithinGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalSumOfSquaresWithinGroups);
			}
		}
		
		public static string LabelStatisticalSumOfSquaresTotal
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalSumOfSquaresTotal);
			}
		}
		
		public static string LabelStatisticalDegreesOfFreedomBetweenGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalDegreesOfFreedomBetweenGroups);
			}
		}
		
		public static string LabelStatisticalDegreesOfFreedomWithinGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalDegreesOfFreedomWithinGroups);
			}
		}
		
		public static string LabelStatisticalDegreesOfFreedomTotal
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalDegreesOfFreedomTotal);
			}
		}
		
		public static string LabelStatisticalMeanSquareVarianceBetweenGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalMeanSquareVarianceBetweenGroups);
			}
		}
		
		public static string LabelStatisticalMeanSquareVarianceWithinGroups
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalMeanSquareVarianceWithinGroups);
			}
		}
		
		public static string LabelStatisticalFRatio
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalFRatio);
			}
		}
		
		public static string LabelStatisticalFCriteria
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalFCriteria);
			}
		}
		
		public static string LabelStatisticalCorrelation
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalCorrelation);
			}
		}
		
		public static string LabelStatisticalCovariance
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalCovariance);
			}
		}
		
		public static string LabelStatisticalProbability
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalProbability);
			}
		}
		
		public static string LabelStatisticalAverage
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalAverage);
			}
		}
		
		public static string LabelStatisticalVariance
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalVariance);
			}
		}
		
		public static string LabelStatisticalMedian
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalMedian);
			}
		}
		
		public static string LabelStatisticalBetaFunction
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalBetaFunction);
			}
		}
		
		public static string LabelStatisticalGammaFunction
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalGammaFunction);
			}
		}
		
		public static string LabelStatisticalTheFirstGroupMean
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalTheFirstGroupMean);
			}
		}
		
		public static string LabelStatisticalTheSecondGroupMean
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalTheSecondGroupMean);
			}
		}
		
		public static string LabelStatisticalTheFirstGroupVariance
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalTheFirstGroupVariance);
			}
		}
		
		public static string LabelStatisticalTheSecondGroupVariance
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalTheSecondGroupVariance);
			}
		}
		
		public static string LabelStatisticalFValue
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalFValue);
			}
		}
		
		public static string LabelStatisticalFCriticalValueOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalFCriticalValueOneTail);
			}
		}
		
		public static string LabelStatisticalZValue
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalZValue);
			}
		}
		
		public static string LabelStatisticalZCriticalValueOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalZCriticalValueOneTail);
			}
		}
		
		public static string LabelStatisticalZCriticalValueTwoTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalZCriticalValueTwoTail);
			}
		}
		
		public static string LabelStatisticalPZLessEqualSmallZOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalPZLessEqualSmallZOneTail);
			}
		}
		
		public static string LabelStatisticalPZLessEqualSmallZTwoTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalPZLessEqualSmallZTwoTail);
			}
		}
		
		public static string LabelStatisticalPFLessEqualSmallFOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalPFLessEqualSmallFOneTail);
			}
		}
		
		public static string LabelStatisticalTValue
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalTValue);
			}
		}
		
		public static string LabelStatisticalDegreeOfFreedom
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalDegreeOfFreedom);
			}
		}
		
		public static string LabelStatisticalPTLessEqualSmallTOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalPTLessEqualSmallTOneTail);
			}
		}
		
		public static string LabelStatisticalSmallTCrititcalOneTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalSmallTCrititcalOneTail);
			}
		}
		
		public static string LabelStatisticalPTLessEqualSmallTTwoTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalPTLessEqualSmallTTwoTail);
			}
		}
		
		public static string LabelStatisticalSmallTCrititcalTwoTail
		{
			get
			{
				return Keys.GetString(Keys.LabelStatisticalSmallTCrititcalTwoTail);
			}
		}
		
		public static string MessagePrecisionInvalid
		{
			get
			{
				return Keys.GetString(Keys.MessagePrecisionInvalid);
			}
		}
		
		public static string MessageChangingChartAreaPositionProperty
		{
			get
			{
				return Keys.GetString(Keys.MessageChangingChartAreaPositionProperty);
			}
		}
		
		public static string MessageChangingChartAreaPositionConfirmAutomatic
		{
			get
			{
				return Keys.GetString(Keys.MessageChangingChartAreaPositionConfirmAutomatic);
			}
		}
		
		public static string MessageChangingChartAreaPositionConfirmCustom
		{
			get
			{
				return Keys.GetString(Keys.MessageChangingChartAreaPositionConfirmCustom);
			}
		}
		
		public static string MessageChartException
		{
			get
			{
				return Keys.GetString(Keys.MessageChartException);
			}
		}
		
		public static string MessageSite
		{
			get
			{
				return Keys.GetString(Keys.MessageSite);
			}
		}
		
		public static string MessageStackTrace
		{
			get
			{
				return Keys.GetString(Keys.MessageStackTrace);
			}
		}
		
		public static string MessageChartTitle
		{
			get
			{
				return Keys.GetString(Keys.MessageChartTitle);
			}
		}
		
		public static string TitleAxisX
		{
			get
			{
				return Keys.GetString(Keys.TitleAxisX);
			}
		}
		
		public static string TitleAxisY
		{
			get
			{
				return Keys.GetString(Keys.TitleAxisY);
			}
		}
		
		public static string TitleAxisX2
		{
			get
			{
				return Keys.GetString(Keys.TitleAxisX2);
			}
		}
		
		public static string TitleAxisY2
		{
			get
			{
				return Keys.GetString(Keys.TitleAxisY2);
			}
		}
		
		public static string FormulaNamePriceIndicators
		{
			get
			{
				return Keys.GetString(Keys.FormulaNamePriceIndicators);
			}
		}
		
		public static string FormulaNameGeneralTechnicalIndicators
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameGeneralTechnicalIndicators);
			}
		}
		
		public static string FormulaNameTechnicalVolumeIndicators
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameTechnicalVolumeIndicators);
			}
		}
		
		public static string FormulaNameOscillator
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameOscillator);
			}
		}
		
		public static string FormulaNameGeneralFormulas
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameGeneralFormulas);
			}
		}
		
		public static string FormulaNameTimeSeriesAndForecasting
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameTimeSeriesAndForecasting);
			}
		}
		
		public static string FormulaNameStatisticalAnalysis
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameStatisticalAnalysis);
			}
		}
		
		public static string FormulaNameVolumeIndicators
		{
			get
			{
				return Keys.GetString(Keys.FormulaNameVolumeIndicators);
			}
		}
		
		public static string LabelTextRow
		{
			get
			{
				return Keys.GetString(Keys.LabelTextRow);
			}
		}
		
		public static string DescriptionAttributeBackImage
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackImage);
			}
		}
		
		public static string DescriptionAttributeMarkerImage
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerImage);
			}
		}
		
		public static string DescriptionAttributeAnnotationBaseY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationBaseY);
			}
		}
		
		public static string DescriptionAttributeAnnotationWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationWidth);
			}
		}
		
		public static string DescriptionAttributeAnnotationHeight
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationHeight);
			}
		}
		
		public static string DescriptionAttributeAnnotationClipToChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationClipToChartArea);
			}
		}
		
		public static string DescriptionAttributeAnnotationBaseX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationBaseX);
			}
		}
		
		public static string DescriptionAttributeChartImageType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartImageType);
			}
		}
		
		public static string DescriptionAttributeMultiValueSeparator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMultiValueSeparator);
			}
		}
		
		public static string DescriptionAttributeDataSeriesGroupID
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataSeriesGroupID);
			}
		}
		
		public static string DescriptionAttributeSuppressCodeExceptions
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSuppressCodeExceptions);
			}
		}
		
		public static string DescriptionAttributeNoDataMessage
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeNoDataMessage);
			}
		}
		
		public static string DescriptionAttributeReverseSeriesOrder
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeReverseSeriesOrder);
			}
		}
		
		public static string DescriptionAttributeUserDefined
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeUserDefined);
			}
		}
		
		public static string DescriptionAttributeChartEvent_GetToolTipText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_GetToolTipText);
			}
		}
		
		public static string DescriptionAttributeArrowAnnotation_ArrowSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArrowAnnotation_ArrowSize);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_Content
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_Content);
			}
		}
		
		public static string DescriptionAttributeLegend_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Enabled);
			}
		}
		
		public static string DescriptionAttributeEnabled5
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeEnabled5);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_Enabled);
			}
		}
		
		public static string DescriptionAttributeEnabled7
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeEnabled7);
			}
		}
		
		public static string DescriptionAttributeLabel_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_Enabled);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Enabled);
			}
		}
		
		public static string DescriptionAttributeAxisScrollBar_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScrollBar_Enabled);
			}
		}
		
		public static string DescriptionAttributeEnabled13
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeEnabled13);
			}
		}
		
		public static string DescriptionAttributeSeries_Enabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Enabled);
			}
		}
		
		public static string DescriptionAttributeLegendCell_CellSpan
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_CellSpan);
			}
		}
		
		public static string DescriptionAttributeCursor_SelectionColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_SelectionColor);
			}
		}
		
		public static string DescriptionAttributeInterlaced
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeInterlaced);
			}
		}
		
		public static string DescriptionAttributeMapArea_Coordinates
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapArea_Coordinates);
			}
		}
		
		public static string DescriptionAttributeChartEvent_PostPaint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_PostPaint);
			}
		}
		
		public static string DescriptionAttributeStripLine_Title
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_Title);
			}
		}
		
		public static string DescriptionAttributeLegend_Title
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Title);
			}
		}
		
		public static string DescriptionAttributeTitle5
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle5);
			}
		}
		
		public static string DescriptionAttributeTitle6
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle6);
			}
		}
		
		public static string DescriptionAttributeAnnotation_Annotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotation_Annotation);
			}
		}
		
		public static string DescriptionAttributeTitleFont
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitleFont);
			}
		}
		
		public static string DescriptionAttributeChartArea_Axes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_Axes);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_NonSerializableContent
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_NonSerializableContent);
			}
		}
		
		public static string DescriptionAttributeShadowOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeShadowOffset);
			}
		}
		
		public static string DescriptionAttributeCalloutLineAnchorCap
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutLineAnchorCap);
			}
		}
		
		public static string DescriptionAttributeMapAreaAttributes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapAreaAttributes);
			}
		}
		
		public static string DescriptionAttributeSubAxis_SubAxis
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxis_SubAxis);
			}
		}
		
		public static string DescriptionAttributeMajorGrid
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMajorGrid);
			}
		}
		
		public static string DescriptionAttributeElementPosition_Y
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_Y);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPoint_Y
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPoint_Y);
			}
		}
		
		public static string DescriptionAttributeToolTipEventArgs_Y
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeToolTipEventArgs_Y);
			}
		}
		
		public static string DescriptionAttributePoint3D_Y
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePoint3D_Y);
			}
		}
		
		public static string DescriptionAttributePoint3D_Z
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePoint3D_Z);
			}
		}
		
		public static string DescriptionAttributeMajorTickMark
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMajorTickMark);
			}
		}
		
		public static string DescriptionAttributeDrawInfinitive
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDrawInfinitive);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_MinSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_MinSize);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection);
			}
		}
		
		public static string DescriptionAttributeMarkerOverlapping
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerOverlapping);
			}
		}
		
		public static string DescriptionAttributeChart_OnCustomizeLegend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_OnCustomizeLegend);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_HeaderTextAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_HeaderTextAlignment);
			}
		}
		
		public static string DescriptionAttributeScrollBarEventArgs_MousePositionY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScrollBarEventArgs_MousePositionY);
			}
		}
		
		public static string DescriptionAttributeNamedImage_NamedImage
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeNamedImage_NamedImage);
			}
		}
		
		public static string DescriptionAttributeScrollBar
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScrollBar);
			}
		}
		
		public static string DescriptionAttributeMapArea_MapArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapArea_MapArea);
			}
		}
		
		public static string DescriptionAttributeLegend_CustomItems
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_CustomItems);
			}
		}
		
		public static string DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle);
			}
		}
		
		public static string DescriptionAttributePolylineAnnotation_PolylineAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePolylineAnnotation_PolylineAnnotation);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AxisViewChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AxisViewChanged);
			}
		}
		
		public static string DescriptionAttributeCrossing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCrossing);
			}
		}
		
		public static string DescriptionAttributeMargins_Top
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargins_Top);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_HeaderFont
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_HeaderFont);
			}
		}
		
		public static string DescriptionAttributeLegend_InterlacedRows
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_InterlacedRows);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_MinSizeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_MinSizeType);
			}
		}
		
		public static string DescriptionAttributeLineWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLineWidth);
			}
		}
		
		public static string DescriptionAttributeDataPoint_XValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPoint_XValue);
			}
		}
		
		public static string DescriptionAttributeChartArea_AxisY2
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AxisY2);
			}
		}
		
		public static string DescriptionAttributeChartArea_AxisX2
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AxisX2);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AnnotationPositionChanging
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AnnotationPositionChanging);
			}
		}
		
		public static string DescriptionAttributeStripLine_StripLine
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_StripLine);
			}
		}
		
		public static string DescriptionAttributeBorderColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderColor);
			}
		}
		
		public static string DescriptionAttributeMarkerBorderColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerBorderColor);
			}
		}
		
		public static string DescriptionAttributeLegendText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendText);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_LabelMark
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_LabelMark);
			}
		}
		
		public static string DescriptionAttributeTextAntiAliasingQuality
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextAntiAliasingQuality);
			}
		}
		
		public static string DescriptionAttributeAllowMoving
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowMoving);
			}
		}
		
		public static string DescriptionAttributeCalloutAnnotation_CalloutAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutAnnotation_CalloutAnnotation);
			}
		}
		
		public static string DescriptionAttributeStripLine_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_Name);
			}
		}
		
		public static string DescriptionAttributeTitle_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Name);
			}
		}
		
		public static string DescriptionAttributeName4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeName4);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPoint_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPoint_Name);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Name);
			}
		}
		
		public static string DescriptionAttributeMapArea_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapArea_Name);
			}
		}
		
		public static string DescriptionAttributeSeries_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Name);
			}
		}
		
		public static string DescriptionAttributeAxis_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxis_Name);
			}
		}
		
		public static string DescriptionAttributeNamedImage_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeNamedImage_Name);
			}
		}
		
		public static string DescriptionAttributeSubAxis_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxis_Name);
			}
		}
		
		public static string DescriptionAttributeDataPoint_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPoint_Name);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_Name);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Name);
			}
		}
		
		public static string DescriptionAttributeLegend_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Name);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_Name);
			}
		}
		
		public static string DescriptionAttributeChartArea_Name
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_Name);
			}
		}
		
		public static string DescriptionAttributeCursor_Cursor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_Cursor);
			}
		}
		
		public static string DescriptionAttributeAnchorX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorX);
			}
		}
		
		public static string DescriptionAttributeToolTip
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeToolTip);
			}
		}
		
		public static string DescriptionAttributeLegend_TableStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TableStyle);
			}
		}
		
		public static string DescriptionAttributeDataPoint_Empty
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPoint_Empty);
			}
		}
		
		public static string DescriptionAttributeScrollBarEventArgs_Handled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScrollBarEventArgs_Handled);
			}
		}
		
		public static string DescriptionAttributeAxisLabel
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisLabel);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_AllowPathEditing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_AllowPathEditing);
			}
		}
		
		public static string DescriptionAttributeAllowPathEditing3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowPathEditing3);
			}
		}
		
		public static string DescriptionAttributeChart_OnPaint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_OnPaint);
			}
		}
		
		public static string DescriptionAttributeCalloutAnnotation_AnchorOffsetX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutAnnotation_AnchorOffsetX);
			}
		}
		
		public static string DescriptionAttributeAnchorOffsetX3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorOffsetX3);
			}
		}
		
		public static string DescriptionAttributeCalloutAnnotation_AnchorOffsetY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutAnnotation_AnchorOffsetY);
			}
		}
		
		public static string DescriptionAttributeAnchorOffsetY3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorOffsetY3);
			}
		}
		
		public static string DescriptionAttributeChartEvent_CursorPositionChanging
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_CursorPositionChanging);
			}
		}
		
		public static string DescriptionAttributeScrollBarEventArgs_ButtonType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScrollBarEventArgs_ButtonType);
			}
		}
		
		public static string DescriptionAttributeLabelsAutoFitStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelsAutoFitStyle);
			}
		}
		
		public static string DescriptionAttributeLabelStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelStyle);
			}
		}
		
		public static string DescriptionAttributeStripLine_IntervalOffsetType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_IntervalOffsetType);
			}
		}
		
		public static string DescriptionAttributeLabel_IntervalOffsetType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_IntervalOffsetType);
			}
		}
		
		public static string DescriptionAttributeIntervalOffsetType4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalOffsetType4);
			}
		}
		
		public static string DescriptionAttributeCursor_IntervalOffsetType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_IntervalOffsetType);
			}
		}
		
		public static string DescriptionAttributeIntervalOffsetType6
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalOffsetType6);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_IntervalOffsetType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_IntervalOffsetType);
			}
		}
		
		public static string DescriptionAttributeReverse
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeReverse);
			}
		}
		
		public static string DescriptionAttributeSeries_Points
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Points);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_SkinStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_SkinStyle);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Clustered
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Clustered);
			}
		}
		
		public static string DescriptionAttributeAnchorDataPointName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorDataPointName);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AnnotationPositionChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AnnotationPositionChanged);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_PointGapDepth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_PointGapDepth);
			}
		}
		
		public static string DescriptionAttributeLegend_Reversed
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Reversed);
			}
		}
		
		public static string DescriptionAttributeAnnotation_AnnotationType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotation_AnnotationType);
			}
		}
		
		public static string DescriptionAttributeTextAnnotation_AnnotationType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextAnnotation_AnnotationType);
			}
		}
		
		public static string DescriptionAttributeAnnotationType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationType);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_FrameBorderDashStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_FrameBorderDashStyle);
			}
		}
		
		public static string DescriptionAttributeLegend_HeaderSeparatorColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_HeaderSeparatorColor);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AnnotationSelectionChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AnnotationSelectionChanged);
			}
		}
		
		public static string DescriptionAttributeFont
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeFont);
			}
		}
		
		public static string DescriptionAttributeLegend_Font
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Font);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_Font
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_Font);
			}
		}
		
		public static string DescriptionAttributeLabel_Font
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_Font);
			}
		}
		
		public static string DescriptionAttributeTitle_Font
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Font);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Font
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Font);
			}
		}
		
		public static string DescriptionAttributeSeries_ValueMemberX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_ValueMemberX);
			}
		}
		
		public static string DescriptionAttributeArrows
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArrows);
			}
		}
		
		public static string DescriptionAttributeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeType);
			}
		}
		
		public static string DescriptionAttributeSeries_Type
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Type);
			}
		}
		
		public static string DescriptionAttributeBorder3DAnnotation_Border3DAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorder3DAnnotation_Border3DAnnotation);
			}
		}
		
		public static string DescriptionAttributeChart_Images
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Images);
			}
		}
		
		public static string DescriptionAttributeLegendToolTip
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendToolTip);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_CustomLabel
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_CustomLabel);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AnnotationPlaced
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AnnotationPlaced);
			}
		}
		
		public static string DescriptionAttributeBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackColor);
			}
		}
		
		public static string DescriptionAttributeCalloutBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutBackColor);
			}
		}
		
		public static string DescriptionAttributeFrameBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeFrameBackColor);
			}
		}
		
		public static string DescriptionAttributeTitleBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitleBackColor);
			}
		}
		
		public static string DescriptionAttributeLabelBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelBackColor);
			}
		}
		
		public static string DescriptionAttributeHeaderBackColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeHeaderBackColor);
			}
		}
		
		public static string DescriptionAttributeLabel_ShowEndLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_ShowEndLabels);
			}
		}
		
		public static string DescriptionAttributeLabelToolTip
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelToolTip);
			}
		}
		
		public static string DescriptionAttributeSeries_MarkerStep
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_MarkerStep);
			}
		}
		
		public static string DescriptionAttributeTickMark_Style
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTickMark_Style);
			}
		}
		
		public static string DescriptionAttribute_TextOrientation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttribute_TextOrientation);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Style
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Style);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Rotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Rotation);
			}
		}
		
		public static string DescriptionAttributeSizeAlwaysRelative
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSizeAlwaysRelative);
			}
		}
		
		public static string DescriptionAttributeSizeAlwaysRelative3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSizeAlwaysRelative3);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_SizeAlwaysRelative
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_SizeAlwaysRelative);
			}
		}
		
		public static string DescriptionAttributeChart_BorderlineWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_BorderlineWidth);
			}
		}
		
		public static string DescriptionAttributeSeries_XValueIndexed
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_XValueIndexed);
			}
		}
		
		public static string DescriptionAttributeEllipseAnnotation_EllipseAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeEllipseAnnotation_EllipseAnnotation);
			}
		}
		
		public static string DescriptionAttributeAnchorAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorAlignment);
			}
		}
		
		public static string DescriptionAttributeWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeWidth);
			}
		}
		
		public static string DescriptionAttributeElementPosition_Width
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_Width);
			}
		}
		
		public static string DescriptionAttributeAxisXName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisXName);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Inclination
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Inclination);
			}
		}
		
		public static string DescriptionAttributeLegendCollection_LegendCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCollection_LegendCollection);
			}
		}
		
		public static string DescriptionAttributeAxisYName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisYName);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_Spacing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_Spacing);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_Spacing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_Spacing);
			}
		}
		
		public static string DescriptionAttributeSelected
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSelected);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_Selected
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_Selected);
			}
		}
		
		public static string DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation);
			}
		}
		
		public static string DescriptionAttributeLabelsAutoFitMaxFontSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelsAutoFitMaxFontSize);
			}
		}
		
		public static string DescriptionAttributeFreeDrawPlacement
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeFreeDrawPlacement);
			}
		}
		
		public static string DescriptionAttributeStripLinesCollection_StripLinesCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLinesCollection_StripLinesCollection);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_IsZoomed
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_IsZoomed);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Perspective
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Perspective);
			}
		}
		
		public static string DescriptionAttributeChart_OnCustomize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_OnCustomize);
			}
		}
		
		public static string DescriptionAttributeLabel
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel);
			}
		}
		
		public static string DescriptionAttributeLabel_Label
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_Label);
			}
		}
		
		public static string DescriptionAttributeStartCap3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStartCap3);
			}
		}
		
		public static string DescriptionAttributeFontColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeFontColor);
			}
		}
		
		public static string DescriptionAttributeLegendFontColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendFontColor);
			}
		}
		
		public static string DescriptionAttributeLabel_OffsetLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_OffsetLabels);
			}
		}
		
		public static string DescriptionAttributeMargin
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargin);
			}
		}
		
		public static string DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs);
			}
		}
		
		public static string DescriptionAttributeCursorEventArgs_NewSelectionStart
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursorEventArgs_NewSelectionStart);
			}
		}
		
		public static string DescriptionAttributeSeries_XSubAxisName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_XSubAxisName);
			}
		}
		
		public static string DescriptionAttributeHideOverlapped
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeHideOverlapped);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_MaximumWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_MaximumWidth);
			}
		}
		
		public static string DescriptionAttributeLegend_InsideChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_InsideChartArea);
			}
		}
		
		public static string DescriptionAttributeImageTransparentColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageTransparentColor);
			}
		}
		
		public static string DescriptionAttributeLegend_EquallySpacedItems
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_EquallySpacedItems);
			}
		}
		
		public static string DescriptionAttributeChartArea_CursorY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_CursorY);
			}
		}
		
		public static string DescriptionAttributeChart_Printing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Printing);
			}
		}
		
		public static string DescriptionAttributeAxis
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxis);
			}
		}
		
		public static string DescriptionAttributeAxis_Axis
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxis_Axis);
			}
		}
		
		public static string DescriptionAttributeBackImageAlign
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackImageAlign);
			}
		}
		
		public static string DescriptionAttributeShowInLegend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeShowInLegend);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_ChartSerializer
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_ChartSerializer);
			}
		}
		
		public static string DescriptionAttributeChart_Compression
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Compression);
			}
		}
		
		public static string DescriptionAttributeChartImage_Compression
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartImage_Compression);
			}
		}
		
		public static string DescriptionAttributeCursor_AutoScroll
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_AutoScroll);
			}
		}
		
		public static string DescriptionAttributeElementPosition_Height
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_Height);
			}
		}
		
		public static string DescriptionAttributeHeight3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeHeight3);
			}
		}
		
		public static string DescriptionAttributeChart_ViewStateContent
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_ViewStateContent);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_SmallScrollSizeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_SmallScrollSizeType);
			}
		}
		
		public static string DescriptionAttributeLegend_CellColumns
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_CellColumns);
			}
		}
		
		public static string DescriptionAttributeAxisScrollBar_Buttons
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScrollBar_Buttons);
			}
		}
		
		public static string DescriptionAttributeLegends
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegends);
			}
		}
		
		public static string DescriptionAttributeElementPosition_X
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_X);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPoint_X
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPoint_X);
			}
		}
		
		public static string DescriptionAttributePoint3D_X
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePoint3D_X);
			}
		}
		
		public static string DescriptionAttributeToolTipEventArgs_X
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeToolTipEventArgs_X);
			}
		}
		
		public static string DescriptionAttributeCustomAttributesExtended
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomAttributesExtended);
			}
		}
		
		public static string DescriptionAttributeMargins_Left
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargins_Left);
			}
		}
		
		public static string DescriptionAttributeAxisScrollBar_PositionInside
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScrollBar_PositionInside);
			}
		}
		
		public static string DescriptionAttributeSeries_ValueMembersY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_ValueMembersY);
			}
		}
		
		public static string DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle);
			}
		}
		
		public static string DescriptionAttributeChartEvent_SelectionRangeChanging
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_SelectionRangeChanging);
			}
		}
		
		public static string DescriptionAttributeLabelsAutoFitMinFontSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelsAutoFitMinFontSize);
			}
		}
		
		public static string DescriptionAttributeMaxMovingDistance
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMaxMovingDistance);
			}
		}
		
		public static string DescriptionAttributeTitle_DockToChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_DockToChartArea);
			}
		}
		
		public static string DescriptionAttributeLegend_DockToChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_DockToChartArea);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_RightAngleAxes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_RightAngleAxes);
			}
		}
		
		public static string DescriptionAttributeLegend_LegendStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_LegendStyle);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_AxisDataView
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_AxisDataView);
			}
		}
		
		public static string DescriptionAttributeBorderDashStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderDashStyle);
			}
		}
		
		public static string DescriptionAttributeLabelBorderDashStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelBorderDashStyle);
			}
		}
		
		public static string DescriptionAttributeBackSecondaryColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackSecondaryColor);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_FrameBackSecondaryColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_FrameBackSecondaryColor);
			}
		}
		
		public static string DescriptionAttributeLegend_TitleSeparator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TitleSeparator);
			}
		}
		
		public static string DescriptionAttributeChartArea_InnerPlotPosition
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_InnerPlotPosition);
			}
		}
		
		public static string DescriptionAttributeChartEvent_CustomizeLegend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_CustomizeLegend);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint);
			}
		}
		
		public static string DescriptionAttributeDataPoint_YValues
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPoint_YValues);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_RowIndex
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_RowIndex);
			}
		}
		
		public static string DescriptionAttributeSeries_YSubAxisName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_YSubAxisName);
			}
		}
		
		public static string DescriptionAttributeChartArea_AlignType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AlignType);
			}
		}
		
		public static string DescriptionAttributeAllowResizing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowResizing);
			}
		}
		
		public static string DescriptionAttributeShowLabelAsValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeShowLabelAsValue);
			}
		}
		
		public static string DescriptionAttributeForeColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeForeColor);
			}
		}
		
		public static string DescriptionAttributePathPoints
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePathPoints);
			}
		}
		
		public static string DescriptionAttributeViewEventArgs_NewSizeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeViewEventArgs_NewSizeType);
			}
		}
		
		public static string DescriptionAttributeChart_BuildNumber
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_BuildNumber);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection);
			}
		}
		
		public static string DescriptionAttributeMarkerSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerSize);
			}
		}
		
		public static string DescriptionAttributeLegendItem_MarkerSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_MarkerSize);
			}
		}
		
		public static string DescriptionAttributeLegendCell_SeriesSymbolSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_SeriesSymbolSize);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_SeriesSymbolSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_SeriesSymbolSize);
			}
		}
		
		public static string DescriptionAttributeDisabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDisabled);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_ResetWhenLoading
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_ResetWhenLoading);
			}
		}
		
		public static string DescriptionAttributeBackGradientStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackGradientStyle);
			}
		}
		
		public static string DescriptionAttributeDataSource
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataSource);
			}
		}
		
		public static string DescriptionAttributeCustomLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabels);
			}
		}
		
		public static string DescriptionAttributeArrowAnnotation_ArrowAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArrowAnnotation_ArrowAnnotation);
			}
		}
		
		public static string DescriptionAttributeCursor_AxisType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_AxisType);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Cells
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Cells);
			}
		}
		
		public static string DescriptionAttributeBorderSkin
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_BorderSkin
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_BorderSkin);
			}
		}
		
		public static string DescriptionAttributeSubAxisCollection_SubAxisCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxisCollection_SubAxisCollection);
			}
		}
		
		public static string DescriptionAttributeAllowSelecting
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowSelecting);
			}
		}
		
		public static string DescriptionAttributeChartEvent_Customize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_Customize);
			}
		}
		
		public static string DescriptionAttributeChartEvent_Click
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_Click);
			}
		}
		
		public static string DescriptionAttributeImageAnnotation_ImageAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageAnnotation_ImageAnnotation);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_SmallScrollSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_SmallScrollSize);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_Interval
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_Interval);
			}
		}
		
		public static string DescriptionAttributeCursor_Interval
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_Interval);
			}
		}
		
		public static string DescriptionAttributeInterval4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeInterval4);
			}
		}
		
		public static string DescriptionAttributeStripLine_Interval
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_Interval);
			}
		}
		
		public static string DescriptionAttributeInterval6
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeInterval6);
			}
		}
		
		public static string DescriptionAttributeLabel_Interval
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_Interval);
			}
		}
		
		public static string DescriptionAttributeStripLine_TitleLineAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_TitleLineAlignment);
			}
		}
		
		public static string DescriptionAttributeMaximum
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMaximum);
			}
		}
		
		public static string DescriptionAttributeElementPosition_Auto
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_Auto);
			}
		}
		
		public static string DescriptionAttributeSeries_YAxisType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_YAxisType);
			}
		}
		
		public static string DescriptionAttributeLineDashStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLineDashStyle);
			}
		}
		
		public static string DescriptionAttributeLogarithmBase
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLogarithmBase);
			}
		}
		
		public static string DescriptionAttributeAntiAlias
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAntiAlias);
			}
		}
		
		public static string DescriptionAttributeImageWrapMode
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageWrapMode);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_Tag
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_Tag);
			}
		}
		
		public static string DescriptionAttributeTag
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTag);
			}
		}
		
		public static string DescriptionAttributeLegend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend);
			}
		}
		
		public static string DescriptionAttributeLegend_Legend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Legend);
			}
		}
		
		public static string DescriptionAttributeSeries_Legend
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Legend);
			}
		}
		
		public static string DescriptionAttributeDataPointComparer_DataPointComparer
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPointComparer_DataPointComparer);
			}
		}
		
		public static string DescriptionAttributeBackHatchStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBackHatchStyle);
			}
		}
		
		public static string DescriptionAttributeFrameBackHatchStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeFrameBackHatchStyle);
			}
		}
		
		public static string DescriptionAttributeChartAreaCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartAreaCollection_Item);
			}
		}
		
		public static string DescriptionAttributeLegendCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCollection_Item);
			}
		}
		
		public static string DescriptionAttributeAnnotationCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationCollection_Item);
			}
		}
		
		public static string DescriptionAttributeSubAxisCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxisCollection_Item);
			}
		}
		
		public static string DescriptionAttributeSeriesCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeriesCollection_Item);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPointCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPointCollection_Item);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumnCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumnCollection_Item);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegmentCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegmentCollection_Item);
			}
		}
		
		public static string DescriptionAttributeLegendCellCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellCollection_Item);
			}
		}
		
		public static string DescriptionAttributeNamedImagesCollection_Item
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeNamedImagesCollection_Item);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_ScaleMinimum
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_ScaleMinimum);
			}
		}
		
		public static string DescriptionAttributeSmartLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSmartLabels);
			}
		}
		
		public static string DescriptionAttributeSeries_SmartLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_SmartLabels);
			}
		}
		
		public static string DescriptionAttributeSmartLabels_SmartLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSmartLabels_SmartLabels);
			}
		}
		
		public static string DescriptionAttributeMinorTickMark
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMinorTickMark);
			}
		}
		
		public static string DescriptionAttributeMapAreasCollection_MapAreasCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapAreasCollection_MapAreasCollection);
			}
		}
		
		public static string DescriptionAttributeMovingDirection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMovingDirection);
			}
		}
		
		public static string DescriptionAttributeCursor_UserSelection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_UserSelection);
			}
		}
		
		public static string DescriptionAttributeChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea);
			}
		}
		
		public static string DescriptionAttributeSeries_ChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_ChartArea);
			}
		}
		
		public static string DescriptionAttributeChartArea_ChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_ChartArea);
			}
		}
		
		public static string DescriptionAttributeToolTipEventArgs_HitTestResult
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeToolTipEventArgs_HitTestResult);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_AxisScaleSegment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_AxisScaleSegment);
			}
		}
		
		public static string DescriptionAttributeLegend_ItemColumnSeparatorColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_ItemColumnSeparatorColor);
			}
		}
		
		public static string DescriptionAttributeDataManipulator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataManipulator);
			}
		}
		
		public static string DescriptionAttributeTitle_Color
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Color);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Color
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Color);
			}
		}
		
		public static string DescriptionAttributeColor4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeColor4);
			}
		}
		
		public static string DescriptionAttributeMargins_Right
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargins_Right);
			}
		}
		
		public static string DescriptionAttributeRight3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeRight3);
			}
		}
		
		public static string DescriptionAttributeChart_OnBackPaint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_OnBackPaint);
			}
		}
		
		public static string DescriptionAttributeLineColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLineColor);
			}
		}
		
		public static string DescriptionAttributeCalloutLineColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutLineColor);
			}
		}
		
		public static string DescriptionAttributeArrowAnnotation_ArrowStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArrowAnnotation_ArrowStyle);
			}
		}
		
		public static string DescriptionAttributeArrowStyle_ArrowStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArrowStyle_ArrowStyle);
			}
		}
		
		public static string DescriptionAttributeSeries_XValueType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_XValueType);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_Annotations
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_Annotations);
			}
		}
		
		public static string DescriptionAttributeAnnotations3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotations3);
			}
		}
		
		public static string DescriptionAttributeMinorGrid
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMinorGrid);
			}
		}
		
		public static string DescriptionAttributeMapArea_Custom
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapArea_Custom);
			}
		}
		
		public static string DescriptionAttributeChart_EnableViewState
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_EnableViewState);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Enable3D
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Enable3D);
			}
		}
		
		public static string DescriptionAttributeInterlacedColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeInterlacedColor);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_Margins
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_Margins);
			}
		}
		
		public static string DescriptionAttributeMargins_Margins
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargins_Margins);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Margins
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Margins);
			}
		}
		
		public static string DescriptionAttributeLegendItem_MarkerColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_MarkerColor);
			}
		}
		
		public static string DescriptionAttributeMarkerColor3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerColor3);
			}
		}
		
		public static string DescriptionAttributeChart_Size
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Size);
			}
		}
		
		public static string DescriptionAttributeTickMark_Size
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTickMark_Size);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_Size
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_Size);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_Size
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_Size);
			}
		}
		
		public static string DescriptionAttributeAxisScrollBar_Size
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScrollBar_Size);
			}
		}
		
		public static string DescriptionAttributeViewEventArgs_NewSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeViewEventArgs_NewSize);
			}
		}
		
		public static string DescriptionAttributeSeries_XAxisType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_XAxisType);
			}
		}
		
		public static string DescriptionAttributeAllowOutsidePlotArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowOutsidePlotArea);
			}
		}
		
		public static string DescriptionAttributeLegendItem_MarkerStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_MarkerStyle);
			}
		}
		
		public static string DescriptionAttributeMarkerStyle4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerStyle4);
			}
		}
		
		public static string DescriptionAttributeLegendCell_ImageSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_ImageSize);
			}
		}
		
		public static string DescriptionAttributeView
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeView);
			}
		}
		
		public static string DescriptionAttributeSeriesCollection_SeriesCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeriesCollection_SeriesCollection);
			}
		}
		
		public static string DescriptionAttributeCursorEventArgs_NewPosition
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursorEventArgs_NewPosition);
			}
		}
		
		public static string DescriptionAttributeViewEventArgs_NewPosition
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeViewEventArgs_NewPosition);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Image
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Image);
			}
		}
		
		public static string DescriptionAttributeNamedImage_Image
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeNamedImage_Image);
			}
		}
		
		public static string DescriptionAttributeImageAnnotation_Image
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageAnnotation_Image);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Image
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Image);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_Image
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_Image);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_IntervalOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_IntervalOffset);
			}
		}
		
		public static string DescriptionAttributeIntervalOffset3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalOffset3);
			}
		}
		
		public static string DescriptionAttributeLabel_IntervalOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_IntervalOffset);
			}
		}
		
		public static string DescriptionAttributeCursor_IntervalOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_IntervalOffset);
			}
		}
		
		public static string DescriptionAttributeIntervalOffset6
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalOffset6);
			}
		}
		
		public static string DescriptionAttributeStripLine_IntervalOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_IntervalOffset);
			}
		}
		
		public static string DescriptionAttributeLegend_DockInsideChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_DockInsideChartArea);
			}
		}
		
		public static string DescriptionAttributeTitle_DockInsideChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_DockInsideChartArea);
			}
		}
		
		public static string DescriptionAttributeChart_RenderType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_RenderType);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AxisViewChanging
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AxisViewChanging);
			}
		}
		
		public static string DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle);
			}
		}
		
		public static string DescriptionAttributePath
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePath);
			}
		}
		
		public static string DescriptionAttributeLegendItem_SeriesPointIndex
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_SeriesPointIndex);
			}
		}
		
		public static string DescriptionAttributeMapAreas
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapAreas);
			}
		}
		
		public static string DescriptionAttributeTickMark_TickMark
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTickMark_TickMark);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_LegendCellColumn
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_LegendCellColumn);
			}
		}
		
		public static string DescriptionAttributeLegendItem_LegendItem
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_LegendItem);
			}
		}
		
		public static string DescriptionAttributeTitleAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitleAlignment);
			}
		}
		
		public static string DescriptionAttributeStripLine_TitleAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_TitleAlignment);
			}
		}
		
		public static string DescriptionAttributeLegend_TitleAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TitleAlignment);
			}
		}
		
		public static string DescriptionAttributeElementPosition_ElementPosition
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeElementPosition_ElementPosition);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_To
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_To);
			}
		}
		
		public static string DescriptionAttributeLabel_FontAngle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_FontAngle);
			}
		}
		
		public static string DescriptionAttributeIntervalAutoMode
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalAutoMode);
			}
		}
		
		public static string DescriptionAttributeStripLine_StripWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_StripWidth);
			}
		}
		
		public static string DescriptionAttributeCursor_UserEnabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_UserEnabled);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_FrameBorderWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_FrameBorderWidth);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_Position);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_Position);
			}
		}
		
		public static string DescriptionAttributeTitle_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Position);
			}
		}
		
		public static string DescriptionAttributeLegend_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Position);
			}
		}
		
		public static string DescriptionAttributeChartArea_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_Position);
			}
		}
		
		public static string DescriptionAttributeCursor_Position
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_Position);
			}
		}
		
		public static string DescriptionAttributeSubAxis_ParentAxis
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxis_ParentAxis);
			}
		}
		
		public static string DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor);
			}
		}
		
		public static string DescriptionAttributeBottom
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBottom);
			}
		}
		
		public static string DescriptionAttributeMargins_Bottom
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMargins_Bottom);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle);
			}
		}
		
		public static string DescriptionAttributeLegend_HeaderSeparator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_HeaderSeparator);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_PointDepth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_PointDepth);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_AnnotationGroup
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_AnnotationGroup);
			}
		}
		
		public static string DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection);
			}
		}
		
		public static string DescriptionAttributeStripLine_StripWidthType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_StripWidthType);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_From
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_From);
			}
		}
		
		public static string DescriptionAttributePoint3D_PointF
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePoint3D_PointF);
			}
		}
		
		public static string DescriptionAttributeBorderWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderWidth);
			}
		}
		
		public static string DescriptionAttributeMarkerBorderWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarkerBorderWidth);
			}
		}
		
		public static string DescriptionAttributeCursor_SelectionEnd
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_SelectionEnd);
			}
		}
		
		public static string DescriptionAttributeLineAnnotation_LineAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLineAnnotation_LineAnnotation);
			}
		}
		
		public static string DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_Visible
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_Visible);
			}
		}
		
		public static string DescriptionAttributeChartArea_Visible
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_Visible);
			}
		}
		
		public static string DescriptionAttributeTitle_Visible
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Visible);
			}
		}
		
		public static string DescriptionAttributeVisible
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeVisible);
			}
		}
		
		public static string DescriptionAttributeLegendItem_Separator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_Separator);
			}
		}
		
		public static string DescriptionAttributeLegendCell_CellType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_CellType);
			}
		}
		
		public static string DescriptionAttributeChart_Serializer
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Serializer);
			}
		}
		
		public static string DescriptionAttributeAxisX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisX);
			}
		}
		
		public static string DescriptionAttributeChartArea_AxisX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AxisX);
			}
		}
		
		public static string DescriptionAttributeImageType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageType);
			}
		}
		
		public static string DescriptionAttributeCursor_SelectionStart
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_SelectionStart);
			}
		}
		
		public static string DescriptionAttributeLabelsAutoFit
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelsAutoFit);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_HeaderText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_HeaderText);
			}
		}
		
		public static string DescriptionAttributeMapEnabled
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapEnabled);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_Zoomable
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_Zoomable);
			}
		}
		
		public static string DescriptionAttributeDataManager_PaletteCustomColors
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataManager_PaletteCustomColors);
			}
		}
		
		public static string DescriptionAttributeChart_PaletteCustomColors
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_PaletteCustomColors);
			}
		}
		
		public static string DescriptionAttributeLegend_ItemColumnSeparator
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_ItemColumnSeparator);
			}
		}
		
		public static string DescriptionAttributeCursorEventArgs_NewSelectionEnd
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursorEventArgs_NewSelectionEnd);
			}
		}
		
		public static string DescriptionAttributeLegendItem_SeriesName
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_SeriesName);
			}
		}
		
		public static string DescriptionAttributeChartAreas
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartAreas);
			}
		}
		
		public static string DescriptionAttributeChartArea_AlignWithChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AlignWithChartArea);
			}
		}
		
		public static string DescriptionAttributeLegend_MaxAutoSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_MaxAutoSize);
			}
		}
		
		public static string DescriptionAttributeAxis_MaxAutoSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxis_MaxAutoSize);
			}
		}
		
		public static string DescriptionAttributeGrid_Grid
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeGrid_Grid);
			}
		}
		
		public static string DescriptionAttributeChartArea_EquallySizedAxesFont
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_EquallySizedAxesFont);
			}
		}
		
		public static string DescriptionAttributeChartEvent_CustomizeMapAreas
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_CustomizeMapAreas);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_WallWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_WallWidth);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_Row
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_Row);
			}
		}
		
		public static string DescriptionAttributeLegend_TitleSeparatorColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TitleSeparatorColor);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_TemplateMode
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_TemplateMode);
			}
		}
		
		public static string DescriptionAttributeShadowColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeShadowColor);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AxisScrollBarClicked
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AxisScrollBarClicked);
			}
		}
		
		public static string DescriptionAttributeAnchorY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorY);
			}
		}
		
		public static string DescriptionAttributeLegend_AutoFitMinFontSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_AutoFitMinFontSize);
			}
		}
		
		public static string DescriptionAttributeChartEvent_AnnotationTextChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_AnnotationTextChanged);
			}
		}
		
		public static string DescriptionAttributeChart_Series
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Series);
			}
		}
		
		public static string DescriptionAttributeSeries_Series
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_Series);
			}
		}
		
		public static string DescriptionAttributeMapArea_Shape
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMapArea_Shape);
			}
		}
		
		public static string DescriptionAttributeLegend_TextWrapThreshold
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TextWrapThreshold);
			}
		}
		
		public static string DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle);
			}
		}
		
		public static string DescriptionAttributeSubAxes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxes);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_StartFromZero
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_StartFromZero);
			}
		}
		
		public static string DescriptionAttributeStartFromZero3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStartFromZero3);
			}
		}
		
		public static string DescriptionAttributeRectangleAnnotation_RectangleAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeRectangleAnnotation_RectangleAnnotation);
			}
		}
		
		public static string DescriptionAttributeUrl
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeUrl);
			}
		}
		
		public static string DescriptionAttributeAxisScaleBreakStyle_BreakLineType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleBreakStyle_BreakLineType);
			}
		}
		
		public static string DescriptionAttributeChartEvent_CursorPositionChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_CursorPositionChanged);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_SerializableContent
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_SerializableContent);
			}
		}
		
		public static string DescriptionAttributeCalloutAnnotation_CalloutStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutAnnotation_CalloutStyle);
			}
		}
		
		public static string DescriptionAttributeCalloutStyle3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutStyle3);
			}
		}
		
		public static string DescriptionAttributeCalloutStyle_CalloutStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutStyle_CalloutStyle);
			}
		}
		
		public static string DescriptionAttributeTitle_Docking
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Docking);
			}
		}
		
		public static string DescriptionAttributeLegend_Docking
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Docking);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_AllowAnchorMoving
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_AllowAnchorMoving);
			}
		}
		
		public static string DescriptionAttributeAllowAnchorMoving3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowAnchorMoving3);
			}
		}
		
		public static string DescriptionAttributeTitleColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitleColor);
			}
		}
		
		public static string DescriptionAttributeStripLine_TitleColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_TitleColor);
			}
		}
		
		public static string DescriptionAttributeLegend_TitleColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_TitleColor);
			}
		}
		
		public static string DescriptionAttributeTitles
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitles);
			}
		}
		
		public static string DescriptionAttributePolygonAnnotation_PolygonAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePolygonAnnotation_PolygonAnnotation);
			}
		}
		
		public static string DescriptionAttributeLabel_IntervalType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_IntervalType);
			}
		}
		
		public static string DescriptionAttributeIntervalType3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalType3);
			}
		}
		
		public static string DescriptionAttributeIntervalType4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIntervalType4);
			}
		}
		
		public static string DescriptionAttributeStripLine_IntervalType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLine_IntervalType);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_IntervalType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_IntervalType);
			}
		}
		
		public static string DescriptionAttributeCursor_IntervalType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCursor_IntervalType);
			}
		}
		
		public static string DescriptionAttributeLegendItem_SeparatorColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendItem_SeparatorColor);
			}
		}
		
		public static string DescriptionAttributeSeries_YValuesPerPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_YValuesPerPoint);
			}
		}
		
		public static string DescriptionAttributeChartEvent_PrePaint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_PrePaint);
			}
		}
		
		public static string DescriptionAttributeLegendUrl
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendUrl);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_ImageUrl
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_ImageUrl);
			}
		}
		
		public static string DescriptionAttributeLabel_Format
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_Format);
			}
		}
		
		public static string DescriptionAttributeChartSerializer_Format
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartSerializer_Format);
			}
		}
		
		public static string DescriptionAttributeStripLines
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeStripLines);
			}
		}
		
		public static string DescriptionAttributeChart_ViewStateData
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_ViewStateData);
			}
		}
		
		public static string DescriptionAttributeTitle_DockOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_DockOffset);
			}
		}
		
		public static string DescriptionAttributeAnchorDataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnchorDataPoint);
			}
		}
		
		public static string DescriptionAttributeLabelFormat
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabelFormat);
			}
		}
		
		public static string DescriptionAttributeSuppressExceptions
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSuppressExceptions);
			}
		}
		
		public static string DescriptionAttributeSeries_EmptyPointStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_EmptyPointStyle);
			}
		}
		
		public static string DescriptionAttributeCustomAttributes
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomAttributes);
			}
		}
		
		public static string DescriptionAttributeLegendCellCollection_LegendCellCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellCollection_LegendCellCollection);
			}
		}
		
		public static string DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_MarkColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_MarkColor);
			}
		}
		
		public static string DescriptionAttributePalette
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePalette);
			}
		}
		
		public static string DescriptionAttributeScaleBreakStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScaleBreakStyle);
			}
		}
		
		public static string DescriptionAttributeChart_ImageUrl
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_ImageUrl);
			}
		}
		
		public static string DescriptionAttributeLegend_InterlacedRowsColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_InterlacedRowsColor);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_ColumnType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_ColumnType);
			}
		}
		
		public static string DescriptionAttributeChartArea_AlignOrientation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AlignOrientation);
			}
		}
		
		public static string DescriptionAttributeChart_SoftShadows
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_SoftShadows);
			}
		}
		
		public static string DescriptionAttributeSoftShadows3
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSoftShadows3);
			}
		}
		
		public static string DescriptionAttributePrintingManager_PrintDocument
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePrintingManager_PrintDocument);
			}
		}
		
		public static string DescriptionAttributeMinimum
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMinimum);
			}
		}
		
		public static string DescriptionAttributeAxisScaleSegment_ScaleMaximum
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScaleSegment_ScaleMaximum);
			}
		}
		
		public static string DescriptionAttributeScrollBarEventArgs_MousePositionX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeScrollBarEventArgs_MousePositionX);
			}
		}
		
		public static string DescriptionAttributeLabel_TruncatedLabels
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLabel_TruncatedLabels);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_GridTicks
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_GridTicks);
			}
		}
		
		public static string DescriptionAttributeImageAnnotation_Alignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeImageAnnotation_Alignment);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_Alignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_Alignment);
			}
		}
		
		public static string DescriptionAttributeTitle_Alignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Alignment);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Alignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Alignment);
			}
		}
		
		public static string DescriptionAttributeLegend_Alignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_Alignment);
			}
		}
		
		public static string DescriptionAttributeAlignment
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAlignment);
			}
		}
		
		public static string DescriptionAttributeChart_OnCustomizeMapAreas
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_OnCustomizeMapAreas);
			}
		}
		
		public static string DescriptionAttributeSubAxis_LocationOffset
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSubAxis_LocationOffset);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_MinimumWidth
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_MinimumWidth);
			}
		}
		
		public static string DescriptionAttributeSelectionPointsStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSelectionPointsStyle);
			}
		}
		
		public static string DescriptionAttributeAxisY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisY);
			}
		}
		
		public static string DescriptionAttributeChartArea_AxisY
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_AxisY);
			}
		}
		
		public static string DescriptionAttributeTextFont
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextFont);
			}
		}
		
		public static string DescriptionAttributeTextFont4
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextFont4);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_SizeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_SizeType);
			}
		}
		
		public static string DescriptionAttributeMinMovingDistance
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMinMovingDistance);
			}
		}
		
		public static string DescriptionAttributeChartArea_CursorX
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea_CursorX);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_SmallScrollMinSize
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_SmallScrollMinSize);
			}
		}
		
		public static string DescriptionAttributeAxisDataView_SmallScrollMinSizeType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisDataView_SmallScrollMinSizeType);
			}
		}
		
		public static string DescriptionAttributeAxisScrollBar_ButtonColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAxisScrollBar_ButtonColor);
			}
		}
		
		public static string DescriptionAttributeArea3DStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeArea3DStyle);
			}
		}
		
		public static string DescriptionAttributeChart
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart);
			}
		}
		
		public static string DescriptionAttributeChart_Chart
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChart_Chart);
			}
		}
		
		public static string DescriptionAttributeBorderSkin_PageColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeBorderSkin_PageColor);
			}
		}
		
		public static string DescriptionAttributeDataPoint_DataPoint
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPoint_DataPoint);
			}
		}
		
		public static string DescriptionAttributeChartArea3DStyle_Light
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartArea3DStyle_Light);
			}
		}
		
		public static string DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties);
			}
		}
		
		public static string DescriptionAttributeLegend_AutoFitText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_AutoFitText);
			}
		}
		
		public static string DescriptionAttributeAllowTextEditing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAllowTextEditing);
			}
		}
		
		public static string DescriptionAttributeCustomLabel_Text
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCustomLabel_Text);
			}
		}
		
		public static string DescriptionAttributeLegendCell_Text
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_Text);
			}
		}
		
		public static string DescriptionAttributeText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeText);
			}
		}
		
		public static string DescriptionAttributeTitle_Text
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTitle_Text);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_Text
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_Text);
			}
		}
		
		public static string DescriptionAttributeToolTipEventArgs_Text
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeToolTipEventArgs_Text);
			}
		}
		
		public static string DescriptionAttributeMultiline
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMultiline);
			}
		}
		
		public static string DescriptionAttributeTextAnnotation_TextAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextAnnotation_TextAnnotation);
			}
		}
		
		public static string DescriptionAttributeAnnotationGroup_ClipToChartArea
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeAnnotationGroup_ClipToChartArea);
			}
		}
		
		public static string DescriptionAttributeSeries_YValueType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeSeries_YValueType);
			}
		}
		
		public static string DescriptionAttributeInternalIntervalType
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeInternalIntervalType);
			}
		}
		
		public static string DescriptionAttributeCalloutAnnotation_CalloutAnchorCap
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeCalloutAnnotation_CalloutAnchorCap);
			}
		}
		
		public static string DescriptionAttributeLogarithmic
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLogarithmic);
			}
		}
		
		public static string DescriptionAttributeLegend_ItemColumnSpacing
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegend_ItemColumnSpacing);
			}
		}
		
		public static string DescriptionAttributeMarksNextToAxis
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeMarksNextToAxis);
			}
		}
		
		public static string DescriptionAttributeChartEvent_SelectionRangeChanged
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartEvent_SelectionRangeChanged);
			}
		}
		
		public static string DescriptionAttributeDataPointCollection_DataPointCollection
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeDataPointCollection_DataPointCollection);
			}
		}
		
		public static string DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation);
			}
		}
		
		public static string DescriptionAttributeLegendCellColumn_HeaderColor
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCellColumn_HeaderColor);
			}
		}
		
		public static string DescriptionAttributeLegendCell_LegendCell
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeLegendCell_LegendCell);
			}
		}
		
		public static string DescriptionAttributeChartImageDescriptionUrl
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartImageDescriptionUrl);
			}
		}
		
		public static string DescriptionAttributeChartImageAlternateText
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeChartImageAlternateText);
			}
		}
		
		public static string DescriptionAttributePostBackValue
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributePostBackValue);
			}
		}
		
		public static string DescriptionAttributeTextStyle
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeTextStyle);
			}
		}
		
		public static string DescriptionAttributeIsMapAreaAttributesEncoded
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeIsMapAreaAttributesEncoded);
			}
		}
		
		public static string DescriptionAttributeRightToLeft
		{
			get
			{
				return Keys.GetString(Keys.DescriptionAttributeRightToLeft);
			}
		}
		
		public static string CategoryAttributeCellColumns
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeCellColumns);
			}
		}
		
		public static string CategoryAttributeAxis
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAxis);
			}
		}
		
		public static string CategoryAttributeEditing
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeEditing);
			}
		}
		
		public static string CategoryAttributeSize
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeSize);
			}
		}
		
		public static string CategoryAttributePosition
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributePosition);
			}
		}
		
		public static string CategoryAttributeViewState
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeViewState);
			}
		}
		
		public static string CategoryAttributeInterval
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeInterval);
			}
		}
		
		public static string CategoryAttributeAppearance
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAppearance);
			}
		}
		
		public static string CategoryAttributeDocking
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeDocking);
			}
		}
		
		public static string CategoryAttributeDataSource
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeDataSource);
			}
		}
		
		public static string CategoryAttributeAxisView
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAxisView);
			}
		}
		
		public static string CategoryAttributeLayout
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLayout);
			}
		}
		
		public static string CategoryAttribute3D
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttribute3D);
			}
		}
		
		public static string CategoryAttributeData
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeData);
			}
		}
		
		public static string CategoryAttributeTitle
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeTitle);
			}
		}
		
		public static string CategoryAttributeToolTips
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeToolTips);
			}
		}
		
		public static string CategoryAttributeLabels
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLabels);
			}
		}
		
		public static string CategoryAttributeGridTickMarks
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeGridTickMarks);
			}
		}
		
		public static string CategoryAttributeLabelAppearance
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLabelAppearance);
			}
		}
		
		public static string CategoryAttributeHeader
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeHeader);
			}
		}
		
		public static string CategoryAttributeAxes
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAxes);
			}
		}
		
		public static string CategoryAttributeImage
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeImage);
			}
		}
		
		public static string CategoryAttributeEmptyPoints
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeEmptyPoints);
			}
		}
		
		public static string CategoryAttributeAlignment
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAlignment);
			}
		}
		
		public static string CategoryAttributeAnnotation
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAnnotation);
			}
		}
		
		public static string CategoryAttributeMarker
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeMarker);
			}
		}
		
		public static string CategoryAttributeChart
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeChart);
			}
		}
		
		public static string CategoryAttributeLocation
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLocation);
			}
		}
		
		public static string CategoryAttributeToolTip
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeToolTip);
			}
		}
		
		public static string CategoryAttributeMap
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeMap);
			}
		}
		
		public static string CategoryAttributeMapArea
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeMapArea);
			}
		}
		
		public static string CategoryAttributeLabel
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLabel);
			}
		}
		
		public static string CategoryAttributeShape
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeShape);
			}
		}
		
		public static string CategoryAttributeMisc
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeMisc);
			}
		}
		
		public static string CategoryAttributeSerializer
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeSerializer);
			}
		}
		
		public static string CategoryAttributeSubAxes
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeSubAxes);
			}
		}
		
		public static string CategoryAttributeSeriesItems
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeSeriesItems);
			}
		}
		
		public static string CategoryAttributeDataView
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeDataView);
			}
		}
		
		public static string CategoryAttributeCharttitle
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeCharttitle);
			}
		}
		
		public static string CategoryAttributeLegend
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeLegend);
			}
		}
		
		public static string CategoryAttributeAction
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAction);
			}
		}
		
		public static string CategoryAttributeScale
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeScale);
			}
		}
		
		public static string CategoryAttributeAnnotations
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAnnotations);
			}
		}
		
		public static string CategoryAttributeAnchor
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAnchor);
			}
		}
		
		public static string CategoryAttributeBehavior
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeBehavior);
			}
		}
		
		public static string CategoryAttributeCursor
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeCursor);
			}
		}
		
		public static string CategoryAttributeAnchorAxes
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAnchorAxes);
			}
		}
		
		public static string CategoryAttributeAccessibility
		{
			get
			{
				return Keys.GetString(Keys.CategoryAttributeAccessibility);
			}
		}
		
		public static string FormatErrorString
		{
			get
			{
				return Keys.GetString(Keys.FormatErrorString);
			}
		}
		
		public static string ExceptionNameIsEmpty
		{
			get
			{
				return Keys.GetString(Keys.ExceptionNameIsEmpty);
			}
		}
		
		public static string ActionListSeriesChartType
		{
			get
			{
				return Keys.GetString(Keys.ActionListSeriesChartType);
			}
		}
		
		public static string ActionListSeriesXValueMember
		{
			get
			{
				return Keys.GetString(Keys.ActionListSeriesXValueMember);
			}
		}
		
		public static string ActionListSeriesYValueMembers
		{
			get
			{
				return Keys.GetString(Keys.ActionListSeriesYValueMembers);
			}
		}
		
		public static string DiagnosticHeader
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticHeader);
			}
		}
		
		public static string DiagnosticSettingsHeader
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticSettingsHeader);
			}
		}
		
		public static string DiagnosticSettingsKey
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticSettingsKey);
			}
		}
		
		public static string DiagnosticSettingsValue
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticSettingsValue);
			}
		}
		
		public static string DiagnosticSettingsInfo
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticSettingsInfo);
			}
		}
		
		public static string DiagnosticQueueStateHeader
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateHeader);
			}
		}
		
		public static string DiagnosticQueueStateName
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateName);
			}
		}
		
		public static string DiagnosticQueueStateAccess
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateAccess);
			}
		}
		
		public static string DiagnosticQueueStateAccessOK
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateAccessOK);
			}
		}
		
		public static string DiagnosticQueueStateAccessFail
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateAccessFail);
			}
		}
		
		public static string DiagnosticQueueStateAccessInfo
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticQueueStateAccessInfo);
			}
		}
		
		public static string DiagnosticActivityHeader
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticActivityHeader);
			}
		}
		
		public static string DiagnosticActivityTime
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticActivityTime);
			}
		}
		
		public static string DiagnosticActivityMessage
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticActivityMessage);
			}
		}
		
		public static string DiagnosticActivityError
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticActivityError);
			}
		}
		
		public static string DiagnosticChartImageServedFailNotFound
		{
			get
			{
				return Keys.GetString(Keys.DiagnosticChartImageServedFailNotFound);
			}
		}
		
		public static string ExceptionImageLoaderUnsupportedType(String typeName)
		{
			return Keys.GetString(Keys.ExceptionImageLoaderUnsupportedType, typeName);
		}
		
		public static string ExceptionImageLoaderIncorrectImageUrl(String url)
		{
			return Keys.GetString(Keys.ExceptionImageLoaderIncorrectImageUrl, url);
		}
		
		public static string ExceptionImageLoaderIncorrectImageLocation(String location)
		{
			return Keys.GetString(Keys.ExceptionImageLoaderIncorrectImageLocation, location);
		}
		
		public static string ExceptionAnnotationNameIsNotUnique(String name)
		{
			return Keys.GetString(Keys.ExceptionAnnotationNameIsNotUnique, name);
		}
		
		public static string ExceptionAnnotationNameAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionAnnotationNameAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionAnnotationNameNotFound(String name)
		{
			return Keys.GetString(Keys.ExceptionAnnotationNameNotFound, name);
		}
		
		public static string ExceptionTitleNameIsNotUnique(String name)
		{
			return Keys.GetString(Keys.ExceptionTitleNameIsNotUnique, name);
		}
		
		public static string ExceptionTitleNameAddedIsNotUnique(String name)
		{
			return Keys.GetString(Keys.ExceptionTitleNameAddedIsNotUnique, name);
		}
		
		public static string ExceptionTitleNameNotFound(String name)
		{
			return Keys.GetString(Keys.ExceptionTitleNameNotFound, name);
		}
		
		public static string ExceptionDataSeriesNameNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionDataSeriesNameNotFound, name);
		}
		
		public static string ExceptionDataSeriesPointTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionDataSeriesPointTypeUnsupported, type);
		}
		
		public static string ExceptionDataSeriesYValueIndexNotExists(string yValueIndex, string seriesName)
		{
			return Keys.GetString(Keys.ExceptionDataSeriesYValueIndexNotExists, yValueIndex, seriesName);
		}
		
		public static string ExceptionDataSeriesKeywordFormatInvalid(string format)
		{
			return Keys.GetString(Keys.ExceptionDataSeriesKeywordFormatInvalid, format);
		}
		
		public static string ExceptionDataSeriesChartAreaInvalid(string chartArea, string seriesName)
		{
			return Keys.GetString(Keys.ExceptionDataSeriesChartAreaInvalid, chartArea, seriesName);
		}
		
		public static string ExceptionSeriesNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionSeriesNameIsNotUnique, name);
		}
		
		public static string ExceptionSeriesNameAddedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionSeriesNameAddedIsNotUnique, name);
		}
		
		public static string ExceptionEditorChartTypeRegistryServiceInObjectInaccessible(string objectName)
		{
			return Keys.GetString(Keys.ExceptionEditorChartTypeRegistryServiceInObjectInaccessible, objectName);
		}
		
		public static string ExceptionLegendDesignerMarginObjectInvalid(string @string)
		{
			return Keys.GetString(Keys.ExceptionLegendDesignerMarginObjectInvalid, @string);
		}
		
		public static string ExceptionChartAreaAddedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionChartAreaAddedIsNotUnique, name);
		}
		
		public static string ExceptionChartAreaInsertedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionChartAreaInsertedIsNotUnique, name);
		}
		
		public static string ExceptionChartAreaAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionChartAreaAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionAxisLabelsIntervalTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionAxisLabelsIntervalTypeUnsupported, type);
		}
		
		public static string ExceptionSubAxisNameNotFoundShort(string name)
		{
			return Keys.GetString(Keys.ExceptionSubAxisNameNotFoundShort, name);
		}
		
		public static string ExceptionSubAxisNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionSubAxisNameIsNotUnique, name);
		}
		
		public static string ExceptionEnumInvalid(string name)
		{
			return Keys.GetString(Keys.ExceptionEnumInvalid, name);
		}
		
		public static string ExceptionNamedImageNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionNamedImageNotFound, name);
		}
		
		public static string ExceptionNamedImageAddedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionNamedImageAddedIsNotUnique, name);
		}
		
		public static string ExceptionNamedImageInsertedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionNamedImageInsertedIsNotUnique, name);
		}
		
		public static string ExceptionLegendNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendNameIsNotUnique, name);
		}
		
		public static string ExceptionLegendNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendNotFound, name);
		}
		
		public static string ExceptionLegendAddedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendAddedIsNotUnique, name);
		}
		
		public static string ExceptionLegendDockedChartAreaIsMissing(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendDockedChartAreaIsMissing, name);
		}
		
		public static string ExceptionLegendReferencedInSeriesNotFound(string seriesName, string legendName)
		{
			return Keys.GetString(Keys.ExceptionLegendReferencedInSeriesNotFound, seriesName, legendName);
		}
		
		public static string ExceptionLegendSeparatorTypeUnknown(string type)
		{
			return Keys.GetString(Keys.ExceptionLegendSeparatorTypeUnknown, type);
		}
		
		public static string ExceptionLegendCellTypeUnknown(string type)
		{
			return Keys.GetString(Keys.ExceptionLegendCellTypeUnknown, type);
		}
		
		public static string ExceptionLegendColumnAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendColumnAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionLegendCellNameAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendCellNameAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionLegendCellNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendCellNotFound, name);
		}
		
		public static string ExceptionLegendCellColumnNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendCellColumnNotFound, name);
		}
		
		public static string ExceptionLegendCellColumnAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionLegendCellColumnAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionChartAreaNameReferenceInvalid(string chartArea1, string chartArea2)
		{
			return Keys.GetString(Keys.ExceptionChartAreaNameReferenceInvalid, chartArea1, chartArea2);
		}
		
		public static string ExceptionTraceManagerUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionTraceManagerUnsupportedType, name);
		}
		
		public static string ExceptionChartTypeRegistryUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTypeRegistryUnsupportedType, name);
		}
		
		public static string ExceptionChartTypeNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTypeNameIsNotUnique, name);
		}
		
		public static string ExceptionChartTypeUnknown(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTypeUnknown, name);
		}
		
		public static string ExceptionChartTypeRequiresYValues(string name, string yValues)
		{
			return Keys.GetString(Keys.ExceptionChartTypeRequiresYValues, name, yValues);
		}
		
		public static string ExceptionChartTypeSecondaryYAxisUnsupported(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTypeSecondaryYAxisUnsupported, name);
		}
		
		public static string ExceptionChartTypeSecondaryXAxisUnsupported(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTypeSecondaryXAxisUnsupported, name);
		}
		
		public static string ExceptionChartTypeCanNotCombine(string type1, string type2)
		{
			return Keys.GetString(Keys.ExceptionChartTypeCanNotCombine, type1, type2);
		}
		
		public static string ExceptionBorderTypeRegistryUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionBorderTypeRegistryUnsupportedType, name);
		}
		
		public static string ExceptionBorderTypeNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionBorderTypeNameIsNotUnique, name);
		}
		
		public static string ExceptionBorderTypeUnknown(string name)
		{
			return Keys.GetString(Keys.ExceptionBorderTypeUnknown, name);
		}
		
		public static string ExceptionChartSerializerUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerUnsupportedType, name);
		}
		
		public static string ExceptionChartSerializerDefaultConstructorUndefined(string property)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerDefaultConstructorUndefined, property);
		}
		
		public static string ExceptionChartSerializerTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerTypeUnsupported, type);
		}
		
		public static string ExceptionChartSerializerPropertyNameUnknown(string property, string @object)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerPropertyNameUnknown, property, @object);
		}
		
		public static string ExceptionChartSerializerBinaryTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerBinaryTypeUnsupported, type);
		}
		
		public static string ExceptionChartSerializerBinaryHashCodeDuplicate(string anem1, string name2)
		{
			return Keys.GetString(Keys.ExceptionChartSerializerBinaryHashCodeDuplicate, anem1, name2);
		}
		
		public static string ExceptionDataManipulatorYValuesIndexExceeded(string formula)
		{
			return Keys.GetString(Keys.ExceptionDataManipulatorYValuesIndexExceeded, formula);
		}
		
		public static string ExceptionDataManipulatorGroupingFormulaAlreadyDefined(string formulaName)
		{
			return Keys.GetString(Keys.ExceptionDataManipulatorGroupingFormulaAlreadyDefined, formulaName);
		}
		
		public static string ExceptionDataManipulatorGroupingFormulaFormatInvalid(string formula)
		{
			return Keys.GetString(Keys.ExceptionDataManipulatorGroupingFormulaFormatInvalid, formula);
		}
		
		public static string ExceptionDataManipulatorGroupingFormulaNameInvalid(string name)
		{
			return Keys.GetString(Keys.ExceptionDataManipulatorGroupingFormulaNameInvalid, name);
		}
		
		public static string ExceptionChartPictureUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionChartPictureUnsupportedType, name);
		}
		
		public static string ExceptionSubAxisNameNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionSubAxisNameNotFound, name);
		}
		
		public static string ExceptionSubAxisNameAlreadyExistsInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionSubAxisNameAlreadyExistsInCollection, name);
		}
		
		public static string ExceptionChartTitleSetIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTitleSetIsNotUnique, name);
		}
		
		public static string ExceptionChartTitleAddedIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTitleAddedIsNotUnique, name);
		}
		
		public static string ExceptionChartTitleDockedChartAreaIsMissing(string name)
		{
			return Keys.GetString(Keys.ExceptionChartTitleDockedChartAreaIsMissing, name);
		}
		
		public static string ExceptionDataManagerUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionDataManagerUnsupportedType, name);
		}
		
		public static string ExceptionKeywordsRegistryUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionKeywordsRegistryUnsupportedType, name);
		}
		
		public static string ExceptionCustomAttributesRegistryUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributesRegistryUnsupportedType, name);
		}
		
		public static string ExceptionFormulaModuleNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaModuleNameIsNotUnique, name);
		}
		
		public static string ExceptionFormulaModuleRegistryUnsupportedType(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaModuleRegistryUnsupportedType, name);
		}
		
		public static string ExceptionFormulaModuleNameUnknown(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaModuleNameUnknown, name);
		}
		
		public static string ExceptionColumnNameNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionColumnNameNotFound, name);
		}
		
		public static string ExceptionDataPointConverterUnavailableSorting(string value, string count)
		{
			return Keys.GetString(Keys.ExceptionDataPointConverterUnavailableSorting, value, count);
		}
		
		public static string ExceptionDataPointYValuesCountMismatch(string count)
		{
			return Keys.GetString(Keys.ExceptionDataPointYValuesCountMismatch, count);
		}
		
		public static string ExceptionDataPointYValuesBindingCountMismatch(string count)
		{
			return Keys.GetString(Keys.ExceptionDataPointYValuesBindingCountMismatch, count);
		}
		
		public static string ExceptionDataPointYValuesSettingCountMismatch(string count)
		{
			return Keys.GetString(Keys.ExceptionDataPointYValuesSettingCountMismatch, count);
		}
		
		public static string ExceptionAttributeNameIsNotUnique(string name)
		{
			return Keys.GetString(Keys.ExceptionAttributeNameIsNotUnique, name);
		}
		
		public static string ExceptionFormulaInvalidPeriod(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaInvalidPeriod, name);
		}
		
		public static string ExceptionFormulaNotEnoughDataPoints(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaNotEnoughDataPoints, name);
		}
		
		public static string ExceptionKagiAttributeFormatInvalid(string attribute)
		{
			return Keys.GetString(Keys.ExceptionKagiAttributeFormatInvalid, attribute);
		}
		
		public static string ExceptionKagiAttributeOutOfRange(string name)
		{
			return Keys.GetString(Keys.ExceptionKagiAttributeOutOfRange, name);
		}
		
		public static string ExceptionFunnelStyleUnknown(string style)
		{
			return Keys.GetString(Keys.ExceptionFunnelStyleUnknown, style);
		}
		
		public static string ExceptionErrorBarTypeInvalid(string type)
		{
			return Keys.GetString(Keys.ExceptionErrorBarTypeInvalid, type);
		}
		
		public static string ExceptionErrorBarTypeFormatInvalid(string format)
		{
			return Keys.GetString(Keys.ExceptionErrorBarTypeFormatInvalid, format);
		}
		
		public static string ExceptionChartCanNotCombine(string name)
		{
			return Keys.GetString(Keys.ExceptionChartCanNotCombine, name);
		}
		
		public static string ExceptionCustomAttributeValueInvalid(string value, string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeValueInvalid, value, name);
		}
		
		public static string ExceptionCustomAttributeValueInvalid2(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeValueInvalid2, name);
		}
		
		public static string ExceptionCustomAttributeAngleOutOfRange(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeAngleOutOfRange, name);
		}
		
		public static string ExceptionCustomAttributeIsNotInRange0to1(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeIsNotInRange0to1, name);
		}
		
		public static string ExceptionCustomAttributeIsNotInRange0to100(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeIsNotInRange0to100, name);
		}
		
		public static string ExceptionCustomAttributeIsNotLargerThenZiro(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeIsNotLargerThenZiro, name);
		}
		
		public static string ExceptionCustomAttributeIsNotInRange0to50(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeIsNotInRange0to50, name);
		}
		
		public static string ExceptionCustomAttributeSeriesNameNotFound(string attributeName, string seriesName)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeSeriesNameNotFound, attributeName, seriesName);
		}
		
		public static string ExceptionCustomAttributeMustBeMoreThenValue(string attributeName, string value)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeMustBeMoreThenValue, attributeName, value);
		}
		
		public static string ExceptionCustomAttributeMustBeBiggerThenValue(string attributeName, string value)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeMustBeBiggerThenValue, attributeName, value);
		}
		
		public static string ExceptionCustomAttributeMustBeInRange(string attributeName, string fromValue, string toValue)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeMustBeInRange, attributeName, fromValue, toValue);
		}
		
		public static string ExceptionCustomAttributeTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeTypeUnsupported, type);
		}
		
		public static string ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid(string attributeName)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid, attributeName);
		}
		
		public static string ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported(string name)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported, name);
		}
		
		public static string ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid(string attributeName)
		{
			return Keys.GetString(Keys.ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid, attributeName);
		}
		
		public static string ExceptionFormulaDataSeriesNameNotFoundInCollection(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaDataSeriesNameNotFoundInCollection, name);
		}
		
		public static string ExceptionFormulaDataSeriesNameNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaDataSeriesNameNotFound, name);
		}
		
		public static string ExceptionFormulaDataFormatInvalid(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaDataFormatInvalid, name);
		}
		
		public static string ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues(string series1, string series2)
		{
			return Keys.GetString(Keys.ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues, series1, series2);
		}
		
		public static string ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints(string series1, string series2)
		{
			return Keys.GetString(Keys.ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints, series1, series2);
		}
		
		public static string ExceptionFormulaNotFound(string name)
		{
			return Keys.GetString(Keys.ExceptionFormulaNotFound, name);
		}
		
		public static string ExceptionForecastingNotEnoughDataPoints(string minimum)
		{
			return Keys.GetString(Keys.ExceptionForecastingNotEnoughDataPoints, minimum);
		}
		
		public static string ExceptionValueMustBeGreaterThan(string propertyName, string value)
		{
			return Keys.GetString(Keys.ExceptionValueMustBeGreaterThan, propertyName, value);
		}
		
		public static string ExceptionValueMustBeLessThan(string propertyName, string value)
		{
			return Keys.GetString(Keys.ExceptionValueMustBeLessThan, propertyName, value);
		}
		
		public static string ExceptionValueMustBeInRange(string propertyName, string fromValue, string toValue)
		{
			return Keys.GetString(Keys.ExceptionValueMustBeInRange, propertyName, fromValue, toValue);
		}
		
		public static string ExceptionHttpHandlerCanNotLoadType(string type)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerCanNotLoadType, type);
		}
		
		public static string ExceptionHttpHandlerImageHandlerInterfaceUnsupported(string name)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerImageHandlerInterfaceUnsupported, name);
		}
		
		public static string ExceptionHttpHandlerParameterUnknown(string name, string value)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerParameterUnknown, name, value);
		}
		
		public static string ExceptionHttpHandlerParameterInvalid(string name, string value)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerParameterInvalid, name, value);
		}
		
		public static string ExceptionHttpHandlerPrivacyKeyInvalid(string name, string value)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerPrivacyKeyInvalid, name, value);
		}
		
		public static string ExceptionHttpHandlerTempDirectoryInvalid(string directory)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerTempDirectoryInvalid, directory);
		}
		
		public static string ExceptionHttpHandlerTempDirectoryUnaccesible(string directory)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerTempDirectoryUnaccesible, directory);
		}
		
		public static string ExceptionHttpHandlerStorageTypeUnsupported(string type)
		{
			return Keys.GetString(Keys.ExceptionHttpHandlerStorageTypeUnsupported, type);
		}
		
		public static string ExceptionWebConfigUpdateFailed(string message)
		{
			return Keys.GetString(Keys.ExceptionWebConfigUpdateFailed, message);
		}
		
		public static string EvenLogMessageChartImageFileTimeToLive(string minutes)
		{
			return Keys.GetString(Keys.EvenLogMessageChartImageFileTimeToLive, minutes);
		}
		
		public static string MessageYValueIndexInvalid(string maxIndex)
		{
			return Keys.GetString(Keys.MessageYValueIndexInvalid, maxIndex);
		}
		
		public static string AccessibilityTitleName(string name)
		{
			return Keys.GetString(Keys.AccessibilityTitleName, name);
		}
		
		public static string AccessibilityAnnotationName(string name)
		{
			return Keys.GetString(Keys.AccessibilityAnnotationName, name);
		}
		
		public static string AccessibilityLegendName(string name)
		{
			return Keys.GetString(Keys.AccessibilityLegendName, name);
		}
		
		public static string AccessibilitySeriesName(string name)
		{
			return Keys.GetString(Keys.AccessibilitySeriesName, name);
		}
		
		public static string AccessibilityDataPointName(int index)
		{
			return Keys.GetString(Keys.AccessibilityDataPointName, index);
		}
		
		public static string AccessibilityDataPointLabelName(int index)
		{
			return Keys.GetString(Keys.AccessibilityDataPointLabelName, index);
		}
		
		public static string AccessibilityLegendTitleName(string name)
		{
			return Keys.GetString(Keys.AccessibilityLegendTitleName, name);
		}
		
		public static string AccessibilityChartAreaName(string name)
		{
			return Keys.GetString(Keys.AccessibilityChartAreaName, name);
		}
		
		public static string AccessibilityChartAxisTitleName(string name)
		{
			return Keys.GetString(Keys.AccessibilityChartAxisTitleName, name);
		}
		
		public static string AccessibilityChartAxisMajorGridlinesName(string name)
		{
			return Keys.GetString(Keys.AccessibilityChartAxisMajorGridlinesName, name);
		}
		
		public static string AccessibilityChartAxisMinorGridlinesName(string name)
		{
			return Keys.GetString(Keys.AccessibilityChartAxisMinorGridlinesName, name);
		}
		
		public static string ExceptionNameAlreadyExistsInCollection(string name, string collection)
		{
			return Keys.GetString(Keys.ExceptionNameAlreadyExistsInCollection, name, collection);
		}
		
		public static string ExceptionNameNotFound(string name, string collection)
		{
			return Keys.GetString(Keys.ExceptionNameNotFound, name, collection);
		}
		
		public static string ActionListSeriesDataGroup(string name)
		{
			return Keys.GetString(Keys.ActionListSeriesDataGroup, name);
		}
		
		public static string DiagnosticSettingsConfig(string s)
		{
			return Keys.GetString(Keys.DiagnosticSettingsConfig, s);
		}
		
		public static string DiagnosticChartImageSaved(string name)
		{
			return Keys.GetString(Keys.DiagnosticChartImageSaved, name);
		}
		
		public static string DiagnosticChartImageSavedPrivate(string name, string keyType)
		{
			return Keys.GetString(Keys.DiagnosticChartImageSavedPrivate, name, keyType);
		}
		
		public static string DiagnosticChartImageDeleted(string name)
		{
			return Keys.GetString(Keys.DiagnosticChartImageDeleted, name);
		}
		
		public static string DiagnosticChartImageServed(string name)
		{
			return Keys.GetString(Keys.DiagnosticChartImageServed, name);
		}
		
		public static string DiagnosticChartImageServedFail(string name, string reason)
		{
			return Keys.GetString(Keys.DiagnosticChartImageServedFail, name, reason);
		}
		
		public static string DiagnosticChartImageServedFailPrivacyFail(string keyType)
		{
			return Keys.GetString(Keys.DiagnosticChartImageServedFailPrivacyFail, keyType);
		}
		
		[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
		public class Keys
		{
			
			static ResourceManager resourceManager = new ResourceManager(typeof(SR).FullName, typeof(SR).Module.Assembly);
			
			static CultureInfo _culture = null;
			
			public const string ExceptionElementPositionConverter = "ExceptionElementPositionConverter";
			
			public const string ExceptionInvalidServiceContainer = "ExceptionInvalidServiceContainer";
			
			public const string ExceptionImageLoaderInvalidServiceContainer = "ExceptionImageLoaderInvalidServiceContainer";
			
			public const string ExceptionImageLoaderUnsupportedType = "ExceptionImageLoaderUnsupportedType";
			
			public const string ExceptionImageLoaderIncorrectImageUrl = "ExceptionImageLoaderIncorrectImageUrl";
			
			public const string ExceptionImageLoaderIncorrectImageLocation = "ExceptionImageLoaderIncorrectImageLocation";
			
			public const string ExceptionImageMapAddedHasWrongType = "ExceptionImageMapAddedHasWrongType";
			
			public const string ExceptionImageMapInsertedHasWrongType = "ExceptionImageMapInsertedHasWrongType";
			
			public const string ExceptionImageMapCircleShapeInvalid = "ExceptionImageMapCircleShapeInvalid";
			
			public const string ExceptionImageMapRectangleShapeInvalid = "ExceptionImageMapRectangleShapeInvalid";
			
			public const string ExceptionImageMapPolygonShapeInvalid = "ExceptionImageMapPolygonShapeInvalid";
			
			public const string ExceptionAnnotationNameIsEmpty = "ExceptionAnnotationNameIsEmpty";
			
			public const string ExceptionAnnotationNameIsNotUnique = "ExceptionAnnotationNameIsNotUnique";
			
			public const string ExceptionAnnotationNameAlreadyExistsInCollection = "ExceptionAnnotationNameAlreadyExistsInCollection";
			
			public const string ExceptionAnnotationNameNotFound = "ExceptionAnnotationNameNotFound";
			
			public const string ExceptionAnnotationPathAddLineAsSegmentsInvalid = "ExceptionAnnotationPathAddLineAsSegmentsInvalid";
			
			public const string ExceptionAnnotationLineWidthIsNegative = "ExceptionAnnotationLineWidthIsNegative";
			
			public const string ExceptionAnnotationAnchorOffsetInvalid = "ExceptionAnnotationAnchorOffsetInvalid";
			
			public const string ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty = "ExceptionAnnotationGroupedAnchorDataPointMustBeEmpty";
			
			public const string ExceptionAnnotationGroupedUnableToStartPlacement = "ExceptionAnnotationGroupedUnableToStartPlacement";
			
			public const string ExceptionAnnotationNotInCollection = "ExceptionAnnotationNotInCollection";
			
			public const string ExceptionAnnotationGroupedAxisMustBeEmpty = "ExceptionAnnotationGroupedAxisMustBeEmpty";
			
			public const string ExceptionAnnotationArrowSizeIsZero = "ExceptionAnnotationArrowSizeIsZero";
			
			public const string ExceptionAnnotationArrowSizeMustBeLessThen100 = "ExceptionAnnotationArrowSizeMustBeLessThen100";
			
			public const string ExceptionAnnotationArrowStyleUnknown = "ExceptionAnnotationArrowStyleUnknown";
			
			public const string ExceptionInvalidIndexerArgumentType = "ExceptionInvalidIndexerArgumentType";
			
			public const string ExceptionTitleNameIsNotUnique = "ExceptionTitleNameIsNotUnique";
			
			public const string ExceptionTitleNameAddedIsNotUnique = "ExceptionTitleNameAddedIsNotUnique";
			
			public const string ExceptionTitleNameNotFound = "ExceptionTitleNameNotFound";
			
			public const string ExceptionTitleNameIsEmpty = "ExceptionTitleNameIsEmpty";
			
			public const string ExceptionDataSeriesNameNotFound = "ExceptionDataSeriesNameNotFound";
			
			public const string ExceptionDataSeriesObjectRequired = "ExceptionDataSeriesObjectRequired";
			
			public const string ExceptionDataSeriesNameIsEmpty = "ExceptionDataSeriesNameIsEmpty";
			
			public const string ExceptionDataSeriesYValuesPerPointIsZero = "ExceptionDataSeriesYValuesPerPointIsZero";
			
			public const string ExceptionDataSeriesPointTypeUnsupported = "ExceptionDataSeriesPointTypeUnsupported";
			
			public const string ExceptionDataSeriesYValueIndexNotExists = "ExceptionDataSeriesYValueIndexNotExists";
			
			public const string ExceptionDataSeriesKeywordFormatInvalid = "ExceptionDataSeriesKeywordFormatInvalid";
			
			public const string ExceptionDataSeriesChartAreaInvalid = "ExceptionDataSeriesChartAreaInvalid";
			
			public const string ExceptionDataSeriesYValueNumberInvalid = "ExceptionDataSeriesYValueNumberInvalid";
			
			public const string ExceptionSeriesNameIsNotUnique = "ExceptionSeriesNameIsNotUnique";
			
			public const string ExceptionSeriesNameAddedIsNotUnique = "ExceptionSeriesNameAddedIsNotUnique";
			
			public const string ExceptionSeriesNameIsEmpty = "ExceptionSeriesNameIsEmpty";
			
			public const string ExceptionEditorChartTypeRegistryServiceInaccessible = "ExceptionEditorChartTypeRegistryServiceInaccessible";
			
			public const string ExceptionEditorChartTypeRegistryServiceInObjectInaccessible = "ExceptionEditorChartTypeRegistryServiceInObjectInaccessible";
			
			public const string ExceptionEditorMultipleSeriesEditiingUnsupported = "ExceptionEditorMultipleSeriesEditiingUnsupported";
			
			public const string ExceptionEditorContectInstantsIsNotChartObject = "ExceptionEditorContectInstantsIsNotChartObject";
			
			public const string ExceptionEditorUITypeEditorInapplicable = "ExceptionEditorUITypeEditorInapplicable";
			
			public const string ExceptionEditorUITypeEditorInt32ApplicableOnly = "ExceptionEditorUITypeEditorInt32ApplicableOnly";
			
			public const string ExceptionLegendDesignerMarginObjectInvalid = "ExceptionLegendDesignerMarginObjectInvalid";
			
			public const string ExceptionRectangleConverterStringFormatInvalid = "ExceptionRectangleConverterStringFormatInvalid";
			
			public const string ExceptionChartAreaAddedIsNotUnique = "ExceptionChartAreaAddedIsNotUnique";
			
			public const string ExceptionChartAreaInsertedIsNotUnique = "ExceptionChartAreaInsertedIsNotUnique";
			
			public const string ExceptionChartAreaObjectRequired = "ExceptionChartAreaObjectRequired";
			
			public const string ExceptionChartAreaAlreadyExistsInCollection = "ExceptionChartAreaAlreadyExistsInCollection";
			
			public const string ExceptionChartAreaInsertedHasWrongType = "ExceptionChartAreaInsertedHasWrongType";
			
			public const string ExceptionChartAreaAlreadyExistsShort = "ExceptionChartAreaAlreadyExistsShort";
			
			public const string ExceptionChartAreaNameIsEmpty = "ExceptionChartAreaNameIsEmpty";
			
			public const string ExceptionChartArea3DPerspectiveInvalid = "ExceptionChartArea3DPerspectiveInvalid";
			
			public const string ExceptionChartArea3DInclinationInvalid = "ExceptionChartArea3DInclinationInvalid";
			
			public const string ExceptionChartArea3DRotationInvalid = "ExceptionChartArea3DRotationInvalid";
			
			public const string ExceptionChartArea3DWallWidthInvalid = "ExceptionChartArea3DWallWidthInvalid";
			
			public const string ExceptionChartArea3DPointsDepthInvalid = "ExceptionChartArea3DPointsDepthInvalid";
			
			public const string ExceptionChartArea3DPointsGapInvalid = "ExceptionChartArea3DPointsGapInvalid";
			
			public const string ExceptionCursorIntervalOffsetIsNegative = "ExceptionCursorIntervalOffsetIsNegative";
			
			public const string ExceptionCursorLineWidthIsNegative = "ExceptionCursorLineWidthIsNegative";
			
			public const string ExceptionGraphicsMarkerStyleUnknown = "ExceptionGraphicsMarkerStyleUnknown";
			
			public const string ExceptionGraphics3DMarkerStyleUnknown = "ExceptionGraphics3DMarkerStyleUnknown";
			
			public const string ExceptionGraphics3DCoordinatesInvalid = "ExceptionGraphics3DCoordinatesInvalid";
			
			public const string ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid = "ExceptionAxisLabelsAutoFitMinFontSizeValueInvalid";
			
			public const string ExceptionAxisLabelsIntervalTypeUnsupported = "ExceptionAxisLabelsIntervalTypeUnsupported";
			
			public const string ExceptionAxisLabelRowIndexIsNegative = "ExceptionAxisLabelRowIndexIsNegative";
			
			public const string ExceptionAxisLabelRowIndexMustBe1Or2 = "ExceptionAxisLabelRowIndexMustBe1Or2";
			
			public const string ExceptionAxisLabelIndexIsNegative = "ExceptionAxisLabelIndexIsNegative";
			
			public const string ExceptionAxisLabelFontAngleInvalid = "ExceptionAxisLabelFontAngleInvalid";
			
			public const string ExceptionCustomLabelAddedHasWrongType = "ExceptionCustomLabelAddedHasWrongType";
			
			public const string ExceptionCustomLabelInsertedHasWrongType = "ExceptionCustomLabelInsertedHasWrongType";
			
			public const string ExceptionSmartLabelsDirectionUndefined = "ExceptionSmartLabelsDirectionUndefined";
			
			public const string ExceptionSmartLabelsMinMovingDistanceIsNegative = "ExceptionSmartLabelsMinMovingDistanceIsNegative";
			
			public const string ExceptionSmartLabelsMaxMovingDistanceIsNegative = "ExceptionSmartLabelsMaxMovingDistanceIsNegative";
			
			public const string ExceptionStripLineAddedHasWrongType = "ExceptionStripLineAddedHasWrongType";
			
			public const string ExceptionStripLineWidthIsNegative = "ExceptionStripLineWidthIsNegative";
			
			public const string ExceptionAxisWidthIsNegative = "ExceptionAxisWidthIsNegative";
			
			public const string ExceptionAxisDynamicIntervalCalculationFailed = "ExceptionAxisDynamicIntervalCalculationFailed";
			
			public const string ExceptionAxisIntervalDecreasingFailed = "ExceptionAxisIntervalDecreasingFailed";
			
			public const string ExceptionAxisIntervalIncreasingFailed = "ExceptionAxisIntervalIncreasingFailed";
			
			public const string ExceptionAxisLabelsAutoFitMaxFontSizeInvalid = "ExceptionAxisLabelsAutoFitMaxFontSizeInvalid";
			
			public const string ExceptionAxisMinimumMaximumInvalid = "ExceptionAxisMinimumMaximumInvalid";
			
			public const string ExceptionAxisStackedChartsDataPointsNumberMismatch = "ExceptionAxisStackedChartsDataPointsNumberMismatch";
			
			public const string ExceptionAxisSeriesNotAligned = "ExceptionAxisSeriesNotAligned";
			
			public const string ExceptionSubAxisNameNotFoundShort = "ExceptionSubAxisNameNotFoundShort";
			
			public const string ExceptionSubAxisNameIsNotUnique = "ExceptionSubAxisNameIsNotUnique";
			
			public const string ExceptionEnumInvalid = "ExceptionEnumInvalid";
			
			public const string ExceptionAxisScaleLogarithmBaseInvalid = "ExceptionAxisScaleLogarithmBaseInvalid";
			
			public const string ExceptionAxisScalePositionInvalid = "ExceptionAxisScalePositionInvalid";
			
			public const string ExceptionAxisScalePositionToValueCallFailed = "ExceptionAxisScalePositionToValueCallFailed";
			
			public const string ExceptionAxisScaleIntervalIsZero = "ExceptionAxisScaleIntervalIsZero";
			
			public const string ExceptionAxisScaleMinimumMaximumInvalid = "ExceptionAxisScaleMinimumMaximumInvalid";
			
			public const string ExceptionAxisScaleIntervalIsLessThen1Year = "ExceptionAxisScaleIntervalIsLessThen1Year";
			
			public const string ExceptionAxisScaleAutoIntervalInvalid = "ExceptionAxisScaleAutoIntervalInvalid";
			
			public const string ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint = "ExceptionAxisScaleMinimumValueIsGreaterThenMaximumDataPoint";
			
			public const string ExceptionAxisScaleLogarithmicNegativeValues = "ExceptionAxisScaleLogarithmicNegativeValues";
			
			public const string ExceptionChartAreaAxisScaleLogarithmicUnsuitable = "ExceptionChartAreaAxisScaleLogarithmicUnsuitable";
			
			public const string ExceptionChartAreaChartTypesCanNotCombine = "ExceptionChartAreaChartTypesCanNotCombine";
			
			public const string ExceptionChartAreaSeriesNotFound = "ExceptionChartAreaSeriesNotFound";
			
			public const string ExceptionAxisScaleBreaksNumberInvalid = "ExceptionAxisScaleBreaksNumberInvalid";
			
			public const string ExceptionAxisScaleBreaksCollapsibleSpaceInvalid = "ExceptionAxisScaleBreaksCollapsibleSpaceInvalid";
			
			public const string ExceptionAxisScaleBreaksSpacingInvalid = "ExceptionAxisScaleBreaksSpacingInvalid";
			
			public const string ExceptionAxisScaleBreaksLineWidthInvalid = "ExceptionAxisScaleBreaksLineWidthInvalid";
			
			public const string ExceptionAxisScaleSegmentsPositionInvalid = "ExceptionAxisScaleSegmentsPositionInvalid";
			
			public const string ExceptionAxisScaleSegmentsSizeInvalid = "ExceptionAxisScaleSegmentsSizeInvalid";
			
			public const string ExceptionAxisScaleSegmentsSpacingInvalid = "ExceptionAxisScaleSegmentsSpacingInvalid";
			
			public const string ExceptionTickMarksIntervalIsZero = "ExceptionTickMarksIntervalIsZero";
			
			public const string ExceptionTickMarksIntervalIsNegative = "ExceptionTickMarksIntervalIsNegative";
			
			public const string ExceptionScrollBarSizeInvalid = "ExceptionScrollBarSizeInvalid";
			
			public const string ExceptionScrollBarZoomResetsNumberInvalid = "ExceptionScrollBarZoomResetsNumberInvalid";
			
			public const string ExceptionMarkerStepNegativeValue = "ExceptionMarkerStepNegativeValue";
			
			public const string ExceptionTextThresholdIsNegative = "ExceptionTextThresholdIsNegative";
			
			public const string ExceptionNamedImageObjectRequired = "ExceptionNamedImageObjectRequired";
			
			public const string ExceptionNamedImageNotFound = "ExceptionNamedImageNotFound";
			
			public const string ExceptionNamedImageAddedIsNotUnique = "ExceptionNamedImageAddedIsNotUnique";
			
			public const string ExceptionNamedImageInsertedIsNotUnique = "ExceptionNamedImageInsertedIsNotUnique";
			
			public const string ExceptionNamedImageInsertedHasWrongType = "ExceptionNamedImageInsertedHasWrongType";
			
			public const string ExceptionLegendNameIsEmpty = "ExceptionLegendNameIsEmpty";
			
			public const string ExceptionLegendNameIsNotUnique = "ExceptionLegendNameIsNotUnique";
			
			public const string ExceptionLegendNotFound = "ExceptionLegendNotFound";
			
			public const string ExceptionLegendAddedIsNotUnique = "ExceptionLegendAddedIsNotUnique";
			
			public const string ExceptionLegendAddedHasWrongType = "ExceptionLegendAddedHasWrongType";
			
			public const string ExceptionLegendInsertedHasWrongType = "ExceptionLegendInsertedHasWrongType";
			
			public const string ExceptionLegendDockedChartAreaIsMissing = "ExceptionLegendDockedChartAreaIsMissing";
			
			public const string ExceptionBackSecondaryColorIsTransparent = "ExceptionBackSecondaryColorIsTransparent";
			
			public const string ExceptionLegendReferencedInSeriesNotFound = "ExceptionLegendReferencedInSeriesNotFound";
			
			public const string ExceptionLegendAutoFitMinFontSizeInvalid = "ExceptionLegendAutoFitMinFontSizeInvalid";
			
			public const string ExceptionLegendMaximumAutoSizeInvalid = "ExceptionLegendMaximumAutoSizeInvalid";
			
			public const string ExceptionLegendColumnSpacingInvalid = "ExceptionLegendColumnSpacingInvalid";
			
			public const string ExceptionLegendSeparatorTypeUnknown = "ExceptionLegendSeparatorTypeUnknown";
			
			public const string ExceptionLegendMarkerBorderWidthIsNegative = "ExceptionLegendMarkerBorderWidthIsNegative";
			
			public const string ExceptionLegendCellTypeUnknown = "ExceptionLegendCellTypeUnknown";
			
			public const string ExceptionLegendItemAddedHasWrongType = "ExceptionLegendItemAddedHasWrongType";
			
			public const string ExceptionLegendItemInsertedHasWrongType = "ExceptionLegendItemInsertedHasWrongType";
			
			public const string ExceptionLegendColumnIsEmpty = "ExceptionLegendColumnIsEmpty";
			
			public const string ExceptionLegendColumnAlreadyExistsInCollection = "ExceptionLegendColumnAlreadyExistsInCollection";
			
			public const string ExceptionSeriesSymbolSizeIsNegative = "ExceptionSeriesSymbolSizeIsNegative";
			
			public const string ExceptionMinimumCellWidthIsWrong = "ExceptionMinimumCellWidthIsWrong";
			
			public const string ExceptionMaximumCellWidthIsWrong = "ExceptionMaximumCellWidthIsWrong";
			
			public const string ExceptionLegendCellNameAlreadyExistsInCollection = "ExceptionLegendCellNameAlreadyExistsInCollection";
			
			public const string ExceptionLegendCellNameIsEmpty = "ExceptionLegendCellNameIsEmpty";
			
			public const string ExceptionLegendCellImageSizeIsNegative = "ExceptionLegendCellImageSizeIsNegative";
			
			public const string ExceptionLegendCellSeriesSymbolSizeIsNegative = "ExceptionLegendCellSeriesSymbolSizeIsNegative";
			
			public const string ExceptionLegendCellSpanIsLessThenOne = "ExceptionLegendCellSpanIsLessThenOne";
			
			public const string ExceptionLegendCellNotFound = "ExceptionLegendCellNotFound";
			
			public const string ExceptionLegendCellColumnNotFound = "ExceptionLegendCellColumnNotFound";
			
			public const string ExceptionLegendCellColumnAlreadyExistsInCollection = "ExceptionLegendCellColumnAlreadyExistsInCollection";
			
			public const string ExceptionMarginTopIsNegative = "ExceptionMarginTopIsNegative";
			
			public const string ExceptionMarginBottomIsNegative = "ExceptionMarginBottomIsNegative";
			
			public const string ExceptionMarginLeftIsNegative = "ExceptionMarginLeftIsNegative";
			
			public const string ExceptionMarginRightIsNegative = "ExceptionMarginRightIsNegative";
			
			public const string ExceptionElementPositionArgumentOutOfRange = "ExceptionElementPositionArgumentOutOfRange";
			
			public const string ExceptionChartHeightIsNotInPixels = "ExceptionChartHeightIsNotInPixels";
			
			public const string ExceptionChartWidthIsNotInPixels = "ExceptionChartWidthIsNotInPixels";
			
			public const string ExceptionChartBorderIsNegative = "ExceptionChartBorderIsNegative";
			
			public const string ExceptionChartAreaNameReferenceInvalid = "ExceptionChartAreaNameReferenceInvalid";
			
			public const string ExceptionChartCompressionInvalid = "ExceptionChartCompressionInvalid";
			
			public const string ExceptionChartDataPointsAlignmentFaild = "ExceptionChartDataPointsAlignmentFaild";
			
			public const string ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid = "ExceptionChartDataPointsAlignmentFaildAxisLabelsInvalid";
			
			public const string ExceptionChartDataPointsInsertionFailedYValuesEmpty = "ExceptionChartDataPointsInsertionFailedYValuesEmpty";
			
			public const string ExceptionTraceManagerUnsupportedType = "ExceptionTraceManagerUnsupportedType";
			
			public const string ExceptionChartTypeRegistryUnsupportedType = "ExceptionChartTypeRegistryUnsupportedType";
			
			public const string ExceptionChartTypeNameIsNotUnique = "ExceptionChartTypeNameIsNotUnique";
			
			public const string ExceptionChartTypeHasNoInterface = "ExceptionChartTypeHasNoInterface";
			
			public const string ExceptionChartTypeUnknown = "ExceptionChartTypeUnknown";
			
			public const string ExceptionChartTypeRequiresYValues = "ExceptionChartTypeRequiresYValues";
			
			public const string ExceptionChartTypeSecondaryYAxisUnsupported = "ExceptionChartTypeSecondaryYAxisUnsupported";
			
			public const string ExceptionChartTypeSecondaryXAxisUnsupported = "ExceptionChartTypeSecondaryXAxisUnsupported";
			
			public const string ExceptionChartTypeCanNotCombine = "ExceptionChartTypeCanNotCombine";
			
			public const string ExceptionBorderTypeRegistryUnsupportedType = "ExceptionBorderTypeRegistryUnsupportedType";
			
			public const string ExceptionBorderTypeNameIsNotUnique = "ExceptionBorderTypeNameIsNotUnique";
			
			public const string ExceptionBorderTypeHasNoInterface = "ExceptionBorderTypeHasNoInterface";
			
			public const string ExceptionBorderTypeUnknown = "ExceptionBorderTypeUnknown";
			
			public const string ExceptionChartSerializerUnsupportedType = "ExceptionChartSerializerUnsupportedType";
			
			public const string ExceptionChartSerializerContentFlagUnsupported = "ExceptionChartSerializerContentFlagUnsupported";
			
			public const string ExceptionChartSerializerDefaultConstructorUndefined = "ExceptionChartSerializerDefaultConstructorUndefined";
			
			public const string ExceptionChartSerializerContentStringFormatInvalid = "ExceptionChartSerializerContentStringFormatInvalid";
			
			public const string ExceptionChartSerializerClassNameUndefined = "ExceptionChartSerializerClassNameUndefined";
			
			public const string ExceptionChartSerializerPropertyNameUndefined = "ExceptionChartSerializerPropertyNameUndefined";
			
			public const string ExceptionChartSerializerTypeUnsupported = "ExceptionChartSerializerTypeUnsupported";
			
			public const string ExceptionChartSerializerWriterObjectInvalid = "ExceptionChartSerializerWriterObjectInvalid";
			
			public const string ExceptionChartSerializerReaderObjectInvalid = "ExceptionChartSerializerReaderObjectInvalid";
			
			public const string ExceptionChartSerializerPropertyNameUnknown = "ExceptionChartSerializerPropertyNameUnknown";
			
			public const string ExceptionChartSerializerDestinationObjectInvalid = "ExceptionChartSerializerDestinationObjectInvalid";
			
			public const string ExceptionChartSerializerSourceObjectInvalid = "ExceptionChartSerializerSourceObjectInvalid";
			
			public const string ExceptionChartSerializerBinaryTypeUnsupported = "ExceptionChartSerializerBinaryTypeUnsupported";
			
			public const string ExceptionChartSerializerBinaryHashCodeDuplicate = "ExceptionChartSerializerBinaryHashCodeDuplicate";
			
			public const string ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported = "ExceptionChartSerializerBinaryIgnoreUnknownAttributesUnsupported";
			
			public const string ExceptionChartSerializerBinaryFromatInvalid = "ExceptionChartSerializerBinaryFromatInvalid";
			
			public const string ExceptionChartSerializerPropertyNotFound = "ExceptionChartSerializerPropertyNotFound";
			
			public const string ExceptionDataManipulatorPointCountIsZero = "ExceptionDataManipulatorPointCountIsZero";
			
			public const string ExceptionDataManipulatorIndexUndefined = "ExceptionDataManipulatorIndexUndefined";
			
			public const string ExceptionDataManipulatorIndexFormatInvalid = "ExceptionDataManipulatorIndexFormatInvalid";
			
			public const string ExceptionDataManipulatorGroupedSeriesNotSorted = "ExceptionDataManipulatorGroupedSeriesNotSorted";
			
			public const string ExceptionDataManipulatorGroupingFormulaUndefined = "ExceptionDataManipulatorGroupingFormulaUndefined";
			
			public const string ExceptionDataManipulatorYValuesIndexExceeded = "ExceptionDataManipulatorYValuesIndexExceeded";
			
			public const string ExceptionDataManipulatorGroupingFormulaAlreadyDefined = "ExceptionDataManipulatorGroupingFormulaAlreadyDefined";
			
			public const string ExceptionDataManipulatorGroupingFormulaUnsupported = "ExceptionDataManipulatorGroupingFormulaUnsupported";
			
			public const string ExceptionDataManipulatorGroupingFormulaFormatInvalid = "ExceptionDataManipulatorGroupingFormulaFormatInvalid";
			
			public const string ExceptionDataManipulatorGroupingInputSeriesUndefined = "ExceptionDataManipulatorGroupingInputSeriesUndefined";
			
			public const string ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch = "ExceptionDataManipulatorGroupingInputOutputSeriesNumberMismatch";
			
			public const string ExceptionDataManipulatorGroupingFormulaNameInvalid = "ExceptionDataManipulatorGroupingFormulaNameInvalid";
			
			public const string ExceptionDataBindYValuesToString = "ExceptionDataBindYValuesToString";
			
			public const string ExceptionDataBindXValuesToString = "ExceptionDataBindXValuesToString";
			
			public const string ExceptionDataBindSeriesToString = "ExceptionDataBindSeriesToString";
			
			public const string ExceptionDataBindSeriesGroupByParameterIsEmpty = "ExceptionDataBindSeriesGroupByParameterIsEmpty";
			
			public const string ExceptionChartPictureUnsupportedType = "ExceptionChartPictureUnsupportedType";
			
			public const string ExceptionImageUrlIsEmpty = "ExceptionImageUrlIsEmpty";
			
			public const string ExceptionImageUrlInvalidFormatters = "ExceptionImageUrlInvalidFormatters";
			
			public const string ExceptionImageUrlInvalidFormat = "ExceptionImageUrlInvalidFormat";
			
			public const string ExceptionImageUrlMissedFormatter = "ExceptionImageUrlMissedFormatter";
			
			public const string ExceptionSubAxisNameNotFound = "ExceptionSubAxisNameNotFound";
			
			public const string ExceptionSubAxisNameAlreadyExistsInCollection = "ExceptionSubAxisNameAlreadyExistsInCollection";
			
			public const string ExceptionChartTitleSetIsNotUnique = "ExceptionChartTitleSetIsNotUnique";
			
			public const string ExceptionChartTitleAddedIsNotUnique = "ExceptionChartTitleAddedIsNotUnique";
			
			public const string ExceptionChartTitleDockedChartAreaIsMissing = "ExceptionChartTitleDockedChartAreaIsMissing";
			
			public const string ExceptionDataManagerUnsupportedType = "ExceptionDataManagerUnsupportedType";
			
			public const string ExceptionDataManager100StackedSeriesPointsNumeberMismatch = "ExceptionDataManager100StackedSeriesPointsNumeberMismatch";
			
			public const string ExceptionKeywordsRegistryUnsupportedType = "ExceptionKeywordsRegistryUnsupportedType";
			
			public const string ExceptionCustomAttributesRegistryUnsupportedType = "ExceptionCustomAttributesRegistryUnsupportedType";
			
			public const string ExceptionFormulaModuleNameIsNotUnique = "ExceptionFormulaModuleNameIsNotUnique";
			
			public const string ExceptionFormulaModuleHasNoInterface = "ExceptionFormulaModuleHasNoInterface";
			
			public const string ExceptionFormulaModuleRegistryUnsupportedType = "ExceptionFormulaModuleRegistryUnsupportedType";
			
			public const string ExceptionFormulaModuleNameUnknown = "ExceptionFormulaModuleNameUnknown";
			
			public const string ExceptionColumnNameNotFound = "ExceptionColumnNameNotFound";
			
			public const string ExceptionDataPointConverterInvalidSorting = "ExceptionDataPointConverterInvalidSorting";
			
			public const string ExceptionDataPointConverterUnavailableSorting = "ExceptionDataPointConverterUnavailableSorting";
			
			public const string ExceptionDataPointConverterWrongTypes = "ExceptionDataPointConverterWrongTypes";
			
			public const string ExceptionDataPointInsertionXValuesQtyIsLessYValues = "ExceptionDataPointInsertionXValuesQtyIsLessYValues";
			
			public const string ExceptionDataPointValueNameInvalid = "ExceptionDataPointValueNameInvalid";
			
			public const string ExceptionDataPointValueNameYIndexOutOfRange = "ExceptionDataPointValueNameYIndexOutOfRange";
			
			public const string ExceptionDataPointValueNameYIndexIsNotPositive = "ExceptionDataPointValueNameYIndexIsNotPositive";
			
			public const string ExceptionDataPointInsertionNoDataSource = "ExceptionDataPointInsertionNoDataSource";
			
			public const string ExceptionDataPointYValuesCountMismatch = "ExceptionDataPointYValuesCountMismatch";
			
			public const string ExceptionDataPointYValuesBindingCountMismatch = "ExceptionDataPointYValuesBindingCountMismatch";
			
			public const string ExceptionDataPointYValuesSettingCountMismatch = "ExceptionDataPointYValuesSettingCountMismatch";
			
			public const string ExceptionDataPointBindingYValueNotSpecified = "ExceptionDataPointBindingYValueNotSpecified";
			
			public const string ExceptionDataPointInsertionYValueNotSpecified = "ExceptionDataPointInsertionYValueNotSpecified";
			
			public const string ExceptionAttributeUnableToDelete = "ExceptionAttributeUnableToDelete";
			
			public const string ExceptionAttributeNameIsEmpty = "ExceptionAttributeNameIsEmpty";
			
			public const string ExceptionAttributeInvalidFormat = "ExceptionAttributeInvalidFormat";
			
			public const string ExceptionAttributeNameIsNotUnique = "ExceptionAttributeNameIsNotUnique";
			
			public const string ExceptionAttributeDrawSideBySideInvalid = "ExceptionAttributeDrawSideBySideInvalid";
			
			public const string ExceptionLabelBorderIsNotPositive = "ExceptionLabelBorderIsNotPositive";
			
			public const string ExceptionBorderWidthIsNotPositive = "ExceptionBorderWidthIsNotPositive";
			
			public const string ExceptionAngleRangeInvalid = "ExceptionAngleRangeInvalid";
			
			public const string ExceptionDataPointYValueStringFormat = "ExceptionDataPointYValueStringFormat";
			
			public const string ExceptionParameterFormatInvalid = "ExceptionParameterFormatInvalid";
			
			public const string ExceptionStatisticalAnalysesInvalidAlphaValue = "ExceptionStatisticalAnalysesInvalidAlphaValue";
			
			public const string ExceptionStatisticalAnalysesInvalidProbabilityValue = "ExceptionStatisticalAnalysesInvalidProbabilityValue";
			
			public const string ExceptionStatisticalAnalysesInvalidDegreeOfFreedom = "ExceptionStatisticalAnalysesInvalidDegreeOfFreedom";
			
			public const string ExceptionStatisticalAnalysesNegativeMeanDifference = "ExceptionStatisticalAnalysesNegativeMeanDifference";
			
			public const string ExceptionStatisticalAnalysesInvalidSeriesNumber = "ExceptionStatisticalAnalysesInvalidSeriesNumber";
			
			public const string ExceptionStatisticalAnalysesInvalidMeanDifference = "ExceptionStatisticalAnalysesInvalidMeanDifference";
			
			public const string ExceptionStatisticalAnalysesNotEnoughDataPoints = "ExceptionStatisticalAnalysesNotEnoughDataPoints";
			
			public const string ExceptionStatisticalAnalysesInvalidVariance = "ExceptionStatisticalAnalysesInvalidVariance";
			
			public const string ExceptionStatisticalAnalysesInvalidTValue = "ExceptionStatisticalAnalysesInvalidTValue";
			
			public const string ExceptionStatisticalAnalysesGammaBetaNegativeParameters = "ExceptionStatisticalAnalysesGammaBetaNegativeParameters";
			
			public const string ExceptionStatisticalAnalysesInvalidZValue = "ExceptionStatisticalAnalysesInvalidZValue";
			
			public const string ExceptionStatisticalAnalysesZeroVariance = "ExceptionStatisticalAnalysesZeroVariance";
			
			public const string ExceptionStatisticalAnalysesNotEnoughInputSeries = "ExceptionStatisticalAnalysesNotEnoughInputSeries";
			
			public const string ExceptionStatisticalAnalysesInvalidVariableRanges = "ExceptionStatisticalAnalysesInvalidVariableRanges";
			
			public const string ExceptionStatisticalAnalysesStudentsInvalidTValue = "ExceptionStatisticalAnalysesStudentsInvalidTValue";
			
			public const string ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree = "ExceptionStatisticalAnalysesStudentsNegativeFreedomDegree";
			
			public const string ExceptionStatisticalAnalysesNormalInvalidProbabilityValue = "ExceptionStatisticalAnalysesNormalInvalidProbabilityValue";
			
			public const string ExceptionStatisticalAnalysesInvalidTailedParameter = "ExceptionStatisticalAnalysesInvalidTailedParameter";
			
			public const string ExceptionStatisticalAnalysesInvalidInputParameter = "ExceptionStatisticalAnalysesInvalidInputParameter";
			
			public const string ExceptionStatisticalAnalysesIncompleteBetaFunction = "ExceptionStatisticalAnalysesIncompleteBetaFunction";
			
			public const string ExceptionStatisticalAnalysesInvalidAnovaTest = "ExceptionStatisticalAnalysesInvalidAnovaTest";
			
			public const string ExceptionStatisticalAnalysesCovariance = "ExceptionStatisticalAnalysesCovariance";
			
			public const string ExceptionStatisticalAnalysesInvalidMedianConditions = "ExceptionStatisticalAnalysesInvalidMedianConditions";
			
			public const string ExceptionStatisticalAnalysesInvalidMeanConditions = "ExceptionStatisticalAnalysesInvalidMeanConditions";
			
			public const string ExceptionStatisticalAnalysesInvalidVarianceConditions = "ExceptionStatisticalAnalysesInvalidVarianceConditions";
			
			public const string ExceptionPeriodParameterIsNegative = "ExceptionPeriodParameterIsNegative";
			
			public const string ExceptionPeriodAverageParameterIsNegative = "ExceptionPeriodAverageParameterIsNegative";
			
			public const string ExceptionPeriodShortParameterIsNegative = "ExceptionPeriodShortParameterIsNegative";
			
			public const string ExceptionPeriodLongParameterIsNegative = "ExceptionPeriodLongParameterIsNegative";
			
			public const string ExceptionFormulaInvalidPeriod = "ExceptionFormulaInvalidPeriod";
			
			public const string ExceptionFormulaNotEnoughDataPoints = "ExceptionFormulaNotEnoughDataPoints";
			
			public const string ExceptionIndicatorsDeviationMissing = "ExceptionIndicatorsDeviationMissing";
			
			public const string ExceptionIndicatorsLongPeriodLessThenShortPeriod = "ExceptionIndicatorsLongPeriodLessThenShortPeriod";
			
			public const string ExceptionOscillatorObjectInvalidPeriod = "ExceptionOscillatorObjectInvalidPeriod";
			
			public const string ExceptionOscillatorNegativeSignalPeriod = "ExceptionOscillatorNegativeSignalPeriod";
			
			public const string ExceptionOscillatorNegativePeriodParameter = "ExceptionOscillatorNegativePeriodParameter";
			
			public const string ExceptionVolumeIndicatorStartValueMissing = "ExceptionVolumeIndicatorStartValueMissing";
			
			public const string ExceptionPriceIndicatorsShiftParameterMissing = "ExceptionPriceIndicatorsShiftParameterMissing";
			
			public const string ExceptionPriceIndicatorsSameYNumber = "ExceptionPriceIndicatorsSameYNumber";
			
			public const string ExceptionPriceIndicatorsSameXYNumber = "ExceptionPriceIndicatorsSameXYNumber";
			
			public const string ExceptionPriceIndicatorsPeriodMissing = "ExceptionPriceIndicatorsPeriodMissing";
			
			public const string ExceptionPriceIndicatorsNotEnoughPoints = "ExceptionPriceIndicatorsNotEnoughPoints";
			
			public const string ExceptionPriceIndicatorsFormulaRequiresOneArray = "ExceptionPriceIndicatorsFormulaRequiresOneArray";
			
			public const string ExceptionPriceIndicatorsFormulaRequiresTwoArrays = "ExceptionPriceIndicatorsFormulaRequiresTwoArrays";
			
			public const string ExceptionPriceIndicatorsFormulaRequiresThreeArrays = "ExceptionPriceIndicatorsFormulaRequiresThreeArrays";
			
			public const string ExceptionPriceIndicatorsFormulaRequiresFourArrays = "ExceptionPriceIndicatorsFormulaRequiresFourArrays";
			
			public const string ExceptionObjectReferenceIsNull = "ExceptionObjectReferenceIsNull";
			
			public const string ExceptionThreeLineBreakCanNotCobine = "ExceptionThreeLineBreakCanNotCobine";
			
			public const string ExceptionThreeLineBreakNullReference = "ExceptionThreeLineBreakNullReference";
			
			public const string ExceptionThreeLineBreakUsedYValueOutOfRange = "ExceptionThreeLineBreakUsedYValueOutOfRange";
			
			public const string ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid = "ExceptionThreeLineBreakNumberOfLinesInBreakFormatInvalid";
			
			public const string ExceptionThreeLineBreakUpBrickColorInvalid = "ExceptionThreeLineBreakUpBrickColorInvalid";
			
			public const string ExceptionThreeLineBreakUsedYValueInvalid = "ExceptionThreeLineBreakUsedYValueInvalid";
			
			public const string ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid = "ExceptionThreeLineBreakNumberOfLinesInBreakValueInvalid";
			
			public const string ExceptionRenkoCanNotCobine = "ExceptionRenkoCanNotCobine";
			
			public const string ExceptionRenkoNullReference = "ExceptionRenkoNullReference";
			
			public const string ExceptionRenkoUsedYValueOutOfRange = "ExceptionRenkoUsedYValueOutOfRange";
			
			public const string ExceptionRenkoBoxSizeFormatInvalid = "ExceptionRenkoBoxSizeFormatInvalid";
			
			public const string ExceptionRenkoUpBrickColorInvalid = "ExceptionRenkoUpBrickColorInvalid";
			
			public const string ExceptionRenkoUsedYValueFormatInvalid = "ExceptionRenkoUsedYValueFormatInvalid";
			
			public const string ExceptionPieIntervalsInvalid = "ExceptionPieIntervalsInvalid";
			
			public const string ExceptionPieUnassignedFrontBackPoints = "ExceptionPieUnassignedFrontBackPoints";
			
			public const string ExceptionPiePointOrderInvalid = "ExceptionPiePointOrderInvalid";
			
			public const string ExceptionPieHorizontalLineSizeInvalid = "ExceptionPieHorizontalLineSizeInvalid";
			
			public const string ExceptionPieRadialLineSizeInvalid = "ExceptionPieRadialLineSizeInvalid";
			
			public const string ExceptionPie3DLabelLineSizeInvalid = "ExceptionPie3DLabelLineSizeInvalid";
			
			public const string ExceptionPieRadiusInvalid = "ExceptionPieRadiusInvalid";
			
			public const string ExceptionPieMinimumRelativePieSizeInvalid = "ExceptionPieMinimumRelativePieSizeInvalid";
			
			public const string ExceptionPieOrderOperationInvalid = "ExceptionPieOrderOperationInvalid";
			
			public const string ExceptionPieIntervalsOverlapping = "ExceptionPieIntervalsOverlapping";
			
			public const string ExceptionDoughnutNullReference = "ExceptionDoughnutNullReference";
			
			public const string ExceptionDoughnutThresholdInvalid = "ExceptionDoughnutThresholdInvalid";
			
			public const string ExceptionDoughnutCollectedThresholdUsePercentInvalid = "ExceptionDoughnutCollectedThresholdUsePercentInvalid";
			
			public const string ExceptionDoughnutCollectedColorInvalidFormat = "ExceptionDoughnutCollectedColorInvalidFormat";
			
			public const string ExceptionDoughnutCollectedThresholdInvalidFormat = "ExceptionDoughnutCollectedThresholdInvalidFormat";
			
			public const string ExceptionDoughnutCollectedThresholdInvalidRange = "ExceptionDoughnutCollectedThresholdInvalidRange";
			
			public const string ExceptionPointAndFigureUpBrickColorInvalidFormat = "ExceptionPointAndFigureUpBrickColorInvalidFormat";
			
			public const string ExceptionPointAndFigureCanNotCombine = "ExceptionPointAndFigureCanNotCombine";
			
			public const string ExceptionPointAndFigureNullReference = "ExceptionPointAndFigureNullReference";
			
			public const string ExceptionPointAndFigureUsedYValueHighOutOfRange = "ExceptionPointAndFigureUsedYValueHighOutOfRange";
			
			public const string ExceptionPointAndFigureUsedYValueLowOutOfrange = "ExceptionPointAndFigureUsedYValueLowOutOfrange";
			
			public const string ExceptionPointAndFigureReversalAmountInvalidFormat = "ExceptionPointAndFigureReversalAmountInvalidFormat";
			
			public const string ExceptionPointAndFigureUsedYValueHighInvalidFormat = "ExceptionPointAndFigureUsedYValueHighInvalidFormat";
			
			public const string ExceptionPointAndFigureUsedYValueLowInvalidFormat = "ExceptionPointAndFigureUsedYValueLowInvalidFormat";
			
			public const string ExceptionFastPointMarkerStyleUnknown = "ExceptionFastPointMarkerStyleUnknown";
			
			public const string ExceptionFunnelAngleRangeInvalid = "ExceptionFunnelAngleRangeInvalid";
			
			public const string ExceptionFunnelCanNotCombine = "ExceptionFunnelCanNotCombine";
			
			public const string ExceptionFunnelNeckHeightInvalid = "ExceptionFunnelNeckHeightInvalid";
			
			public const string ExceptionFunnelNeckWidthInvalid = "ExceptionFunnelNeckWidthInvalid";
			
			public const string ExceptionKagiAttributeFormatInvalid = "ExceptionKagiAttributeFormatInvalid";
			
			public const string ExceptionKagiNullReference = "ExceptionKagiNullReference";
			
			public const string ExceptionKagiCanNotCombine = "ExceptionKagiCanNotCombine";
			
			public const string ExceptionKagiAttributeOutOfRange = "ExceptionKagiAttributeOutOfRange";
			
			public const string ExceptionStackedAreaChartSeriesDataPointsNumberMismatch = "ExceptionStackedAreaChartSeriesDataPointsNumberMismatch";
			
			public const string Exception3DPieLabelsIndexInvalid = "Exception3DPieLabelsIndexInvalid";
			
			public const string Exception3DChartPointsXValuesUnsorted = "Exception3DChartPointsXValuesUnsorted";
			
			public const string ExceptionFunnelStyleUnknown = "ExceptionFunnelStyleUnknown";
			
			public const string ExceptionFunnelMinimumPointHeightAttributeInvalid = "ExceptionFunnelMinimumPointHeightAttributeInvalid";
			
			public const string ExceptionErrorBarParameterUndefined = "ExceptionErrorBarParameterUndefined";
			
			public const string ExceptionErrorBarTypeInvalid = "ExceptionErrorBarTypeInvalid";
			
			public const string ExceptionErrorBarTypeFormatInvalid = "ExceptionErrorBarTypeFormatInvalid";
			
			public const string Exception3DSplineY1ValueIsLessThenY2 = "Exception3DSplineY1ValueIsLessThenY2";
			
			public const string ExceptionChartCanNotCombine = "ExceptionChartCanNotCombine";
			
			public const string ExceptionCustomAttributeValueInvalid = "ExceptionCustomAttributeValueInvalid";
			
			public const string ExceptionCustomAttributeValueInvalid2 = "ExceptionCustomAttributeValueInvalid2";
			
			public const string ExceptionCustomAttributeAngleOutOfRange = "ExceptionCustomAttributeAngleOutOfRange";
			
			public const string ExceptionCustomAttributeIsNotInRange0to1 = "ExceptionCustomAttributeIsNotInRange0to1";
			
			public const string ExceptionCustomAttributeIsNotInRange0to100 = "ExceptionCustomAttributeIsNotInRange0to100";
			
			public const string ExceptionCustomAttributeIsNotLargerThenZiro = "ExceptionCustomAttributeIsNotLargerThenZiro";
			
			public const string ExceptionCustomAttributeIsNotInRange0to50 = "ExceptionCustomAttributeIsNotInRange0to50";
			
			public const string ExceptionCustomAttributeSeriesNameNotFound = "ExceptionCustomAttributeSeriesNameNotFound";
			
			public const string ExceptionCustomAttributeMustBeMoreThenValue = "ExceptionCustomAttributeMustBeMoreThenValue";
			
			public const string ExceptionCustomAttributeMustBeBiggerThenValue = "ExceptionCustomAttributeMustBeBiggerThenValue";
			
			public const string ExceptionCustomAttributeMustBeInRange = "ExceptionCustomAttributeMustBeInRange";
			
			public const string ExceptionCustomAttributeDefaultValueTypeInvalid = "ExceptionCustomAttributeDefaultValueTypeInvalid";
			
			public const string ExceptionCustomAttributeTypeUnsupported = "ExceptionCustomAttributeTypeUnsupported";
			
			public const string ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid = "ExceptionCustomAttributeTypeOrMaximumPossibleValueInvalid";
			
			public const string ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported = "ExceptionCustomAttributeTypeOrMinimumPossibleValueUnsupported";
			
			public const string ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid = "ExceptionCustomAttributeTypeOrMinimumPossibleValueInvalid";
			
			public const string ExceptionFormulaDataItemsNumberMismatch = "ExceptionFormulaDataItemsNumberMismatch";
			
			public const string ExceptionFormulaDataItemsNumberMismatch2 = "ExceptionFormulaDataItemsNumberMismatch2";
			
			public const string ExceptionFormulaDataSeriesNameNotFoundInCollection = "ExceptionFormulaDataSeriesNameNotFoundInCollection";
			
			public const string ExceptionFormulaDataSeriesNameNotFound = "ExceptionFormulaDataSeriesNameNotFound";
			
			public const string ExceptionFormulaDataFormatInvalid = "ExceptionFormulaDataFormatInvalid";
			
			public const string ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect = "ExceptionFormulaDataOutputSeriesNumberYValuesIncorrect";
			
			public const string ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues = "ExceptionFormulaDataSeriesAreNotAlignedDifferentXValues";
			
			public const string ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints = "ExceptionFormulaDataSeriesAreNotAlignedDifferentDataPoints";
			
			public const string ExceptionFormulaYIndexInvalid = "ExceptionFormulaYIndexInvalid";
			
			public const string ExceptionFormulaXValuesNotAligned = "ExceptionFormulaXValuesNotAligned";
			
			public const string ExceptionFormulaInputOutputSeriesMismatch = "ExceptionFormulaInputOutputSeriesMismatch";
			
			public const string ExceptionFormulaNotFound = "ExceptionFormulaNotFound";
			
			public const string ExceptionForecastingDegreeInvalid = "ExceptionForecastingDegreeInvalid";
			
			public const string ExceptionForecastingNotEnoughDataPoints = "ExceptionForecastingNotEnoughDataPoints";
			
			public const string ExceptionForecastingExponentialRegressionHasZeroYValues = "ExceptionForecastingExponentialRegressionHasZeroYValues";
			
			public const string ExceptionForecastingPowerRegressionHasZeroYValues = "ExceptionForecastingPowerRegressionHasZeroYValues";
			
			public const string ExceptionBorderWidthIsNegative = "ExceptionBorderWidthIsNegative";
			
			public const string ExceptionBorderWidthIsZero = "ExceptionBorderWidthIsZero";
			
			public const string ExceptionLegendBorderWidthIsNegative = "ExceptionLegendBorderWidthIsNegative";
			
			public const string ExceptionTitleBorderWidthIsNegative = "ExceptionTitleBorderWidthIsNegative";
			
			public const string ExceptionMatrix3DNotinitialized = "ExceptionMatrix3DNotinitialized";
			
			public const string ExceptionPaletteIsEmpty = "ExceptionPaletteIsEmpty";
			
			public const string ExceptionValueMustBeGreaterThan = "ExceptionValueMustBeGreaterThan";
			
			public const string ExceptionValueMustBeLessThan = "ExceptionValueMustBeLessThan";
			
			public const string ExceptionValueMustBeInRange = "ExceptionValueMustBeInRange";
			
			public const string ExceptionChartPreviewNotAvailable = "ExceptionChartPreviewNotAvailable";
			
			public const string ExceptionChartPreviewNotAvailableShort = "ExceptionChartPreviewNotAvailableShort";
			
			public const string ExceptionChartOutOfLimits = "ExceptionChartOutOfLimits";
			
			public const string ExceptionHttpHandlerCanNotSave = "ExceptionHttpHandlerCanNotSave";
			
			public const string ExceptionHttpHandlerCanNotLoadType = "ExceptionHttpHandlerCanNotLoadType";
			
			public const string ExceptionHttpHandlerImageHandlerInterfaceUnsupported = "ExceptionHttpHandlerImageHandlerInterfaceUnsupported";
			
			public const string ExceptionHttpHandlerParameterUnknown = "ExceptionHttpHandlerParameterUnknown";
			
			public const string ExceptionHttpHandlerParameterInvalid = "ExceptionHttpHandlerParameterInvalid";
			
			public const string ExceptionHttpHandlerPrivacyKeyInvalid = "ExceptionHttpHandlerPrivacyKeyInvalid";
			
			public const string ExceptionHttpHandlerValueInvalid = "ExceptionHttpHandlerValueInvalid";
			
			public const string ExceptionHttpHandlerTimeoutParameterInvalid = "ExceptionHttpHandlerTimeoutParameterInvalid";
			
			public const string ExceptionHttpHandlerUrlMissing = "ExceptionHttpHandlerUrlMissing";
			
			public const string ExceptionHttpHandlerUrlInvalid = "ExceptionHttpHandlerUrlInvalid";
			
			public const string ExceptionHttpHandlerTempDirectoryInvalid = "ExceptionHttpHandlerTempDirectoryInvalid";
			
			public const string ExceptionHttpHandlerTempDirectoryUnaccesible = "ExceptionHttpHandlerTempDirectoryUnaccesible";
			
			public const string ExceptionHttpHandlerStorageTypeUnsupported = "ExceptionHttpHandlerStorageTypeUnsupported";
			
			public const string ExceptionHttpHandlerInvalidLocation = "ExceptionHttpHandlerInvalidLocation";
			
			public const string ExceptionHttpHandlerImageNotFound = "ExceptionHttpHandlerImageNotFound";
			
			public const string ExceptionWebConfigUpdateFailed = "ExceptionWebConfigUpdateFailed";
			
			public const string DescriptionCustomAttributeEmptyPointValue = "DescriptionCustomAttributeEmptyPointValue";
			
			public const string DescriptionCustomAttributeIsXAxisQuantitive = "DescriptionCustomAttributeIsXAxisQuantitive";
			
			public const string DescriptionCustomAttributePieDonutExploded = "DescriptionCustomAttributePieDonutExploded";
			
			public const string DescriptionCustomAttributeProportionalSymbols = "DescriptionCustomAttributeProportionalSymbols";
			
			public const string DescriptionCustomAttributeDrawSideBySide = "DescriptionCustomAttributeDrawSideBySide";
			
			public const string DescriptionCustomAttributeShowMarkerLines = "DescriptionCustomAttributeShowMarkerLines";
			
			public const string DescriptionCustomAttributeShowOpenClose = "DescriptionCustomAttributeShowOpenClose";
			
			public const string DescriptionCustomAttributeBoxPlotShowAverage = "DescriptionCustomAttributeBoxPlotShowAverage";
			
			public const string DescriptionCustomAttributeBubbleUseSizeForLabel = "DescriptionCustomAttributeBubbleUseSizeForLabel";
			
			public const string DescriptionCustomAttributeBoxPlotShowMedian = "DescriptionCustomAttributeBoxPlotShowMedian";
			
			public const string DescriptionCustomAttributeBoxPlotShowUnusualValues = "DescriptionCustomAttributeBoxPlotShowUnusualValues";
			
			public const string DescriptionCustomAttributeBoxPlotSeries = "DescriptionCustomAttributeBoxPlotSeries";
			
			public const string DescriptionCustomAttributePieStartAngle = "DescriptionCustomAttributePieStartAngle";
			
			public const string DescriptionCustomAttributeLabelStyle = "DescriptionCustomAttributeLabelStyle";
			
			public const string DescriptionCustomAttributeFunnelLabelStyle = "DescriptionCustomAttributeFunnelLabelStyle";
			
			public const string DescriptionCustomAttributeFunnelStyle = "DescriptionCustomAttributeFunnelStyle";
			
			public const string DescriptionCustomAttributePolarDrawingStyle = "DescriptionCustomAttributePolarDrawingStyle";
			
			public const string DescriptionCustomAttributePyramidLabelStyle = "DescriptionCustomAttributePyramidLabelStyle";
			
			public const string DescriptionCustomAttributeRadarDrawingStyle = "DescriptionCustomAttributeRadarDrawingStyle";
			
			public const string DescriptionCustomAttributeBoxSize = "DescriptionCustomAttributeBoxSize";
			
			public const string DescriptionCustomAttributeCollectedColor = "DescriptionCustomAttributeCollectedColor";
			
			public const string DescriptionCustomAttributeCollectedLabel = "DescriptionCustomAttributeCollectedLabel";
			
			public const string DescriptionCustomAttributeCollectedLegendText = "DescriptionCustomAttributeCollectedLegendText";
			
			public const string DescriptionCustomAttributeCollectedLegendDefaultText = "DescriptionCustomAttributeCollectedLegendDefaultText";
			
			public const string DescriptionCustomAttributeCollectedLabelDefaultText = "DescriptionCustomAttributeCollectedLabelDefaultText";
			
			public const string DescriptionCustomAttributeCollectedToolTip = "DescriptionCustomAttributeCollectedToolTip";
			
			public const string DescriptionCustomAttributePyramidValueType = "DescriptionCustomAttributePyramidValueType";
			
			public const string DescriptionCustomAttribute_3DLabelLineSize = "DescriptionCustomAttribute_3DLabelLineSize";
			
			public const string DescriptionCustomAttributeFunnel3DRotationAngle = "DescriptionCustomAttributeFunnel3DRotationAngle";
			
			public const string DescriptionCustomAttributePyramid3DRotationAngle = "DescriptionCustomAttributePyramid3DRotationAngle";
			
			public const string DescriptionCustomAttributePixelPointDepth = "DescriptionCustomAttributePixelPointDepth";
			
			public const string DescriptionCustomAttributePixelPointGapDepth = "DescriptionCustomAttributePixelPointGapDepth";
			
			public const string DescriptionCustomAttributeErrorBarCenterMarkerStyle = "DescriptionCustomAttributeErrorBarCenterMarkerStyle";
			
			public const string DescriptionCustomAttributePointFigureBoxSize = "DescriptionCustomAttributePointFigureBoxSize";
			
			public const string DescriptionCustomAttributeBubbleScaleMax = "DescriptionCustomAttributeBubbleScaleMax";
			
			public const string DescriptionCustomAttributeBubbleScaleMin = "DescriptionCustomAttributeBubbleScaleMin";
			
			public const string DescriptionCustomAttributeCollectedThreshold = "DescriptionCustomAttributeCollectedThreshold";
			
			public const string DescriptionCustomAttributePieLineColor = "DescriptionCustomAttributePieLineColor";
			
			public const string DescriptionCustomAttributeCalloutLineColor = "DescriptionCustomAttributeCalloutLineColor";
			
			public const string DescriptionCustomAttributePieLabelStyle = "DescriptionCustomAttributePieLabelStyle";
			
			public const string DescriptionCustomAttributeFunnel3DDrawingStyle = "DescriptionCustomAttributeFunnel3DDrawingStyle";
			
			public const string DescriptionCustomAttributePyramid3DDrawingStyle = "DescriptionCustomAttributePyramid3DDrawingStyle";
			
			public const string DescriptionCustomAttributeDrawingStyle = "DescriptionCustomAttributeDrawingStyle";
			
			public const string DescriptionCustomAttributePieDrawingStyle = "DescriptionCustomAttributePieDrawingStyle";
			
			public const string DescriptionCustomAttributeCollectedSliceExploded = "DescriptionCustomAttributeCollectedSliceExploded";
			
			public const string DescriptionCustomAttributeCollectedThresholdUsePercent = "DescriptionCustomAttributeCollectedThresholdUsePercent";
			
			public const string DescriptionCustomAttributeFunnelNeckHeight = "DescriptionCustomAttributeFunnelNeckHeight";
			
			public const string DescriptionCustomAttributeFunnelNeckWidth = "DescriptionCustomAttributeFunnelNeckWidth";
			
			public const string DescriptionCustomAttributePyramidPointGap = "DescriptionCustomAttributePyramidPointGap";
			
			public const string DescriptionCustomAttributeFunnelPointGap = "DescriptionCustomAttributeFunnelPointGap";
			
			public const string DescriptionCustomAttributeLabelsHorizontalLineSize = "DescriptionCustomAttributeLabelsHorizontalLineSize";
			
			public const string DescriptionCustomAttributeDoughnutRadius = "DescriptionCustomAttributeDoughnutRadius";
			
			public const string DescriptionCustomAttributePolarCircularLabelsStyle = "DescriptionCustomAttributePolarCircularLabelsStyle";
			
			public const string DescriptionCustomAttributeRadarCircularLabelsStyle = "DescriptionCustomAttributeRadarCircularLabelsStyle";
			
			public const string DescriptionCustomAttributeOpenCloseStyle = "DescriptionCustomAttributeOpenCloseStyle";
			
			public const string DescriptionCustomAttributeBubbleMaxSize = "DescriptionCustomAttributeBubbleMaxSize";
			
			public const string DescriptionCustomAttributeMaxPixelPointWidth = "DescriptionCustomAttributeMaxPixelPointWidth";
			
			public const string DescriptionCustomAttributePyramidMinPointHeight = "DescriptionCustomAttributePyramidMinPointHeight";
			
			public const string DescriptionCustomAttributeFunnelMinPointHeight = "DescriptionCustomAttributeFunnelMinPointHeight";
			
			public const string DescriptionCustomAttributeMinimumRelativePieSize = "DescriptionCustomAttributeMinimumRelativePieSize";
			
			public const string DescriptionCustomAttributeMinPixelPointWidth = "DescriptionCustomAttributeMinPixelPointWidth";
			
			public const string DescriptionCustomAttributeErrorBarSeries = "DescriptionCustomAttributeErrorBarSeries";
			
			public const string DescriptionCustomAttributeNumberOfLinesInBreak = "DescriptionCustomAttributeNumberOfLinesInBreak";
			
			public const string DescriptionCustomAttributePyramidOutsideLabelPlacement = "DescriptionCustomAttributePyramidOutsideLabelPlacement";
			
			public const string DescriptionCustomAttributeFunnelOutsideLabelPlacement = "DescriptionCustomAttributeFunnelOutsideLabelPlacement";
			
			public const string DescriptionCustomAttributeBoxPlotPercentile = "DescriptionCustomAttributeBoxPlotPercentile";
			
			public const string DescriptionCustomAttributeBoxPlotWhiskerPercentile = "DescriptionCustomAttributeBoxPlotWhiskerPercentile";
			
			public const string DescriptionCustomAttributeBarLabelStyle = "DescriptionCustomAttributeBarLabelStyle";
			
			public const string DescriptionCustomAttributeLabelsRadialLineSize = "DescriptionCustomAttributeLabelsRadialLineSize";
			
			public const string DescriptionCustomAttributePointWidth = "DescriptionCustomAttributePointWidth";
			
			public const string DescriptionCustomAttributeReversalAmount = "DescriptionCustomAttributeReversalAmount";
			
			public const string DescriptionCustomAttributePolarAreaDrawingStyle = "DescriptionCustomAttributePolarAreaDrawingStyle";
			
			public const string DescriptionCustomAttributeRadarAreaDrawingStyle = "DescriptionCustomAttributeRadarAreaDrawingStyle";
			
			public const string DescriptionCustomAttributeStackedGroupName = "DescriptionCustomAttributeStackedGroupName";
			
			public const string DescriptionCustomAttributeLineTension = "DescriptionCustomAttributeLineTension";
			
			public const string DescriptionCustomAttributeCandlePriceUpColor = "DescriptionCustomAttributeCandlePriceUpColor";
			
			public const string DescriptionCustomAttributeBarsPriceUpColor = "DescriptionCustomAttributeBarsPriceUpColor";
			
			public const string DescriptionCustomAttributePriceDownColor = "DescriptionCustomAttributePriceDownColor";
			
			public const string DescriptionCustomAttributeUsedYValueHigh = "DescriptionCustomAttributeUsedYValueHigh";
			
			public const string DescriptionCustomAttributeUsedYValueLow = "DescriptionCustomAttributeUsedYValueLow";
			
			public const string DescriptionCustomAttributeRenkoUsedYValue = "DescriptionCustomAttributeRenkoUsedYValue";
			
			public const string DescriptionCustomAttributeThreeLineBreakUsedYValue = "DescriptionCustomAttributeThreeLineBreakUsedYValue";
			
			public const string DescriptionCustomAttributePyramidInsideLabelAlignment = "DescriptionCustomAttributePyramidInsideLabelAlignment";
			
			public const string DescriptionCustomAttributeFunnelInsideLabelAlignment = "DescriptionCustomAttributeFunnelInsideLabelAlignment";
			
			public const string DescriptionCustomAttributeErrorBarStyle = "DescriptionCustomAttributeErrorBarStyle";
			
			public const string DescriptionCustomAttributePixelPointWidth = "DescriptionCustomAttributePixelPointWidth";
			
			public const string DescriptionCustomAttributeLabelValueType = "DescriptionCustomAttributeLabelValueType";
			
			public const string DescriptionCustomAttributeUsedYValue = "DescriptionCustomAttributeUsedYValue";
			
			public const string DescriptionCustomAttributeKagiReversalAmount = "DescriptionCustomAttributeKagiReversalAmount";
			
			public const string DescriptionCustomAttributeErrorBarType = "DescriptionCustomAttributeErrorBarType";
			
			public const string DescriptionAttributeChart_ImageStorageMode = "DescriptionAttributeChart_ImageStorageMode";
			
			public const string DescriptionKeyWordAverageYValues = "DescriptionKeyWordAverageYValues";
			
			public const string DescriptionKeyWordAxisLabelDataPoint = "DescriptionKeyWordAxisLabelDataPoint";
			
			public const string DescriptionKeyWordIndexDataPoint = "DescriptionKeyWordIndexDataPoint";
			
			public const string DescriptionKeyWordLabelDataPoint = "DescriptionKeyWordLabelDataPoint";
			
			public const string DescriptionKeyWordYValuePercentTotal = "DescriptionKeyWordYValuePercentTotal";
			
			public const string DescriptionKeyWordIndexDataPoint2 = "DescriptionKeyWordIndexDataPoint2";
			
			public const string DescriptionKeyWordLegendText = "DescriptionKeyWordLegendText";
			
			public const string DescriptionKeyWordMaximumYValues = "DescriptionKeyWordMaximumYValues";
			
			public const string DescriptionKeyWordMinimumYValues = "DescriptionKeyWordMinimumYValues";
			
			public const string DescriptionKeyWordSeriesName = "DescriptionKeyWordSeriesName";
			
			public const string DescriptionKeyWordTotalYValues = "DescriptionKeyWordTotalYValues";
			
			public const string DescriptionKeyWordXValue = "DescriptionKeyWordXValue";
			
			public const string DescriptionKeyWordFirstPointYValue = "DescriptionKeyWordFirstPointYValue";
			
			public const string DescriptionKeyWordLastPointYValue = "DescriptionKeyWordLastPointYValue";
			
			public const string DescriptionKeyWordYValue = "DescriptionKeyWordYValue";
			
			public const string DescriptionKeyWordNameIndexDataPoint = "DescriptionKeyWordNameIndexDataPoint";
			
			public const string DescriptionKeyWordNameXValue = "DescriptionKeyWordNameXValue";
			
			public const string DescriptionKeyWordNameYValue = "DescriptionKeyWordNameYValue";
			
			public const string DescriptionKeyWordNameTotalYValues = "DescriptionKeyWordNameTotalYValues";
			
			public const string DescriptionKeyWordNameYValuePercentTotal = "DescriptionKeyWordNameYValuePercentTotal";
			
			public const string DescriptionKeyWordNameIndexTheDataPoint = "DescriptionKeyWordNameIndexTheDataPoint";
			
			public const string DescriptionKeyWordNameLabelDataPoint = "DescriptionKeyWordNameLabelDataPoint";
			
			public const string DescriptionKeyWordNameAxisLabelDataPoint = "DescriptionKeyWordNameAxisLabelDataPoint";
			
			public const string DescriptionKeyWordNameLegendText = "DescriptionKeyWordNameLegendText";
			
			public const string DescriptionKeyWordNameSeriesName = "DescriptionKeyWordNameSeriesName";
			
			public const string DescriptionKeyWordNameAverageYValues = "DescriptionKeyWordNameAverageYValues";
			
			public const string DescriptionKeyWordNameMaximumYValues = "DescriptionKeyWordNameMaximumYValues";
			
			public const string DescriptionKeyWordNameMinimumYValues = "DescriptionKeyWordNameMinimumYValues";
			
			public const string DescriptionKeyWordNameLastPointYValue = "DescriptionKeyWordNameLastPointYValue";
			
			public const string DescriptionKeyWordNameFirstPointYValue = "DescriptionKeyWordNameFirstPointYValue";
			
			public const string DescriptionNumberFormatTypeCurrency = "DescriptionNumberFormatTypeCurrency";
			
			public const string DescriptionNumberFormatTypeDecimal = "DescriptionNumberFormatTypeDecimal";
			
			public const string DescriptionNumberFormatTypeScientific = "DescriptionNumberFormatTypeScientific";
			
			public const string DescriptionNumberFormatTypeFixedPoint = "DescriptionNumberFormatTypeFixedPoint";
			
			public const string DescriptionNumberFormatTypeGeneral = "DescriptionNumberFormatTypeGeneral";
			
			public const string DescriptionNumberFormatTypeNumber = "DescriptionNumberFormatTypeNumber";
			
			public const string DescriptionNumberFormatTypePercent = "DescriptionNumberFormatTypePercent";
			
			public const string DescriptionTypeNone = "DescriptionTypeNone";
			
			public const string DescriptionTypeCustom = "DescriptionTypeCustom";
			
			public const string DescriptionTypeEmpty = "DescriptionTypeEmpty";
			
			public const string DescriptionTypePoint = "DescriptionTypePoint";
			
			public const string LabelKeyFormat = "LabelKeyFormat";
			
			public const string LabelKeyCustomFormat = "LabelKeyCustomFormat";
			
			public const string LabelStringWithKeywords = "LabelStringWithKeywords";
			
			public const string LabelEditKeyword = "LabelEditKeyword";
			
			public const string LabelInsertNewKeyword = "LabelInsertNewKeyword";
			
			public const string LabelStringKeywordsEditor = "LabelStringKeywordsEditor";
			
			public const string LabelKeywordEditor = "LabelKeywordEditor";
			
			public const string LabelDescription = "LabelDescription";
			
			public const string LabelFormatKeySample = "LabelFormatKeySample";
			
			public const string LabelKeyYValueIndex = "LabelKeyYValueIndex";
			
			public const string LabelKeyPrecision = "LabelKeyPrecision";
			
			public const string LabelKeyKeywords = "LabelKeyKeywords";
			
			public const string LabelValueFormatting = "LabelValueFormatting";
			
			public const string LabelButtonOk = "LabelButtonOk";
			
			public const string LabelButtonCancel = "LabelButtonCancel";
			
			public const string DescriptionToolTipCustomFormatCharacters = "DescriptionToolTipCustomFormatCharacters";
			
			public const string DesciptionCustomLabelEditorTitle = "DesciptionCustomLabelEditorTitle";
			
			public const string DesciptionCustomLabelFormatInvalid = "DesciptionCustomLabelFormatInvalid";
			
			public const string LabelStatisticalSumOfSquaresBetweenGroups = "LabelStatisticalSumOfSquaresBetweenGroups";
			
			public const string LabelStatisticalSumOfSquaresWithinGroups = "LabelStatisticalSumOfSquaresWithinGroups";
			
			public const string LabelStatisticalSumOfSquaresTotal = "LabelStatisticalSumOfSquaresTotal";
			
			public const string LabelStatisticalDegreesOfFreedomBetweenGroups = "LabelStatisticalDegreesOfFreedomBetweenGroups";
			
			public const string LabelStatisticalDegreesOfFreedomWithinGroups = "LabelStatisticalDegreesOfFreedomWithinGroups";
			
			public const string LabelStatisticalDegreesOfFreedomTotal = "LabelStatisticalDegreesOfFreedomTotal";
			
			public const string LabelStatisticalMeanSquareVarianceBetweenGroups = "LabelStatisticalMeanSquareVarianceBetweenGroups";
			
			public const string LabelStatisticalMeanSquareVarianceWithinGroups = "LabelStatisticalMeanSquareVarianceWithinGroups";
			
			public const string LabelStatisticalFRatio = "LabelStatisticalFRatio";
			
			public const string LabelStatisticalFCriteria = "LabelStatisticalFCriteria";
			
			public const string LabelStatisticalCorrelation = "LabelStatisticalCorrelation";
			
			public const string LabelStatisticalCovariance = "LabelStatisticalCovariance";
			
			public const string LabelStatisticalProbability = "LabelStatisticalProbability";
			
			public const string LabelStatisticalAverage = "LabelStatisticalAverage";
			
			public const string LabelStatisticalVariance = "LabelStatisticalVariance";
			
			public const string LabelStatisticalMedian = "LabelStatisticalMedian";
			
			public const string LabelStatisticalBetaFunction = "LabelStatisticalBetaFunction";
			
			public const string LabelStatisticalGammaFunction = "LabelStatisticalGammaFunction";
			
			public const string LabelStatisticalTheFirstGroupMean = "LabelStatisticalTheFirstGroupMean";
			
			public const string LabelStatisticalTheSecondGroupMean = "LabelStatisticalTheSecondGroupMean";
			
			public const string LabelStatisticalTheFirstGroupVariance = "LabelStatisticalTheFirstGroupVariance";
			
			public const string LabelStatisticalTheSecondGroupVariance = "LabelStatisticalTheSecondGroupVariance";
			
			public const string LabelStatisticalFValue = "LabelStatisticalFValue";
			
			public const string LabelStatisticalFCriticalValueOneTail = "LabelStatisticalFCriticalValueOneTail";
			
			public const string LabelStatisticalZValue = "LabelStatisticalZValue";
			
			public const string LabelStatisticalZCriticalValueOneTail = "LabelStatisticalZCriticalValueOneTail";
			
			public const string LabelStatisticalZCriticalValueTwoTail = "LabelStatisticalZCriticalValueTwoTail";
			
			public const string LabelStatisticalPZLessEqualSmallZOneTail = "LabelStatisticalPZLessEqualSmallZOneTail";
			
			public const string LabelStatisticalPZLessEqualSmallZTwoTail = "LabelStatisticalPZLessEqualSmallZTwoTail";
			
			public const string LabelStatisticalPFLessEqualSmallFOneTail = "LabelStatisticalPFLessEqualSmallFOneTail";
			
			public const string LabelStatisticalTValue = "LabelStatisticalTValue";
			
			public const string LabelStatisticalDegreeOfFreedom = "LabelStatisticalDegreeOfFreedom";
			
			public const string LabelStatisticalPTLessEqualSmallTOneTail = "LabelStatisticalPTLessEqualSmallTOneTail";
			
			public const string LabelStatisticalSmallTCrititcalOneTail = "LabelStatisticalSmallTCrititcalOneTail";
			
			public const string LabelStatisticalPTLessEqualSmallTTwoTail = "LabelStatisticalPTLessEqualSmallTTwoTail";
			
			public const string LabelStatisticalSmallTCrititcalTwoTail = "LabelStatisticalSmallTCrititcalTwoTail";
			
			public const string EvenLogMessageChartImageFileTimeToLive = "EvenLogMessageChartImageFileTimeToLive";
			
			public const string MessageYValueIndexInvalid = "MessageYValueIndexInvalid";
			
			public const string MessagePrecisionInvalid = "MessagePrecisionInvalid";
			
			public const string MessageChangingChartAreaPositionProperty = "MessageChangingChartAreaPositionProperty";
			
			public const string MessageChangingChartAreaPositionConfirmAutomatic = "MessageChangingChartAreaPositionConfirmAutomatic";
			
			public const string MessageChangingChartAreaPositionConfirmCustom = "MessageChangingChartAreaPositionConfirmCustom";
			
			public const string MessageChartException = "MessageChartException";
			
			public const string MessageSite = "MessageSite";
			
			public const string MessageStackTrace = "MessageStackTrace";
			
			public const string MessageChartTitle = "MessageChartTitle";
			
			public const string TitleAxisX = "TitleAxisX";
			
			public const string TitleAxisY = "TitleAxisY";
			
			public const string TitleAxisX2 = "TitleAxisX2";
			
			public const string TitleAxisY2 = "TitleAxisY2";
			
			public const string FormulaNamePriceIndicators = "FormulaNamePriceIndicators";
			
			public const string FormulaNameGeneralTechnicalIndicators = "FormulaNameGeneralTechnicalIndicators";
			
			public const string FormulaNameTechnicalVolumeIndicators = "FormulaNameTechnicalVolumeIndicators";
			
			public const string FormulaNameOscillator = "FormulaNameOscillator";
			
			public const string FormulaNameGeneralFormulas = "FormulaNameGeneralFormulas";
			
			public const string FormulaNameTimeSeriesAndForecasting = "FormulaNameTimeSeriesAndForecasting";
			
			public const string FormulaNameStatisticalAnalysis = "FormulaNameStatisticalAnalysis";
			
			public const string FormulaNameVolumeIndicators = "FormulaNameVolumeIndicators";
			
			public const string LabelTextRow = "LabelTextRow";
			
			public const string DescriptionAttributeBackImage = "DescriptionAttributeBackImage";
			
			public const string DescriptionAttributeMarkerImage = "DescriptionAttributeMarkerImage";
			
			public const string DescriptionAttributeAnnotationBaseY = "DescriptionAttributeAnnotationBaseY";
			
			public const string DescriptionAttributeAnnotationWidth = "DescriptionAttributeAnnotationWidth";
			
			public const string DescriptionAttributeAnnotationHeight = "DescriptionAttributeAnnotationHeight";
			
			public const string DescriptionAttributeAnnotationClipToChartArea = "DescriptionAttributeAnnotationClipToChartArea";
			
			public const string DescriptionAttributeAnnotationBaseX = "DescriptionAttributeAnnotationBaseX";
			
			public const string DescriptionAttributeChartImageType = "DescriptionAttributeChartImageType";
			
			public const string DescriptionAttributeMultiValueSeparator = "DescriptionAttributeMultiValueSeparator";
			
			public const string DescriptionAttributeDataSeriesGroupID = "DescriptionAttributeDataSeriesGroupID";
			
			public const string DescriptionAttributeSuppressCodeExceptions = "DescriptionAttributeSuppressCodeExceptions";
			
			public const string DescriptionAttributeNoDataMessage = "DescriptionAttributeNoDataMessage";
			
			public const string DescriptionAttributeReverseSeriesOrder = "DescriptionAttributeReverseSeriesOrder";
			
			public const string DescriptionAttributeUserDefined = "DescriptionAttributeUserDefined";
			
			public const string DescriptionAttributeChartEvent_GetToolTipText = "DescriptionAttributeChartEvent_GetToolTipText";
			
			public const string DescriptionAttributeArrowAnnotation_ArrowSize = "DescriptionAttributeArrowAnnotation_ArrowSize";
			
			public const string DescriptionAttributeChartSerializer_Content = "DescriptionAttributeChartSerializer_Content";
			
			public const string DescriptionAttributeLegend_Enabled = "DescriptionAttributeLegend_Enabled";
			
			public const string DescriptionAttributeEnabled5 = "DescriptionAttributeEnabled5";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_Enabled = "DescriptionAttributeAxisScaleBreakStyle_Enabled";
			
			public const string DescriptionAttributeEnabled7 = "DescriptionAttributeEnabled7";
			
			public const string DescriptionAttributeLabel_Enabled = "DescriptionAttributeLabel_Enabled";
			
			public const string DescriptionAttributeLegendItem_Enabled = "DescriptionAttributeLegendItem_Enabled";
			
			public const string DescriptionAttributeAxisScrollBar_Enabled = "DescriptionAttributeAxisScrollBar_Enabled";
			
			public const string DescriptionAttributeEnabled13 = "DescriptionAttributeEnabled13";
			
			public const string DescriptionAttributeSeries_Enabled = "DescriptionAttributeSeries_Enabled";
			
			public const string DescriptionAttributeLegendCell_CellSpan = "DescriptionAttributeLegendCell_CellSpan";
			
			public const string DescriptionAttributeCursor_SelectionColor = "DescriptionAttributeCursor_SelectionColor";
			
			public const string DescriptionAttributeInterlaced = "DescriptionAttributeInterlaced";
			
			public const string DescriptionAttributeMapArea_Coordinates = "DescriptionAttributeMapArea_Coordinates";
			
			public const string DescriptionAttributeChartEvent_PostPaint = "DescriptionAttributeChartEvent_PostPaint";
			
			public const string DescriptionAttributeStripLine_Title = "DescriptionAttributeStripLine_Title";
			
			public const string DescriptionAttributeLegend_Title = "DescriptionAttributeLegend_Title";
			
			public const string DescriptionAttributeTitle5 = "DescriptionAttributeTitle5";
			
			public const string DescriptionAttributeTitle6 = "DescriptionAttributeTitle6";
			
			public const string DescriptionAttributeAnnotation_Annotation = "DescriptionAttributeAnnotation_Annotation";
			
			public const string DescriptionAttributeTitleFont = "DescriptionAttributeTitleFont";
			
			public const string DescriptionAttributeChartArea_Axes = "DescriptionAttributeChartArea_Axes";
			
			public const string DescriptionAttributeChartSerializer_NonSerializableContent = "DescriptionAttributeChartSerializer_NonSerializableContent";
			
			public const string DescriptionAttributeShadowOffset = "DescriptionAttributeShadowOffset";
			
			public const string DescriptionAttributeCalloutLineAnchorCap = "DescriptionAttributeCalloutLineAnchorCap";
			
			public const string DescriptionAttributeMapAreaAttributes = "DescriptionAttributeMapAreaAttributes";
			
			public const string DescriptionAttributeSubAxis_SubAxis = "DescriptionAttributeSubAxis_SubAxis";
			
			public const string DescriptionAttributeMajorGrid = "DescriptionAttributeMajorGrid";
			
			public const string DescriptionAttributeElementPosition_Y = "DescriptionAttributeElementPosition_Y";
			
			public const string DescriptionAttributeAnnotationPathPoint_Y = "DescriptionAttributeAnnotationPathPoint_Y";
			
			public const string DescriptionAttributeToolTipEventArgs_Y = "DescriptionAttributeToolTipEventArgs_Y";
			
			public const string DescriptionAttributePoint3D_Y = "DescriptionAttributePoint3D_Y";
			
			public const string DescriptionAttributePoint3D_Z = "DescriptionAttributePoint3D_Z";
			
			public const string DescriptionAttributeMajorTickMark = "DescriptionAttributeMajorTickMark";
			
			public const string DescriptionAttributeDrawInfinitive = "DescriptionAttributeDrawInfinitive";
			
			public const string DescriptionAttributeAxisDataView_MinSize = "DescriptionAttributeAxisDataView_MinSize";
			
			public const string DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection = "DescriptionAttributeLegendCellColumnCollection_LegendCellColumnCollection";
			
			public const string DescriptionAttributeMarkerOverlapping = "DescriptionAttributeMarkerOverlapping";
			
			public const string DescriptionAttributeChart_OnCustomizeLegend = "DescriptionAttributeChart_OnCustomizeLegend";
			
			public const string DescriptionAttributeLegendCellColumn_HeaderTextAlignment = "DescriptionAttributeLegendCellColumn_HeaderTextAlignment";
			
			public const string DescriptionAttributeScrollBarEventArgs_MousePositionY = "DescriptionAttributeScrollBarEventArgs_MousePositionY";
			
			public const string DescriptionAttributeNamedImage_NamedImage = "DescriptionAttributeNamedImage_NamedImage";
			
			public const string DescriptionAttributeScrollBar = "DescriptionAttributeScrollBar";
			
			public const string DescriptionAttributeMapArea_MapArea = "DescriptionAttributeMapArea_MapArea";
			
			public const string DescriptionAttributeLegend_CustomItems = "DescriptionAttributeLegend_CustomItems";
			
			public const string DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle = "DescriptionAttributeAnnotationSmartLabelsStyle_AnnotationSmartLabelsStyle";
			
			public const string DescriptionAttributePolylineAnnotation_PolylineAnnotation = "DescriptionAttributePolylineAnnotation_PolylineAnnotation";
			
			public const string DescriptionAttributeChartEvent_AxisViewChanged = "DescriptionAttributeChartEvent_AxisViewChanged";
			
			public const string DescriptionAttributeCrossing = "DescriptionAttributeCrossing";
			
			public const string DescriptionAttributeMargins_Top = "DescriptionAttributeMargins_Top";
			
			public const string DescriptionAttributeLegendCellColumn_HeaderFont = "DescriptionAttributeLegendCellColumn_HeaderFont";
			
			public const string DescriptionAttributeLegend_InterlacedRows = "DescriptionAttributeLegend_InterlacedRows";
			
			public const string DescriptionAttributeAxisDataView_MinSizeType = "DescriptionAttributeAxisDataView_MinSizeType";
			
			public const string DescriptionAttributeLineWidth = "DescriptionAttributeLineWidth";
			
			public const string DescriptionAttributeDataPoint_XValue = "DescriptionAttributeDataPoint_XValue";
			
			public const string DescriptionAttributeChartArea_AxisY2 = "DescriptionAttributeChartArea_AxisY2";
			
			public const string DescriptionAttributeChartArea_AxisX2 = "DescriptionAttributeChartArea_AxisX2";
			
			public const string DescriptionAttributeChartEvent_AnnotationPositionChanging = "DescriptionAttributeChartEvent_AnnotationPositionChanging";
			
			public const string DescriptionAttributeStripLine_StripLine = "DescriptionAttributeStripLine_StripLine";
			
			public const string DescriptionAttributeBorderColor = "DescriptionAttributeBorderColor";
			
			public const string DescriptionAttributeMarkerBorderColor = "DescriptionAttributeMarkerBorderColor";
			
			public const string DescriptionAttributeLegendText = "DescriptionAttributeLegendText";
			
			public const string DescriptionAttributeCustomLabel_LabelMark = "DescriptionAttributeCustomLabel_LabelMark";
			
			public const string DescriptionAttributeTextAntiAliasingQuality = "DescriptionAttributeTextAntiAliasingQuality";
			
			public const string DescriptionAttributeAllowMoving = "DescriptionAttributeAllowMoving";
			
			public const string DescriptionAttributeCalloutAnnotation_CalloutAnnotation = "DescriptionAttributeCalloutAnnotation_CalloutAnnotation";
			
			public const string DescriptionAttributeStripLine_Name = "DescriptionAttributeStripLine_Name";
			
			public const string DescriptionAttributeTitle_Name = "DescriptionAttributeTitle_Name";
			
			public const string DescriptionAttributeName4 = "DescriptionAttributeName4";
			
			public const string DescriptionAttributeAnnotationPathPoint_Name = "DescriptionAttributeAnnotationPathPoint_Name";
			
			public const string DescriptionAttributeLegendCell_Name = "DescriptionAttributeLegendCell_Name";
			
			public const string DescriptionAttributeMapArea_Name = "DescriptionAttributeMapArea_Name";
			
			public const string DescriptionAttributeSeries_Name = "DescriptionAttributeSeries_Name";
			
			public const string DescriptionAttributeAxis_Name = "DescriptionAttributeAxis_Name";
			
			public const string DescriptionAttributeNamedImage_Name = "DescriptionAttributeNamedImage_Name";
			
			public const string DescriptionAttributeSubAxis_Name = "DescriptionAttributeSubAxis_Name";
			
			public const string DescriptionAttributeDataPoint_Name = "DescriptionAttributeDataPoint_Name";
			
			public const string DescriptionAttributeLegendCellColumn_Name = "DescriptionAttributeLegendCellColumn_Name";
			
			public const string DescriptionAttributeLegendItem_Name = "DescriptionAttributeLegendItem_Name";
			
			public const string DescriptionAttributeLegend_Name = "DescriptionAttributeLegend_Name";
			
			public const string DescriptionAttributeCustomLabel_Name = "DescriptionAttributeCustomLabel_Name";
			
			public const string DescriptionAttributeChartArea_Name = "DescriptionAttributeChartArea_Name";
			
			public const string DescriptionAttributeCursor_Cursor = "DescriptionAttributeCursor_Cursor";
			
			public const string DescriptionAttributeAnchorX = "DescriptionAttributeAnchorX";
			
			public const string DescriptionAttributeToolTip = "DescriptionAttributeToolTip";
			
			public const string DescriptionAttributeLegend_TableStyle = "DescriptionAttributeLegend_TableStyle";
			
			public const string DescriptionAttributeDataPoint_Empty = "DescriptionAttributeDataPoint_Empty";
			
			public const string DescriptionAttributeScrollBarEventArgs_Handled = "DescriptionAttributeScrollBarEventArgs_Handled";
			
			public const string DescriptionAttributeAxisLabel = "DescriptionAttributeAxisLabel";
			
			public const string DescriptionAttributeAnnotationGroup_AllowPathEditing = "DescriptionAttributeAnnotationGroup_AllowPathEditing";
			
			public const string DescriptionAttributeAllowPathEditing3 = "DescriptionAttributeAllowPathEditing3";
			
			public const string DescriptionAttributeChart_OnPaint = "DescriptionAttributeChart_OnPaint";
			
			public const string DescriptionAttributeCalloutAnnotation_AnchorOffsetX = "DescriptionAttributeCalloutAnnotation_AnchorOffsetX";
			
			public const string DescriptionAttributeAnchorOffsetX3 = "DescriptionAttributeAnchorOffsetX3";
			
			public const string DescriptionAttributeCalloutAnnotation_AnchorOffsetY = "DescriptionAttributeCalloutAnnotation_AnchorOffsetY";
			
			public const string DescriptionAttributeAnchorOffsetY3 = "DescriptionAttributeAnchorOffsetY3";
			
			public const string DescriptionAttributeChartEvent_CursorPositionChanging = "DescriptionAttributeChartEvent_CursorPositionChanging";
			
			public const string DescriptionAttributeScrollBarEventArgs_ButtonType = "DescriptionAttributeScrollBarEventArgs_ButtonType";
			
			public const string DescriptionAttributeLabelsAutoFitStyle = "DescriptionAttributeLabelsAutoFitStyle";
			
			public const string DescriptionAttributeLabelStyle = "DescriptionAttributeLabelStyle";
			
			public const string DescriptionAttributeStripLine_IntervalOffsetType = "DescriptionAttributeStripLine_IntervalOffsetType";
			
			public const string DescriptionAttributeLabel_IntervalOffsetType = "DescriptionAttributeLabel_IntervalOffsetType";
			
			public const string DescriptionAttributeIntervalOffsetType4 = "DescriptionAttributeIntervalOffsetType4";
			
			public const string DescriptionAttributeCursor_IntervalOffsetType = "DescriptionAttributeCursor_IntervalOffsetType";
			
			public const string DescriptionAttributeIntervalOffsetType6 = "DescriptionAttributeIntervalOffsetType6";
			
			public const string DescriptionAttributeAxisScaleSegment_IntervalOffsetType = "DescriptionAttributeAxisScaleSegment_IntervalOffsetType";
			
			public const string DescriptionAttributeReverse = "DescriptionAttributeReverse";
			
			public const string DescriptionAttributeSeries_Points = "DescriptionAttributeSeries_Points";
			
			public const string DescriptionAttributeBorderSkin_SkinStyle = "DescriptionAttributeBorderSkin_SkinStyle";
			
			public const string DescriptionAttributeChartArea3DStyle_Clustered = "DescriptionAttributeChartArea3DStyle_Clustered";
			
			public const string DescriptionAttributeAnchorDataPointName = "DescriptionAttributeAnchorDataPointName";
			
			public const string DescriptionAttributeChartEvent_AnnotationPositionChanged = "DescriptionAttributeChartEvent_AnnotationPositionChanged";
			
			public const string DescriptionAttributeChartArea3DStyle_PointGapDepth = "DescriptionAttributeChartArea3DStyle_PointGapDepth";
			
			public const string DescriptionAttributeLegend_Reversed = "DescriptionAttributeLegend_Reversed";
			
			public const string DescriptionAttributeAnnotation_AnnotationType = "DescriptionAttributeAnnotation_AnnotationType";
			
			public const string DescriptionAttributeTextAnnotation_AnnotationType = "DescriptionAttributeTextAnnotation_AnnotationType";
			
			public const string DescriptionAttributeAnnotationType = "DescriptionAttributeAnnotationType";
			
			public const string DescriptionAttributeBorderSkin_FrameBorderDashStyle = "DescriptionAttributeBorderSkin_FrameBorderDashStyle";
			
			public const string DescriptionAttributeLegend_HeaderSeparatorColor = "DescriptionAttributeLegend_HeaderSeparatorColor";
			
			public const string DescriptionAttributeChartEvent_AnnotationSelectionChanged = "DescriptionAttributeChartEvent_AnnotationSelectionChanged";
			
			public const string DescriptionAttributeFont = "DescriptionAttributeFont";
			
			public const string DescriptionAttributeLegend_Font = "DescriptionAttributeLegend_Font";
			
			public const string DescriptionAttributeLegendCellColumn_Font = "DescriptionAttributeLegendCellColumn_Font";
			
			public const string DescriptionAttributeLabel_Font = "DescriptionAttributeLabel_Font";
			
			public const string DescriptionAttributeTitle_Font = "DescriptionAttributeTitle_Font";
			
			public const string DescriptionAttributeLegendCell_Font = "DescriptionAttributeLegendCell_Font";
			
			public const string DescriptionAttributeSeries_ValueMemberX = "DescriptionAttributeSeries_ValueMemberX";
			
			public const string DescriptionAttributeArrows = "DescriptionAttributeArrows";
			
			public const string DescriptionAttributeType = "DescriptionAttributeType";
			
			public const string DescriptionAttributeSeries_Type = "DescriptionAttributeSeries_Type";
			
			public const string DescriptionAttributeBorder3DAnnotation_Border3DAnnotation = "DescriptionAttributeBorder3DAnnotation_Border3DAnnotation";
			
			public const string DescriptionAttributeChart_Images = "DescriptionAttributeChart_Images";
			
			public const string DescriptionAttributeLegendToolTip = "DescriptionAttributeLegendToolTip";
			
			public const string DescriptionAttributeCustomLabel_CustomLabel = "DescriptionAttributeCustomLabel_CustomLabel";
			
			public const string DescriptionAttributeChartEvent_AnnotationPlaced = "DescriptionAttributeChartEvent_AnnotationPlaced";
			
			public const string DescriptionAttributeBackColor = "DescriptionAttributeBackColor";
			
			public const string DescriptionAttributeCalloutBackColor = "DescriptionAttributeCalloutBackColor";
			
			public const string DescriptionAttributeFrameBackColor = "DescriptionAttributeFrameBackColor";
			
			public const string DescriptionAttributeTitleBackColor = "DescriptionAttributeTitleBackColor";
			
			public const string DescriptionAttributeLabelBackColor = "DescriptionAttributeLabelBackColor";
			
			public const string DescriptionAttributeHeaderBackColor = "DescriptionAttributeHeaderBackColor";
			
			public const string DescriptionAttributeLabel_ShowEndLabels = "DescriptionAttributeLabel_ShowEndLabels";
			
			public const string DescriptionAttributeLabelToolTip = "DescriptionAttributeLabelToolTip";
			
			public const string DescriptionAttributeSeries_MarkerStep = "DescriptionAttributeSeries_MarkerStep";
			
			public const string DescriptionAttributeTickMark_Style = "DescriptionAttributeTickMark_Style";
			
			public const string DescriptionAttribute_TextOrientation = "DescriptionAttribute_TextOrientation";
			
			public const string DescriptionAttributeLegendItem_Style = "DescriptionAttributeLegendItem_Style";
			
			public const string DescriptionAttributeChartArea3DStyle_Rotation = "DescriptionAttributeChartArea3DStyle_Rotation";
			
			public const string DescriptionAttributeSizeAlwaysRelative = "DescriptionAttributeSizeAlwaysRelative";
			
			public const string DescriptionAttributeSizeAlwaysRelative3 = "DescriptionAttributeSizeAlwaysRelative3";
			
			public const string DescriptionAttributeAnnotationGroup_SizeAlwaysRelative = "DescriptionAttributeAnnotationGroup_SizeAlwaysRelative";
			
			public const string DescriptionAttributeChart_BorderlineWidth = "DescriptionAttributeChart_BorderlineWidth";
			
			public const string DescriptionAttributeSeries_XValueIndexed = "DescriptionAttributeSeries_XValueIndexed";
			
			public const string DescriptionAttributeEllipseAnnotation_EllipseAnnotation = "DescriptionAttributeEllipseAnnotation_EllipseAnnotation";
			
			public const string DescriptionAttributeAnchorAlignment = "DescriptionAttributeAnchorAlignment";
			
			public const string DescriptionAttributeWidth = "DescriptionAttributeWidth";
			
			public const string DescriptionAttributeElementPosition_Width = "DescriptionAttributeElementPosition_Width";
			
			public const string DescriptionAttributeAxisXName = "DescriptionAttributeAxisXName";
			
			public const string DescriptionAttributeChartArea3DStyle_Inclination = "DescriptionAttributeChartArea3DStyle_Inclination";
			
			public const string DescriptionAttributeLegendCollection_LegendCollection = "DescriptionAttributeLegendCollection_LegendCollection";
			
			public const string DescriptionAttributeAxisYName = "DescriptionAttributeAxisYName";
			
			public const string DescriptionAttributeAxisScaleSegment_Spacing = "DescriptionAttributeAxisScaleSegment_Spacing";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_Spacing = "DescriptionAttributeAxisScaleBreakStyle_Spacing";
			
			public const string DescriptionAttributeSelected = "DescriptionAttributeSelected";
			
			public const string DescriptionAttributeAnnotationGroup_Selected = "DescriptionAttributeAnnotationGroup_Selected";
			
			public const string DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation = "DescriptionAttributeVerticalLineAnnotation_VerticalLineAnnotation";
			
			public const string DescriptionAttributeLabelsAutoFitMaxFontSize = "DescriptionAttributeLabelsAutoFitMaxFontSize";
			
			public const string DescriptionAttributeFreeDrawPlacement = "DescriptionAttributeFreeDrawPlacement";
			
			public const string DescriptionAttributeStripLinesCollection_StripLinesCollection = "DescriptionAttributeStripLinesCollection_StripLinesCollection";
			
			public const string DescriptionAttributeAxisDataView_IsZoomed = "DescriptionAttributeAxisDataView_IsZoomed";
			
			public const string DescriptionAttributeChartArea3DStyle_Perspective = "DescriptionAttributeChartArea3DStyle_Perspective";
			
			public const string DescriptionAttributeChart_OnCustomize = "DescriptionAttributeChart_OnCustomize";
			
			public const string DescriptionAttributeLabel = "DescriptionAttributeLabel";
			
			public const string DescriptionAttributeLabel_Label = "DescriptionAttributeLabel_Label";
			
			public const string DescriptionAttributeStartCap3 = "DescriptionAttributeStartCap3";
			
			public const string DescriptionAttributeFontColor = "DescriptionAttributeFontColor";
			
			public const string DescriptionAttributeLegendFontColor = "DescriptionAttributeLegendFontColor";
			
			public const string DescriptionAttributeLabel_OffsetLabels = "DescriptionAttributeLabel_OffsetLabels";
			
			public const string DescriptionAttributeMargin = "DescriptionAttributeMargin";
			
			public const string DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangingEventArgs = "DescriptionAttributeAnnotationPositionChangingEventArgs_AnnotationPositionChangin" +
				"gEventArgs";
			
			public const string DescriptionAttributeCursorEventArgs_NewSelectionStart = "DescriptionAttributeCursorEventArgs_NewSelectionStart";
			
			public const string DescriptionAttributeSeries_XSubAxisName = "DescriptionAttributeSeries_XSubAxisName";
			
			public const string DescriptionAttributeHideOverlapped = "DescriptionAttributeHideOverlapped";
			
			public const string DescriptionAttributeLegendCellColumn_MaximumWidth = "DescriptionAttributeLegendCellColumn_MaximumWidth";
			
			public const string DescriptionAttributeLegend_InsideChartArea = "DescriptionAttributeLegend_InsideChartArea";
			
			public const string DescriptionAttributeImageTransparentColor = "DescriptionAttributeImageTransparentColor";
			
			public const string DescriptionAttributeLegend_EquallySpacedItems = "DescriptionAttributeLegend_EquallySpacedItems";
			
			public const string DescriptionAttributeChartArea_CursorY = "DescriptionAttributeChartArea_CursorY";
			
			public const string DescriptionAttributeChart_Printing = "DescriptionAttributeChart_Printing";
			
			public const string DescriptionAttributeAxis = "DescriptionAttributeAxis";
			
			public const string DescriptionAttributeAxis_Axis = "DescriptionAttributeAxis_Axis";
			
			public const string DescriptionAttributeBackImageAlign = "DescriptionAttributeBackImageAlign";
			
			public const string DescriptionAttributeShowInLegend = "DescriptionAttributeShowInLegend";
			
			public const string DescriptionAttributeChartSerializer_ChartSerializer = "DescriptionAttributeChartSerializer_ChartSerializer";
			
			public const string DescriptionAttributeChart_Compression = "DescriptionAttributeChart_Compression";
			
			public const string DescriptionAttributeChartImage_Compression = "DescriptionAttributeChartImage_Compression";
			
			public const string DescriptionAttributeCursor_AutoScroll = "DescriptionAttributeCursor_AutoScroll";
			
			public const string DescriptionAttributeElementPosition_Height = "DescriptionAttributeElementPosition_Height";
			
			public const string DescriptionAttributeHeight3 = "DescriptionAttributeHeight3";
			
			public const string DescriptionAttributeChart_ViewStateContent = "DescriptionAttributeChart_ViewStateContent";
			
			public const string DescriptionAttributeAxisDataView_SmallScrollSizeType = "DescriptionAttributeAxisDataView_SmallScrollSizeType";
			
			public const string DescriptionAttributeLegend_CellColumns = "DescriptionAttributeLegend_CellColumns";
			
			public const string DescriptionAttributeAxisScrollBar_Buttons = "DescriptionAttributeAxisScrollBar_Buttons";
			
			public const string DescriptionAttributeLegends = "DescriptionAttributeLegends";
			
			public const string DescriptionAttributeElementPosition_X = "DescriptionAttributeElementPosition_X";
			
			public const string DescriptionAttributeAnnotationPathPoint_X = "DescriptionAttributeAnnotationPathPoint_X";
			
			public const string DescriptionAttributePoint3D_X = "DescriptionAttributePoint3D_X";
			
			public const string DescriptionAttributeToolTipEventArgs_X = "DescriptionAttributeToolTipEventArgs_X";
			
			public const string DescriptionAttributeCustomAttributesExtended = "DescriptionAttributeCustomAttributesExtended";
			
			public const string DescriptionAttributeMargins_Left = "DescriptionAttributeMargins_Left";
			
			public const string DescriptionAttributeAxisScrollBar_PositionInside = "DescriptionAttributeAxisScrollBar_PositionInside";
			
			public const string DescriptionAttributeSeries_ValueMembersY = "DescriptionAttributeSeries_ValueMembersY";
			
			public const string DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle = "DescriptionAttributeSmartLabelsStyle_SmartLabelsStyle";
			
			public const string DescriptionAttributeChartEvent_SelectionRangeChanging = "DescriptionAttributeChartEvent_SelectionRangeChanging";
			
			public const string DescriptionAttributeLabelsAutoFitMinFontSize = "DescriptionAttributeLabelsAutoFitMinFontSize";
			
			public const string DescriptionAttributeMaxMovingDistance = "DescriptionAttributeMaxMovingDistance";
			
			public const string DescriptionAttributeTitle_DockToChartArea = "DescriptionAttributeTitle_DockToChartArea";
			
			public const string DescriptionAttributeLegend_DockToChartArea = "DescriptionAttributeLegend_DockToChartArea";
			
			public const string DescriptionAttributeChartArea3DStyle_RightAngleAxes = "DescriptionAttributeChartArea3DStyle_RightAngleAxes";
			
			public const string DescriptionAttributeLegend_LegendStyle = "DescriptionAttributeLegend_LegendStyle";
			
			public const string DescriptionAttributeAxisDataView_AxisDataView = "DescriptionAttributeAxisDataView_AxisDataView";
			
			public const string DescriptionAttributeBorderDashStyle = "DescriptionAttributeBorderDashStyle";
			
			public const string DescriptionAttributeLabelBorderDashStyle = "DescriptionAttributeLabelBorderDashStyle";
			
			public const string DescriptionAttributeBackSecondaryColor = "DescriptionAttributeBackSecondaryColor";
			
			public const string DescriptionAttributeBorderSkin_FrameBackSecondaryColor = "DescriptionAttributeBorderSkin_FrameBackSecondaryColor";
			
			public const string DescriptionAttributeLegend_TitleSeparator = "DescriptionAttributeLegend_TitleSeparator";
			
			public const string DescriptionAttributeChartArea_InnerPlotPosition = "DescriptionAttributeChartArea_InnerPlotPosition";
			
			public const string DescriptionAttributeChartEvent_CustomizeLegend = "DescriptionAttributeChartEvent_CustomizeLegend";
			
			public const string DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint = "DescriptionAttributeAnnotationPathPoint_AnnotationPathPoint";
			
			public const string DescriptionAttributeDataPoint_YValues = "DescriptionAttributeDataPoint_YValues";
			
			public const string DescriptionAttributeCustomLabel_RowIndex = "DescriptionAttributeCustomLabel_RowIndex";
			
			public const string DescriptionAttributeSeries_YSubAxisName = "DescriptionAttributeSeries_YSubAxisName";
			
			public const string DescriptionAttributeChartArea_AlignType = "DescriptionAttributeChartArea_AlignType";
			
			public const string DescriptionAttributeAllowResizing = "DescriptionAttributeAllowResizing";
			
			public const string DescriptionAttributeShowLabelAsValue = "DescriptionAttributeShowLabelAsValue";
			
			public const string DescriptionAttributeForeColor = "DescriptionAttributeForeColor";
			
			public const string DescriptionAttributePathPoints = "DescriptionAttributePathPoints";
			
			public const string DescriptionAttributeViewEventArgs_NewSizeType = "DescriptionAttributeViewEventArgs_NewSizeType";
			
			public const string DescriptionAttributeChart_BuildNumber = "DescriptionAttributeChart_BuildNumber";
			
			public const string DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection = "DescriptionAttributeAxisScaleSegmentCollection_AxisScaleSegmentCollection";
			
			public const string DescriptionAttributeMarkerSize = "DescriptionAttributeMarkerSize";
			
			public const string DescriptionAttributeLegendItem_MarkerSize = "DescriptionAttributeLegendItem_MarkerSize";
			
			public const string DescriptionAttributeLegendCell_SeriesSymbolSize = "DescriptionAttributeLegendCell_SeriesSymbolSize";
			
			public const string DescriptionAttributeLegendCellColumn_SeriesSymbolSize = "DescriptionAttributeLegendCellColumn_SeriesSymbolSize";
			
			public const string DescriptionAttributeDisabled = "DescriptionAttributeDisabled";
			
			public const string DescriptionAttributeChartSerializer_ResetWhenLoading = "DescriptionAttributeChartSerializer_ResetWhenLoading";
			
			public const string DescriptionAttributeBackGradientStyle = "DescriptionAttributeBackGradientStyle";
			
			public const string DescriptionAttributeDataSource = "DescriptionAttributeDataSource";
			
			public const string DescriptionAttributeCustomLabels = "DescriptionAttributeCustomLabels";
			
			public const string DescriptionAttributeArrowAnnotation_ArrowAnnotation = "DescriptionAttributeArrowAnnotation_ArrowAnnotation";
			
			public const string DescriptionAttributeCursor_AxisType = "DescriptionAttributeCursor_AxisType";
			
			public const string DescriptionAttributeLegendItem_Cells = "DescriptionAttributeLegendItem_Cells";
			
			public const string DescriptionAttributeBorderSkin = "DescriptionAttributeBorderSkin";
			
			public const string DescriptionAttributeBorderSkin_BorderSkin = "DescriptionAttributeBorderSkin_BorderSkin";
			
			public const string DescriptionAttributeSubAxisCollection_SubAxisCollection = "DescriptionAttributeSubAxisCollection_SubAxisCollection";
			
			public const string DescriptionAttributeAllowSelecting = "DescriptionAttributeAllowSelecting";
			
			public const string DescriptionAttributeChartEvent_Customize = "DescriptionAttributeChartEvent_Customize";
			
			public const string DescriptionAttributeChartEvent_Click = "DescriptionAttributeChartEvent_Click";
			
			public const string DescriptionAttributeImageAnnotation_ImageAnnotation = "DescriptionAttributeImageAnnotation_ImageAnnotation";
			
			public const string DescriptionAttributeAxisDataView_SmallScrollSize = "DescriptionAttributeAxisDataView_SmallScrollSize";
			
			public const string DescriptionAttributeAxisScaleSegment_Interval = "DescriptionAttributeAxisScaleSegment_Interval";
			
			public const string DescriptionAttributeCursor_Interval = "DescriptionAttributeCursor_Interval";
			
			public const string DescriptionAttributeInterval4 = "DescriptionAttributeInterval4";
			
			public const string DescriptionAttributeStripLine_Interval = "DescriptionAttributeStripLine_Interval";
			
			public const string DescriptionAttributeInterval6 = "DescriptionAttributeInterval6";
			
			public const string DescriptionAttributeLabel_Interval = "DescriptionAttributeLabel_Interval";
			
			public const string DescriptionAttributeStripLine_TitleLineAlignment = "DescriptionAttributeStripLine_TitleLineAlignment";
			
			public const string DescriptionAttributeMaximum = "DescriptionAttributeMaximum";
			
			public const string DescriptionAttributeElementPosition_Auto = "DescriptionAttributeElementPosition_Auto";
			
			public const string DescriptionAttributeSeries_YAxisType = "DescriptionAttributeSeries_YAxisType";
			
			public const string DescriptionAttributeLineDashStyle = "DescriptionAttributeLineDashStyle";
			
			public const string DescriptionAttributeLogarithmBase = "DescriptionAttributeLogarithmBase";
			
			public const string DescriptionAttributeAntiAlias = "DescriptionAttributeAntiAlias";
			
			public const string DescriptionAttributeImageWrapMode = "DescriptionAttributeImageWrapMode";
			
			public const string DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes = "DescriptionAttributeChartSerializer_IgnoreUnknownXmlAttributes";
			
			public const string DescriptionAttributeAxisScaleSegment_Tag = "DescriptionAttributeAxisScaleSegment_Tag";
			
			public const string DescriptionAttributeTag = "DescriptionAttributeTag";
			
			public const string DescriptionAttributeLegend = "DescriptionAttributeLegend";
			
			public const string DescriptionAttributeLegend_Legend = "DescriptionAttributeLegend_Legend";
			
			public const string DescriptionAttributeSeries_Legend = "DescriptionAttributeSeries_Legend";
			
			public const string DescriptionAttributeDataPointComparer_DataPointComparer = "DescriptionAttributeDataPointComparer_DataPointComparer";
			
			public const string DescriptionAttributeBackHatchStyle = "DescriptionAttributeBackHatchStyle";
			
			public const string DescriptionAttributeFrameBackHatchStyle = "DescriptionAttributeFrameBackHatchStyle";
			
			public const string DescriptionAttributeChartAreaCollection_Item = "DescriptionAttributeChartAreaCollection_Item";
			
			public const string DescriptionAttributeLegendCollection_Item = "DescriptionAttributeLegendCollection_Item";
			
			public const string DescriptionAttributeAnnotationCollection_Item = "DescriptionAttributeAnnotationCollection_Item";
			
			public const string DescriptionAttributeSubAxisCollection_Item = "DescriptionAttributeSubAxisCollection_Item";
			
			public const string DescriptionAttributeSeriesCollection_Item = "DescriptionAttributeSeriesCollection_Item";
			
			public const string DescriptionAttributeAnnotationPathPointCollection_Item = "DescriptionAttributeAnnotationPathPointCollection_Item";
			
			public const string DescriptionAttributeLegendCellColumnCollection_Item = "DescriptionAttributeLegendCellColumnCollection_Item";
			
			public const string DescriptionAttributeAxisScaleSegmentCollection_Item = "DescriptionAttributeAxisScaleSegmentCollection_Item";
			
			public const string DescriptionAttributeLegendCellCollection_Item = "DescriptionAttributeLegendCellCollection_Item";
			
			public const string DescriptionAttributeNamedImagesCollection_Item = "DescriptionAttributeNamedImagesCollection_Item";
			
			public const string DescriptionAttributeAxisScaleSegment_ScaleMinimum = "DescriptionAttributeAxisScaleSegment_ScaleMinimum";
			
			public const string DescriptionAttributeSmartLabels = "DescriptionAttributeSmartLabels";
			
			public const string DescriptionAttributeSeries_SmartLabels = "DescriptionAttributeSeries_SmartLabels";
			
			public const string DescriptionAttributeSmartLabels_SmartLabels = "DescriptionAttributeSmartLabels_SmartLabels";
			
			public const string DescriptionAttributeMinorTickMark = "DescriptionAttributeMinorTickMark";
			
			public const string DescriptionAttributeMapAreasCollection_MapAreasCollection = "DescriptionAttributeMapAreasCollection_MapAreasCollection";
			
			public const string DescriptionAttributeMovingDirection = "DescriptionAttributeMovingDirection";
			
			public const string DescriptionAttributeCursor_UserSelection = "DescriptionAttributeCursor_UserSelection";
			
			public const string DescriptionAttributeChartArea = "DescriptionAttributeChartArea";
			
			public const string DescriptionAttributeSeries_ChartArea = "DescriptionAttributeSeries_ChartArea";
			
			public const string DescriptionAttributeChartArea_ChartArea = "DescriptionAttributeChartArea_ChartArea";
			
			public const string DescriptionAttributeToolTipEventArgs_HitTestResult = "DescriptionAttributeToolTipEventArgs_HitTestResult";
			
			public const string DescriptionAttributeAxisScaleSegment_AxisScaleSegment = "DescriptionAttributeAxisScaleSegment_AxisScaleSegment";
			
			public const string DescriptionAttributeLegend_ItemColumnSeparatorColor = "DescriptionAttributeLegend_ItemColumnSeparatorColor";
			
			public const string DescriptionAttributeDataManipulator = "DescriptionAttributeDataManipulator";
			
			public const string DescriptionAttributeTitle_Color = "DescriptionAttributeTitle_Color";
			
			public const string DescriptionAttributeLegendItem_Color = "DescriptionAttributeLegendItem_Color";
			
			public const string DescriptionAttributeColor4 = "DescriptionAttributeColor4";
			
			public const string DescriptionAttributeMargins_Right = "DescriptionAttributeMargins_Right";
			
			public const string DescriptionAttributeRight3 = "DescriptionAttributeRight3";
			
			public const string DescriptionAttributeChart_OnBackPaint = "DescriptionAttributeChart_OnBackPaint";
			
			public const string DescriptionAttributeLineColor = "DescriptionAttributeLineColor";
			
			public const string DescriptionAttributeCalloutLineColor = "DescriptionAttributeCalloutLineColor";
			
			public const string DescriptionAttributeArrowAnnotation_ArrowStyle = "DescriptionAttributeArrowAnnotation_ArrowStyle";
			
			public const string DescriptionAttributeArrowStyle_ArrowStyle = "DescriptionAttributeArrowStyle_ArrowStyle";
			
			public const string DescriptionAttributeSeries_XValueType = "DescriptionAttributeSeries_XValueType";
			
			public const string DescriptionAttributeAnnotationGroup_Annotations = "DescriptionAttributeAnnotationGroup_Annotations";
			
			public const string DescriptionAttributeAnnotations3 = "DescriptionAttributeAnnotations3";
			
			public const string DescriptionAttributeMinorGrid = "DescriptionAttributeMinorGrid";
			
			public const string DescriptionAttributeMapArea_Custom = "DescriptionAttributeMapArea_Custom";
			
			public const string DescriptionAttributeChart_EnableViewState = "DescriptionAttributeChart_EnableViewState";
			
			public const string DescriptionAttributeChartArea3DStyle_Enable3D = "DescriptionAttributeChartArea3DStyle_Enable3D";
			
			public const string DescriptionAttributeInterlacedColor = "DescriptionAttributeInterlacedColor";
			
			public const string DescriptionAttributeLegendCellColumn_Margins = "DescriptionAttributeLegendCellColumn_Margins";
			
			public const string DescriptionAttributeMargins_Margins = "DescriptionAttributeMargins_Margins";
			
			public const string DescriptionAttributeLegendCell_Margins = "DescriptionAttributeLegendCell_Margins";
			
			public const string DescriptionAttributeLegendItem_MarkerColor = "DescriptionAttributeLegendItem_MarkerColor";
			
			public const string DescriptionAttributeMarkerColor3 = "DescriptionAttributeMarkerColor3";
			
			public const string DescriptionAttributeChart_Size = "DescriptionAttributeChart_Size";
			
			public const string DescriptionAttributeTickMark_Size = "DescriptionAttributeTickMark_Size";
			
			public const string DescriptionAttributeAxisScaleSegment_Size = "DescriptionAttributeAxisScaleSegment_Size";
			
			public const string DescriptionAttributeAxisDataView_Size = "DescriptionAttributeAxisDataView_Size";
			
			public const string DescriptionAttributeAxisScrollBar_Size = "DescriptionAttributeAxisScrollBar_Size";
			
			public const string DescriptionAttributeViewEventArgs_NewSize = "DescriptionAttributeViewEventArgs_NewSize";
			
			public const string DescriptionAttributeSeries_XAxisType = "DescriptionAttributeSeries_XAxisType";
			
			public const string DescriptionAttributeAllowOutsidePlotArea = "DescriptionAttributeAllowOutsidePlotArea";
			
			public const string DescriptionAttributeLegendItem_MarkerStyle = "DescriptionAttributeLegendItem_MarkerStyle";
			
			public const string DescriptionAttributeMarkerStyle4 = "DescriptionAttributeMarkerStyle4";
			
			public const string DescriptionAttributeLegendCell_ImageSize = "DescriptionAttributeLegendCell_ImageSize";
			
			public const string DescriptionAttributeView = "DescriptionAttributeView";
			
			public const string DescriptionAttributeSeriesCollection_SeriesCollection = "DescriptionAttributeSeriesCollection_SeriesCollection";
			
			public const string DescriptionAttributeCursorEventArgs_NewPosition = "DescriptionAttributeCursorEventArgs_NewPosition";
			
			public const string DescriptionAttributeViewEventArgs_NewPosition = "DescriptionAttributeViewEventArgs_NewPosition";
			
			public const string DescriptionAttributeLegendCell_Image = "DescriptionAttributeLegendCell_Image";
			
			public const string DescriptionAttributeNamedImage_Image = "DescriptionAttributeNamedImage_Image";
			
			public const string DescriptionAttributeImageAnnotation_Image = "DescriptionAttributeImageAnnotation_Image";
			
			public const string DescriptionAttributeLegendItem_Image = "DescriptionAttributeLegendItem_Image";
			
			public const string DescriptionAttributeCustomLabel_Image = "DescriptionAttributeCustomLabel_Image";
			
			public const string DescriptionAttributeAxisScaleSegment_IntervalOffset = "DescriptionAttributeAxisScaleSegment_IntervalOffset";
			
			public const string DescriptionAttributeIntervalOffset3 = "DescriptionAttributeIntervalOffset3";
			
			public const string DescriptionAttributeLabel_IntervalOffset = "DescriptionAttributeLabel_IntervalOffset";
			
			public const string DescriptionAttributeCursor_IntervalOffset = "DescriptionAttributeCursor_IntervalOffset";
			
			public const string DescriptionAttributeIntervalOffset6 = "DescriptionAttributeIntervalOffset6";
			
			public const string DescriptionAttributeStripLine_IntervalOffset = "DescriptionAttributeStripLine_IntervalOffset";
			
			public const string DescriptionAttributeLegend_DockInsideChartArea = "DescriptionAttributeLegend_DockInsideChartArea";
			
			public const string DescriptionAttributeTitle_DockInsideChartArea = "DescriptionAttributeTitle_DockInsideChartArea";
			
			public const string DescriptionAttributeChart_RenderType = "DescriptionAttributeChart_RenderType";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold = "DescriptionAttributeAxisScaleBreakStyle_CollapsibleSpaceThreshold";
			
			public const string DescriptionAttributeChartEvent_AxisViewChanging = "DescriptionAttributeChartEvent_AxisViewChanging";
			
			public const string DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle = "DescriptionAttributeLabelCalloutStyle_LabelCalloutStyle";
			
			public const string DescriptionAttributePath = "DescriptionAttributePath";
			
			public const string DescriptionAttributeLegendItem_SeriesPointIndex = "DescriptionAttributeLegendItem_SeriesPointIndex";
			
			public const string DescriptionAttributeMapAreas = "DescriptionAttributeMapAreas";
			
			public const string DescriptionAttributeTickMark_TickMark = "DescriptionAttributeTickMark_TickMark";
			
			public const string DescriptionAttributeLegendCellColumn_LegendCellColumn = "DescriptionAttributeLegendCellColumn_LegendCellColumn";
			
			public const string DescriptionAttributeLegendItem_LegendItem = "DescriptionAttributeLegendItem_LegendItem";
			
			public const string DescriptionAttributeTitleAlignment = "DescriptionAttributeTitleAlignment";
			
			public const string DescriptionAttributeStripLine_TitleAlignment = "DescriptionAttributeStripLine_TitleAlignment";
			
			public const string DescriptionAttributeLegend_TitleAlignment = "DescriptionAttributeLegend_TitleAlignment";
			
			public const string DescriptionAttributeElementPosition_ElementPosition = "DescriptionAttributeElementPosition_ElementPosition";
			
			public const string DescriptionAttributeCustomLabel_To = "DescriptionAttributeCustomLabel_To";
			
			public const string DescriptionAttributeLabel_FontAngle = "DescriptionAttributeLabel_FontAngle";
			
			public const string DescriptionAttributeIntervalAutoMode = "DescriptionAttributeIntervalAutoMode";
			
			public const string DescriptionAttributeStripLine_StripWidth = "DescriptionAttributeStripLine_StripWidth";
			
			public const string DescriptionAttributeCursor_UserEnabled = "DescriptionAttributeCursor_UserEnabled";
			
			public const string DescriptionAttributeBorderSkin_FrameBorderWidth = "DescriptionAttributeBorderSkin_FrameBorderWidth";
			
			public const string DescriptionAttributeAxisScaleSegment_Position = "DescriptionAttributeAxisScaleSegment_Position";
			
			public const string DescriptionAttributeAxisDataView_Position = "DescriptionAttributeAxisDataView_Position";
			
			public const string DescriptionAttributeTitle_Position = "DescriptionAttributeTitle_Position";
			
			public const string DescriptionAttributeLegend_Position = "DescriptionAttributeLegend_Position";
			
			public const string DescriptionAttributeChartArea_Position = "DescriptionAttributeChartArea_Position";
			
			public const string DescriptionAttributeCursor_Position = "DescriptionAttributeCursor_Position";
			
			public const string DescriptionAttributeSubAxis_ParentAxis = "DescriptionAttributeSubAxis_ParentAxis";
			
			public const string DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor = "DescriptionAttributeAnnotationCollectionEditor_AnnotationCollectionEditor";
			
			public const string DescriptionAttributeBottom = "DescriptionAttributeBottom";
			
			public const string DescriptionAttributeMargins_Bottom = "DescriptionAttributeMargins_Bottom";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle = "DescriptionAttributeAxisScaleBreakStyle_AxisScaleBreakStyle";
			
			public const string DescriptionAttributeLegend_HeaderSeparator = "DescriptionAttributeLegend_HeaderSeparator";
			
			public const string DescriptionAttributeChartArea3DStyle_PointDepth = "DescriptionAttributeChartArea3DStyle_PointDepth";
			
			public const string DescriptionAttributeAnnotationGroup_AnnotationGroup = "DescriptionAttributeAnnotationGroup_AnnotationGroup";
			
			public const string DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection = "DescriptionAttributeAnnotationPathPointCollection_AnnotationPathPointCollection";
			
			public const string DescriptionAttributeStripLine_StripWidthType = "DescriptionAttributeStripLine_StripWidthType";
			
			public const string DescriptionAttributeCustomLabel_From = "DescriptionAttributeCustomLabel_From";
			
			public const string DescriptionAttributePoint3D_PointF = "DescriptionAttributePoint3D_PointF";
			
			public const string DescriptionAttributeBorderWidth = "DescriptionAttributeBorderWidth";
			
			public const string DescriptionAttributeMarkerBorderWidth = "DescriptionAttributeMarkerBorderWidth";
			
			public const string DescriptionAttributeCursor_SelectionEnd = "DescriptionAttributeCursor_SelectionEnd";
			
			public const string DescriptionAttributeLineAnnotation_LineAnnotation = "DescriptionAttributeLineAnnotation_LineAnnotation";
			
			public const string DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels = "DescriptionAttributeAnnotationSmartLabels_AnnotationSmartLabels";
			
			public const string DescriptionAttributeAnnotationGroup_Visible = "DescriptionAttributeAnnotationGroup_Visible";
			
			public const string DescriptionAttributeChartArea_Visible = "DescriptionAttributeChartArea_Visible";
			
			public const string DescriptionAttributeTitle_Visible = "DescriptionAttributeTitle_Visible";
			
			public const string DescriptionAttributeVisible = "DescriptionAttributeVisible";
			
			public const string DescriptionAttributeLegendItem_Separator = "DescriptionAttributeLegendItem_Separator";
			
			public const string DescriptionAttributeLegendCell_CellType = "DescriptionAttributeLegendCell_CellType";
			
			public const string DescriptionAttributeChart_Serializer = "DescriptionAttributeChart_Serializer";
			
			public const string DescriptionAttributeAxisX = "DescriptionAttributeAxisX";
			
			public const string DescriptionAttributeChartArea_AxisX = "DescriptionAttributeChartArea_AxisX";
			
			public const string DescriptionAttributeImageType = "DescriptionAttributeImageType";
			
			public const string DescriptionAttributeCursor_SelectionStart = "DescriptionAttributeCursor_SelectionStart";
			
			public const string DescriptionAttributeLabelsAutoFit = "DescriptionAttributeLabelsAutoFit";
			
			public const string DescriptionAttributeLegendCellColumn_HeaderText = "DescriptionAttributeLegendCellColumn_HeaderText";
			
			public const string DescriptionAttributeMapEnabled = "DescriptionAttributeMapEnabled";
			
			public const string DescriptionAttributeAxisDataView_Zoomable = "DescriptionAttributeAxisDataView_Zoomable";
			
			public const string DescriptionAttributeDataManager_PaletteCustomColors = "DescriptionAttributeDataManager_PaletteCustomColors";
			
			public const string DescriptionAttributeChart_PaletteCustomColors = "DescriptionAttributeChart_PaletteCustomColors";
			
			public const string DescriptionAttributeLegend_ItemColumnSeparator = "DescriptionAttributeLegend_ItemColumnSeparator";
			
			public const string DescriptionAttributeCursorEventArgs_NewSelectionEnd = "DescriptionAttributeCursorEventArgs_NewSelectionEnd";
			
			public const string DescriptionAttributeLegendItem_SeriesName = "DescriptionAttributeLegendItem_SeriesName";
			
			public const string DescriptionAttributeChartAreas = "DescriptionAttributeChartAreas";
			
			public const string DescriptionAttributeChartArea_AlignWithChartArea = "DescriptionAttributeChartArea_AlignWithChartArea";
			
			public const string DescriptionAttributeLegend_MaxAutoSize = "DescriptionAttributeLegend_MaxAutoSize";
			
			public const string DescriptionAttributeAxis_MaxAutoSize = "DescriptionAttributeAxis_MaxAutoSize";
			
			public const string DescriptionAttributeGrid_Grid = "DescriptionAttributeGrid_Grid";
			
			public const string DescriptionAttributeChartArea_EquallySizedAxesFont = "DescriptionAttributeChartArea_EquallySizedAxesFont";
			
			public const string DescriptionAttributeChartEvent_CustomizeMapAreas = "DescriptionAttributeChartEvent_CustomizeMapAreas";
			
			public const string DescriptionAttributeChartArea3DStyle_WallWidth = "DescriptionAttributeChartArea3DStyle_WallWidth";
			
			public const string DescriptionAttributeCustomLabel_Row = "DescriptionAttributeCustomLabel_Row";
			
			public const string DescriptionAttributeLegend_TitleSeparatorColor = "DescriptionAttributeLegend_TitleSeparatorColor";
			
			public const string DescriptionAttributeChartSerializer_TemplateMode = "DescriptionAttributeChartSerializer_TemplateMode";
			
			public const string DescriptionAttributeShadowColor = "DescriptionAttributeShadowColor";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks = "DescriptionAttributeAxisScaleBreakStyle_MaxNumberOfBreaks";
			
			public const string DescriptionAttributeChartEvent_AxisScrollBarClicked = "DescriptionAttributeChartEvent_AxisScrollBarClicked";
			
			public const string DescriptionAttributeAnchorY = "DescriptionAttributeAnchorY";
			
			public const string DescriptionAttributeLegend_AutoFitMinFontSize = "DescriptionAttributeLegend_AutoFitMinFontSize";
			
			public const string DescriptionAttributeChartEvent_AnnotationTextChanged = "DescriptionAttributeChartEvent_AnnotationTextChanged";
			
			public const string DescriptionAttributeChart_Series = "DescriptionAttributeChart_Series";
			
			public const string DescriptionAttributeSeries_Series = "DescriptionAttributeSeries_Series";
			
			public const string DescriptionAttributeMapArea_Shape = "DescriptionAttributeMapArea_Shape";
			
			public const string DescriptionAttributeLegend_TextWrapThreshold = "DescriptionAttributeLegend_TextWrapThreshold";
			
			public const string DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle = "DescriptionAttributeLabelOutsidePlotAreaStyle_LabelOutsidePlotAreaStyle";
			
			public const string DescriptionAttributeSubAxes = "DescriptionAttributeSubAxes";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_StartFromZero = "DescriptionAttributeAxisScaleBreakStyle_StartFromZero";
			
			public const string DescriptionAttributeStartFromZero3 = "DescriptionAttributeStartFromZero3";
			
			public const string DescriptionAttributeRectangleAnnotation_RectangleAnnotation = "DescriptionAttributeRectangleAnnotation_RectangleAnnotation";
			
			public const string DescriptionAttributeUrl = "DescriptionAttributeUrl";
			
			public const string DescriptionAttributeAxisScaleBreakStyle_BreakLineType = "DescriptionAttributeAxisScaleBreakStyle_BreakLineType";
			
			public const string DescriptionAttributeChartEvent_CursorPositionChanged = "DescriptionAttributeChartEvent_CursorPositionChanged";
			
			public const string DescriptionAttributeChartSerializer_SerializableContent = "DescriptionAttributeChartSerializer_SerializableContent";
			
			public const string DescriptionAttributeCalloutAnnotation_CalloutStyle = "DescriptionAttributeCalloutAnnotation_CalloutStyle";
			
			public const string DescriptionAttributeCalloutStyle3 = "DescriptionAttributeCalloutStyle3";
			
			public const string DescriptionAttributeCalloutStyle_CalloutStyle = "DescriptionAttributeCalloutStyle_CalloutStyle";
			
			public const string DescriptionAttributeTitle_Docking = "DescriptionAttributeTitle_Docking";
			
			public const string DescriptionAttributeLegend_Docking = "DescriptionAttributeLegend_Docking";
			
			public const string DescriptionAttributeAnnotationGroup_AllowAnchorMoving = "DescriptionAttributeAnnotationGroup_AllowAnchorMoving";
			
			public const string DescriptionAttributeAllowAnchorMoving3 = "DescriptionAttributeAllowAnchorMoving3";
			
			public const string DescriptionAttributeTitleColor = "DescriptionAttributeTitleColor";
			
			public const string DescriptionAttributeStripLine_TitleColor = "DescriptionAttributeStripLine_TitleColor";
			
			public const string DescriptionAttributeLegend_TitleColor = "DescriptionAttributeLegend_TitleColor";
			
			public const string DescriptionAttributeTitles = "DescriptionAttributeTitles";
			
			public const string DescriptionAttributePolygonAnnotation_PolygonAnnotation = "DescriptionAttributePolygonAnnotation_PolygonAnnotation";
			
			public const string DescriptionAttributeLabel_IntervalType = "DescriptionAttributeLabel_IntervalType";
			
			public const string DescriptionAttributeIntervalType3 = "DescriptionAttributeIntervalType3";
			
			public const string DescriptionAttributeIntervalType4 = "DescriptionAttributeIntervalType4";
			
			public const string DescriptionAttributeStripLine_IntervalType = "DescriptionAttributeStripLine_IntervalType";
			
			public const string DescriptionAttributeAxisScaleSegment_IntervalType = "DescriptionAttributeAxisScaleSegment_IntervalType";
			
			public const string DescriptionAttributeCursor_IntervalType = "DescriptionAttributeCursor_IntervalType";
			
			public const string DescriptionAttributeLegendItem_SeparatorColor = "DescriptionAttributeLegendItem_SeparatorColor";
			
			public const string DescriptionAttributeSeries_YValuesPerPoint = "DescriptionAttributeSeries_YValuesPerPoint";
			
			public const string DescriptionAttributeChartEvent_PrePaint = "DescriptionAttributeChartEvent_PrePaint";
			
			public const string DescriptionAttributeLegendUrl = "DescriptionAttributeLegendUrl";
			
			public const string DescriptionAttributeCustomLabel_ImageUrl = "DescriptionAttributeCustomLabel_ImageUrl";
			
			public const string DescriptionAttributeLabel_Format = "DescriptionAttributeLabel_Format";
			
			public const string DescriptionAttributeChartSerializer_Format = "DescriptionAttributeChartSerializer_Format";
			
			public const string DescriptionAttributeStripLines = "DescriptionAttributeStripLines";
			
			public const string DescriptionAttributeChart_ViewStateData = "DescriptionAttributeChart_ViewStateData";
			
			public const string DescriptionAttributeTitle_DockOffset = "DescriptionAttributeTitle_DockOffset";
			
			public const string DescriptionAttributeAnchorDataPoint = "DescriptionAttributeAnchorDataPoint";
			
			public const string DescriptionAttributeLabelFormat = "DescriptionAttributeLabelFormat";
			
			public const string DescriptionAttributeSuppressExceptions = "DescriptionAttributeSuppressExceptions";
			
			public const string DescriptionAttributeSeries_EmptyPointStyle = "DescriptionAttributeSeries_EmptyPointStyle";
			
			public const string DescriptionAttributeCustomAttributes = "DescriptionAttributeCustomAttributes";
			
			public const string DescriptionAttributeLegendCellCollection_LegendCellCollection = "DescriptionAttributeLegendCellCollection_LegendCellCollection";
			
			public const string DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection = "DescriptionAttributeCustomLabelsCollection_CustomLabelsCollection";
			
			public const string DescriptionAttributeCustomLabel_MarkColor = "DescriptionAttributeCustomLabel_MarkColor";
			
			public const string DescriptionAttributePalette = "DescriptionAttributePalette";
			
			public const string DescriptionAttributeScaleBreakStyle = "DescriptionAttributeScaleBreakStyle";
			
			public const string DescriptionAttributeChart_ImageUrl = "DescriptionAttributeChart_ImageUrl";
			
			public const string DescriptionAttributeLegend_InterlacedRowsColor = "DescriptionAttributeLegend_InterlacedRowsColor";
			
			public const string DescriptionAttributeLegendCellColumn_ColumnType = "DescriptionAttributeLegendCellColumn_ColumnType";
			
			public const string DescriptionAttributeChartArea_AlignOrientation = "DescriptionAttributeChartArea_AlignOrientation";
			
			public const string DescriptionAttributeChart_SoftShadows = "DescriptionAttributeChart_SoftShadows";
			
			public const string DescriptionAttributeSoftShadows3 = "DescriptionAttributeSoftShadows3";
			
			public const string DescriptionAttributePrintingManager_PrintDocument = "DescriptionAttributePrintingManager_PrintDocument";
			
			public const string DescriptionAttributeMinimum = "DescriptionAttributeMinimum";
			
			public const string DescriptionAttributeAxisScaleSegment_ScaleMaximum = "DescriptionAttributeAxisScaleSegment_ScaleMaximum";
			
			public const string DescriptionAttributeScrollBarEventArgs_MousePositionX = "DescriptionAttributeScrollBarEventArgs_MousePositionX";
			
			public const string DescriptionAttributeLabel_TruncatedLabels = "DescriptionAttributeLabel_TruncatedLabels";
			
			public const string DescriptionAttributeCustomLabel_GridTicks = "DescriptionAttributeCustomLabel_GridTicks";
			
			public const string DescriptionAttributeImageAnnotation_Alignment = "DescriptionAttributeImageAnnotation_Alignment";
			
			public const string DescriptionAttributeLegendCellColumn_Alignment = "DescriptionAttributeLegendCellColumn_Alignment";
			
			public const string DescriptionAttributeTitle_Alignment = "DescriptionAttributeTitle_Alignment";
			
			public const string DescriptionAttributeLegendCell_Alignment = "DescriptionAttributeLegendCell_Alignment";
			
			public const string DescriptionAttributeLegend_Alignment = "DescriptionAttributeLegend_Alignment";
			
			public const string DescriptionAttributeAlignment = "DescriptionAttributeAlignment";
			
			public const string DescriptionAttributeChart_OnCustomizeMapAreas = "DescriptionAttributeChart_OnCustomizeMapAreas";
			
			public const string DescriptionAttributeSubAxis_LocationOffset = "DescriptionAttributeSubAxis_LocationOffset";
			
			public const string DescriptionAttributeLegendCellColumn_MinimumWidth = "DescriptionAttributeLegendCellColumn_MinimumWidth";
			
			public const string DescriptionAttributeSelectionPointsStyle = "DescriptionAttributeSelectionPointsStyle";
			
			public const string DescriptionAttributeAxisY = "DescriptionAttributeAxisY";
			
			public const string DescriptionAttributeChartArea_AxisY = "DescriptionAttributeChartArea_AxisY";
			
			public const string DescriptionAttributeTextFont = "DescriptionAttributeTextFont";
			
			public const string DescriptionAttributeTextFont4 = "DescriptionAttributeTextFont4";
			
			public const string DescriptionAttributeAxisDataView_SizeType = "DescriptionAttributeAxisDataView_SizeType";
			
			public const string DescriptionAttributeMinMovingDistance = "DescriptionAttributeMinMovingDistance";
			
			public const string DescriptionAttributeChartArea_CursorX = "DescriptionAttributeChartArea_CursorX";
			
			public const string DescriptionAttributeAxisDataView_SmallScrollMinSize = "DescriptionAttributeAxisDataView_SmallScrollMinSize";
			
			public const string DescriptionAttributeAxisDataView_SmallScrollMinSizeType = "DescriptionAttributeAxisDataView_SmallScrollMinSizeType";
			
			public const string DescriptionAttributeAxisScrollBar_ButtonColor = "DescriptionAttributeAxisScrollBar_ButtonColor";
			
			public const string DescriptionAttributeArea3DStyle = "DescriptionAttributeArea3DStyle";
			
			public const string DescriptionAttributeChart = "DescriptionAttributeChart";
			
			public const string DescriptionAttributeChart_Chart = "DescriptionAttributeChart_Chart";
			
			public const string DescriptionAttributeBorderSkin_PageColor = "DescriptionAttributeBorderSkin_PageColor";
			
			public const string DescriptionAttributeDataPoint_DataPoint = "DescriptionAttributeDataPoint_DataPoint";
			
			public const string DescriptionAttributeChartArea3DStyle_Light = "DescriptionAttributeChartArea3DStyle_Light";
			
			public const string DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties = "DescriptionAttributeDataPointCustomProperties_DataPointCustomProperties";
			
			public const string DescriptionAttributeLegend_AutoFitText = "DescriptionAttributeLegend_AutoFitText";
			
			public const string DescriptionAttributeAllowTextEditing = "DescriptionAttributeAllowTextEditing";
			
			public const string DescriptionAttributeCustomLabel_Text = "DescriptionAttributeCustomLabel_Text";
			
			public const string DescriptionAttributeLegendCell_Text = "DescriptionAttributeLegendCell_Text";
			
			public const string DescriptionAttributeText = "DescriptionAttributeText";
			
			public const string DescriptionAttributeTitle_Text = "DescriptionAttributeTitle_Text";
			
			public const string DescriptionAttributeLegendCellColumn_Text = "DescriptionAttributeLegendCellColumn_Text";
			
			public const string DescriptionAttributeToolTipEventArgs_Text = "DescriptionAttributeToolTipEventArgs_Text";
			
			public const string DescriptionAttributeMultiline = "DescriptionAttributeMultiline";
			
			public const string DescriptionAttributeTextAnnotation_TextAnnotation = "DescriptionAttributeTextAnnotation_TextAnnotation";
			
			public const string DescriptionAttributeAnnotationGroup_ClipToChartArea = "DescriptionAttributeAnnotationGroup_ClipToChartArea";
			
			public const string DescriptionAttributeSeries_YValueType = "DescriptionAttributeSeries_YValueType";
			
			public const string DescriptionAttributeInternalIntervalType = "DescriptionAttributeInternalIntervalType";
			
			public const string DescriptionAttributeCalloutAnnotation_CalloutAnchorCap = "DescriptionAttributeCalloutAnnotation_CalloutAnchorCap";
			
			public const string DescriptionAttributeLogarithmic = "DescriptionAttributeLogarithmic";
			
			public const string DescriptionAttributeLegend_ItemColumnSpacing = "DescriptionAttributeLegend_ItemColumnSpacing";
			
			public const string DescriptionAttributeMarksNextToAxis = "DescriptionAttributeMarksNextToAxis";
			
			public const string DescriptionAttributeChartEvent_SelectionRangeChanged = "DescriptionAttributeChartEvent_SelectionRangeChanged";
			
			public const string DescriptionAttributeDataPointCollection_DataPointCollection = "DescriptionAttributeDataPointCollection_DataPointCollection";
			
			public const string DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation = "DescriptionAttributeHorizontalLineAnnotation_HorizontalLineAnnotation";
			
			public const string DescriptionAttributeLegendCellColumn_HeaderColor = "DescriptionAttributeLegendCellColumn_HeaderColor";
			
			public const string DescriptionAttributeLegendCell_LegendCell = "DescriptionAttributeLegendCell_LegendCell";
			
			public const string DescriptionAttributeChartImageDescriptionUrl = "DescriptionAttributeChartImageDescriptionUrl";
			
			public const string DescriptionAttributeChartImageAlternateText = "DescriptionAttributeChartImageAlternateText";
			
			public const string DescriptionAttributePostBackValue = "DescriptionAttributePostBackValue";
			
			public const string DescriptionAttributeTextStyle = "DescriptionAttributeTextStyle";
			
			public const string DescriptionAttributeIsMapAreaAttributesEncoded = "DescriptionAttributeIsMapAreaAttributesEncoded";
			
			public const string DescriptionAttributeRightToLeft = "DescriptionAttributeRightToLeft";
			
			public const string CategoryAttributeCellColumns = "CategoryAttributeCellColumns";
			
			public const string CategoryAttributeAxis = "CategoryAttributeAxis";
			
			public const string CategoryAttributeEditing = "CategoryAttributeEditing";
			
			public const string CategoryAttributeSize = "CategoryAttributeSize";
			
			public const string CategoryAttributePosition = "CategoryAttributePosition";
			
			public const string CategoryAttributeViewState = "CategoryAttributeViewState";
			
			public const string CategoryAttributeInterval = "CategoryAttributeInterval";
			
			public const string CategoryAttributeAppearance = "CategoryAttributeAppearance";
			
			public const string CategoryAttributeDocking = "CategoryAttributeDocking";
			
			public const string CategoryAttributeDataSource = "CategoryAttributeDataSource";
			
			public const string CategoryAttributeAxisView = "CategoryAttributeAxisView";
			
			public const string CategoryAttributeLayout = "CategoryAttributeLayout";
			
			public const string CategoryAttribute3D = "CategoryAttribute3D";
			
			public const string CategoryAttributeData = "CategoryAttributeData";
			
			public const string CategoryAttributeTitle = "CategoryAttributeTitle";
			
			public const string CategoryAttributeToolTips = "CategoryAttributeToolTips";
			
			public const string CategoryAttributeLabels = "CategoryAttributeLabels";
			
			public const string CategoryAttributeGridTickMarks = "CategoryAttributeGridTickMarks";
			
			public const string CategoryAttributeLabelAppearance = "CategoryAttributeLabelAppearance";
			
			public const string CategoryAttributeHeader = "CategoryAttributeHeader";
			
			public const string CategoryAttributeAxes = "CategoryAttributeAxes";
			
			public const string CategoryAttributeImage = "CategoryAttributeImage";
			
			public const string CategoryAttributeEmptyPoints = "CategoryAttributeEmptyPoints";
			
			public const string CategoryAttributeAlignment = "CategoryAttributeAlignment";
			
			public const string CategoryAttributeAnnotation = "CategoryAttributeAnnotation";
			
			public const string CategoryAttributeMarker = "CategoryAttributeMarker";
			
			public const string CategoryAttributeChart = "CategoryAttributeChart";
			
			public const string CategoryAttributeLocation = "CategoryAttributeLocation";
			
			public const string CategoryAttributeToolTip = "CategoryAttributeToolTip";
			
			public const string CategoryAttributeMap = "CategoryAttributeMap";
			
			public const string CategoryAttributeMapArea = "CategoryAttributeMapArea";
			
			public const string CategoryAttributeLabel = "CategoryAttributeLabel";
			
			public const string CategoryAttributeShape = "CategoryAttributeShape";
			
			public const string CategoryAttributeMisc = "CategoryAttributeMisc";
			
			public const string CategoryAttributeSerializer = "CategoryAttributeSerializer";
			
			public const string CategoryAttributeSubAxes = "CategoryAttributeSubAxes";
			
			public const string CategoryAttributeSeriesItems = "CategoryAttributeSeriesItems";
			
			public const string CategoryAttributeDataView = "CategoryAttributeDataView";
			
			public const string CategoryAttributeCharttitle = "CategoryAttributeCharttitle";
			
			public const string CategoryAttributeLegend = "CategoryAttributeLegend";
			
			public const string CategoryAttributeAction = "CategoryAttributeAction";
			
			public const string CategoryAttributeScale = "CategoryAttributeScale";
			
			public const string CategoryAttributeAnnotations = "CategoryAttributeAnnotations";
			
			public const string CategoryAttributeAnchor = "CategoryAttributeAnchor";
			
			public const string CategoryAttributeBehavior = "CategoryAttributeBehavior";
			
			public const string CategoryAttributeCursor = "CategoryAttributeCursor";
			
			public const string CategoryAttributeAnchorAxes = "CategoryAttributeAnchorAxes";
			
			public const string CategoryAttributeAccessibility = "CategoryAttributeAccessibility";
			
			public const string AccessibilityTitleName = "AccessibilityTitleName";
			
			public const string AccessibilityAnnotationName = "AccessibilityAnnotationName";
			
			public const string AccessibilityLegendName = "AccessibilityLegendName";
			
			public const string AccessibilitySeriesName = "AccessibilitySeriesName";
			
			public const string AccessibilityDataPointName = "AccessibilityDataPointName";
			
			public const string AccessibilityDataPointLabelName = "AccessibilityDataPointLabelName";
			
			public const string AccessibilityLegendTitleName = "AccessibilityLegendTitleName";
			
			public const string AccessibilityChartAreaName = "AccessibilityChartAreaName";
			
			public const string AccessibilityChartAxisTitleName = "AccessibilityChartAxisTitleName";
			
			public const string AccessibilityChartAxisMajorGridlinesName = "AccessibilityChartAxisMajorGridlinesName";
			
			public const string AccessibilityChartAxisMinorGridlinesName = "AccessibilityChartAxisMinorGridlinesName";
			
			public const string FormatErrorString = "FormatErrorString";
			
			public const string ExceptionNameIsEmpty = "ExceptionNameIsEmpty";
			
			public const string ExceptionNameAlreadyExistsInCollection = "ExceptionNameAlreadyExistsInCollection";
			
			public const string ExceptionNameNotFound = "ExceptionNameNotFound";
			
			public const string ActionListSeriesChartType = "ActionListSeriesChartType";
			
			public const string ActionListSeriesDataGroup = "ActionListSeriesDataGroup";
			
			public const string ActionListSeriesXValueMember = "ActionListSeriesXValueMember";
			
			public const string ActionListSeriesYValueMembers = "ActionListSeriesYValueMembers";
			
			public const string DiagnosticHeader = "DiagnosticHeader";
			
			public const string DiagnosticSettingsConfig = "DiagnosticSettingsConfig";
			
			public const string DiagnosticSettingsHeader = "DiagnosticSettingsHeader";
			
			public const string DiagnosticSettingsKey = "DiagnosticSettingsKey";
			
			public const string DiagnosticSettingsValue = "DiagnosticSettingsValue";
			
			public const string DiagnosticSettingsInfo = "DiagnosticSettingsInfo";
			
			public const string DiagnosticQueueStateHeader = "DiagnosticQueueStateHeader";
			
			public const string DiagnosticQueueStateName = "DiagnosticQueueStateName";
			
			public const string DiagnosticQueueStateAccess = "DiagnosticQueueStateAccess";
			
			public const string DiagnosticQueueStateAccessOK = "DiagnosticQueueStateAccessOK";
			
			public const string DiagnosticQueueStateAccessFail = "DiagnosticQueueStateAccessFail";
			
			public const string DiagnosticQueueStateAccessInfo = "DiagnosticQueueStateAccessInfo";
			
			public const string DiagnosticActivityHeader = "DiagnosticActivityHeader";
			
			public const string DiagnosticActivityTime = "DiagnosticActivityTime";
			
			public const string DiagnosticActivityMessage = "DiagnosticActivityMessage";
			
			public const string DiagnosticActivityError = "DiagnosticActivityError";
			
			public const string DiagnosticChartImageSaved = "DiagnosticChartImageSaved";
			
			public const string DiagnosticChartImageSavedPrivate = "DiagnosticChartImageSavedPrivate";
			
			public const string DiagnosticChartImageDeleted = "DiagnosticChartImageDeleted";
			
			public const string DiagnosticChartImageServed = "DiagnosticChartImageServed";
			
			public const string DiagnosticChartImageServedFail = "DiagnosticChartImageServedFail";
			
			public const string DiagnosticChartImageServedFailNotFound = "DiagnosticChartImageServedFailNotFound";
			
			public const string DiagnosticChartImageServedFailPrivacyFail = "DiagnosticChartImageServedFailPrivacyFail";
			
			private Keys()
			{
			}
			
			public static CultureInfo Culture
			{
				get
				{
					return _culture;
				}
				set
				{
					_culture = value;
				}
			}
			
			public static string GetString(string key)
			{
				return resourceManager.GetString(key, _culture);
			}
			
			public static string GetString(string key, object arg0)
			{
				return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0);
			}
			
			public static string GetString(string key, object arg0, object arg1)
			{
				return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1);
			}
			
			public static string GetString(string key, object arg0, object arg1, object arg2)
			{
				return string.Format(global::System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1, arg2);
			}
		}
	}
}
