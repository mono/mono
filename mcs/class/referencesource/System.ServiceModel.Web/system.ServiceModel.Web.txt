#if INCLUDE_RUNTIME
#endif // INCLUDE_RUNTIME

#if INCLUDE_DEBUG
;ObjectSerializer_RecursionLimitReached=JSON recursion depth limit of {0} exceeded.
ObjectSerializer_DictionaryNotSupported=An internal error has occurred. JSON dictionary type {0} not supported.
ObjectDeserializer_BadEscape=Invalid escape code encountered in a JSON string.
ObjectDeserializer_IllegalPrimitive='{0}' is not a valid JSON primitive. This error can also occur when extraneous data is present after the JSON data.
ObjectDeserializer_InvalidArrayExtraComma=JSON array ended with a trailing comma.
ObjectDeserializer_InvalidMemberName=Invalid member name encountered in a JSON object.
;ObjectDeserializer_DepthLimitExceeded=Recursion depth limit exceeded.
ObjectDeserializer_StringNotQuoted=An internal error has occurred. JSON string not properly quoted.
ObjectDeserializer_UnexpectedToken=Unexpected character encountered in JSON. Expected '{1}', got '{0}'.
ObjectDeserializer_UnterminatedString=Unterminated JSON string encountered. JSON strings must start with a single or double quote character and end with the same character.
XmlObjectAssignedToIncompatibleInterface='{0}' is an XML type and cannot be serialized when assigned to an interface type that does not implement IXmlSerializable ('{1}'.)
CollectionAssignedToIncompatibleInterface='{0}' is a collection type and cannot be serialized when assigned to an interface type that does not implement IEnumerable ('{1}'.)
JsonInvalidBytes=Invalid byte encoding.
JsonDuplicateMemberInInput=The dictionary cannot be deserialized because the member '{0}' was found more than once in the input.
JsonDuplicateMemberNames=The data contract type '{0}' is not serializable with DataContractJsonSerializer because the data member '{1}' is duplicated in its type hierarchy.
JsonUnsupportedForIsReference=The type '{0}' cannot be serialized to JSON because its IsReference setting is '{1}'. The JSON format does not support references because there is no standardized format for representing references. To enable serialization, disable the IsReference setting on the type or an appropriate parent class of the type.
DcTypeNotFoundOnDeserialize=JSON contains a '__type' member specifying the data contract name '{0}:{1}'. The deserializer has no knowledge of any type that maps to this contract. Add the type corresponding to '{1}' to the list of known types - for example, by using the KnownTypeAttribute attribute or by adding it to the list of known types passed to DataContractSerializer. You can also often eliminate this error by avoiding the use of derived types where the JSON is produced.
JsonCircularReferenceDetected=A circular reference has been detected when serializing an object of type {0} to JSON. Circular references are not supported in the JSON format.
PartialTrustNonAttributedSerializableTypeNoPublicConstructor=The type '{0}' cannot be deserialized because it does not have a public parameterless constructor. Alternatively, you can make it internal, and use the InternalsVisibleToAttribute attribute on your assembly in order to enable serialization of internal members - see documentation for more details. Be aware that doing so has certain security implications.
PartialTrustDataContractMemberGetNotPublic=The data contract type '{0}' cannot be serialized because the member '{1}' is not public. Making the member public will fix this error. Alternatively, you can make it internal, and use the InternalsVisibleToAttribute attribute on your assembly in order to enable serialization of internal members - see documentation for more details. Be aware that doing so has certain security implications.
PartialTrustDataContractMemberSetNotPublic=The data contract type '{0}' cannot be deserialized because the member '{1}' is not public. Making the member public will fix this error. Alternatively, you can make it internal, and use the InternalsVisibleToAttribute attribute on your assembly in order to enable serialization of internal members - see documentation for more details. Be aware that doing so has certain security implications.
UnsupportedIDictionaryAsDataMemberType=Cannot deserialize one of the DataMember because it is an IDictionary. Use IDictionary<K,V> instead.
UnknownDataContract=Unknown data contract: '{0}'.
#endif // INCLUDE_DEBUG
