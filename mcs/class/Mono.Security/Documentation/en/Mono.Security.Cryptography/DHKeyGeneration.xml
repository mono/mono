<Type Name="DHKeyGeneration" FullName="Mono.Security.Cryptography.DHKeyGeneration">
  <TypeSignature Language="C#" Value="public enum DHKeyGeneration" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>Mono.Security</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 79 15 99 77 D2 D0 3A 8E 6B EA 7A 2E 74 E8 D1 AF CC 93 E8 85 19 74 95 2B B4 80 A1 2C 91 34 47 4D 04 06 24 47 C3 7E 0E 68 C0 80 53 6F CF 3C 3F BE 2F F9 C9 79 CE 99 84 75 E5 06 E8 CE 82 DD 5B 0F 35 0D C1 0E 93 BF 2E EE CF 87 4B 24 77 0C 50 81 DB EA 74 47 FD DA FA 27 7B 22 DE 47 D6 FF EA 44 96 74 A4 F9 FC CF 84 D1 50 69 08 93 80 28 4D BD D3 5F 46 CD FF 12 A1 BD 78 E4 EF 00 65 D0 16 DF]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Defines the different Diffie-Hellman key generation methods.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName="Random">
      <MemberSignature Language="C#" Value="Random" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Security.Cryptography.DHKeyGeneration</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Returns dynamically generated values for P and G. Unlike the Sophie Germain or DSA key generation methods, this method does not ensure that the selected prime offers an adequate security level.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Mono.Security.Cryptography.DHKeyGeneration</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Returns values for P and G that are hard coded in this library. Contrary to what your intuition may tell you, using these hard coded values is perfectly safe. The values of the P and G parameters are taken from 'The OAKLEY Key Determination Protocol' [RFC2412]. This is the preferred key generation method, because it is very fast and very safe. Because this method uses fixed values for the P and G parameters, not all bit sizes are supported. The current implementation supports bit sizes of 768, 1024 and 1536.</summary>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>
