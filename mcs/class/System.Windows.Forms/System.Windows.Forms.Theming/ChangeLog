2008-07-10  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElements.cs: Changed the XplatUI.ThemesEnabled check to
	Application.VisualStylesEnabled because it does not work on X11.

2008-07-09  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElements.cs: ThemeElementsVisualStyles is now selected if
	Application.EnableVisualStyles has been called, even if the current system
	configuration does not support rendering with Visual Styles.

2008-05-07  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElementsVisualStyles.cs: Added ToolStripPainter.

2008-04-28  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElementsVisualStyles.cs: Added TabControlPainter.

2008-04-27  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElements.cs: Fixed the code to select ThemeElementsVisualStyles.

2008-04-25  George Giolfan  <georgegiolfan@yahoo.com>

	* ThemeElements.cs: Added code to select ThemeElementsVisualStyles.
	* ThemeElementsVisualStyles.cs: Added.

2008-01-23  Everaldo Canuto  <ecanuto@novell.com>

	* ThemeElementsDefault.cs: Add LinkLabelPainter references.
	* ThemeElements.cs: Add LinkLabelPainter references.

2008-01-22  Everaldo Canuto  <ecanuto@novell.com>

	* ThemeElementsDefault.cs: Add LinkLabelPainter references. Also add some 
	public properties to gets painters, it reduce some source line width because 
	we can refer to Painters using "ThemeElements.LinkLabelPainter" as example.
	
	* ThemeElements.cs: Add LinkLabelPainter references.
	
2007-08-28  Jonathan Pobst  <monkey@jpobst.com>

	* ThemeElementsDefault.cs: Add accessor for RadioButtonPainter.

2007-08-22  Jonathan Pobst  <monkey@jpobst.com>

	* ThemeElementsDefault.cs: Add accessor for CheckBoxPainter.
	* ThemeElements.cs: Add enum for button states.

2007-07-03  Jonathan Pobst  <monkey@jpobst.com>

	* ThemeElementsDefault.cs: Add accessor for ToolStripPainter.

2007-04-15  Andreia Gaita  <avidigal@novell.com>

	* ThemeElements.cs: Load themes by reflection according to theme
	name. If the theme is not implemented yet, load the default theme.
	Theme classes just give access to the *Painter classes, that 
	implement drawing of each control. Only the Default.*Painter
	class needs to be implemented and referenced on ThemeDefault, 
	all others inherit from this one. Check the ThemeElementsNice
	class for an example.
	
	* ThemeElementsDefault.cs, 
	  ThemeElementsClearlooks.cs (new), 
	  ThemeElementsNice.cs (new), 
	  ThemeElementsGtk.cs (new): Theme classes to access *Painter 
		implementations.	

2007-03-02  Jonathan Pobst  <monkey@jpobst.com>

	* ThemeElements.cs: Driver code to theme class that actually draws 
	theme elements.
	* ThemeElementsDefault.cs: Default [win32 style] implementation of 
	Standard, Flat, Popup buttons.