2009-05-15  Carlos Alberto Cortez <calberto.cortez@gmail.com>

	* RTF.cs: If the rtf specified a code page outside the valid values,
	fallback to the default one.
	Fixes #503174.

2008-01-29  Jonathan Pobst  <monkey@jpobst.com>

	* Picture.cs: Don't create a bitmap just to get the dpi.

2007-12-19  Jonathan Pobst  <monkey@jpobst.com>

	* RTF.cs: Patch from Luke Page that ignores CRLF during tokenisation
	and to support multiple groups inside an optional destination.  Fixes
	a part of bug #324589.

2007-11-02  Jonathan Pobst  <monkey@jpobst.com>

	* Picture.cs: Reset the data stream position back to 0 before trying
	to convert it into an image.  Fixes bug #325055.

2007-08-17  Jeffrey Stedfast  <fejj@novell.com>

	* RTF.cs (GetChar): Fixed c to be int instead of char (since we
	can't compare char to -1).

2007-07-12  Rolf Bjarne Kvinge <RKvinge@novell.com> 

	* RTF.cs: Remove warning.

2007-05-28  Andreia Gaita  <avidigal@novell.com>

	* Charcode.cs: The "private" keyword is not allowed on 1.1 setters
	on csc (blows up teh vs 2003 build)
	
2007-05-18  Marek Safar  <marek.safar@gmail.com>

	* Charcode.cs: Added AnsiGeneric caching. 

2007-04-17  Jackson Harper  <jackson@ximian.com>

	* <everything>.cs: Make it a little easier for people to compile
	the RTF library for standalone purposes.

2007-04-16  Jackson Harper  <jackson@ximian.com>

	* RTF.cs:
	* Picture.cs: Save a step by loading the image data directly into
	the picture's memory stream. (Aprox 15% speedup).

2007-04-05  Sebastien Pouliot  <sebastien@ximian.com>

	* RTF.cs: Use the "goal" width and height to compute the metafile size

2007-04-04  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: look ahead for the end of the group, so we don't read
	past the end and pull out a piece of the next token.

2007-04-04  Jackson Harper  <jackson@ximian.com>

	* Picture.cs: Correct twips calculation.

2007-03-27  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Use the documents encoding code page to decode unicode
	chars.

2007-03-27  Jackson Harper  <jackson@ximian.com>

	* TextMap.cs: New textmap.  This should cover all the special
	chars.

2007-03-27  Jackson Harper  <jackson@ximian.com>

	* TextMap.cs: Implement some more characters.  I need to go
	through and do all of these. There are a lot missing.

2007-03-21  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Make sure the image token gets set.

2007-03-18  Jackson Harper  <jackson@ximian.com>

	* RTF.cs:  Added support for metafiles and use the new picture
	class.
	* Picture.cs: New class for handling pictures and their
	attributes.

2007-02-27  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: break when we finish loading the image data, otherwise
	the parser gets confused if the image data is at the end of the
	stream.

2007-02-23  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Pull pict groups out of opt dests. Don't handle the pict
	group unless there was data found.

2007-02-15  Jackson Harper  <jackson@ximian.com>

	* KeysInit.cs:
	* Minor.cs: 
	* RTF.cs: Add support for parsing pngblip data.  These are hex
	encoded strings that represent a PNG image.

2006-12-05  Chris Toshok  <toshok@ximian.com>

	* RTF.cs: more warning fixes.

2006-12-04  Chris Toshok  <toshok@ximian.com>

	* RTF.cs: remove unused fields.

	* Style.cs: remove unused field.

	* Charset.cs: remove unused field.

2006-10-27  Jackson Harper  <jackson@ximian.com>

	* TextMap.cs: Since we map udieresis as a standard char we need to
	have a text mapping for it.  At some point I should go through all
	the standard chars and make sure we have mappings for them.
	* Major.cs:
	* Minor.cs: Make debugging a more beautiful experience.

2006-10-25  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Kick out of the text swallowing loop if we begin a new
	group, this happens when there is an alternate font name.  TODO:
	We should probably handle alternate font names somehow.
	- Skip over all OptDest tags, these are 'new' RTF features that we
	don't need to handle
	* KeysInit.cs: Make OptDest a destination, since that's what it
	is.

2006-10-20  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: Need to cast this to a char now.

2006-10-11  Jackson Harper  <jackson@ximian.com>

	* RTF.cs: When reading in chars use an int so that we can
	correctly detect EOF.

2006-07-11  Peter Dennis Bartok  <pbartok@novell.com>

	* Font.cs: Set a default emtpy name so we don't crash if an RTF 
	  document defines a font but no name for it

2006-04-26  Peter Dennis Bartok  <pbartok@novell.com>

	* RTF.cs: Skip \r and \n characters instead of passing them back up
	  to the parser. It will confuse the parser. (Fixes #77914)

2005-12-22  Peter Dennis Bartok  <pbartok@novell.com>

	* RTF.cs: Added method to allow setting the default font for the RTF
	  document. This font will be used if the document does not contain
	  a font table.
	* Font.cs: Added method to delete font with a given number; 
	  changed set_Num to call this method (to allow replacing fonts
	  with the same number, particulary the default font)

2005-09-04  Peter Dennis Bartok  <pbartok@novell.com>

	* Charcode.cs: Created; provides StandardCharCode <-> character 
	  translation
	* Charset.cs: Created; provides two standard charsets, AnsiGeneral 
	  and AnsiSymbol
	* CharsetFlags.cs: Created
	* CharsetType.cs: Created
	* ClassDelegate.cs: Created; allows consumer to register a callback
	  for RTF command classes
	* Color.cs: Created; provides access to RTF-defined RGB color sets
	* DestinationDelegate.cs: Created; allows consumer to register a
	  callback for Destination class types
	* Font.cs: Created; provides access to RTF-defined font descriptions
	* KeysInit.cs: Created; provides translation table from RTF keyword
	  to Major/Minor classes
	* KeyStruct.cs: Created
	* Major.cs: Created; describes available RTF command groups
	* Minor.cs: Created; describes available 'arguments' for command groups
	* README: Created
	* RTF.cs: Created; contains main RTF parser code
	* rtf.csproj: Created; provides Visual Studio project that allows to
	  use test this assembly via the included test.cs
	  to provide 
	* RTFException.cs: Created; provides custom RTF exception class
	* StandardCharCode.cs: Created
	* StandardCharName.cs: Created
	* Style.cs: Created; provides access to RTF-define styles
	* StyleElement.cs: Created; provides support class to allow parsing
	  recursive styles
	* StyleType.cs: Created
	* test.cs: Test code showing use of RTF class (also acts as Main for
	  the included Visual Studio project)
	* TextMap.cs: Created; allows to create simple translation table for
	  converting parsed RTF document to text; table-based
	* TokenClass.cs: Created; describes all available RTF command classes
