<?xml version="1.0" encoding="utf-8"?>
<Type Name="IDataGridViewEditingCell" FullName="System.Windows.Forms.IDataGridViewEditingCell">
  <TypeSignature Language="C#" Value="public interface IDataGridViewEditingCell" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This interface is implemented by classes such as <see cref="T:System.Windows.Forms.DataGridViewCheckBoxCell" /> that derive from <see cref="T:System.Windows.Forms.DataGridViewCell" /> and provide a user interface (UI) for specifying values without hosting an editing control. The UI in this case is displayed regardless of whether the cell is in edit mode. </para>
      <para>Other cell types, such as <see cref="T:System.Windows.Forms.DataGridViewButtonCell" />, provide a UI but do not store user-specified values. In this case, the cell type does not implement <see cref="T:System.Windows.Forms.IDataGridViewEditingCell" /> or host an editing control.</para>
      <para>Cell types that display an editing control when the cell is in edit mode, such as <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" />, do not implement <see cref="T:System.Windows.Forms.IDataGridViewEditingCell" /> but instead provide a companion class that implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />. For example, <see cref="T:System.Windows.Forms.DataGridViewTextBoxCell" /> provides a <see cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl" /> that derives from the <see cref="T:System.Windows.Forms.TextBox" /> control and implements <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />. In this case, the cell <see cref="P:System.Windows.Forms.DataGridViewCell.EditType" /> property is set to a <see cref="T:System.Type" /> object representing the editing control type. For information about implementing <see cref="T:System.Windows.Forms.IDataGridViewEditingControl" />, see <format type="text/html"><a href="e79a9d4e-64ec-41f5-93ec-f5492633cbb2">How to: Host Controls in Windows Forms DataGridView Cells</a></format>.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Defines common functionality for a cell that allows the manipulation of its value.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="EditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object EditingCellFormattedValue { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The formatted value represents the value as it is displayed in the cell's user interface. The formatted value may be different in absolute value and even data type than the actual value contained in the cell.</para>
          <para>Implementations of this property typically return a value retrieved by calling the <see cref="M:System.Windows.Forms.IDataGridViewEditingCell.GetEditingCellFormattedValue(System.Windows.Forms.DataGridViewDataErrorContexts)" /> method and passing in the <see cref="F:System.Windows.Forms.DataGridViewDataErrorContexts.Formatting" /> value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the formatted value of the cell.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EditingCellValueChanged">
      <MemberSignature Language="C#" Value="public bool EditingCellValueChanged { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is set to true to indicate that the cell value has been modified and that its user interface (UI) may need to be updated to reflect this change in value. The owning cell or table should reset this property to false after an update.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value indicating whether the value of the cell has changed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetEditingCellFormattedValue">
      <MemberSignature Language="C#" Value="public object GetEditingCellFormattedValue (System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The formatted value represents the value as it is displayed in the cell's user interface. The formatted value may be different in absolute value and even data type than the actual value contained in the cell.</para>
          <para>To set the formatted value of the cell, use the <see cref="P:System.Windows.Forms.IDataGridViewEditingCell.EditingCellFormattedValue" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Retrieves the formatted value of the cell.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Object" /> that represents the formatted version of the cell contents.</para>
        </returns>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> values that specifies the context in which the data is needed.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrepareEditingCellForEdit">
      <MemberSignature Language="C#" Value="public void PrepareEditingCellForEdit (bool selectAll);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The purpose of this method is to prepare the cell and its contents for editing. For example, you might want to put the insertion point at the end of the cell contents, or change how the contents are aligned.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Prepares the currently selected cell for editing</para>
        </summary>
        <param name="selectAll">
          <attribution license="cc4" from="Microsoft" modified="false" />true to select the cell contents; otherwise, false.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>