<?xml version="1.0" encoding="utf-8"?>
<Type Name="SystemInformation" FullName="System.Windows.Forms.SystemInformation">
  <TypeSignature Language="C#" Value="public class SystemInformation" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Windows.Forms.SystemInformation" /> class provides static properties that can be used to get information about the current system environment. The class provides access to information such as Windows display element sizes, operating system settings, network availability, and the capabilities of hardware installed on the system. This class cannot be instantiated.</para>
      <para>For more information about system-wide parameters, see "SystemParametersInfo" in the Platform SDK documentation at <see cref="">http://msdn.microsoft.com</see>.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides information about the current system environment.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="ActiveWindowTrackingDelay">
      <MemberSignature Language="C#" Value="public static int ActiveWindowTrackingDelay { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the active window tracking delay.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ArrangeDirection">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ArrangeDirection ArrangeDirection { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ArrangeDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Windows.Forms.ArrangeDirection" /> property indicates the direction in which minimized windows are arranged on the desktop or in a Multiple Document Interface (MDI) container.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates the direction in which the operating system arranges minimized windows.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ArrangeStartingPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ArrangeStartingPosition ArrangeStartingPosition { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ArrangeStartingPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> property indicates the corner of a screen or window in which the operating system begins to arrange minimized windows.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an <see cref="T:System.Windows.Forms.ArrangeStartingPosition" /> value that indicates the starting position from which the operating system arranges minimized windows.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BootMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.BootMode BootMode { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BootMode</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.BootMode" /> property indicates whether the operating system was started in a normal or safe boot mode.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a <see cref="T:System.Windows.Forms.BootMode" /> value that indicates the boot mode the system was started in.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Border3DSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size Border3DSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.Border3DSize" /> property indicates the thickness, in pixels, of a three-dimensional (3-D) style system control border.</para>
          <para>The <see cref="P:System.Drawing.Size.Width" /> property of the <see cref="P:System.Windows.Forms.SystemInformation.Border3DSize" />  property indicates the width of a vertical 3-D border. The <see cref="P:System.Drawing.Size.Height" /> property of the <see cref="P:System.Windows.Forms.SystemInformation.Border3DSize" /> property indicates the height of a horizontal 3-D border.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.BorderSize" /> property indicates the thickness of a window or system control border that is not a 3-D style border.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of a three-dimensional (3-D) style window or system control border.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BorderMultiplierFactor">
      <MemberSignature Language="C#" Value="public static int BorderMultiplierFactor { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the border multiplier factor that is used when determining the thickness of a window's sizing border.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="BorderSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size BorderSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.BorderSize" /> property indicates the thickness of a flat-style system control border in pixels.</para>
          <para>The <see cref="P:System.Drawing.Size.Width" /> property of the <see cref="P:System.Windows.Forms.SystemInformation.BorderSize" /> property indicates the width of a vertical flat-style border. The <see cref="P:System.Drawing.Size.Height" /> property of the <see cref="P:System.Windows.Forms.SystemInformation.BorderSize" /> property indicates the height of a horizontal flat-style border.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.Border3DSize" /> property of the <see cref="T:System.Windows.Forms.SystemInformation" /> class indicates the thickness of a three-dimensional (3-D) style window or system control border.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of a flat-style window or system control border.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CaptionButtonSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size CaptionButtonSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.CaptionButtonSize" /> property indicates the standard dimensions of a button in the title bar of a window.</para>
          <para>The value of this property can be used to ensure that a button is properly sized to fit within the title bar of a window. Window caption buttons should be sized less than or equal to the standard dimensions for window caption buttons to ensure that they can be displayed in view correctly.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the standard size, in pixels, of a button in a window's title bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CaptionHeight">
      <MemberSignature Language="C#" Value="public static int CaptionHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.CaptionHeight" /> property indicates the height of the standard window title bar area, in pixels.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of the standard title bar area of a window.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CaretBlinkTime">
      <MemberSignature Language="C#" Value="public static int CaretBlinkTime { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the caret blink time.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CaretWidth">
      <MemberSignature Language="C#" Value="public static int CaretWidth { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The caret indicates where text or graphics will be inserted into the edit control.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of the caret in edit controls.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ComputerName">
      <MemberSignature Language="C#" Value="public static string ComputerName { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.ComputerName" /> property retrieves the NetBIOS name of the local computer. This is accomplished with a call into the native System Information function GetComputerName. This name is established at system startup, when the system reads it from the registry. If the local computer is a node in a cluster, <see cref="P:System.Windows.Forms.SystemInformation.ComputerName" /> returns the name of the cluster virtual server.</para>
          <para>You can use the <see cref="P:System.Windows.Forms.SystemInformation.ComputerName" /> method to determine the name of the computer that is displayed to other users on a network.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the NetBIOS computer name of the local computer.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size CursorSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The system cannot create cursors of other sizes.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the maximum size, in pixels, that a cursor can occupy.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DbcsEnabled">
      <MemberSignature Language="C#" Value="public static bool DbcsEnabled { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.DbcsEnabled" /> property indicates whether the current operating system supports DBCS.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the operating system is capable of handling double-byte character set (DBCS) characters.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DebugOS">
      <MemberSignature Language="C#" Value="public static bool DebugOS { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the debug version of USER.EXE is installed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DoubleClickSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size DoubleClickSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.DoubleClickSize" /> property indicates the size of a rectangular area centered around the point at which the last click occurred. To cause a double-click, a second click must occur within the area of the rectangle before the double-click time elapses.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.DoubleClickTime" /> property indicates the maximum number of milliseconds that can elapse before a second click for the second click to cause a double-click.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the area within which the user must click twice for the operating system to consider the two clicks a double-click.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DoubleClickTime">
      <MemberSignature Language="C#" Value="public static int DoubleClickTime { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A double-click is a series of two clicks of the mouse button, the second occurring within a specified length of time after, and within a specified distance from, the first. The double-click time is the maximum number of milliseconds that can elapse between the first and second click of a double-click.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.DoubleClickSize" /> property indicates the size of a rectangular area centered around the point at which the last click occurred. To cause a double-click, a second click must occur within the area of the rectangle before the double-click time elapses.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the maximum number of milliseconds that can elapse between a first click and a second click for the OS to consider the mouse action a double-click.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DragFullWindows">
      <MemberSignature Language="C#" Value="public static bool DragFullWindows { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When this property is true, the content of a window is refreshed during a window move or resize drag, using the current position and size as they are updated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the user has enabled full window drag.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DragSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size DragSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.DragSize" /> property indicates the size, in pixels, of a rectangle centered around the point at which the mouse button was pressed. Windows uses the rectangle as a boundary within which it does not start a drag operation.</para>
          <para>A user can hold a mouse button down and move the mouse within this area before a drag operation begins, which enables the user to click and release the mouse button easily without unintentionally starting a drag operation.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width and height of a rectangle centered on the point the mouse button was pressed, within which a drag operation will not begin.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FixedFrameBorderSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size FixedFrameBorderSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.FixedFrameBorderSize" /> property indicates the thickness of the frame, in pixels, around the perimeter of a window that has a caption but is not sizable.</para>
          <para>The <see cref="P:System.Drawing.Size.Width" /> property of <see cref="P:System.Windows.Forms.SystemInformation.FixedFrameBorderSize" /> is the height of the horizontal border and the <see cref="P:System.Drawing.Size.Height" /> property of <see cref="P:System.Windows.Forms.SystemInformation.FixedFrameBorderSize" /> is the width of the vertical border.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of the frame border of a window that has a caption and is not resizable.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="FontSmoothingContrast">
      <MemberSignature Language="C#" Value="public static int FontSmoothingContrast { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The default ClearType font smoothing value is 1400, but it can be any value from 1000 to 2200. Depending on the display device and the user's sensitivity to colors, a higher or lower contrast value may improve readability.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows XP and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the font smoothing contrast value used in ClearType smoothing.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FontSmoothingType">
      <MemberSignature Language="C#" Value="public static int FontSmoothingType { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.FontSmoothingType" /> property returns a value that indicates the type of currently active font smoothing.</para>
          <para>The following table indicates the meaning of the values returned by this property: </para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Meaning </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>0</para>
              </term>
              <description>
                <para>Font smoothing type could not be determined.</para>
              </description>
            </item>
            <item>
              <term>
                <para>1</para>
              </term>
              <description>
                <para>Standard font smoothing.</para>
              </description>
            </item>
            <item>
              <term>
                <para>2</para>
              </term>
              <description>
                <para>ClearType font smoothing.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This property is supported only on Windows XP and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current type of font smoothing.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="FrameBorderSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size FrameBorderSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.FrameBorderSize" /> property indicates the width and height of the resizing border for a window.</para>
          <para>The <see cref="P:System.Drawing.Size.Width" /> value of this property is the width of a vertical resizing border. The <see cref="P:System.Drawing.Size.Height" /> value of this property is the height of a horizontal resizing border.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of the resizing border that is drawn around the perimeter of a window that is being drag resized.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HighContrast">
      <MemberSignature Language="C#" Value="public static bool HighContrast { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The high-contrast accessibility feature can make the screen easier for some users to view by enabling a color scheme that can heighten screen contrast with alternative color combinations. Some of the schemes also change font sizes for easier reading.</para>
          <para>The high-contrast mode feature can be enabled or disabled through the Accessibility Options control panel.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the user has enabled the high-contrast mode accessibility feature.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalFocusThickness">
      <MemberSignature Language="C#" Value="public static int HorizontalFocusThickness { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.HorizontalFocusThickness" /> property indicates the width of the left and right edges of the system focus rectangle, in pixels. The system focus rectangle is used to draw user's attention to a window or area by displaying a rectangular highlighted outline.</para>
          <block subset="none" type="note">
            <para>This is supported only on Windows XP and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness of the left and right edges of the system focus rectangle, in pixels.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HorizontalResizeBorderThickness">
      <MemberSignature Language="C#" Value="public static int HorizontalResizeBorderThickness { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.HorizontalResizeBorderThickness" /> property indicates the width of the vertical sizing border around the perimeter of a window being resized.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness of the left and right edges of the sizing border around the perimeter of a window being resized, in pixels.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarArrowWidth">
      <MemberSignature Language="C#" Value="public static int HorizontalScrollBarArrowWidth { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of the arrow bitmap on the horizontal scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalScrollBarHeight">
      <MemberSignature Language="C#" Value="public static int HorizontalScrollBarHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default height, in pixels, of the horizontal scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HorizontalScrollBarThumbWidth">
      <MemberSignature Language="C#" Value="public static int HorizontalScrollBarThumbWidth { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth" /> property indicates the width of the scroll box used to indicate scroll bar position and to drag the scroll bar to a new position. The scroll box is also called the thumb box.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of the scroll box in a horizontal scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IconHorizontalSpacing">
      <MemberSignature Language="C#" Value="public static int IconHorizontalSpacing { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IconHorizontalSpacing" /> property indicates the width of the space for an icon in large icon view. The system uses this distance to arrange icons in large icon view.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of an icon arrangement cell in large icon view.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IconSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size IconSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the Windows default program icon size.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IconSpacingSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size IconSpacingSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IconSpacingSize" /> property indicates the size of the grid rectangle that each icon fits into when the system arranges them in a large-icon view. This value is always greater than or equal to <see cref="P:System.Windows.Forms.SystemInformation.IconSize" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the size, in pixels, of the grid square used to arrange icons in a large-icon view.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IconVerticalSpacing">
      <MemberSignature Language="C#" Value="public static int IconVerticalSpacing { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IconVerticalSpacing" /> property indicates the height of the space for an icon in large icon view. The system uses this distance to arrange icons in large icon view.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of an icon arrangement cell in large icon view.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsActiveWindowTrackingEnabled">
      <MemberSignature Language="C#" Value="public static bool IsActiveWindowTrackingEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsActiveWindowTrackingEnabled" /> property indicates whether active window tracking is enabled. Active window tracking causes any window the mouse is directly over to become the active window.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether active window tracking is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsComboBoxAnimationEnabled">
      <MemberSignature Language="C#" Value="public static bool IsComboBoxAnimationEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsComboBoxAnimationEnabled" /> property indicates whether the slide-open effect for system control combo boxes is enabled.</para>
          <para>When the slide-open effect for system control combo boxes is enabled, the drop down menu of a combo box slides into view when it is displayed, instead of being immediately fully drawn in view.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the slide-open effect for combo boxes is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsDropShadowEnabled">
      <MemberSignature Language="C#" Value="public static bool IsDropShadowEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>This property is supported only on Windows XP and the Windows Server 2003 family. On other platforms, this property returns false.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the drop shadow effect is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsFlatMenuEnabled">
      <MemberSignature Language="C#" Value="public static bool IsFlatMenuEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether native user menus have a flat menu appearance. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsFontSmoothingEnabled">
      <MemberSignature Language="C#" Value="public static bool IsFontSmoothingEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This font smoothing feature uses font antialiasing to make font curves appear smoother by painting pixels at different gray levels.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether font smoothing is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsHotTrackingEnabled">
      <MemberSignature Language="C#" Value="public static bool IsHotTrackingEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsHotTrackingEnabled" /> property indicates whether hot tracking of user-interface elements is enabled. Hot tracking means that when the cursor moves over an item, it is highlighted but not selected.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsIconTitleWrappingEnabled">
      <MemberSignature Language="C#" Value="public static bool IsIconTitleWrappingEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether icon-title wrapping is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardPreferred">
      <MemberSignature Language="C#" Value="public static bool IsKeyboardPreferred { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsKeyboardPreferred" /> property indicates whether the user has indicated a preference for keyboard-based input interfaces.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the user relies on the keyboard instead of the mouse, and prefers applications to display keyboard interfaces that would otherwise be hidden.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsListBoxSmoothScrollingEnabled">
      <MemberSignature Language="C#" Value="public static bool IsListBoxSmoothScrollingEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsListBoxSmoothScrollingEnabled" /> property indicates whether the smooth-scrolling effect for system control list boxes is enabled.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the smooth-scrolling effect for list boxes is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsMenuAnimationEnabled">
      <MemberSignature Language="C#" Value="public static bool IsMenuAnimationEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsMenuAnimationEnabled" /> property indicates whether either of the fade or slide animation features of system control menus is enabled.</para>
          <para>If the value of this property is true, the <see cref="P:System.Windows.Forms.SystemInformation.IsMenuFadeEnabled" /> property indicates whether menus use fade or slide animation.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether menu fade or slide animation features are enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsMenuFadeEnabled">
      <MemberSignature Language="C#" Value="public static bool IsMenuFadeEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsMenuFadeEnabled" /> property indicates whether a menu uses fade animation, if menu animation is enabled. The <see cref="P:System.Windows.Forms.SystemInformation.IsMenuAnimationEnabled" /> property indicates whether menu animation is enabled.</para>
          <para>If menu animation is enabled and the value of this property is true, menus use fade animation. If menu animation is enabled and the value of this property is false, menus use slide animation. If menu animation is disabled, the value of this property is meaningless.</para>
          <block subset="none" type="note">
            <para>If the value of the <see cref="P:System.Windows.Forms.SystemInformation.IsMenuAnimationEnabled" /> is false, the value of this property is meaningless.</para>
          </block>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 2000, Windows XP, and the Windows Server 2003 family. On other platforms, this property returns false.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether menu fade animation is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsMinimizeRestoreAnimationEnabled">
      <MemberSignature Language="C#" Value="public static bool IsMinimizeRestoreAnimationEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsMinimizeRestoreAnimationEnabled" /> property indicates whether the window minimize and restore sequence is animated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether window minimize and restore animation is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionFadeEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSelectionFadeEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsSelectionFadeEnabled" /> property indicates whether the selection fade effect is enabled. The selection fade effect causes a menu item selected by the user to remain on the screen briefly while fading out after the menu is dismissed.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 2000, Windows XP, and the Windows Server 2003 family. On other platforms, this property returns false.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the selection fade effect is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsSnapToDefaultEnabled">
      <MemberSignature Language="C#" Value="public static bool IsSnapToDefaultEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsSnapToDefaultEnabled" /> property indicates whether the snap-to-default-button feature is enabled. If the feature is enabled, the mouse cursor automatically moves to the default button, such as <ui>OK</ui> or <ui>Apply</ui>, of a dialog box.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the snap-to-default-button feature is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsTitleBarGradientEnabled">
      <MemberSignature Language="C#" Value="public static bool IsTitleBarGradientEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsTitleBarGradientEnabled" /> property indicates whether the background of window title bars are drawn using a gradient fill effect.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the gradient effect for window title bars is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IsToolTipAnimationEnabled">
      <MemberSignature Language="C#" Value="public static bool IsToolTipAnimationEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.IsToolTipAnimationEnabled" /> property indicates whether ToolTips can fade or slide into view.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 2000, Windows XP, and the Windows Server 2003 family. On other platforms, this property returns false.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether <see cref="T:System.Windows.Forms.ToolTip" /> animation is enabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="KanjiWindowHeight">
      <MemberSignature Language="C#" Value="public static int KanjiWindowHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.KanjiWindowHeight" /> property indicates the height of the Kanji window on operating systems that support DBCS. The <see cref="P:System.Windows.Forms.SystemInformation.DbcsEnabled" /> property indicates whether the operating system supports DBCS.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of the Kanji window at the bottom of the screen for double-byte character set (DBCS) versions of Windows.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="KeyboardDelay">
      <MemberSignature Language="C#" Value="public static int KeyboardDelay { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property indicates the amount of time that elapses after a key is pressed and held down until keystroke repeat messages are sent by the operating system. This value is in the range from 0 (approximately 250 millisecond delay) through 3 (approximately 1 second delay). The actual delay associated with each value may vary depending on the hardware.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.KeyboardSpeed" /> property indicates the repeat speed setting that determines the length of time between each keystroke repeat message sent by the operating system.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the keyboard repeat-delay setting.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="KeyboardSpeed">
      <MemberSignature Language="C#" Value="public static int KeyboardSpeed { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property indicates the time between each keystroke repeat message that is sent when a user presses and holds a key down. This is a value in the range from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second). The actual repeat rates are hardware-dependent and may vary from a linear scale by as much as 20%.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.KeyboardDelay" /> property indicates the length of time after a key is pressed and held down before keystroke repeat messages are sent by the operating system.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the keyboard repeat-speed setting.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MaxWindowTrackSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MaxWindowTrackSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" /> property indicates the maximum dimensions to which a user can drag resize a window. The value returned by <see cref="P:System.Windows.Forms.SystemInformation.MaxWindowTrackSize" /> refers to the dimensions of the entire desktop. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default maximum dimensions, in pixels, of a window that has a caption and sizing borders.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuAccessKeysUnderlined">
      <MemberSignature Language="C#" Value="public static bool MenuAccessKeysUnderlined { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MenuAccessKeysUnderlined" /> property indicates whether the menu shortcut keys are underlined in menu text even when the menu has not been activated or received focus.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether menu access keys are always underlined.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MenuBarButtonSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MenuBarButtonSize { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Drawing.Size.Width" /> value of this property indicates the default width for a button on a menu-bar, in pixels. The <see cref="P:System.Drawing.Size.Height" /> value of this property indicates the height of a menu bar, in pixels.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default width, in pixels, for menu-bar buttons and the height, in pixels, of a menu bar.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MenuButtonSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MenuButtonSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property indicates the default dimensions, in pixels, for menu-bar buttons, such as the child window close button used in the multiple document interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default dimensions, in pixels, of menu-bar buttons.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuCheckSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MenuCheckSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MenuCheckSize" /> property indicates the size of the image used by Windows to display a check mark area next to a selected menu item.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the default size of a menu check mark area.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font MenuFont { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MenuFont" /> property indicates the font used to display text on menus.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the font used to display text on menus.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuHeight">
      <MemberSignature Language="C#" Value="public static int MenuHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MenuHeight" /> property indicates the height that is currently defined by Windows for a menu bar.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of one line of a menu.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MenuShowDelay">
      <MemberSignature Language="C#" Value="public static int MenuShowDelay { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MenuShowDelay" /> property indicates the time, in milliseconds, that the system waits before displaying a cascaded shortcut menu when the mouse cursor is over a submenu item.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the time, in milliseconds, that the system waits before displaying a cascaded shortcut menu when the mouse cursor is over a submenu item.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MidEastEnabled">
      <MemberSignature Language="C#" Value="public static bool MidEastEnabled { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MidEastEnabled" /> property indicates whether the operating system is enabled for the Hebrew and Arabic languages.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the operating system is enabled for the Hebrew and Arabic languages.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MinimizedWindowSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MinimizedWindowSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MinimizedWindowSize" /> property indicates the size of the area occupied by a normal minimized window.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of a normal minimized window.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MinimizedWindowSpacingSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MinimizedWindowSpacingSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MinimizedWindowSpacingSize" /> property indicates the size, in pixels, of an arrangement grid cell for a minimized window. Each minimized window fits into a rectangle this size when arranged.</para>
          <para>The value of this property is always greater than or equal to the value of the <see cref="P:System.Windows.Forms.SystemInformation.MinimumWindowSize" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the area each minimized window is allocated when arranged.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MinimumWindowSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MinimumWindowSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MinimumWindowSize" /> property indicates the dimensions specified by Windows as the minimum size for a window. You can use this property to limit the resizing of windows to dimensions not exceeding either dimension returned by this property.</para>
          <block subset="none" type="note">
            <para>Developers of applications capable of resizing windows may want to use the value of this property to ensure that the application does not attempt to resize the window to a lesser width or height, since the dimensions of the window would be limited by the system.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the minimum width and height for a window, in pixels.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MinWindowTrackSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MinWindowTrackSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MinWindowTrackSize" /> property indicates the default smallest window size that can be produced by using the borders to size the window.</para>
          <para>The user cannot drag the window frame to a size smaller than these dimensions. A <see cref="T:System.Windows.Forms.Form" /> can override these values by setting the <see cref="P:System.Windows.Forms.Form.MinimumSize" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default minimum dimensions, in pixels, that a window may occupy during a drag resize.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MonitorCount">
      <MemberSignature Language="C#" Value="public static int MonitorCount { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MonitorCount" /> property indicates the number of monitors currently recognized by the operating system. This property returns a value greater than one only if multiple monitors are currently recognized by the operating system.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of display monitors on the desktop.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MonitorsSameDisplayFormat">
      <MemberSignature Language="C#" Value="public static bool MonitorsSameDisplayFormat { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MonitorsSameDisplayFormat" /> indicates whether all monitors currently recognized by the operating system are using the same pixel color format.</para>
          <para>Pixel formats define the data structure used to encode pixel color and luminosity information. The <see cref="T:System.Drawing.Imaging.PixelFormat" /> enumeration indicates a set of standard pixel color formats. Pixel values can be encoded in a variety of formats, with differing color value ranges and bit precisions, and differing positions of bits in a pixel data format structure.</para>
          <block subset="none" type="note">
            <para>Two displays can have the same bit depth but different color formats.</para>
          </block>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether all the display monitors are using the same pixel color format.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MouseButtons">
      <MemberSignature Language="C#" Value="public static int MouseButtons { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseButtons" /> property indicates the number of mouse buttons recognized on the currently installed mouse.</para>
          <para>You can use <see cref="P:System.Windows.Forms.SystemInformation.MouseButtons" /> property to toggle additional functionality for users with more or less than the standard number of mouse buttons supported by your application.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of buttons on the mouse.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MouseButtonsSwapped">
      <MemberSignature Language="C#" Value="public static bool MouseButtonsSwapped { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the functions of the left and right mouse buttons have been swapped.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MouseHoverSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MouseHoverSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverSize" /> property indicates the size of the rectangle within which the mouse pointer has to stay for the mouse hover time before a mouse hover message is generated.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" /> property indicates the time, in milliseconds, that a mouse pointer must remain within an area the size of the <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverSize" /> property in order to generate a mouse hover message.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the rectangle within which the mouse pointer has to stay for the mouse hover time before a mouse hover message is generated.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MouseHoverTime">
      <MemberSignature Language="C#" Value="public static int MouseHoverTime { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" /> property indicates the amount of time, in milliseconds, that a mouse pointer must remain within an area the size of the <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverSize" /> property in order to generate a mouse hover message.</para>
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseHoverSize" /> property indicates the size of the rectangle within which the mouse pointer has to stay for the mouse hover time before a mouse hover message is generated.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the time, in milliseconds, that the mouse pointer has to stay in the hover rectangle before a mouse hover message is generated.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MousePresent">
      <MemberSignature Language="C#" Value="public static bool MousePresent { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MousePresent" /> property indicates whether a pointing device is present or installed on the system. This is usually the case, so <see cref="P:System.Windows.Forms.SystemInformation.MousePresent" /> almost always returns true.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether a pointing device is installed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="MouseSpeed">
      <MemberSignature Language="C#" Value="public static int MouseSpeed { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The mouse speed determines how far the pointer will move based on the distance the mouse moves. The value of this property ranges between 1 (slowest) and 20 (fastest). A value of 10 is the default. The value can be set by an end user using the mouse control panel application or by an application using the SystemParametersInfo function of the Platform SDK.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current mouse speed.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelPresent">
      <MemberSignature Language="C#" Value="public static bool MouseWheelPresent { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseWheelPresent" /> property indicates whether the system recognizes a mouse wheel on the current mouse.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows NT 4.0 or later, Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether a mouse with a mouse wheel is installed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MouseWheelScrollDelta">
      <MemberSignature Language="C#" Value="public static int MouseWheelScrollDelta { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The delta value is an integer value that represents a single mouse wheel rotation increment. A downward mouse wheel rotation produces a negative delta value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the amount of the delta value of a single mouse wheel rotation increment.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelScrollLines">
      <MemberSignature Language="C#" Value="public static int MouseWheelScrollLines { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.MouseWheelScrollLines" /> property indicates how many lines to scroll, by default, in a multi-line control that has a scroll bar. The corresponding Platform SDK system-wide parameters are SPI_GETWHEELSCROLLLINES and SPI_SETWHEELSCROLLLINES. For more information about system-wide parameters, see "SystemParametersInfo" in the Platform SDK documentation at <see cref="http://msdn.microsoft.com/">http://msdn.microsoft.com</see>.</para>
          <block subset="none" type="note">
            <para>Be sure to handle the special case that occurs if the "One screen at a time" mouse option is selected. In this case, the <see cref="P:System.Windows.Forms.SystemInformation.MouseWheelScrollLines" /> property has a value of -1.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of lines to scroll when the mouse wheel is rotated.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="NativeMouseWheelSupport">
      <MemberSignature Language="C#" Value="public static bool NativeMouseWheelSupport { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Mouse wheel operations that occur through a <see cref="T:System.Windows.Forms.Control" /> object work even if the operating system does not natively support the wheel.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows NT 4.0 or later, Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the operating system natively supports a mouse wheel.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Network">
      <MemberSignature Language="C#" Value="public static bool Network { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.Network" /> property indicates whether the system has a currently established network connection.</para>
          <block subset="none" type="note">
            <para>This property always returns true on all Windows platforms supported by the .NET Framework. Use the <see cref="N:System.Net.NetworkInformation" /> namespace to retrieve more accurate network status.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether a network connection is present.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PenWindows">
      <MemberSignature Language="C#" Value="public static bool PenWindows { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.PenWindows" /> property indicates whether the Microsoft Windows for Pen Computing extensions are installed.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the Microsoft Windows for Pen Computing extensions are installed.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PopupMenuAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.LeftRightAlignment PopupMenuAlignment { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the side of pop-up menus that are aligned to the corresponding menu-bar item.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PowerStatus">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.PowerStatus PowerStatus { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PowerStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current system power status.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="PrimaryMonitorMaximizedWindowSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size PrimaryMonitorMaximizedWindowSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default dimensions, in pixels, of a maximized window on the primary display.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="PrimaryMonitorSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size PrimaryMonitorSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.PrimaryMonitorSize" /> property indicates the dimensions of the current video mode of the primary display adapter.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of the current video mode of the primary display.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RightAlignedMenus">
      <MemberSignature Language="C#" Value="public static bool RightAlignedMenus { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether drop-down menus are right-aligned with the corresponding menu-bar item.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ScreenOrientation">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.ScreenOrientation ScreenOrientation { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ScreenOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the orientation of the screen.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public static bool Secure { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.Secure" /> property indicates whether a Security Manager is available from the operating system. Windows NT and Windows 2000 provide a Security Manager to determine access to the operating system registry and to the file system. Windows 98 does not provide a Security Manager.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether a Security Manager is present on this operating system.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ShowSounds">
      <MemberSignature Language="C#" Value="public static bool ShowSounds { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.ShowSounds" /> property indicates whether a user preference has been set that indicates the user prefers visual information displays for audio events.</para>
          <para>You can use this property to provide accessibility mode features to an application.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the user prefers that an application present information in visual form in situations when it would present the information in audible form.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SizingBorderWidth">
      <MemberSignature Language="C#" Value="public static int SizingBorderWidth { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of the sizing border drawn around the perimeter of a window being resized.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SmallCaptionButtonSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size SmallCaptionButtonSize { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.SmallCaptionButtonSize" /> property indicates the width, in pixels, of small caption buttons, and the height, in pixels, of small captions.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the width, in pixels, of small caption buttons, and the height, in pixels, of small captions.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SmallIconSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size SmallIconSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.SmallIconSize" /> property indicates the size of small icons in Windows. Small icons typically appear in window captions and in the small icon view in Windows Explorer.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of a small icon.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="TerminalServerSession">
      <MemberSignature Language="C#" Value="public static bool TerminalServerSession { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.TerminalServerSession" /> property indicates whether the calling process is associated with a Terminal Services client session.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows NT 4.0 SP4 or later, Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the calling process is associated with a Terminal Services client session.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ToolWindowCaptionButtonSize">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size ToolWindowCaptionButtonSize { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.ToolWindowCaptionButtonSize" /> property indicates the dimensions of the buttons placed in the caption of a tool window. You can use this property when adding your own custom buttons to the caption in a tool window.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the dimensions, in pixels, of small caption buttons.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ToolWindowCaptionHeight">
      <MemberSignature Language="C#" Value="public static int ToolWindowCaptionHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of a tool window caption.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UIEffectsEnabled">
      <MemberSignature Language="C#" Value="public static bool UIEffectsEnabled { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>UI effects include animation, fading, hot tracking, and smooth scrolling of system controls, and drawing a shadow under the mouse cursor. When UI effects are disabled, these features are disabled. When UI effects are enabled, only the effects configured as active for the current user are enabled.</para>
          <para>The following table lists properties that indicate whether particular UI effects are enabled, if the value of this property is true: </para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Item </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsComboBoxAnimationEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether the slide-open effect for combo boxes is enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsTitleBarGradientEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether the gradient effect for window title bars is enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsHotTrackingEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsListBoxSmoothScrollingEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether the smooth-scrolling effect for list boxes is enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsMenuAnimationEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether menu fade or slide animation features are enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.MenuAccessKeysUnderlined" /> </para>
              </term>
              <description>
                <para>Indicates whether menu access keys are always underlined. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsSelectionFadeEnabled" /> </para>
              </term>
              <description>
                <para>Indicates whether the selection fade effect is enabled. </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Windows.Forms.SystemInformation.IsToolTipAnimationEnabled" />
                </para>
              </term>
              <description>
                <para>Indicates whether ToolTip animation is enabled. </para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 2000, Windows XP, and the Windows Server 2003 family. On other platforms, this property returns false.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether user interface (UI) effects are enabled or disabled.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UserDomainName">
      <MemberSignature Language="C#" Value="public static string UserDomainName { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If a local user account exists with the same name as the user name, this property gets the computer name.</para>
          <block subset="none" type="note">
            <para>This is not supported on Windows 98 and Windows Millennium Edition.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the domain the user belongs to.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UserInteractive">
      <MemberSignature Language="C#" Value="public static bool UserInteractive { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Windows.Forms.SystemInformation.UserInteractive" /> property is false, do not display any modal dialogs or message boxes, as there is no graphical user interface for the user to interact with.</para>
          <para>This property is false only when called from a service process or from a Web application.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows NT 3.51 or later, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the current process is running in user-interactive mode.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>This property is supported only on Windows NT workstation, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the user name associated with the current thread.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="VerticalFocusThickness">
      <MemberSignature Language="C#" Value="public static int VerticalFocusThickness { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.VerticalFocusThickness" /> property indicates the height, in pixels, of the top and bottom edges of the system focus rectangle. The system focus rectangle is used to draw user's attention to a window or area by displaying a rectangular highlighted outline.</para>
          <block subset="none" type="note">
            <para>This property is supported only on Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of the top and bottom edges of the system focus rectangle.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VerticalResizeBorderThickness">
      <MemberSignature Language="C#" Value="public static int VerticalResizeBorderThickness { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.VerticalResizeBorderThickness" /> property indicates the height of the horizontal sizing border around the perimeter of a window being resized.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the thickness, in pixels, of the top and bottom edges of the sizing border around the perimeter of a window being resized.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarArrowHeight">
      <MemberSignature Language="C#" Value="public static int VerticalScrollBarArrowHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight" /> property indicates the height of the arrow bitmap on the vertical scroll bar system control.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of the arrow bitmap on the vertical scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="VerticalScrollBarThumbHeight">
      <MemberSignature Language="C#" Value="public static int VerticalScrollBarThumbHeight { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight" /> property indicates the height of the scroll box used to indicate scroll bar position and to drag the scroll bar to a new position. The scroll box is also called the thumb box.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the height, in pixels, of the scroll box in a vertical scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="VerticalScrollBarWidth">
      <MemberSignature Language="C#" Value="public static int VerticalScrollBarWidth { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the default width, in pixels, of the vertical scroll bar.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="VirtualScreen">
      <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle VirtualScreen { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.VirtualScreen" /> property indicates the bounds of the entire desktop on a multi-monitor system. You can use this property to determine the maximum visual space available on a system that has multiple monitors installed.</para>
          <para>The position coordinates of the rectangle indicate the position offset, in pixels, of the upper left corner of the virtual screen area relative to the upper left corner of the onscreen area of the primary display. The size values of the rectangle indicate the size of the virtual screen area.</para>
          <block subset="none" type="note">
            <para>The <see cref="P:System.Drawing.Rectangle.X" /> position coordinate of the rectangle is negative when the virtual screen starts to the left of the left edge of the primary display. The <see cref="P:System.Drawing.Rectangle.Y" /> coordinate of the rectangle is negative when the virtual screen starts above the top edge of the primary display.</para>
          </block>
          <block subset="none" type="note">
            <para>This property is supported only on Windows 98, Windows Millennium Edition, Windows 2000, Windows XP, and the Windows Server 2003 family.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the bounds of the virtual screen.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="WorkingArea">
      <MemberSignature Language="C#" Value="public static System.Drawing.Rectangle WorkingArea { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Windows.Forms.SystemInformation.WorkingArea" /> property indicates the bounds of the screen that can be used by applications. The working area is the desktop area of the display, excluding taskbars, docked windows, and docked tool bars.</para>
          <para>
            <see cref="P:System.Windows.Forms.SystemInformation.WorkingArea" /> always returns the work area of the primary monitor. If you need the work area of a monitor in a multiple display environment, you can call one of the overloads of <see cref="M:System.Windows.Forms.Screen.GetWorkingArea(System.Windows.Forms.Control)" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the size, in pixels, of the working area of the screen.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>