<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <!-- System.Windows.Forms.Design/EventsTab.cs -->
  <data name="Events">
    <value>Events</value>
  </data>
  
  <!-- System.Windows.Forms.X11Internal/X11Display.cs -->
  <data name="at">
    <value>at</value>
  </data>
  <data name="&lt;unknown method&gt;" xml:space="preserve">
    <value>&lt;unknown method&gt;</value>
  </data> 
  
  <!-- System.Windows.Forms/BindingNavigator.cs -->
   <data name="of {0}" xml:space="preserve">
    <value>of {0}</value>
  </data>
   <data name="Move first" xml:space="preserve">
    <value>Move first</value>
  </data>
   <data name="Move previous" xml:space="preserve">
    <value>Move previous</value>
  </data>
  <data name="Current position" xml:space="preserve">
    <value>Current position</value>
  </data>
  <data name="Total number of items" xml:space="preserve">
    <value>Total number of items</value>
  </data>
  <data name="Move next" xml:space="preserve">
    <value>Move next</value>
  </data>
  <data name="Move last" xml:space="preserve">
    <value>Move last</value>
  </data>
  <data name="Add new" xml:space="preserve">
    <value>Add new</value>
  </data>
  
  <!-- System.Windows.Forms/ColorDialog.cs -->
  <data name="Red">
    <value>Red</value>
  </data>
  <data name="Blue">
    <value>Blue</value>
  </data>
  <data name="Green">
    <value>Green</value>
  </data>
  <data name="Color">
    <value>Color</value>
  </data>
  <data name="Hue">
    <value>Hue</value>
  </data>
  <data name="Sat">
    <value>Sat</value>
  </data>
  <data name="Bri">
    <value>Bri</value>
  </data>
  <data name="Define Custom Colors &gt;&gt;" xml:space="preserve">
    <value>Define Custom Colors &gt;&gt;</value>
  </data>
  <data name="Add To Custom Colors" xml:space="preserve">
    <value>Add To Custom Colors</value>
  </data>
  <data name="Base Colors" xml:space="preserve">
    <value>Base Colors</value>
  </data>
  <data name="User Colors" xml:space="preserve">
    <value>User Colors</value>
  </data>
  
  <!-- System.Windows.Forms/ComboBox.cs -->
  <data name="Enum argument value '{0}' is not valid for AutoCompleteMode" xml:space="preserve">
    <value>Enum argument value '{0}' is not valid for AutoCompleteMode </value>
  </data>
  <data name="Enum argument value '{0}' is not valid for AutoCompleteSource" xml:space="preserve">
    <value>Enum argument value '{0}' is not valid for AutoCompleteSource</value>
  </data>
  
  <!-- System.Windows.Forms/MessageBox.cs -->
  <data name="OK">
    <value>OK</value>
  </data>
  <data name="Retry">
    <value>Retry</value>
  </data>
  <data name="Yes">
    <value>Yes</value>
  </data>
  <data name="Cancel">
    <value>Cancel</value>
  </data>
  <data name="Abort">
    <value>Abort</value>
  </data>
  <data name="No">
    <value>No</value>
  </data>
  <data name="Ignore">
    <value>Ignore</value>
  </data>
  <data name="Help">
    <value>Help</value>
  </data>
  
  <!-- System.Windows.Forms/PropertyGrid.cs -->
  <data name="Categorized">
    <value>Categorized</value>
  </data>
  <data name="Alphabetic">
    <value>Alphabetic</value>
  </data>
  
  <!-- System.Windows.Forms/TextBox.cs -->
  <data name="&amp;Undo">
    <value>&amp;Undo</value>
  </data>
  <data name="Cu&amp;t">
    <value>Cu&amp;t</value>
  </data>
  <data name="&amp;Copy">
    <value>&amp;Copy</value>
  </data>
  <data name="&amp;Paste">
    <value>&amp;Paste</value>
  </data>
  <data name="&amp;Delete">
    <value>&amp;Delete</value>
  </data>
  <data name="Select &amp;All">
    <value>Select &amp;All</value>
  </data>
  <data name="Enum argument value '{0}' is not valid for AutoCompleteMode" xml:space="preserve">
    <value>Enum argument value '{0}' is not valid for AutoCompleteMode</value>
  </data>
  <data name="Enum argument value '{0}' is not valid for AutoCompleteSource" xml:space="preserve">
    <value>Enum argument value '{0}' is not valid for AutoCompleteSource</value>
  </data>
  
  <!-- System.Windows.Forms/TextBoxBase.cs -->
  <data name="Cut">
    <value>Cut</value>
  </data>
  <data name="Delete">
    <value>Delete</value>
  </data>
  <data name="Paste">
    <value>Paste</value>
  </data>
  
  <!-- System.Windows.Forms/TextControl.cs -->
  <data name="Typing">
    <value>Typing</value>
  </data>
  
</root>
