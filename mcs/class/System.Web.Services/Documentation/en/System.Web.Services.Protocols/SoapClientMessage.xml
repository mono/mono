<?xml version="1.0" encoding="utf-8"?>
<Type Name="SoapClientMessage" FullName="System.Web.Services.Protocols.SoapClientMessage">
  <TypeSignature Language="C#" Value="public sealed class SoapClientMessage : System.Web.Services.Protocols.SoapMessage" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.SoapMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>To be added</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents the data in a SOAP request sent or a SOAP response received by an XML Web service client at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public override string Action { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Services.Protocols.SoapClientMessage.Action" /> property is available in any <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the SOAPAction HTTP request header field for the SOAP request or SOAP response.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHttpClientProtocol Client { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHttpClientProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'SoapHttpClientProtocol'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Services.Protocols.SoapClientMessage.Client" /> property can be accessed during any <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an instance of the client proxy class, which derives from <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected override void EnsureInStage ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For XML Web service clients, the in parameters are available prior to the SOAP request serialization process in the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" /> stage. The <see cref="T:System.InvalidOperationException" /> is thrown if the <see cref="M:System.Web.Services.Protocols.SoapClientMessage.EnsureInStage" /> method is invoked in any other <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in parameters are available. If not, an exception is thrown.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected override void EnsureOutStage ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For XML Web service clients, the out parameters are available after the SOAP response deserialization process in the <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stage. The <see cref="T:System.InvalidOperationException" /> is thrown if <see cref="M:System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage" /> method is invoked in any other <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where out parameters are available. If not, an exception is thrown.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public override System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>a <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /></value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Although the <see cref="P:System.Web.Services.Protocols.SoapClientMessage.MethodInfo" /> property can be accessed during any stage, the method information is only available during <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> and <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a representation of the method prototype of the XML Web service method for which the SOAP request is intended.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public override bool OneWay { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> or <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> applied to an XML Web service method or XML Web service client can specify whether the XML Web service method is one way by setting the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> property of the attribute.</para>
          <para>The <see cref="P:System.Web.Services.Protocols.SoapClientMessage.OneWay" /> property can be accessed during any <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value indicating whether the client waits for the server to finish processing an XML Web service method.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public override System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When an XML Web service supports SOAP version 1.1,.NET Framework clients communicate with an XML Web service in that version by default. For details on how to change the version of the SOAP protocol, see the <see cref="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the version of the SOAP protocol used to communicate with the XML Web service.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public override string Url { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="P:System.Web.Services.Protocols.SoapClientMessage.Url" /> property can be accessed during any <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the URL of the XML Web service.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>