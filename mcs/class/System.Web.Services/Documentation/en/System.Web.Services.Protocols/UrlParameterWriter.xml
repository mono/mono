<?xml version="1.0" encoding="utf-8"?>
<Type Name="UrlParameterWriter" FullName="System.Web.Services.Protocols.UrlParameterWriter">
  <TypeSignature Language="C#" Value="public class UrlParameterWriter : System.Web.Services.Protocols.UrlEncodedParameterWriter" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.UrlEncodedParameterWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>
        <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> and other classes in the <see cref="N:System.Web.Services.Protocols" /> namespace support the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations. Web service writers and readers serialize and deserialize, respectively, between the parameters or return objects of Web methods and the HTTP request or response streams. Web service writers and readers use HTTP for transport but don't exchange messages using the SOAP standard.</para>
      <para>The <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> class provides a client-side method, <see cref="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])" />, to encode parameters name/value pairs into an HTTP request URL's query string. For example, in the URL http://contoso.com?a=1&amp;b=2, a and b are parameter names, and 1 and 2 are their values.</para>
      <para>You typically will not need to use <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> directly. Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET implementation, it applies the <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> to each Web method and sets the attribute's <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" /> property to <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Writes out-going request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UrlParameterWriter ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetRequestUrl">
      <MemberSignature Language="C#" Value="public override string GetRequestUrl (string url, object[] parameters);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])" /> method encodes parameters name/value pairs into an HTTP request URL's query string. For example, in the URL http://contoso.com?a=1&amp;b=2, a and b are parameter names, and 1 and 2 are their values. A new URL string, with any encoded parameters, is returned.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes Web method parameter values to the query string of an HTTP request.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.String" /> object that contains the query string and the parameter values.</para>
        </returns>
        <param name="url">
          <attribution license="cc4" from="Microsoft" modified="false" />The HTTP request's original URL.</param>
        <param name="parameters">
          <attribution license="cc4" from="Microsoft" modified="false" />The Web method parameter values to be added to the URL, if necessary.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>