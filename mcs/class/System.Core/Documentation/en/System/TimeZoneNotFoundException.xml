<?xml version="1.0" encoding="utf-8"?>
<Type Name="TimeZoneNotFoundException" FullName="System.TimeZoneNotFoundException">
  <TypeSignature Language="C#" Value="public class TimeZoneNotFoundException : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This exception is thrown by the <see cref="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)" /> and <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> methods when a time zone identifier cannot be found on the local system, or when there is no data associated with a particular time zone identifier. </para>
      <para>Because the registry serves as the repository of time zone information in Windows XP and Windows Vista, this exception indicates that the registry contains no information about a particular time zone. Time zone information is stored in the subkeys of HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Time Zones.</para>
      <para>If an application depends on the presence of a particular time zone and the attempt to retrieve it throws a <see cref="T:System.TimeZoneNotFoundException" />, the application can handle the exception in either of two ways:</para>
      <list type="bullet">
        <item>
          <para>By calling the <see cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" /> method to deserialize a saved <see cref="T:System.TimeZoneInfo" /> object. </para>
        </item>
        <item>
          <para>By calling one of the overloads of the <see cref="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)" /> method to create a time zone.</para>
        </item>
      </list>
      <para>See the examples for the <see cref="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)" /> and <see cref="M:System.TimeZoneInfo.FromSerializedString(System.String)" /> methods.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The exception that is thrown when a time zone cannot be found.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException ();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is the default constructor of the <see cref="T:System.TimeZoneNotFoundException" /> class. This constructor initializes the <see cref="P:System.Exception.Message" /> property of the new instance to a system-supplied message that describes the error, such as "The time zone 'timeZoneName' was not found on the local computer." This message is localized for the current system culture.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeZoneNotFoundException" /> class with a system-supplied message.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException (string message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="message" /> string is assigned to the <see cref="P:System.Exception.Message" /> property. The string should be localized for the current culture.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeZoneNotFoundException" /> class with the specified message string.</para>
        </summary>
        <param name="message">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that describes the exception.</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TimeZoneNotFoundException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext sc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="sc" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="sc">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor is not called directly by your code to instantiate the <see cref="T:System.TimeZoneNotFoundException" /> object. Instead, it is called by the <see cref="T:System.Runtime.Serialization.IFormatter" /> object's <see cref="M:System.Runtime.Serialization.IFormatter.Deserialize(System.IO.Stream)" /> method when deserializing the <see cref="T:System.TimeZoneNotFoundException" /> object from a stream.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeZoneNotFoundException" /> class from serialized data.</para>
        </summary>
        <param name="info">
          <attribution license="cc4" from="Microsoft" modified="false" />The object that contains the serialized data.</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TimeZoneNotFoundException (string message, Exception e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Typically, you use this <see cref="T:System.TimeZoneNotFoundException" /> overload to handle an exception in a tryâ€¦catch block. The <paramref name="innerException" /> parameter should be a reference to the exception object handled in the catch block, or it can be null. This value is then assigned to the <see cref="T:System.TimeZoneNotFoundException" /> object's <see cref="P:System.Exception.InnerException" /> property.</para>
          <para>The <paramref name="message" /> string is assigned to the <see cref="P:System.Exception.Message" /> property. The string should be localized for the current culture.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeZoneNotFoundException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</para>
        </summary>
        <param name="message">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that describes the exception.    </param>
      </Docs>
    </Member>
  </Members>
</Type>