<?xml version="1.0" encoding="utf-8"?>
<Type Name="EnumerableExecutor" FullName="System.Linq.EnumerableExecutor">
  <TypeSignature Language="C#" Value="public abstract class EnumerableExecutor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EnumerableExecutor extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>To be added.</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents an expression tree and provides functionality to execute the expression tree after rewriting it.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EnumerableExecutor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Linq.EnumerableExecutor" /> class.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>