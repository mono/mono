2010-07-13  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #613845
	* Tds70.cs (WriteParameterInfo): Round money values to 4 decimals.
	
2010-07-12  Veerapuram Varadhan  <vvaradhan@novell.com>
	
	** Fixes #569543
	* Tds70.cs (ExecPrepared): Revert back to old changes.
	* Tds80.cs (ExecPrepared): Override for Tds 8 version that optimizes 
	network bandwidth.
	
2010-07-10  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes 620860
	* Tds70.cs (Precision): New virtual property to handle Precision values 
	across different Tds versions.
	(WriteParameterInfo): Use defined Precision property instead of 
	constant value.  Also handle Ulong and long max/min values properly.
	* Tds80.cs (Precision): Override property to provide Tds 8 precision value.
	
2010-07-07  Veerapuram Varadhan  <vvaradhan@novell.com>

	* TdsComm.cs (Append[DateTime]): Ugh.. ugh.. final fix for handling MinValue for DateTime.
	
2010-07-07  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #609109 - DateTime part
	* TdsComm.cs (Append[DateTime]): More fix for handling SqlServer MinValue for DateTime.
	
2010-07-06  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #609109
	* TdsComm.cs (Append[DateTime]): Handle datetime values sanely that are less than epoch.
	(Append[string]): Fix boundary checking for availability of enough buffer
	
2010-07-03  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #609935
	* TdsComm.cs (Append[string]): Fix boundary calculations of bytes 
	to be written and available free buffer.
	
2010-06-15 Jonathan Chambers  <joncham@gmail.com>

	* Tds.cs: Add {} around default switch case.

2010-06-15  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #613087
	* Tds.cs (ProcessLoginAck): Fix server version being compared in 
	the switch-case.
	* Tds70.cs (BuildPreparedParameters, BuildProcedureCall): Set default 
	precision to 18 as used by MS.Net when connecting to SqlServer 7.0.
	(BuildExec, ExecRPC): Marked protected in order to be used by Tds80 
	and henceforth.
	* Tds80.cs (Execute): Separated from Tds70 to include Tds80 changes.
	
2010-04-21  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #595918
	* Tds70.cs (WriteParameterInfo): Write updated decimal value according 
	to specified scale value.
	
2009-08-17  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #381151 NRE 
	* Tds.cs (ProcessColumnInfo): Use Columns instead of creating a new list.
	* TdsDataColumnCollection.cs (Clear, Add): New utility methods 
	* Tdsxx.cs: ProcessColumnInfo definition changes.
	
2009-07-25  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds70.cs (ProcessColumnInfo): Update the new DataTypeName property.
	* TdsDataColumn.cs: Added DataTypeName property accessors.
	
2009-07-25  Gert Driesen  <drieseng@users.sourceforge.net>

	* TdsConnectionPool.cs: Fixed typo in ResetConnectionPool.

2009-05-26  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #382734
	* Tds80.cs: Consider queries with Parameters as RPCs and avoid formatting 
	param values as strings.  Fixes issues with locale specific string 
	formatting/conversions.
	
	* TdsRpcProcId.cs: New - enum of rpc Ids to use with RPC packet type.
	
2009-05-16  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds70.cs (WriteParameterInfo): Default precision is 29 and not 28.
	
2009-05-16  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds70.cs (WriteParameterInfo): Do not change the original 
	param.TypeName value.
	
2009-05-16  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #382589
	* Tds.cs (ServerTdsVersion): New property to access ServerVersion.
	
	* Tds70.cs (WriteParameterInfo): Treat Decimal types as Numeric 
	types from SQL Server 2000.
	
	* TdsVersion.cs: Add SQL Server 2008 version.
	
2009-05-02  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #462947 - Patch by Gert Driesen
	* Tds.cs (InitExec): More intialization of variables. 
	
2009-04-28  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs (InitExec):  Move initialization of SequentialAccess related 
	variables here.
	
2009-04-28  Veerapuram Varadhan  <vvaradhan@novell.com>
	
	* Tds.cs (ExecuteQuery): Reset all the variables related to LoadData 
	when performing queries with SequentialAccess set to true.  Fixes 
	incorrect handling of data retrieval when multiple queries are run 
	with SequentialAccess set to true for the same instance of Tds.
	
2009-04-28  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs (ExecuteQuery): Reset SequentialAccess read state variables 
	in order to avoid blocking forever when two queries are executed with 
	SequentialAccess set to true for the same instance of Tds.
	
2009-04-28  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes#463011
	* Tds70.cs (Reset): Call base.Reset to update Database being used.

2009-04-28 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* TdsConnectionPool.cs: if GetConnection() fails to create a
	connection, try again several times and then throw. Improved
	ResetConnectionPool() so that it does not immediately close
	connections in use. Don't re-add connections that have been closed.

	* Tds.cs: Connected tests the socket connection too. Made Disconnect()
	not throw.

	* TdsComm.cs: set more socket options (timeout and NoDelay) and have a
	single entry point for reading from the stream.

2009-03-23  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs: Properly handle TdsColumnType.BigInt as we support TDS 8 now.
	
2009-03-15  Veerapuram Varadhan  <vvaradhan@novell.com>

	** Fixes #463011
	* Tds70.cs (Reset): Call base.Reset to update Database being used.
	
2009-03-14  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds70.cs (WriteParameterInfo): Handle scenarios of Partlentype, 
	a TDS 9 feature.
	
2009-03-04  Veerapuram Varadhan  <vvaradhan@novell.com>

	* TdsComm.cs (Append (*)): Do not create temporary byte arrays, 
	instead manipulate directly. Saves quite a bit of allocations 
	and improves performance.
	(AppendInternal) : Do the math here.
	(TdsByteOrder) : Property that indicates the byte-order-encoding which, 
	is independent of host's byte-order-encoding.
	(SendPhysicalPacket): Add packet-id to the header
	
2009-02-26  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs (ProcessLoginAck): Set TdsVersion to the version
	supported by the server.
	(GetColumnValue): lcid and sortId are available only from Tds 8.

	* Tds80.cs (ProcessColumnInfo, ProcessOutputParam): Call base
	methods if the server version is less than Tds 8.
	
2009-02-19  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs: Tds 8 collation support
	  Tds80.cs: - ditto -
	  TdsComm.cs: - ditto -
	  TdsDataColumn.cs: - ditto -
	  TdsCollation.cs: New file. Based on patch from Dmitry S. Kataev  
	  <dmitryskey@hotmail.com>
	  
2009-02-02  Veerapuram Varadhan  <vvaradhan@novell.com>

	* Tds.cs:	TDS 8 changes
	  Tds70.cs: - ditto -
	  Tds80.cs: - ditto -
	  TdsVersion.cs: - ditto -
	  TdsEnvPacketSubType.cs: - ditto -
	  TdsComm.cs:	- ditto -
	  
2009-01-29 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Tds70.cs: fix for output parameters and '@'.
	Fixes bug #470579. Patch from Varadhan.

2009-01-24 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* TdsConnectionPool.cs: made getting/releasing connections thread safe.
	If we have a release connection available, we return that without locking

2009-01-21 Christian Hergert <christian.hergert@gmail.com>

	* TdsComm.cs: optimize Append(byte[],int,byte) for adding data to
	the buffer in the largest size of chunks possible.  also optimize
	other Append overloads to use this rather than lots of Append(byte).

2009-01-20 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* TdsComm.cs: no need for the ManualResetEvent or the timeout instance
	variables.

2009-01-14 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Tds70.cs: fix my mistake in the previous patch.

2009-01-14 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Tds70.cs: more '@' handling.

2009-01-14 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Tds70.cs: send the leading '@' for parameters that do not have one.
	Fixes bug #466071.
	Thanks to William Shallum.

2009-01-04  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs: Support detecting NULL value when sequentially reading
	text/ntext/image column. Fixed typo in exception message in
	GetSequentialColumnValue. Support reading zero-length binary data.

2008-12-30  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs: Added IsWideType method.
	* Tds70.cs: Fixed columnsize for unicode columns. Set precision
	and scale for non-decimal/numeric column.
	* TdsColumnType.cs: Adds tds names as comment.

2008-12-30  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs (LoadData): Improve exception message when attempting to
	read before the current position. Update the remaining length of the
	stream when skipping bytes.

2008-12-05 Gonzalo Paniagua Javier <gonzalo@novell.com>

	* Tds70.cs: support parameter names with or without a leading '@'.

2008-11-13  Veerapuram Varadhan  <vvaradhan@novell.com>

	* TdsComm.cs (ResetConnection, IsConnected): Added a property and
	method.  IsConnected will check for any connection-reset occurrance
	from other end-point of the underlying socket.  ResetConnection
	adds the "reset" bit in the Status flag field of packet header.
	Set socket option to keep alive, whereever supported and also, let
	the socket close along with the underlying stream.

	* Tds70.cs (Reset): Use the new ResetConnection property instead
	of executing sp_reset_connection.  Saves a round-trip.
	
2008-11-11  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds70.cs: Support writing negative (small)money values. Added 
	overflow check for smallmoney values. Fixes bug #428139.
	* Tds.cs: Fixed reading negative (small)money values.

2008-11-09  Gert Driesen  <drieseng@users.sourceforge.net>

	* TdsConnectionPool.cs: Added TdsConnectionPoolManager.GetConnection
	overload that can be used to retrieve an existing connection pool.
	Modified ResetConnectionPool () to skip free slots in the pool and to
	close pooled connections that are not in use. Pooled connections that
	are in use are now marked as non-pooled so that they are no longer
	returned to the pool when they are closed. Fixes bug #443131.

2008-09-16  Veerapuram Varadhan  <vvaradhan@novell.com>

	Patch from Christian Hergert <christian.hergert@gmail.com>
	* TdsComm.cs: Expose the stream to be internally used by other
	classes
	* Tds70.cs (Reset): Validate whether the connection is available
	or not.
	
2008-07-09  Veerapuram Varadhan  <vvaradhan@novell.com>

	* TdsComm.cs:  Cleanup stray Console.WriteLine that got in during last commit
	
2008-07-09  Veerapuram Varadhan  <vvaradhan@novell.com>

	Patch by Jon Larimer <jlarimer@gmail.com> fixes ##407208
	* TdsComm.cs: Call DNS.GetHostEntry() only for host names and not for IPs.
	
2008-07-06  Gert Driesen  <drieseng@users.sourceforge.net>

	* TdsConnectionPool.cs: When pooled connection cannot be reset, remove
	it from pool and allow slot to be re-used for a newly established
	connection. Fixes part of bug #360157. When pool is full, and no
	connection becomes available before the connect timeout has elapsed,
	then throw an InvalidOperationException instead of a SqlException.
	* Tds50.cs: Fixed compiler warning. Removed extra tabs, and changed
	spaces to tabs. Minor code formatting.
	* Tds70.cs: Removed extra tabs, and changed spaces to tabs. Code
	formatting. Avoid calling Environment.UserDomainName if username
	contains domain. Use String.Empty instead of "".
	* TdsConnectionParameters.cs: Invoke Reset method for initializing
	fields. Spaces to tabs.

2008-07-04  Gert Driesen  <drieseng@users.sourceforge.net>

	* TdsConnectionPool.cs: On 1.0 profile, use object[] for list of
	connections. Patch provided by Christian Hergert. Fixes bug #406540.

2008-07-04  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs: Avoid accessing TdsDataColumnCollection indexer. On 2.0
	profile, use predefined properties on TdsDataColumn for setting the
	BaseColumnName and BaseTableName. Fixes bug #406556.
	* Tds50.cs: Avoid accessing TdsDataColumnCollection indexer, and
	fixed IsHidden.

2008-07-01  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds70.cs: Avoid accessing TdsDataColumnCollection indexer.
	* Tds.cs: Removed unused method.
	* TdsComm.cs: Fixed compiler warning.

2008-07-01  Marek Habersack  <mhabersack@novell.com>

	* TdsDataColumnCollection.cs, Tds50.cs, Tds42.cs, Tds70.cs,
	Tds.cs: adjust for changes below.

	* TdsDataColumn.cs: use the named properties only in the 2.0
	profile. The reason is that Mono.Data.TdsClient.TdsDataReader
	needs to know if a property has been set or not. With 2.0 it is
	easy to implement using nullable types, with 1.x it would require
	using e.g. BitArray to control which field was set, and in
	addition extra code would be needed to check whether a field was
	set or not. Also, it would clutter the code with #ifdefs all over
	the map.

2008-06-30  Zoltan Varga  <vargaz@gmail.com>

	* TdsDataColumn.cs: Do not inherit from Hashtable, add always set properties
	as normal properties so code can access them without doing a hashtable lookup.

	* Tds.cs Tds42.cs Tds50.cs Tds70.cs: Adapt to the TdsDataColumn changes.

2008-06-09  Veerapuram Varadhan  <vvaradhan@novell.com>

	Patch from Christian Hergert <christian.hergert@gmail.com>
	* TdsConnectionPool.cs: Remove unnecessary locks and code refactoring 
	* Tds.cs: Add member to hold status of the connection pool  
	
2008-06-09  Ankit Jain  <jankit@novell.com>

	Tds class doesn't need to inherit Component or implement ITds, fix.
	* Tds.cs: Update
	* Tds42.cs, Tds50.cs, Tds70.cs, Tds80.cs:
	Make Tds-derived classes sealed.
	* TdsConnectionPool.cs: Update.

2008-05-17  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs: Do not return 0 for decimal/numeric columns with value NULL.
	Avoid unnecessary initialization of fields, and minor code formatting.

2008-05-15  Marek Habersack  <mhabersack@novell.com>

	* Tds.cs: deal with null columns when getting value for a Numeric
	or Decimal columns.

2008-05-05  Gonzalo Paniagua Javier <gonzalo.mono@gmail.com>

	* Tds.cs: a numeric column with no decimal digits and a precision <= 80
	is translated into a long.

2007-11-10  Gert Driesen  <drieseng@users.sourceforge.net>

	* Tds.cs: Round milliseconds for datetime. Fixes part of bug #323646.
	* Tds70.cs: Include milliseconds for datetime parameters. Fixes part
	of bug #323646.

2007-10-17  Nagappan <anagappan@novell.com> 

	* TdsConnectionPool.cs: Default the pooling is enabled. It has to be
	  disabled only when we clear all the pools.

2007-09-25  Nagappan A  <anagappan@novell.com>

	* Tds.cs (Pooling): Added new property to get the internal
	connection pooling list.

	* ITds.cs (Pooling): Added new property to get the internal
	connection pooling list.

	* TdsConnectionPool.cs (ResetConnectionPool, GetConnectionPool)
	(ReleaseConnection): Added new methods to clear connection pool.

2007-08-06  Nagappan A  <anagappan@novell.com>

	* TdsComm.cs (TdsComm): Now connects to the SqlServer in Async
	mode. Fixes bug # 81934.

	* Tds.cs (ProcessEnvironmentChange): Gets the server locale to use
	them when required. Fixes bug # 82047.
	When the server resets the connection, now the client code also
	disconnects the session and remove the instance. Fixes bug #
	81933.
	Added new protected property Locale.

	* TdsEnvPacketSubType.cs (Locale): Added new enumerator
	entry. This gets the Locale type of SqlServer. Fixes bug # 82047.

	* Tds70.cs (FormatParameter): Fixes the error when trying to add a
	row with a DateTime field into an Italian SqlServer, bug # 82047.

2007-07-23  Nagappan A  <anagappan@novell.com>

	* TdsBulkCopy.cs: Removed all the Namespace that are not
	required.

2007-07-22  Nagappan A  <anagappan@novell.com>

	* TdsBulkCopy.cs: Added new file to handle the bulk copy
	operation.

	* Tds.cs (ExecBulkCopyMetaData, ExecBulkCopy): Added new methods
	to send and receive bulk data information.

	* Tds70.cs (IsBlobType, IsLargeType): Moved methods to Tds.cs.

	* TdsComm.cs: Fixed 2.0 compilation warnings.

	* Tds50.cs: Fixed compilation warnings.

	* Tds42.cs: Fixed compilation warnings.

	* TdsPacketType.cs: Added Bulk type.

2007-05-30  Nagappan A  <anagappan@novell.com>

	* TdsColumnType.cs: Added new types BigNVarChar, Variant to
	TdsColumnType enumerator.

	* TdsComm.cs (Append): Appends new data types to the TDS data
	stream and also implemented new Append overloaded method.

	* Tds.cs (BeginLoad): New case to handle BigBinary.
	(GetMoneyValue): Simplified the switch / case conditions.

	* TdsDataRow.cs: Instance of index checks for the given index to
	be less than list count, else an exception will be thrown.

	* Tds70.cs (sqlserverMagic): Modified byte values.
	(ExecProc): Now directly calls ExecRPC for any number of
	parameters being passed.
	(ExecRPC): New logic to handle parameters.
	(WriteParameterInfo): New private method to generate information
	about each parameter.
	(ProcessReturnStatus): New protected method to process the return
	status of output parameter value.

2007-03-21  Nagappan A  <anagappan@novell.com>

	* Tds70.cs (BuildParameters, FormatParameter): Include @ before
	parameter name, if doesnot exist.

2006-07-18  Dean Brettle <dean@brettle.com>

	* Tds70.cs : Fixed bug in FormatParameter() which caused 
	ArgumentOutOfRangeException when formatting 0-length varbinary values
	under 1.0 profile.

2006-05-03  Senganal T  <tsenganal@novell.com>

	* Tds.cs : 
		- SetCharset () : Fix to set the Charset correctly.
		Patch from Andrzej Kurzeja

2006-03-08  Senganal T  <tsenganal@novell.com>

	* Tds70.cs :
		- ProcessColumnInfo () : Set IsAutoIncrement Value for the column.

2006-02-10  Senganal T  <tsenganal@novell.com>

	* Tds.cs :
		- GetSequentialColumn,BeginLoad, EndLoad,
		LoadData, SkipRow, SkipToColumnIndex
		New Methods to Support sequential loading of row data
	* TdsComm.cs :
		- Skip : Changed arugment type from int to long.

2006-01-27  Senganal T  <tsenganal@novell.com>

	* Tds.cs :
		- Modified GetSqlMoney () , to set the precision and Scale correctly.
		- Modified ProcessColumnDetails , to set the schema values correctly.
	* TdsDataColumn.cs : Added some default values for the column schema
	
2005-12-07  Senganal T  <tsenganal@novell.com>

	* Tds50.cs :
		- IsValidRowCount () : Find out if a row count is valid.
		Fixes bug #76280
	* Tds.cs :
		- ProcessEndToken (): Removed some redundant code.

2005-12-03  Senganal T  <tsenganal@novell.com>

	* Tds70.cs : 
		- FormatParameter () : For DateTime Parameters, convert the value if
		specified as a string. Fixes bug#76880

2005-11-24  Senganal T  <tsenganal@novell.com>

	* Tds.cs 
	* Tds70.cs : 
		- Modifications to set the desired packetsize info when connecting
		to database

2005-11-23  Senganal T  <tsenganal@novell.com>
	
	* TdsComm.cs : 
		- ResizeOutBuf : Modified to shrink the output buffer if
		the block size is reduced. Fixed bug #76778 	

2005-10-27  Senganal T  <tsenganal@novell.com>
	
	* Tds.cs :
		- Added a virtual method IsValidRowCount ()
		- Modified the way RecordsAffected is being counted

	* Tds70.cs :
		- Overrode IsValidRowCount(), to check if the rowcount
		returned by sqlserver is valid.

2005-10-19  Senganal T  <tsenganal@novell.com>

	* TdsConnectionParameter.cs :
		- Added a class variable 'AttachDBFileName' to store the location
		of the DB file.

	* Tds70.cs (Connect) :
		- Modified to append the bytes corresponding to AttachDBFileName 
		into the Tds Packets. 

2005-08-26  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds70.cs (ExecProc): if no parameters, execute via RPC. parameter
	support has to be added.

	* Tds.cs (ExecRPC): added virtual method to execute via RPC.

	This fixes bug #68978 by enabling execution of sp_reset_connection.

2005-08-24  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds.cs: ProcessColumnDetail (): expression columns don't have
	baseTableName.

2005-08-05  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds70.cs: Reset (): remove exec.

2005-07-01  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds70.cs: FormatParameter: For uniqueidentifier, pass the guid
	as '..' rather than hex. Tested with SqlServer 2005.

	patch from jsinger@eggmouse.com & Hubert FONGARNAND.

2005-06-29  Sureshkumar T  <tsureshkumar@novell.com>

	* TdsInternalException.cs: Add ctor for InnerException.

	* TdsComm.cs: Throw TdsInternalException rather than
	SocketException.

2005-06-01  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds50.cs: add a special case for datetime parameters to convert
	to invariant culture. fixes bug #74910.

2005-04-07  Sureshkumar T  <tsureshkumar@novell.com>
	    Ankit Jain     <radical@corewars.org>

	* TdsComm.cs: GetPhysicalPacket is devided further into seperate
	methods GetPhysicalPacketHeader and
	GetPhysicalPacketData. Implemented asynchronous ReadPacket method.

	* ITds.cs: Added additional methods for asynchronous operations.

	* Tds.cs: Implemented base methods for asynchronous
	operations. Version specific derivatives should override for
	specific operations.

	* Tds70.cs: For stored procedure, "exec" is prefixed by
	default. Implemented asynchronous method for asynchronous command
	execution.

	* TdsAsyncState.cs: Added. Internal asynchronous state object.

	* TdsAsyncResult.cs: Added. Internal asynchronous result
	implementation.

2005-04-04  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds50.cs: Pass parameters to the server. cut & paste from
	Tds70.cs. To make the parmeters work with SybaseClient.

2005-03-18 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds70.cs: turns out that sp_reset_connection procedure might not be
	found ("Invalid object name 'sp_reset_connection'"). In this case, and
	if we get a proper state ('Class' property in the SqlException), just
	ignore the error.

	* TdsConnectionPool.cs: if the connection cannot be reset, attemp to
	disconnect it before losing the last reference to it.

2005-03-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds.cs: set the charset for MS SQL 2000. Patch from Aleksandar
	Dezelin. Closes bug #73591.

2005-02-04  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds.cs (ProcessEndToken): Added a bool validRowCount and add to
	recordsAffected count if we meet DoneInProc..

2005-02-02  Sureshkumar T  <tsureshkumar@novell.com>

	* TdsConnectionParameters.cs: added a method Reset to initialize
	parameters again.

2005-01-16  Daniel Morgan <danielmorgan@verizon.net>

	* Tds.cs: TDS 5.0 (Sybase) needs to get a DECIMAL
	differently than TDS 7.0 (SqlServer).  Fixes bug 70228.
	Thanks to Sebastien Robitaille for the patch for Sybase.
	
2005-01-07  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds70.cs : 
	- add a special case for datetime parameters to convert to
	invariant culture. fixes bug #70209.
	- change format to MMM dd yyyy, this works for both client locale
	change and server login locale change. fixes bug #66564.

2005-01-06  Sureshkumar T  <tsureshkumar@novell.com>

	* Tds.cs: change the typecast to ushort for
	GetDateTimeValue. fixes bug #70651.

2004-11-06 Gert Driesen <drieseng@users.sourceforge.net>
	* Tds70.cs: avoid unnecessary property call.	

2004-11-01 Gert Driesen <drieseng@users.sourceforge.net>
	
	* Tds70.cs: when type of parameter value is enum, convert value to
	underlying type before converting value to string as we'd otherwise
	be using the enum field name

2004-10-30 Umadevi S <sumadevi@novell.com>
	* Tds.cs : GetColumnValue method: handling null guid values correctly.
		This fixes bug #68804. 
		Thanks for the patch /bug report by Aleksandar Dezelin

2004-10-14 Umadevi S <sumadevi@novell.com>
	* Tds.cs : GetTextValue method- handling zero length string correctly
		This fixes bug #67916

2004-08-14 Geoff Norton <gnorton@customerdna.com>

	* TdsComm.cs: 
          Tds70.cs: 
                Make Tds70 work on Big Endian machines.
		BitConverter uses unsafe and returns things in host order; we need to 
		swap some values to put them back into the approrpiate order for the wire.

2004-08-09 Sureshkumar T <tsureshkumar@novell.com>
	* Tds70.cs - Prepare Method stored procedure handle read problem fixed.

2004-06-30 Umadevi S <sumadevi@novell.com>
	* Tds.cs - In the NextResult method handling TdsPacketSubType. TableName. 


2004-04-22  Sebastien Pouliot <sebastien@ximian.com> 

	* Tds70.cs: Updated to match changes in Mono.Security.dll.

2004-04-05  Lluis Sanchez Gual  <lluis@ximian.com>

	* ITds.cs: Added method for reseting a connection.
	* Tds.cs: Added base implementation for ITds.Reset.
	* Tds70.cs: Implemented ITds.Reset().
	* TdsConnectionPool.cs: Implemented connection pool that can be reused by 
	  all Tds clients.

2004-04-01  Lluis Sanchez Gual  <lluis@ximian.com>

	* Tds.cs: All methods now return DBNull instead of null for null values.
	* Tds50.cs, Tds70.cs: Support parameters with DBNull value.

2003-12-21  Tim Coleman <tim@timcoleman.com>
	* Tds70.cs:
		Fix Integrated Security to work with Domain users.

2003-12-06  Sebastien Pouliot <spouliot@videotron.ca> 
	for Daniel Morgan <danielmorgan@verizon.net>

	Sebastien Pouliot (spouliot@motus.com) helped me greatly with his
	NTLM stuff.
	
	* Mono.Data.Tds.Protocol/Tds.cs
	* Mono.Data.Tds.Protocol/Tds70.cs
	* Mono.Data.Tds.Protocol/TdsConnectionParameters.cs
	* Mono.Data.Tds.Protocol/TdsPacketSubType.cs
	* Mono.Data.Tds.Protocol/TdsPacketType.cs: added NT Authentication aka
	Integrated Security aka Domain Login
	
2003-10-19  Joerg Rosenkranz <joergr@voelcker.com>

	* Tds.cs (GetStringValue): A string length of 0xFF (255) is not
	misinterpreted as special value anymore.
	
	This is a fix to bug #49835.

2003-10-03  Diego Caravana  <diego@toth.it>

	* Tds70.cs: Now handles parameters of type ReturnValue and
	InputOutput.
	(BuildParameters): skips the ReturnValue params and builds the
	set string considering the assigned value for InputOutput ones.
	(BuildProcedureCall): like the preceding one plus adds the return
	value to the final select.
	
2003-08-22  Duncan Mak  <duncan@ximian.com>

	* Tds.cs (ProcessEndToken): RecordsAffected was not filled
	correctly. I've found out that the record count was submitted for
	TdsPacketSubType.Done. So I changed the behaviour to include this
	(without deeper knowledge of the TDS protocol). Patch from Jörg
	Rosenkranz <joergr@voelcker.com>.

	This is part of a fix to bug #40315.
	
2003-05-07  Miguel de Icaza  <miguel@ximian.com>

	Patches from Igor Nosyryev <nosyryev@attbi.com>
	
	* TdsComm.cs: (GetString): GetString adds extra byte to a string
	at end. It suppose to be '\0', but '\0' is valid value in .NET
	string, so this byte must not be used.
 
	* Tds.cs (GetDecimalValue):Method reads extra byte if a DECIMAL
	field contains NULL. As a result server's response is parsed
	incorrectly and this method fires an exception.

2003-01-20  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds70.cs:
	(FormatParameter): send input/output parameter names. This way we don't
	depend on the parameter position being different of the index in the
	parameter collection.

2002-12-10  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* Tds.cs:
	(Disconnect): close the stream and set connected to false.
	(NextResult): check if after DoneProc we have a ColumnMetadata + Row,
	which holds the values for the output parameters and read them.
	(LoadRow): add the values to outputParameters if DoneProc.
	When executing a stored procedure, we execute the procedure and then
	select the parameter values.

	* Tds70.cs:
	(BuildParameters): check Parameters.

	* TdsComm.cs: added Close () to close the stream.

	* TdsConnectionParameters.cs: initialize all the string to be empty.

2002-11-04  Tim Coleman (tim@timcoleman.com)
	* TdsBigDecimal.cs:
		New class added to handle (potentially) large
		decimal values
	* Tds.cs:
		Modified to use TdsBigDecimal instead of
		decimal for transit of (potentially) large
		decimal values

2002-11-03  Tim Coleman (tim@timcoleman.com)
	* TdsColumnStatus.cs:
		Newly added to handle column metadata
	* Tds.cs
		Handle table name and column detail results
	* Tds42.cs
	* Tds50.cs
	* Tds70.cs
		rename TableName BaseTableName for consistency
	* TdsPacketSubType.cs:
		We now know what subtype 0xa5 is
	* TdsPacketTableNameResult.cs:
		Add means to store table names
	* TdsSchemaInfo.cs:
		Add new schema information

2002-11-01  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Add DoneProc property
	* Tds.cs:
		*Lots*.  Some stuff to get binary types
		to work, other stuff to get new prepares
		working.
	* TdsPacketEndTokenResult.cs:
		Add Packetsubtype property
	* TdsPacketRowResult:
		Now implements ICollection and IList.

2002-10-31  Tim Coleman (tim@timcoleman.com)
	* TdsSchemaInfo.cs:
		Added because I can't really use SchemaInfo
	* ITds.cs:
	* Tds.cs :
	* TdsPacketColumnInfoResult.cs :
		ChangeDefinition of schema
	* Tds42.cs :
	* Tds50.cs :
	* Tds70.cs :
		Add new information to schema


2002-10-30  Tim Coleman (tim@timcoleman.com)
	* TdsColumnSchema.cs:
		Ditch this in favor of System.Data.Common.SchemaInfo
	* ITds.cs:
		Change ColumnInfo to Schema
	* Tds.cs:
		Uses new SchemaInfo object
		Supports TEXT now.	
	* Tds42.cs:
	* Tds50.cs:
	* Tds70.cs:
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketRowResult.cs:
		Uses new SchemaInfo object
	

2002-10-29  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Add OutputParameters collection
	* Tds.cs:
		Much reformatting, added handling for dates,
		fixed handling of output parameters, and a
		whole lot more
	* TdsPacketEndTokenResult.cs:
		Remove incorrect exception
	* TdsPacketType.cs:
		Add Logoff packet type.

2002-10-28  Tim Coleman (tim@timcoleman.com)
	* Tds.cs:
		Add much handling to get the following types
		working in queries: string, int, decimal
		All sorts of other bug fixing and general
		purpose hackery.
	* Tds42.cs:
	* Tds50.cs:
	* Tds70.cs:
		ProcessColumnInfo was abstracted in Tds.cs
		and subclassed, because 7.0 provides the information
		in a different format.
	* TdsColumnSchema.cs:
		Added size, precision, scale
	* TdsComm.cs:
		Fixed GetString because it wasn't working properly
		with TDS 7.0.
	* TdsMessage.cs:
		Change state and severity to byte instead of int
		because that is more consitent.
		

2002-10-25  Tim Coleman (tim@timcoleman.com)
	* TdsPacketErrorResultCollection.cs:
		New class added for exporting errors
	* ITds.cs:
	* Tds.cs:
	* Tds70.cs:
	* TdsComm.cs:
	* TdsPacketEndTokenResult.cs:
	* TdsPacketRowResult.cs:
		Changes to make SqlClient build.

2002-10-24  Tim Coleman (tim@timcoleman.com)
	* ITds.cs:
		Added column info, and NextResult/NextRow
		to interface
	* TdsColumnSchema.cs:
		New class added to keep track of column info
	* Tds.cs:
		Many, many changes to get queries working
		for the most part.
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketColumnNamesResult.cs:
		Doesn't use a DataColumnCollection anymore
		Also more complete.
	* TdsPacketRowResult.cs:
		Added Add() method.

2002-10-23  Tim Coleman (tim@timcoleman.com)
        * ITds.cs:
        * Tds42.cs:
        * Tds50.cs:
        * Tds70.cs:
        * Tds80.cs:
                New classes added.  Functionality
                is split up because different protocols
                have slight differences.
        * Tds.cs:
                Remove some unnecessary code after
                the above split, and add in a whole
                lot more stuff for completeness.
        * TdsColumnType.cs:
                Fix Int4.  Wrong enum value.
        * TdsComm.cs:
                Move the encoder out of constructor
                because we don't know the charset at
                that point
        * TdsConnectionParameters.cs:
                Small changes
        * TdsPacketEndTokenResult.cs:
                Implement ToString ()


2002-10-22  Tim Coleman (tim@timcoleman.com)
	* Tds.cs :
		More implementation.  Does some
		query stuff now.  Can also change
		database.
	* TdsConnectionParameters.cs:
		Rename Host to DataSource, and
		add Hostname for the local hostname.
	* TdsPacketEndTokenResult.cs:
		Change TODO attribute
	* TODOAttribute.cs:
		New class added
	

2002-10-21  Tim Coleman (tim@timcoleman.com)
	* Tds.cs
	* TdsComm.cs:
		A whole slew of changes to get logon
		to work (it now works in both TDS 7.0
		and TDS 4.2) ... danmorg can test with
		8.0 if he likes.
		TdsComm has some simplifications too,
		because C# has some features not present
		in the Java implementation.
	* TdsConnectionParameters.cs:
		Change a few default values.
	* TdsMessage.cs:
		Implement this class.

2002-10-20  Tim Coleman (tim@timcoleman.com)
	* TdsColumnType.cs:
	* TdsContext.cs:
	* TdsEnvPacketSubType.cs:
	* TdsMessage.cs:
	* TdsPacketColumnInfoResult.cs:
	* TdsPacketColumnNamesResult.cs:
	* TdsPacketColumnOrderResult.cs:
	* TdsPacketControlResult.cs:
	* TdsPacketEndTokenResult.cs:
	* TdsPacketErrorResult.cs:
	* TdsPacketMessageResult.cs:
	* TdsPacketOutputParam.cs:
	* TdsPacketResult.cs:
	* TdsPacketRetStatResult.cs:
	* TdsPacketRowResult.cs:
	* TdsPacketSubType.cs:
	* TdsPacketTableNameResult.cs:
	* TdsPacketUnknown.cs:
		New classes added as part of TDS internal implementation.
	* Tds.cs:
		Some work on receiving and interpreting packages received from
		SQL Server.  Still doesn't work completely.
	* TdsComm.cs:
		Add some methods as part of the ongoing work with Tds.cs
	* TdsConnectionParameters.cs:
		Add default values for Encoding ("iso-8859-1"), Port (1433), 
		TDS Version (4.2).

2002-10-18  Tim Coleman (tim@timcoleman.com)
	* TdsConnectionInternal:
		Add some implementation details
	* TdsCommInternal:
		New class, which will handle the low-level
		communication with the database
	* TdsPacketTypeInternal:
		Add new packet type, TdsPacketTypeInternal.None
		which is used when no packet is being constructed.
		The value is 0.

2002-10-17  Tim Coleman (tim@timcoleman.com)
	* ChangeLog:
		New changelog added
	* TdsCommandInternal.cs:
	* TdsConnectionInternal.cs:
	* TdsPacketTypeInternal.cs:
	* TdsServerTypeInternal.cs:
	* TdsTransactionInternal.cs:
	* TdsVersionInternal.cs:
		New classes added.  These are the
		internal implementations, meant for
		"wrapping" from other locations.
