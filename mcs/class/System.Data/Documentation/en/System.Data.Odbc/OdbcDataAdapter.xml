<?xml version="1.0" encoding="utf-8"?>
<Type Name="OdbcDataAdapter" FullName="System.Data.Odbc.OdbcDataAdapter">
  <TypeSignature Language="C#" Value="public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IDesigner")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowUpdated")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> serves as a bridge between a DataSet and data source for retrieving and saving data. The <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> provides this bridge by using <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> to load data from the data source into the <see cref="T:System.Data.DataSet" />, and using <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to send changes made in the <see cref="T:System.Data.DataSet" /> back to the data source.</para>
      <para>When the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> fills a <see cref="T:System.Data.DataSet" />, it creates the required tables and columns for the returned data if they do not already exist. However, primary key information is not included in the implicitly created schema unless the <see cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" /> property is set to <see cref="F:System.Data.MissingSchemaAction.AddWithKey" />. You may also have the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> create the schema of the <see cref="T:System.Data.DataSet" />, including primary key information, before filling it with data using <see cref="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />. For more information, see <format type="text/html"><a href="307d2809-208b-4cf8-b6a9-5d16f15fc16c">Adding Existing Constraints to a DataSet</a></format>.</para>
      <block subset="none" type="note">
        <para>When you call the Fill method on a data source that does not have a primary key column, the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> tries to promote the unique constraint column to the primary key. In the process, the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> marks the unique constraint as not nullable. This behavior works unless there is a null value in the unique constraint column. If there is a null value, the Fill method fails with a constraint violation. To avoid this situation, do not allow null values in the unique constraint column.</para>
      </block>
      <block subset="none" type="note">
        <para>Due to the limitations of native ODBC drivers, only one <see cref="T:System.Data.DataTable" /> is ever returned when you call <see cref="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />. This is true even when executing SQL batch statements from which multiple <see cref="T:System.Data.DataTable" /> objects would be expected.</para>
      </block>
      <para>The <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> also includes the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" />, <see cref="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" />, <see cref="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" />, <see cref="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" />, and TableMappings properties to facilitate loading and updating of data.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a set of data commands and a connection to a data source that are used to fill the <see cref="T:System.Data.DataSet" /> and update the data source. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you create an instance of <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, the following write-only and read-only properties are set to their default values, as shown in the table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Properties </para>
                </term>
                <description>
                  <para>Default value </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Data.Common.DataAdapter.MissingMappingAction" /> </para>
              </term>
              <description>
                <para>MissingMappingAction.Passthrough </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" /> </para>
              </term>
              <description>
                <para>MissingSchemaAction.Add </para>
              </description>
            </item>
          </list>
          <para>You can change the value of any of these properties through a separate call to the property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="selectCommand" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This implementation of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> constructor sets the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property to the value specified in the <paramref name="selectCommand" /> parameter.</para>
          <para>When you create an instance of <see cref="T:System.Data.Odbc.OdbcDataAdapter" />, the following write-only and read-only properties are set to their default values, as shown in the table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Properties </para>
                </term>
                <description>
                  <para>Initial value </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Data.Common.DataAdapter.MissingMappingAction" /> </para>
              </term>
              <description>
                <para>MissingMappingAction.Passthrough </para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Data.Common.DataAdapter.MissingSchemaAction" /> </para>
              </term>
              <description>
                <para>MissingSchemaAction.Add </para>
              </description>
            </item>
          </list>
          <para>You can change the value of any of these properties through a separate call to the property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with the specified SQL SELECT statement.</para>
        </summary>
        <param name="selectCommand">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Data.Odbc.OdbcCommand" /> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This implementation of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> can be useful in an application that must call the Fill method for two or more <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> objects.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and an <see cref="T:System.Data.Odbc.OdbcConnection" />.</para>
        </summary>
        <param name="selectCommandText">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
        <param name="selectConnection">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Data.Odbc.OdbcConnection" /> that represents the connection. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcDataAdapter (string selectCommandText, string selectConnectionString);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="selectCommandText" Type="System.String" />
        <Parameter Name="selectConnectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This overload of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> constructor uses the <paramref name="selectConnectionString" /> parameter to set the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property. However, it does not open the connection. You still must explicitly open the connection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> class with an SQL SELECT statement and a connection string.</para>
        </summary>
        <param name="selectCommandText">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. </param>
        <param name="selectConnectionString">
          <attribution license="cc4" from="Microsoft" modified="false" />The connection string. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">To be added.</param>
        <param name="command">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="tableMapping">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand DeleteCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" /> property is assigned to a previously created <see cref="T:System.Data.Odbc.OdbcCommand" />, the <see cref="T:System.Data.Odbc.OdbcCommand" /> is not cloned. Instead, the <see cref="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" /> maintains a reference to the previously created <see cref="T:System.Data.Odbc.OdbcCommand" />.</para>
          <para>During an update operation, if <see cref="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" /> is not set and primary key information is present in the <see cref="T:System.Data.DataSet" />, you can use the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class to automatically generate the <see cref="P:System.Data.Odbc.OdbcDataAdapter.DeleteCommand" />, and additional commands needed to reconcile the <see cref="T:System.Data.DataSet" /> to the data source. To do this, set the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. The generation logic also requires key column information to be present in the <see cref="T:System.Data.DataSet" />. For more information, see <format type="text/html"><a href="6e3fb8b5-373b-4f9e-ab03-a22693df8e91">Automatically Generating Commands</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand InsertCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <see cref="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" /> property is assigned to a previously created <see cref="T:System.Data.Odbc.OdbcCommand" /> object, the <see cref="T:System.Data.Odbc.OdbcCommand" /> is not cloned. Instead, <see cref="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" /> maintains a reference to the previously created <see cref="T:System.Data.Odbc.OdbcCommand" />.</para>
          <para>During an update operation, if <see cref="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" /> is not set and primary key information is present in the <see cref="T:System.Data.DataSet" />, you can use the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class to automatically generate <see cref="P:System.Data.Odbc.OdbcDataAdapter.InsertCommand" />, and additional commands needed to reconcile the <see cref="T:System.Data.DataSet" /> to the data source. To do this, set the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. The generation logic also requires key column information to be present in the <see cref="T:System.Data.DataSet" />. For more information, see <format type="text/html"><a href="6e3fb8b5-373b-4f9e-ab03-a22693df8e91">Automatically Generating Commands</a></format>.</para>
          <block subset="none" type="note">
            <para>If execution of this command returns rows, these rows may be added to the <see cref="T:System.Data.DataSet" /> depending upon how you set the <see cref="!:System.Data.Odbc.OdbcCommand.UpdatedRowSource" /> property of the <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you use <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, there are two events that occur per data row updated. The order of execution is as follows: </para>
          <list type="ordered">
            <item>
              <para>The values in the <see cref="T:System.Data.DataRow" /> are moved to the parameter values.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> event is raised.</para>
            </item>
            <item>
              <para>The command executes.</para>
            </item>
            <item>
              <para>If the command is set to FirstReturnedRecord, the first returned result is placed in the <see cref="T:System.Data.DataRow" />.</para>
            </item>
            <item>
              <para>If there are output parameters, they are placed in the <see cref="T:System.Data.DataRow" />.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> event is raised.</para>
            </item>
            <item>
              <para>
                <see cref="M:System.Data.DataRow.AcceptChanges" /> is called.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs during an update operation after a command is executed against the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcRowUpdatingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you use <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />, there are two events that occur per data row updated. The order of execution is as follows: </para>
          <list type="ordered">
            <item>
              <para>The values in the <see cref="T:System.Data.DataRow" /> are moved to the parameter values.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> event is raised.</para>
            </item>
            <item>
              <para>The command executes.</para>
            </item>
            <item>
              <para>If the command is set to FirstReturnedRecord, the first returned result is placed in the <see cref="T:System.Data.DataRow" />.</para>
            </item>
            <item>
              <para>If there are output parameters, they are placed in the <see cref="T:System.Data.DataRow" />.</para>
            </item>
            <item>
              <para>The <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> event is raised.</para>
            </item>
            <item>
              <para>
                <see cref="M:System.Data.DataRow.AcceptChanges" /> is called.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Occurs during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> before a command is executed against the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand SelectCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> is assigned to a previously created <see cref="T:System.Data.Odbc.OdbcCommand" />, the <see cref="T:System.Data.Odbc.OdbcCommand" /> is not cloned. Instead, the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> maintains a reference to the previously created <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</para>
          <para>If <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> returns no rows, no tables are added to the <see cref="T:System.Data.DataSet" />, and no exception is raised.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an SQL statement or stored procedure used to select records in the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="System.Data.IDataAdapter.TableMappings">
      <MemberSignature Language="C#" Value="System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.ITableMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> instance is cast to an <see cref="T:System.Data.IDbDataAdapter" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.DeleteCommand" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> instance is cast to an <see cref="T:System.Data.IDbDataAdapter" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.InsertCommand" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> instance is cast to an <see cref="T:System.Data.IDbDataAdapter" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.SelectCommand" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> instance is cast to an <see cref="T:System.Data.IDbDataAdapter" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.Data.IDbDataAdapter.UpdateCommand" />.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member is an explicit interface member implementation. It can be used only when the <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> instance is cast to an <see cref="T:System.ICloneable" /> interface.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new <see cref="T:System.Object" /> that is a copy of this instance.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand UpdateCommand { set; get; }" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DBCommandEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When <see cref="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" /> is assigned to a previously created <see cref="T:System.Data.Odbc.OdbcCommand" />, the <see cref="T:System.Data.Odbc.OdbcCommand" /> is not cloned. Instead, the <see cref="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" /> maintains a reference to the previously created <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</para>
          <para>During an update operation, if <see cref="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" /> is not set and primary key information is present in the <see cref="T:System.Data.DataSet" />, you can use the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class to automatically generate <see cref="P:System.Data.Odbc.OdbcDataAdapter.UpdateCommand" />, and additional commands needed to reconcile the <see cref="T:System.Data.DataSet" /> to the data source. To do this, set the <see cref="P:System.Data.Odbc.OdbcDataAdapter.SelectCommand" /> property of the <see cref="T:System.Data.Odbc.OdbcDataAdapter" />. The generation logic also requires key column information to be present in the <see cref="T:System.Data.DataSet" />. For more information, see <format type="text/html"><a href="6e3fb8b5-373b-4f9e-ab03-a22693df8e91">Automatically Generating Commands</a></format>.</para>
          <block subset="none" type="note">
            <para>If execution of this command returns rows, these rows may be merged with the <see cref="T:System.Data.DataSet" /> depending upon how you set the <see cref="!:System.Data.Odbc.OdbcCommand.UpdatedRowSource" /> property of the <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an SQL statement or stored procedure used to update records in the data source.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>