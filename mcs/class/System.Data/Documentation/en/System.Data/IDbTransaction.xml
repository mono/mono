<?xml version="1.0" encoding="utf-8"?>
<Type Name="IDbTransaction" FullName="System.Data.IDbTransaction">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface IDbTransaction : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Data.IDbTransaction" /> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see <format type="text/html"><a href="F46570DE-9E50-4FE6-8710-A8C31FA8569B">[&lt;topic://cpconperformingtransactions&gt;]</a></format>. </para>
      <para>An application does not create an instance of the <see cref="T:System.Data.IDbTransaction" /> interface directly, but creates an instance of a class that inherits <see cref="T:System.Data.IDbTransaction" />.</para>
      <para>Classes that inherit <see cref="T:System.Data.IDbTransaction" /> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <see cref="T:System.Data.IDbTransaction" /> interface defines the <see cref="M:System.Data.IDbTransaction.Commit" /> method. In turn, the <see cref="T:System.Data.OleDb.OleDbTransaction" /> class inherits this property, and also defines the <see cref="M:System.Data.OleDb.OleDbTransaction.Begin(System.Data.IsolationLevel)" /> method.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Commits the database transaction.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'IDbConnection'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the Connection object to associate with the transaction.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsolationLevel">
      <MemberSignature Language="C#" Value="public System.Data.IsolationLevel IsolationLevel { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'IsolationLevel'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Parallel transactions are not supported. Therefore, the <see cref="T:System.Data.IsolationLevel" /> applies to the entire transaction.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The transaction can only be rolled back from a pending state (after <see cref="M:System.Data.IDbConnection.BeginTransaction" /> has been called, but before <see cref="M:System.Data.IDbTransaction.Commit" /> is called).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Rolls back a transaction from a pending state.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>