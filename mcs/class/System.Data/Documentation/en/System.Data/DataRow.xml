<?xml version="1.0" encoding="utf-8"?>
<Type Name="DataRow" FullName="System.Data.DataRow">
  <TypeSignature Language="C#" Value="public class DataRow" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Data.DataRow" /> and <see cref="T:System.Data.DataColumn" /> objects are primary components of a <see cref="T:System.Data.DataTable" />. Use the <see cref="T:System.Data.DataRow" /> object and its properties and methods to retrieve and evaluate; and insert, delete, and update the values in the <see cref="T:System.Data.DataTable" />. The <see cref="T:System.Data.DataRowCollection" /> represents the actual <see cref="T:System.Data.DataRow" /> objects in the <see cref="T:System.Data.DataTable" />, and the <see cref="T:System.Data.DataColumnCollection" /> contains the <see cref="T:System.Data.DataColumn" /> objects that describe the schema of the <see cref="T:System.Data.DataTable" />. Use the overloaded <see cref="P:System.Data.DataRow.Item(System.Int32)" /> property to return or set the value of a <see cref="T:System.Data.DataColumn" />.</para>
      <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> and <see cref="M:System.Data.DataRow.IsNull(System.Int32)" /> properties to determine the status of a particular row value, and the <see cref="P:System.Data.DataRow.RowState" /> property to determine the state of the row relative to its parent <see cref="T:System.Data.DataTable" />.</para>
      <para>To create a new <see cref="T:System.Data.DataRow" />, use the <see cref="M:System.Data.DataTable.NewRow" /> method of the <see cref="T:System.Data.DataTable" /> object. After creating a new <see cref="T:System.Data.DataRow" />, use the <see cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" /> method to add the new <see cref="T:System.Data.DataRow" /> to the <see cref="T:System.Data.DataRowCollection" />. Finally, call the <see cref="M:System.Data.DataRow.AcceptChanges" /> method of the <see cref="T:System.Data.DataTable" /> object to confirm the addition. For more information about adding data to a <see cref="T:System.Data.DataTable" />, see <format type="text/html"><a href="d6aa8474-7bde-48f7-949d-20dc38a1625b">Adding Data to a Table</a></format>.</para>
      <para>You can delete a <see cref="T:System.Data.DataRow" /> from the <see cref="T:System.Data.DataRowCollection" /> by calling the <see cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" /> method of the <see cref="T:System.Data.DataRowCollection" />, or by calling the <see cref="M:System.Data.DataRow.Delete" /> method of the <see cref="T:System.Data.DataRow" /> object. The <see cref="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)" /> method removes the row from the collection. In contrast, <see cref="M:System.Data.DataRow.Delete" /> marks the <see cref="T:System.Data.DataRow" /> for removal. The actual removal occurs when you call <see cref="M:System.Data.DataRow.AcceptChanges" /> method. By calling <see cref="M:System.Data.DataRow.Delete" />, you can programmatically check which rows are marked for removal before actually deleting them. For more information, see <format type="text/html"><a href="c34f531d-4b9b-4071-b2d7-342c402aa586">Deleting a Row from a Table</a></format>.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a row of data in a <see cref="T:System.Data.DataTable" />.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataRow (System.Data.DataRowBuilder builder);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the DataRow. Constructs a row from the builder. Only for internal usage..</para>
        </summary>
        <param name="builder">
          <attribution license="cc4" from="Microsoft" modified="false" />builder </param>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When invoking <see cref="M:System.Data.DataRow.AcceptChanges" />, the <see cref="M:System.Data.DataRow.EndEdit" /> method is implicitly called to end any edits. If the <see cref="P:System.Data.DataRow.RowState" /> of the row was Added or Modified, the <see cref="P:System.Data.DataRow.RowState" /> becomes Unchanged. If the <see cref="P:System.Data.DataRow.RowState" /> was Deleted, the row is removed.</para>
          <para>See the <see cref="M:System.Data.DataRow.BeginEdit" /> method for more information.</para>
          <para>The <see cref="T:System.Data.DataTable" /> class also has an <see cref="M:System.Data.DataTable.AcceptChanges" /> method which affects changes made to the whole table. For more information and a code example that demonstrates how to accept and reject changes to individual data rows, see <format type="text/html"><a href="e2d1a6fe-31f9-4b83-9728-06c406a3394e">AcceptChanges and RejectChanges</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Commits all the changes made to this row since the last time <see cref="M:System.Data.DataRow.AcceptChanges" /> was called.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Data.DataRow.BeginEdit" /> method to put a <see cref="T:System.Data.DataRow" /> into edit mode. In this mode, events are temporarily suspended, letting the user make changes to more than one row without triggering validation rules. For example, if you must make sure that the value of the column for a total amount is equal to the values for the debit and credit columns in a row, you can put each row into edit mode to suspend the validation of the row values until the user tries to commit the values.</para>
          <para>The <see cref="M:System.Data.DataRow.BeginEdit" /> method is called implicitly when the user changes the value of a data-bound control; the <see cref="M:System.Data.DataRow.EndEdit" /> method is called implicitly when you invoke the <see cref="M:System.Data.DataTable.AcceptChanges" /> method for the <see cref="T:System.Data.DataTable" /> object. While in this edit mode, the <see cref="T:System.Data.DataRow" /> stores representations of the original and new proposed values. Therefore, as long as the <see cref="M:System.Data.DataRow.EndEdit" /> method has not been called, you can retrieve either the original or proposed version by passing either DataRowVersion.Original or DataRowVersion.Proposed for the <paramref name="version" /> parameter of the <see cref="P:System.Data.DataRow.Item(System.Int32)" /> property. You can also cancel any edits at this point by invoking the <see cref="M:System.Data.DataRow.CancelEdit" /> method.</para>
          <para>To see if the row contains an original or proposed value, call the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> method.</para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.Data.DataRow.BeginEdit" /> method temporarily suspends <see cref="E:System.Data.DataTable.RowChanging" /> events, but the delete operation does not.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Starts an edit operation on a <see cref="T:System.Data.DataRow" /> object.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>See the <see cref="M:System.Data.DataRow.BeginEdit" /> method for more information.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Cancels the current edit on the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> and <see cref="M:System.Data.DataRow.GetColumnError(System.Int32)" /> to set and return errors for individual columns.</para>
          <para>Set the <see cref="P:System.Data.DataRow.RowError" /> property to set an error that applies to the whole row.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Clears the errors for the row. This includes the <see cref="P:System.Data.DataRow.RowError" /> and errors set with <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the <see cref="P:System.Data.DataRow.RowState" /> of the row is Added, the <see cref="P:System.Data.DataRow.RowState" /> becomes Detached and the row is removed from the table when you call <see cref="M:System.Data.DataRow.AcceptChanges" />.</para>
          <para>The <see cref="P:System.Data.DataRow.RowState" /> becomes Deleted after you use the <see cref="M:System.Data.DataRow.Delete" /> method on an existing <see cref="T:System.Data.DataRow" />. It remains Deleted until you call <see cref="M:System.Data.DataRow.AcceptChanges" />. At this time, the <see cref="T:System.Data.DataRow" /> is removed from the table.</para>
          <para>
            <see cref="M:System.Data.DataRow.Delete" /> should not be called in a foreach loop while iterating through a <see cref="T:System.Data.DataRowCollection" /> object. <see cref="M:System.Data.DataRow.Delete" /> modifies the state of the collection.</para>
          <para>A deleted row can be undeleted by invoking <see cref="M:System.Data.DataRow.RejectChanges" />.</para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.Data.DataRow.BeginEdit" /> method temporarily suspends <see cref="E:System.Data.DataTable.RowChanging" /> events, but the delete operation does not.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deletes the <see cref="T:System.Data.DataRow" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you set the property, an exception is generated if an exception occurs in the <see cref="E:System.Data.DataTable.RowChanging" /> event.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Ends the edit occurring on the row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects that is returned by the <see cref="P:System.Data.DataTable.ChildRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child rows of this <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects that is returned by the <see cref="P:System.Data.DataTable.ChildRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects that is returned by the <see cref="P:System.Data.DataTable.ChildRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
          <para>If <see cref="F:System.Data.DataRowVersion.Default" /> is specified, the version that is used depends on the <see cref="P:System.Data.DataRow.RowState" /> of the row on which GetChildRows is invoked. If the row on which GetChildRows is invoked has a RowState of Modified, New, or Unchanged, the <see cref="F:System.Data.DataRowVersion.Current" /> version of the row is used for fetching related child rows with matching values in their Current versions. If the row on which GetChildRows is invoked has a RowState of Deleted, the <see cref="F:System.Data.DataRowVersion.Original" /> version of the row is used for fetching related child rows with matching values in their original versions.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects that is returned by the <see cref="P:System.Data.DataTable.ChildRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
          <para>If <see cref="F:System.Data.DataRowVersion.Default" /> is specified, the version that is used depends on the <see cref="P:System.Data.DataRow.RowState" /> of the row on which GetChildRows is invoked. If the row on which GetChildRows is invoked has a RowState of Modified, New, or Unchanged, the <see cref="F:System.Data.DataRowVersion.Current" /> version of the row is used for fetching related child rows with matching values in their Current versions. If the row on which GetChildRows is invoked has a RowState of Deleted, the <see cref="F:System.Data.DataRowVersion.Original" /> version of the row is used for fetching related child rows with matching values in their original versions.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of the <see cref="T:System.Data.DataRelation" /> to use. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> method to set column errors.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors. Alternatively, the <see cref="M:System.Data.DataTable.GetErrors" /> method of the <see cref="T:System.Data.DataTable" /> returns all rows with errors.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the error description of the specified <see cref="T:System.Data.DataColumn" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The text of the error description.</para>
        </returns>
        <param name="column">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Data.DataColumn" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> method to set column errors.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the error description for the column specified by index.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The text of the error description.</para>
        </returns>
        <param name="columnIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The zero-based index of the column. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> method to set column errors.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the error description for a column, specified by name.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The text of the error description.</para>
        </returns>
        <param name="columnName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the column. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Data.DataRow.GetColumnsInError" /> lets you reduce the number of <see cref="T:System.Data.DataColumn" /> objects that must be processed for errors by returning only those columns that have an error. Errors can be set to individual columns with the <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> method. To further reduce the number of processing, examine the <see cref="P:System.Data.DataRow.HasErrors" /> property of the <see cref="T:System.Data.DataRow" /> class to determine whether a <see cref="T:System.Data.DataRow" /> has errors before invoking <see cref="M:System.Data.DataRow.GetColumnsInError" />.</para>
          <para>Use the <see cref="M:System.Data.DataRow.ClearErrors" /> method to clear all errors on the row. This includes the <see cref="P:System.Data.DataRow.RowError" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an array of columns that have errors.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataColumn" /> objects that contain errors.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent row of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The parent <see cref="T:System.Data.DataRow" /> of the current row.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values.</param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataRelation" /> to use. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In a <see cref="T:System.Data.DataSet" />, the collection of all parent <see cref="T:System.Data.DataRelation" /> objects for the data set is returned by the <see cref="M:System.Data.DataRow.GetParentRows(System.String)" /> method.</para>
          <para>The <see cref="T:System.Data.DataTable" /> also contains a collection of <see cref="T:System.Data.DataRelation" /> objects, returned by the <see cref="P:System.Data.DataTable.ParentRelations" /> property.</para>
          <para>Use the <see cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" /> property to determine whether the <see cref="T:System.Data.DataRowVersion" /> that you want exists.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent rows of a <see cref="T:System.Data.DataRow" /> using the specified <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />, and <see cref="T:System.Data.DataRowVersion" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Data.DataRow" /> objects or an array of length zero.</para>
        </returns>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Data.DataRelation.RelationName" /> of a <see cref="T:System.Data.DataRelation" />. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values specifying the version of the data to get. Possible values are Default, Original, Current, and Proposed. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'bool'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>HasErrors returns true if any <see cref="T:System.Data.DataColumn" /> object in the row contains an error, or if the <see cref="P:System.Data.DataRow.RowError" /> property of the <see cref="T:System.Data.DataRow" /> is not an empty string.</para>
          <para>When validating data, you can set an error on any column in a row. Such a column, when displayed in the <see cref="T:System.Windows.Forms.DataGrid" /> control, is marked with a red exclamation point to signal to the user that the column is in error.</para>
          <para>Use <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> to set an error on any column.</para>
          <para>Use the <see cref="M:System.Data.DataRow.GetColumnError(System.Int32)" /> and GetColumnsInError methods to return columns with errors.</para>
          <para>The <see cref="M:System.Data.DataRow.ClearErrors" /> method clears all errors for the row.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether there are errors in a row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>See the <see cref="M:System.Data.DataRow.BeginEdit" /> method for more information.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether a specified version exists.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the version exists; otherwise, false.</para>
        </returns>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> contains a null value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the column contains a null value; otherwise, false.</para>
        </returns>
        <param name="column">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Data.DataColumn" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the column at the specified index contains a null value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the column contains a null value; otherwise, false.</para>
        </returns>
        <param name="columnIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The zero-based index of the column. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the named column contains a null value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the column contains a null value; otherwise, false.</para>
        </returns>
        <param name="columnName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the column. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the specified <see cref="T:System.Data.DataColumn" /> and <see cref="T:System.Data.DataRowVersion" /> contains a null value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the column contains a null value; otherwise, false.</para>
        </returns>
        <param name="column">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Data.DataColumn" />. </param>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the <see cref="T:System.Data.DataRowVersion" /> values that specifies the row version. Possible values are Default, Original, Current, and Proposed. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">To be added: an object of type 'DataColumn'</param>
        <summary>To be added</summary>
        <value>To be added: an object of type 'object'</value>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">To be added: an object of type 'int'</param>
        <summary>To be added</summary>
        <value>To be added: an object of type 'object'</value>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">To be added: an object of type 'string'</param>
        <summary>To be added</summary>
        <value>To be added: an object of type 'object'</value>
        <remarks>To be added</remarks>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <value>To be added: an object of type 'object []'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use this property to set or get values for this row through an array. If you use this property to set values, the array must have the same size and ordering as the column collection. Passing null in the <see cref="P:System.Data.DataRow.ItemArray" /> indicates that no value was specified.</para>
          <para>Users can generate exceptions in the <see cref="E:System.Data.DataTable.ColumnChanging" /> event or the <see cref="E:System.Data.DataTable.RowChanging" /> event.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets all the values for this row through an array.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you call the <see cref="M:System.Data.DataRow.RejectChanges" /> method, the <see cref="M:System.Data.DataRow.CancelEdit" /> method is implicitly called to cancel any edits. If <see cref="P:System.Data.DataRow.RowState" /> is deleted or modified, the row reverts to its previous values, and <see cref="P:System.Data.DataRow.RowState" /> becomes unchanged. If the <see cref="P:System.Data.DataRow.RowState" /> is added, the row is removed.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Rejects all changes made to the row since <see cref="M:System.Data.DataRow.AcceptChanges" /> was last called.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Uses the <see cref="P:System.Data.DataRow.HasErrors" /> property to first determine whether a <see cref="T:System.Data.DataRow" /> contains errors.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the custom error description for a row.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataRowState'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the <see cref="P:System.Data.DataRow.RowState" /> depends on two factors: the kind of operation has been performed on the row, and whether <see cref="M:System.Data.DataRow.AcceptChanges" /> has been called on the <see cref="T:System.Data.DataRow" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the current state of the row with regard to its relationship to the <see cref="T:System.Data.DataRowCollection" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changes the <see cref="P:System.Data.DataRow.RowState" /> of a <see cref="T:System.Data.DataRow" /> to Added. If the current row is not in either an Unchanged or an Added state, it throws an <see cref="T:System.InvalidOperationException" /> with the message that SetAdded can only be invoked on a DataRow instance where the RowState is Unchanged.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changes the <see cref="P:System.Data.DataRow.Rowstate" /> of a <see cref="T:System.Data.DataRow" /> to Added. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>To examine error descriptions, use the <see cref="M:System.Data.DataRow.GetColumnError(System.Int32)" /> method.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> property. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors. </para>
          <para>If null or an empty string is passed in as the <paramref name="error" /> parameter, the <see cref="T:System.Data.DataRow" /> behaves as if no error was set and the <see cref="P:System.Data.DataRow.HasErrors" /> property will return false.</para>
          <para>To set a custom error description on the whole row, use the <see cref="P:System.Data.DataRow.RowError" /> property.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the error description for a column specified as a <see cref="T:System.Data.DataColumn" />.</para>
        </summary>
        <param name="column">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Data.DataColumn" /> to set the error description for. </param>
        <param name="error">
          <attribution license="cc4" from="Microsoft" modified="false" />The error description. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The method is used to set custom error descriptions on specified columns. You can use the <see cref="T:System.Windows.Forms.ErrorProvider" /> control to display the text of the error.</para>
          <para>To examine error descriptions, use the <see cref="M:System.Data.DataRow.GetColumnError(System.Int32)" /> method.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> property. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors.</para>
          <para>If null or an empty string is passed in as the <paramref name="error" /> parameter, the <see cref="T:System.Data.DataRow" /> behaves as if no error was set and the <see cref="P:System.Data.DataRow.HasErrors" /> property will return false.</para>
          <para>To set a custom error description on the whole row, use the <see cref="P:System.Data.DataRow.RowError" /> property.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
          <para>To set error text that applies to a whole row, set the <see cref="P:System.Data.DataRow.RowError" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the error description for a column specified by index.</para>
        </summary>
        <param name="columnIndex">
          <attribution license="cc4" from="Microsoft" modified="false" />The zero-based index of the column. </param>
        <param name="error">
          <attribution license="cc4" from="Microsoft" modified="false" />The error description. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The name of a column is set with the <see cref="P:System.Data.DataColumn.ColumnName" /> property of the <see cref="T:System.Data.DataColumn" /> class.</para>
          <para>To examine error descriptions, use the <see cref="M:System.Data.DataRow.GetColumnError(System.Int32)" /> method.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> property. Consequently, you can use the <see cref="M:System.Data.DataRow.GetColumnsInError" /> method to retrieve all the columns with errors.</para>
          <para>If null or an empty string is passed in as the <paramref name="error" /> parameter, the <see cref="T:System.Data.DataRow" /> behaves as if no error was set and the <see cref="P:System.Data.DataRow.HasErrors" /> property will return false.</para>
          <para>To set a custom error description on the whole row, use the <see cref="P:System.Data.DataRow.RowError" /> property.</para>
          <para>To determine whether any errors exist for the columns collection, use the <see cref="P:System.Data.DataRow.HasErrors" /> method.</para>
          <para>To clear all errors for the columns collection, use the <see cref="M:System.Data.DataRow.ClearErrors" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the error description for a column specified by name.</para>
        </summary>
        <param name="columnName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the column. </param>
        <param name="error">
          <attribution license="cc4" from="Microsoft" modified="false" />The error description. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changes the <see cref="P:System.Data.DataRow.Rowstate" /> of a <see cref="T:System.Data.DataRow" /> to Modified. If the current row is not in either an Unchanged or an Added state, it throws an <see cref="T:System.InvalidOperationException" /> with the message that SetModified can only be invoked on a DataRow instance where the RowState is Unchanged.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Changes the <see cref="P:System.Data.DataRow.Rowstate" /> of a <see cref="T:System.Data.DataRow" /> to Modified. </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Data.DataRow.IsNull(System.Int32)" /> method to determine whether a column contains a null value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the value of the specified <see cref="T:System.Data.DataColumn" /> to a null value.</para>
        </summary>
        <param name="column">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Data.DataColumn" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" />.</para>
        </summary>
        <param name="parentRow">
          <attribution license="cc4" from="Microsoft" modified="false" />The new parent <see cref="T:System.Data.DataRow" />. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Sets the parent row of a <see cref="T:System.Data.DataRow" /> with specified new parent <see cref="T:System.Data.DataRow" /> and <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
        <param name="parentRow">
          <attribution license="cc4" from="Microsoft" modified="false" />The new parent <see cref="T:System.Data.DataRow" />. </param>
        <param name="relation">
          <attribution license="cc4" from="Microsoft" modified="false" />The relation <see cref="T:System.Data.DataRelation" /> to use. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataTable'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Data.DataRow" /> does not necessarily belong to any table's collection of rows. This behavior occurs when the <see cref="T:System.Data.DataRow" /> has been created but not added to the <see cref="T:System.Data.DataRowCollection" />. If the <see cref="P:System.Data.DataRow.RowState" /> property returns DataRowState.Detached, the row is not in any collection.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Data.DataTable" /> for which this row has a schema.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>