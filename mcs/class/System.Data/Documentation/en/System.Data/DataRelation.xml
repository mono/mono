<?xml version="1.0" encoding="utf-8"?>
<Type Name="DataRelation" FullName="System.Data.DataRelation">
  <TypeSignature Language="C#" Value="public class DataRelation" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.3300.0</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.RelationshipConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("RelationName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationEditor, Microsoft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>A <see cref="T:System.Data.DataRelation" /> is used to relate two <see cref="T:System.Data.DataTable" /> objects to each other through <see cref="T:System.Data.DataColumn" /> objects. For example, in a Customer/Orders relationship, the Customers table is the parent and the Orders table is the child of the relationship. This is similar to a primary key/foreign key relationship. For more information, see <format type="text/html"><a href="e5e673f4-9b44-45ae-aaea-c504d1cc5d3e">Navigating a Relationship between Tables</a></format>.</para>
      <para>Relationships are created between matching columns in the parent and child tables. That is, the <see cref="P:System.Data.DataColumn.DataType" /> value for both columns must be identical.</para>
      <para>Relationships can also cascade various changes from the parent <see cref="T:System.Data.DataRow" /> to its child rows. To control how values are changed in child rows, add a <see cref="T:System.Data.ForeignKeyConstraint" /> to the <see cref="T:System.Data.ConstraintCollection" /> of the <see cref="T:System.Data.DataTable" /> object. The <see cref="T:System.Data.ConstraintCollection" /> determines what action to take when a value in a parent table is deleted or updated.</para>
      <para>When a <see cref="T:System.Data.DataRelation" /> is created, it first verifies that the relationship can be established. After it is added to the <see cref="T:System.Data.DataRelationCollection" />, the relationship is maintained by disallowing any changes that would invalidate it. Between the period when a <see cref="T:System.Data.DataRelation" /> is created and added to the <see cref="T:System.Data.DataRelationCollection" />, it is possible for additional changes to be made to the parent or child rows. An exception is generated if this causes a relationship that is no longer valid.</para>
      <block subset="none" type="note">
        <para>Data corruption can occur if a bi-directional relation is defined between two tables. A bi-directional relation consists of two DataRelation objects that use the same columns, with the parent-child roles switched. No exception is raised when the DataRelation objects are saved; however, data corruption can occur.</para>
      </block>
      <para>
        <see cref="T:System.Data.DataRelation" /> objects are contained in a <see cref="T:System.Data.DataRelationCollection" />, which you can access through the <see cref="P:System.Data.DataSet.Relations" /> property of the <see cref="T:System.Data.DataSet" />, and the <see cref="P:System.Data.DataTable.ChildRelations" /> and <see cref="P:System.Data.DataTable.ParentRelations" /> properties of the <see cref="T:System.Data.DataTable" />.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a parent/child relationship between two <see cref="T:System.Data.DataTable" /> objects.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name, and parent and child <see cref="T:System.Data.DataColumn" /> objects.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentColumn">
          <attribution license="cc4" from="Microsoft" modified="false" />The parent <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
        <param name="childColumn">
          <attribution license="cc4" from="Microsoft" modified="false" />The child <see cref="T:System.Data.DataColumn" /> in the relationship. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified <see cref="T:System.Data.DataRelation" /> name and matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentColumns">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
        <param name="childColumns">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumn" Type="System.Data.DataColumn" />
        <Parameter Name="childColumn" Type="System.Data.DataColumn" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, parent and child <see cref="T:System.Data.DataColumn" /> objects, and a value that indicates whether to create constraints.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentColumn">
          <attribution license="cc4" from="Microsoft" modified="false" />The parent <see cref="T:System.Data.DataColumn" /> in the relation. </param>
        <param name="childColumn">
          <attribution license="cc4" from="Microsoft" modified="false" />The child <see cref="T:System.Data.DataColumn" /> in the relation. </param>
        <param name="createConstraints">
          <attribution license="cc4" from="Microsoft" modified="false" />A value that indicates whether constraints are created. true, if constraints are created. Otherwise, false. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="childColumns" Type="System.Data.DataColumn[]" />
        <Parameter Name="createConstraints" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Data.DataRelation" /> class using the specified name, matched arrays of parent and child <see cref="T:System.Data.DataColumn" /> objects, and value that indicates whether to create constraints.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentColumns">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of parent <see cref="T:System.Data.DataColumn" /> objects. </param>
        <param name="childColumns">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of child <see cref="T:System.Data.DataColumn" /> objects. </param>
        <param name="createConstraints">
          <attribution license="cc4" from="Microsoft" modified="false" />A value that indicates whether to create constraints. true, if constraints are created. Otherwise, false. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string childTableName, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Any <see cref="T:System.Data.DataRelation" /> object created by using this constructor must be added to the collection with the <see cref="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" /> method inside of a <see cref="M:System.Data.DataTable.BeginInit" /> and <see cref="M:System.Data.DataTable.EndInit" /> block. If this constructor is not called between <see cref="M:System.Data.DataTable.BeginInit" /> and <see cref="M:System.Data.DataTable.EndInit" /> a <see cref="T:System.NullReferenceException" /> will occur. In addition, the tables and columns with the specified names must exist at the time the constructor is called.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor is provided for design time support in the Visual Studio environment.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the relation. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentTableName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation. </param>
        <param name="childTableName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
        <param name="parentColumnNames">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation. </param>
        <param name="childColumnNames">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation. </param>
        <param name="nested">
          <attribution license="cc4" from="Microsoft" modified="false" />A value that indicates whether relationships are nested. </param>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataRelation (string relationName, string parentTableName, string parentTableNameSpace, string childTableName, string childTableNameSpace, string[] parentColumnNames, string[] childColumnNames, bool nested);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="parentTableName" Type="System.String" />
        <Parameter Name="parentTableNameSpace" Type="System.String" />
        <Parameter Name="childTableName" Type="System.String" />
        <Parameter Name="childTableNameSpace" Type="System.String" />
        <Parameter Name="parentColumnNames" Type="System.String[]" />
        <Parameter Name="childColumnNames" Type="System.String[]" />
        <Parameter Name="nested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parentTableNameSpace">To be added.</param>
        <param name="childTableNameSpace">To be added.</param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Any <see cref="T:System.Data.DataRelation" /> object created by using this constructor must then be added to the collection with <see cref="M:System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])" />. Tables and columns with the specified names must exist at the time the method is called, or if <see cref="M:System.Data.DataTable.BeginInit" /> has been called before calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="M:System.Data.DataTable.EndInit" /> is called.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor is provided for design time support in the Visual Studio environment.</para>
        </summary>
        <param name="relationName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataRelation" />. If null or an empty string (""), a default name will be given when the created object is added to the <see cref="T:System.Data.DataRelationCollection" />. </param>
        <param name="parentTableName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataTable" /> that is the parent table of the relation.</param>
        <param name="childTableName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the <see cref="T:System.Data.DataTable" /> that is the child table of the relation. </param>
        <param name="parentColumnNames">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.Data.DataColumn" /> object names in the parent <see cref="T:System.Data.DataTable" /> of the relation.</param>
        <param name="childColumnNames">
          <attribution license="cc4" from="Microsoft" modified="false" />An array of <see cref="T:System.Data.DataColumn" /> object names in the child <see cref="T:System.Data.DataTable" /> of the relation.</param>
        <param name="nested">
          <attribution license="cc4" from="Microsoft" modified="false" />A value that indicates whether relationships are nested.</param>
      </Docs>
    </Member>
    <Member MemberName="CheckStateForProperty">
      <MemberSignature Language="C#" Value="protected void CheckStateForProperty ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ChildColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ChildColumns { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataColumn []'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child <see cref="T:System.Data.DataColumn" /> objects of this relation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ChildKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.ForeignKeyConstraint ChildKeyConstraint { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.ForeignKeyConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'ForeignKeyConstraint'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If no associated <see cref="T:System.Data.ForeignKeyConstraint" /> exists for this relationship, it will be created automatically, and pointed to by the ChildKeyConstraint, when the relation is added to the collection of relations.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Data.ForeignKeyConstraint" /> for the relation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ChildTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ChildTable { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataTable'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the child table of this relation.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataSet DataSet { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataSet'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Data.DataRelationCollection" /> associated with a <see cref="T:System.Data.DataSet" /> is accessed through the <see cref="P:System.Data.DataSet.Relations" /> property of the <see cref="T:System.Data.DataSet" /> object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Data.DataSet" /> to which the <see cref="T:System.Data.DataRelation" /> belongs.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'PropertyCollection'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use <see cref="P:System.Data.DataRelation.ExtendedProperties" /> to add custom information to a <see cref="T:System.Data.DataRelation" /> object. Add information with the Add method. Retrieve information with the Item method.</para>
          <para>Extended properties must be of type <see cref="T:System.String" />. Properties that are not of type String are not persisted when the <see cref="T:System.Data.DataRelation" /> is written as XML.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the collection that stores customized properties.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Nested">
      <MemberSignature Language="C#" Value="public virtual bool Nested { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <value>To be added: an object of type 'bool'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can use <see cref="T:System.Data.DataRelation" /> objects to define hierarchical relationships, such as those specified in XML. For more information, see <format type="text/html"><a href="9530f9c9-dd98-4b93-8cdb-40d7f1e8d0ab">Nested DataRelations</a></format>.</para>
          <block subset="none" type="note">
            <para>If the <see cref="P:System.Data.DataTable.TableName" /> of the child table in the relation matches the <see cref="P:System.Data.DataColumn.ColumnName" /> of a column in the parent table in the relation, the <see cref="P:System.Data.DataRelation.Nested" /> property must be false. This was not required with the .NET Framework version 1.0.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a value that indicates whether <see cref="T:System.Data.DataRelation" /> objects are nested.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
        </summary>
        <param name="pcevent">
          <attribution license="cc4" from="Microsoft" modified="false" />Parameter reference.</param>
      </Docs>
    </Member>
    <Member MemberName="ParentColumns">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataColumn[] ParentColumns { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataColumn []'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets an array of <see cref="T:System.Data.DataColumn" /> objects that are the parent columns of this <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ParentKeyConstraint">
      <MemberSignature Language="C#" Value="public virtual System.Data.UniqueConstraint ParentKeyConstraint { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.UniqueConstraint</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'UniqueConstraint'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Data.UniqueConstraint" /> that guarantees that values in the parent column of a <see cref="T:System.Data.DataRelation" /> are unique.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="ParentTable">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable ParentTable { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'DataTable'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the parent <see cref="T:System.Data.DataTable" /> of this <see cref="T:System.Data.DataRelation" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected void RaisePropertyChanging (string name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />Parameter reference.</param>
      </Docs>
    </Member>
    <Member MemberName="RelationName">
      <MemberSignature Language="C#" Value="public virtual string RelationName { set; get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="P:System.Data.DataRelation.RelationName" /> property to retrieve a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the name used to retrieve a <see cref="T:System.Data.DataRelation" /> from the <see cref="T:System.Data.DataRelationCollection" />.</para>
        </summary>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="P:System.Data.DataRelation.RelationName" />, if one exists.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the <see cref="P:System.Data.DataRelation.RelationName" /> property.</para>
        </returns>
      </Docs>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
    </Member>
  </Members>
</Type>