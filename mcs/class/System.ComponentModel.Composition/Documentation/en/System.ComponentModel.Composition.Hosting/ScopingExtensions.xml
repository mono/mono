<?xml version="1.0" encoding="utf-8"?>
<Type Name="ScopingExtensions" FullName="System.ComponentModel.Composition.Hosting.ScopingExtensions">
  <TypeSignature Language="C#" Value="public static class ScopingExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ScopingExtensions extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>To be added.</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Defines static convenience methods for scoping.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="ContainsPartMetadata&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool ContainsPartMetadata&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsPartMetadata&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key, !!T value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="part">To be added.</param>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPartMetadataWithKey">
      <MemberSignature Language="C#" Value="public static bool ContainsPartMetadataWithKey (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ContainsPartMetadataWithKey(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string key) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the specified part contains metadata that has the specified key.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="part" /> contains metadata that has the specified key; otherwise, false.</para>
        </returns>
        <param name="part">
          <attribution license="cc4" from="Microsoft" modified="false" />The part to search.</param>
        <param name="key">
          <attribution license="cc4" from="Microsoft" modified="false" />The metadata key.</param>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a value that indicates whether the specified part exports the specified contract.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="part" /> exports the specified contract; otherwise, false.</para>
        </returns>
        <param name="part">
          <attribution license="cc4" from="Microsoft" modified="false" />The part to search.</param>
        <param name="contractName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the contract.</param>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Hosting.FilteredCatalog Filter (this System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, Func&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,bool&gt; filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Hosting.FilteredCatalog Filter(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, class System.Func`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, bool&gt; filter) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Hosting.FilteredCatalog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" RefType="this" />
        <Parameter Name="filter" Type="System.Func&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Filters the specified catalog with the specified filter function.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new catalog filtered by using the specified filter.</para>
        </returns>
        <param name="catalog">
          <attribution license="cc4" from="Microsoft" modified="false" />The catalog to filter.</param>
        <param name="filter">
          <attribution license="cc4" from="Microsoft" modified="false" />The filter function.</param>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified part imports the specified contract.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="part" /> imports the specified contract; otherwise, false.</para>
        </returns>
        <param name="part">
          <attribution license="cc4" from="Microsoft" modified="false" />The part to search.</param>
        <param name="contractName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the contract.</param>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, string contractName, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified part imports the specified contract with the specified cardinality.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="part" /> imports a contract that has the specified name and cardinality; otherwise, false.</para>
        </returns>
        <param name="part">
          <attribution license="cc4" from="Microsoft" modified="false" />The part to search.</param>
        <param name="contractName">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the contract.</param>
        <param name="importCardinality">
          <attribution license="cc4" from="Microsoft" modified="false" />The cardinality of the contract.</param>
      </Docs>
    </Member>
  </Members>
</Type>