<?xml version="1.0" encoding="utf-8"?>
<Type Name="TokenImpersonationLevel" FullName="System.Security.Principal.TokenImpersonationLevel">
  <TypeSignature Language="C#" Value="public enum TokenImpersonationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TokenImpersonationLevel extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Impersonation is the ability of a process to take on the security attributes of another process.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Defines security impersonation levels. Security impersonation levels govern the degree to which a server process can act on behalf of a client process.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Principal.TokenImpersonationLevel Anonymous = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server process cannot obtain identification information about the client, and it cannot impersonate the client.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Delegation">
      <MemberSignature Language="C#" Value="Delegation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Principal.TokenImpersonationLevel Delegation = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server process can impersonate the client's security context on remote systems.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Identification">
      <MemberSignature Language="C#" Value="Identification" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Principal.TokenImpersonationLevel Identification = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server process can obtain information about the client, such as security identifiers and privileges, but it cannot impersonate the client. This is useful for servers that export their own objects, for example, database products that export tables and views. Using the retrieved client-security information, the server can make access-validation decisions without being able to use other services that are using the client's security context.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Impersonation">
      <MemberSignature Language="C#" Value="Impersonation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Principal.TokenImpersonationLevel Impersonation = int32(3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The server process can impersonate the client's security context on its local system. The server cannot impersonate the client on remote systems.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Principal.TokenImpersonationLevel None = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An impersonation level is not assigned.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>