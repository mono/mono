<?xml version="1.0" encoding="utf-8"?>
<Type Name="AssemblyVersionAttribute" FullName="System.Reflection.AssemblyVersionAttribute">
  <TypeSignature Maintainer="auto" Language="C#" Value="public sealed class AssemblyVersionAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyVersionAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The assembly version number is part of an assembly's identity and plays a key part in binding to the assembly and in version policy. The default version policy for the runtime is that applications run only with the versions they were built and tested with, unless overridden by explicit version policy in configuration files (the application configuration file, the publisher policy file, and the computer's administrator configuration file). See <format type="text/html"><a href="2CFEBE19-7436-49F1-BD99-3C4019F0B676">[&lt;topic://cpconassembliesoverview&gt;]</a></format> for more information.</para>
      <block subset="none" type="note">
        <para>Version checking only occurs with strong-named assemblies.</para>
      </block>
      <para>The version number has four parts, as follows: </para>
      <para>&lt;major version&gt;.&lt;minor version&gt;.&lt;build number&gt;.&lt;revision&gt; </para>
      <block subset="none" type="note">
        <para>All components of the version must be integers greater than or equal to 0. Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <see cref="F:System.UInt16.MaxValue" /> - 1. If a component exceeds this value, a compilation error occurs.</para>
      </block>
      <para>You can specify all the values or you can accept the default build number, revision number, or both by using an asterisk (*). For example, [assembly:AssemblyVersion("2.3.25.1")] indicates 2 as the major version, 3 as the minor version, 25 as the build number, and 1 as the revision number. A version number such as [assembly:AssemblyVersion("1.2.*")] specifies 1 as the major version, 2 as the minor version, and accepts the default build and revision numbers. A version number such as [assembly:AssemblyVersion("1.2.15.*")] specifies 1 as the major version, 2 as the minor version, 15 as the build number, and accepts the default revision number. The default build number increments daily. The default revision number is random.</para>
      <block subset="none" type="note">
        <para>If you specify an asterisk for the build number, you cannot specify a revision number.</para>
      </block>
      <para>The assembly major and minor versions are used as the type library version number when the assembly is exported. Some COM hosts do not accept type libraries with the version number 0.0. Therefore, if you want to expose an assembly to COM clients, set the assembly version explicitly to 1.0 in the AssemblyVersionAttribute page for projects created outside vsprvslong and with no AssemblyVersionAttribute specified. Do this even when the assembly version is 0.0. All projects created in vsprvslong have a default assembly version of 1.0.*.</para>
      <para>To get the name of an assembly you have loaded, call <see cref="M:System.Reflection.Assembly.GetName" /> on the assembly to get an <see cref="T:System.Reflection.AssemblyName" />, and then get the <see cref="P:System.Reflection.AssemblyName.Version" /> property. To get the name of an assembly you have not loaded, call <see cref="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" /> from your client application to check the assembly version that your application uses.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies the version of the assembly being attributed.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyVersionAttribute (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string version) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The format of the <paramref name="version" /> string is: major. minor. build. revision.</para>
          <para>When specifying a version, you have to at least specify major. If you specify major and minor, you can specify an asterisk (*) for build. This will cause build to be equal to the number of days since January 1, 2000 local time, and for revision to be equal to the number of seconds since midnight local time, divided by 2.</para>
          <para>If you specify major, minor, and build, you can specify an asterisk for revision. This will cause revision to be equal to the number of seconds since midnight local time, divided by 2.</para>
          <para>Examples of valid version strings include: </para>
          <para>1 </para>
          <para>1.1 </para>
          <para>1.1.* </para>
          <para>1.1.1 </para>
          <para>1.1.1.* </para>
          <para>1.1.1.1 </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the AssemblyVersionAttribute class with the version number of the assembly being attributed.</para>
        </summary>
        <param name="version">
          <attribution license="cc4" from="Microsoft" modified="false" />The version number of the attributed assembly. </param>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added: an object of type 'string'</value>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the version number of the attributed assembly.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>