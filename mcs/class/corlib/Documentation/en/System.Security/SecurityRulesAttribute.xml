<?xml version="1.0" encoding="utf-8"?>
<Type Name="SecurityRulesAttribute" FullName="System.Security.SecurityRulesAttribute">
  <TypeSignature Language="C#" Value="public sealed class SecurityRulesAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SecurityRulesAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This class indicates which set of security rules the common language runtime should enforce for an assembly. For example, an assembly that is marked with [SecurityRules(SecurityRuleSet.Level1)] uses the .NET Framework version 2.0 transparency rules, where public security-critical types and members are treated as security-safe-critical outside the assembly. This requires security-critical types and members to perform a link demand for full trust to enforce security-critical behavior when they are accessed by external callers. Typically, level 1 rules should be used only for compatibility, such as for version 2.0 assemblies. For more information about level 1 behavior, see <format type="text/html"><a href="5fd8f46d-3961-46a7-84af-2eb1f48e75cf">Security-Transparent Code, Level 1</a></format>. For information about level 2 behavior, see <format type="text/html"><a href="4d05610a-0da6-4f08-acea-d54c9d6143c0">Security-Transparent Code, Level 2</a></format>.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Indicates the set of security rules the common language runtime should enforce for an assembly.  </para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.SecurityRuleSet ruleSet) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleSet" Type="System.Security.SecurityRuleSet" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When you specify the <paramref name="ruleSet" /> parameter, use <see cref="F:System.Security.SecurityRuleSet.Level1" /> for .NET Framework version 2.0 rules or <see cref="F:System.Security.SecurityRuleSet.Level2" /> for net_v40_short rules. For more information about <see cref="F:System.Security.SecurityRuleSet.Level1" /> behavior, see <format type="text/html"><a href="5fd8f46d-3961-46a7-84af-2eb1f48e75cf">Security-Transparent Code, Level 1</a></format>. For information about <see cref="F:System.Security.SecurityRuleSet.Level2" /> behavior, see <format type="text/html"><a href="4d05610a-0da6-4f08-acea-d54c9d6143c0">Security-Transparent Code, Level 2</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Security.SecurityRulesAttribute" /> class using the specified rule set value. </para>
        </summary>
        <param name="ruleSet">
          <attribution license="cc4" from="Microsoft" modified="false" />One of the enumeration values that specifies the transparency rules set. </param>
      </Docs>
    </Member>
    <Member MemberName="RuleSet">
      <MemberSignature Language="C#" Value="public System.Security.SecurityRuleSet RuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet RuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the rule set to be applied.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="SkipVerificationInFullTrust">
      <MemberSignature Language="C#" Value="public bool SkipVerificationInFullTrust { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipVerificationInFullTrust" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property should be used only for optimization, because security guarantees made for transparent code cannot be enforced if the code is unverifiable.</para>
          <para>If you use this property to skip MSIL verification for an assembly, use the transparent option in the <format type="text/html"><a href="f4f46f9e-8d08-4e66-a94b-0c69c9b0bbfa">PEVerify tool</a></format> to statically verify that the assembly's transparent code meets type safety requirements. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether fully trusted transparent code should skip Microsoft intermediate language (MSIL) verification.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>