<?xml version="1.0" encoding="utf-8"?>
<Type Name="ReadOnlyArrayAttribute" FullName="System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute">
  <TypeSignature Language="C#" Value="public sealed class ReadOnlyArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyArrayAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>If an array parameter in your wrt component is passed by value (ByVal in Visual Basic), you must apply one of the following attributes to it: </para>
      <list type="bullet">
        <item>
          <para>Apply the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute" /> attribute if you intend the contents of the array to be used for input only. </para>
        </item>
        <item>
          <para>Apply the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute" /> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).</para>
        </item>
      </list>
      <para>Applying both attributes to a parameter causes an error. For more information, including the standard pattern for making changes to an array, see <see cref="http://go.microsoft.com/fwlink/?LinkId=251026">Passing arrays to a Windows Runtime component</see> in the Windows Dev Center.</para>
      <block subset="none" type="note">
        <para>Parameters that have the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute" /> attribute behave differently depending on whether the caller is written in native code or managed code. If the caller is native code (JavaScript or cppwrt), the array is copied when the call crosses the application binary interface (ABI) boundary. Elements are converted if necessary. Therefore, any accidental changes the method makes to an input-only array are not visible to the caller. </para>
        <para>If the caller is managed code, the array is not copied. The original array is available to the called method, as it would be in any method call in the .NET Framework. Array contents are mutable in .NET Framework code, so any changes the method makes to the array are visible to the caller. This is important to remember because it affects unit tests written for a wrt component. If the tests are written in managed code, the contents of an array will appear to be mutable during testing. </para>
      </block>
      <para>Applying this attribute to a parameter that has the <see cref="T:System.Runtime.InteropServices.InAttribute" /> or <see cref="T:System.Runtime.InteropServices.OutAttribute" /> attribute causes an error when the module is exported. Applying the attribute to an out parameter also causes an error. </para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>When applied to an array parameter in a wrt component, specifies that the contents of the array that is passed to that parameter are used only for input. The caller expects the array to be unchanged by the call. See the Remarks section for important information about callers that are written using managed code. </para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute" /> class. </para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>