<?xml version="1.0" encoding="utf-8"?>
<Type Name="StringWriter" FullName="System.IO.StringWriter" FullNameSP="System_IO_StringWriter" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public serializable StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The following table lists examples of other typical or related I/O tasks.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>To do this... </para>
            </term>
            <description>
              <para>See the example in this topic... </para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>Create a text file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
              </format> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Write to a text file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
              </format> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Read from a text file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
              </format> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Append text to a file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
              </format> </para>
            <para>
              <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
            <para>
              <see cref="M:System.IO.FileInfo.AppendText" /> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Get the size of a file. </para>
          </term>
          <description>
            <para>
              <see cref="P:System.IO.FileInfo.Length" /> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Get the attributes of a file. </para>
          </term>
          <description>
            <para>
              <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Set the attributes of a file. </para>
          </term>
          <description>
            <para>
              <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Determine if a file exists. </para>
          </term>
          <description>
            <para>
              <see cref="M:System.IO.File.Exists(System.String)" /> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Read from a binary file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
              </format> </para>
          </description>
        </item>
        <item>
          <term>
            <para>Write to a binary file. </para>
          </term>
          <description>
            <para>
              <format type="text/html">
                <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
              </format> </para>
          </description>
        </item>
      </list>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string. The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor()" />
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new <see cref="T:System.Text.StringBuilder" /> is automatically created and associated with the new StringWriter.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.IFormatProvider formatProvider)" />
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</para>
        </summary>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.IFormatProvider" /> object that controls formatting. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Text.StringBuilder sb)" />
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sb" /> is <see langword="null" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</para>
        </summary>
        <param name="sb">
          <attribution license="cc4" from="Microsoft" modified="false" />The StringBuilder to write to. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider)" />
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sb" /> is <see langword="null" />.</exception>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.IFormatProvider" /> object that controls formatting. </param>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</para>
        </summary>
        <param name="sb">
          <attribution license="cc4" from="Microsoft" modified="false" />The StringBuilder to write to. </param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.IFormatProvider" /> object that controls formatting. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual void Close()" />
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For an example of creating a file and writing text to a file, see <format type="text/html"><a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a></format>. For an example of reading text from a file, see <format type="text/html"><a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a></format>. For an example of reading from and writing to a binary file, see <format type="text/html"><a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a></format>.</para>
          <para>This method overrides <see cref="M:System.IO.Stream.Close" />.</para>
          <para>This implementation of Close calls the <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> method passing a true value.</para>
          <para>Flushing the stream will not flush its underlying encoder unless you explicitly call Close. Setting <see cref="P:System.IO.StreamWriter.AutoFlush" /> to true means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="ILASM" Value=".method family hidebysig virtual void Dispose(bool disposing)" />
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When the <paramref name="disposing" /> parameter is true, this method releases all resources held by any managed objects that this <see cref="T:System.IO.StringWriter" /> references. This method invokes the Dispose method of each referenced object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</para>
        </summary>
        <param name="disposing">
          <attribution license="cc4" from="Microsoft" modified="false" />true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="ILASM" Value=".property class System.Text.Encoding Encoding { public hidebysig virtual specialname class System.Text.Encoding get_Encoding() }" />
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>The <see cref="T:System.Text.Encoding" /> in which the output is written.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property is necessary for some XML scenarios where a header must be written containing the encoding used by the StringWriter. This allows the XML code to consume an arbitrary StringWriter and generate the correct XML header.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous flush operation.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual class System.Text.StringBuilder GetStringBuilder()" />
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is either the StringBuilder that was passed to the constructor, or the StringBuilder that was automatically created.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the underlying <see cref="T:System.Text.StringBuilder" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The underlying StringBuilder.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual string ToString()" />
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a string containing the characters written to the current StringWriter so far.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string containing the characters written to the current StringWriter.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual void Write(valuetype System.Char value)" />
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ObjectDisposedException">The writer is closed.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method overrides <see cref="M:System.IO.TextWriter.Write(System.Char)" />.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a character to the string.</para>
        </summary>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The character to write. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual void Write(string value)" />
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ObjectDisposedException">The writer is closed.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method overrides <see cref="M:System.IO.TextWriter.Write(System.Char)" />.</para>
          <para>If the specified string is null, nothing is written.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a string to the current string.</para>
        </summary>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The string to write. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual void Write(class System.Char[] buffer, int32 index, int32 count)" />
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <para>
            <paramref name="index" /> &lt; 0</para>
          <para> -or-</para>
          <para>
            <paramref name="count" /> &lt; zero.</para>
        </exception>
        <exception cref="T:System.ArgumentException">(<paramref name="index" /> + <paramref name="count" /> ) &gt; <paramref name="buffer" /><see langword="." />Length.</exception>
        <exception cref="T:System.ObjectDisposedException">The writer is closed.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method overrides <see cref="M:System.IO.TextWriter.Write(System.Char)" />.</para>
          <para>This method writes <paramref name="count" /> characters of data to this StringWriter from <paramref name="buffer" />, starting at position <paramref name="index" />.</para>
          <para>The following table lists examples of other typical or related I/O tasks.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>To do this... </para>
                </term>
                <description>
                  <para>See the example in this topic... </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>Create a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="060CBE06-2ADF-4337-9E7B-961A5C840208">[&lt;topic://cpconwritingtexttofile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a text file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="ED180BAA-DFC6-4C69-A725-46E87EDAFB27">[&lt;topic://cpconreadingtextfromfile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Append text to a file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="74423362-1721-49CB-AA0A-E04005F72A06">[&lt;topic://cpconopeningappendingtologfile&gt;]</a>
                  </format> </para>
                <para>
                  <see cref="M:System.IO.File.AppendText(System.String)" /> </para>
                <para>
                  <see cref="M:System.IO.FileInfo.AppendText" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the size of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="P:System.IO.FileInfo.Length" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Get the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.GetAttributes(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Set the attributes of a file. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Determine if a file exists. </para>
              </term>
              <description>
                <para>
                  <see cref="M:System.IO.File.Exists(System.String)" /> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Read from a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
            <item>
              <term>
                <para>Write to a binary file. </para>
              </term>
              <description>
                <para>
                  <format type="text/html">
                    <a href="E209D949-31E8-44EA-8E38-87F9093F3093">[&lt;topic://cpconReadingWritingToNewlyCreatedDataFile&gt;]</a>
                  </format> </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a subarray of characters to the string.</para>
        </summary>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The character array to write data from. </param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The position in the buffer at which to start reading data.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum number of characters to write. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a character to the string asynchronously.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The character to write to the string.</param>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a string to the current string asynchronously.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The string to write. If <paramref name="value" /> is null, nothing is written to the text stream.</param>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a subarray of characters to the string asynchronously.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The character array to write data from.</param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The position in the buffer at which to start reading data.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum number of characters to write.</param>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The line terminator is defined by the <see cref="P:System.IO.TextWriter.NewLine" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a character followed by a line terminator asynchronously to the string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The character to write to the string.</param>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The line terminator is defined by the <see cref="P:System.IO.TextWriter.NewLine" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a string followed by a line terminator asynchronously to the current string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The string to write. If the value is null, only a line terminator is written.</param>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The line terminator is defined by the <see cref="P:System.IO.TextWriter.NewLine" /> property.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Writes a subarray of characters followed by a line terminator asynchronously to the string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A task that represents the asynchronous write operation.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The character array to write data from.</param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The position in the buffer at which to start reading data.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum number of characters to write. </param>
      </Docs>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>