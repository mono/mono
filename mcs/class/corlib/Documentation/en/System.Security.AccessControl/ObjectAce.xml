<?xml version="1.0" encoding="utf-8"?>
<Type Name="ObjectAce" FullName="System.Security.AccessControl.ObjectAce">
  <TypeSignature Language="C#" Value="public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectAce extends System.Security.AccessControl.QualifiedAce" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.QualifiedAce</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>To be added.</remarks>
    <since version=".NET 2.0" />
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.AccessControl.AceFlags aceFlags, valuetype System.Security.AccessControl.AceQualifier qualifier, int32 accessMask, class System.Security.Principal.SecurityIdentifier sid, valuetype System.Security.AccessControl.ObjectAceFlags flags, valuetype System.Guid type, valuetype System.Guid inheritedType, bool isCallback, unsigned int8[] opaque) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="aceFlags" Type="System.Security.AccessControl.AceFlags" />
        <Parameter Name="qualifier" Type="System.Security.AccessControl.AceQualifier" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        <Parameter Name="flags" Type="System.Security.AccessControl.ObjectAceFlags" />
        <Parameter Name="type" Type="System.Guid" />
        <Parameter Name="inheritedType" Type="System.Guid" />
        <Parameter Name="isCallback" Type="System.Boolean" />
        <Parameter Name="opaque" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initiates a new instance of the <see cref="T:System.Security.AccessControl.ObjectAce" /> class.</para>
        </summary>
        <param name="aceFlags">
          <attribution license="cc4" from="Microsoft" modified="false" />The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE).</param>
        <param name="qualifier">
          <attribution license="cc4" from="Microsoft" modified="false" />The use of the new ACE.</param>
        <param name="accessMask">
          <attribution license="cc4" from="Microsoft" modified="false" />The access mask for the ACE.</param>
        <param name="sid">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Security.Principal.SecurityIdentifier" /> associated with the new ACE.</param>
        <param name="flags">
          <attribution license="cc4" from="Microsoft" modified="false" />Whether the <paramref name="type" /> and <paramref name="inheritedType" /> parameters contain valid object GUIDs.</param>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />A GUID that identifies the object type to which the new ACE applies.</param>
        <param name="inheritedType">
          <attribution license="cc4" from="Microsoft" modified="false" />A GUID that identifies the object type that can inherit the new ACE.</param>
        <param name="isCallback">
          <attribution license="cc4" from="Microsoft" modified="false" />true if the new ACE is a callback type ACE.</param>
        <param name="opaque">
          <attribution license="cc4" from="Microsoft" modified="false" />Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <see cref="M:System.Security.AccessControl.ObjectAceMaxOpaqueLength" /> method.</param>
      </Docs>
    </Member>
    <Member MemberName="BinaryLength">
      <MemberSignature Language="C#" Value="public override int BinaryLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BinaryLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the length, in bytes, of the binary representation of the current <see cref="T:System.Security.AccessControl.ObjectAce" /> object. This length should be used before marshaling the ACL into a binary array with the <see cref="M:System.Security.AccessControl.ObjectAce.GetBinaryForm" /> method.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryForm">
      <MemberSignature Language="C#" Value="public override void GetBinaryForm (byte[] binaryForm, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetBinaryForm(unsigned int8[] binaryForm, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryForm" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Marshals the contents of the <see cref="T:System.Security.AccessControl.ObjectAce" /> object into the specified byte array beginning at the specified offset.</para>
        </summary>
        <param name="binaryForm">
          <attribution license="cc4" from="Microsoft" modified="false" />The byte array into which the contents of the <see cref="T:System.Security.AccessControl. ObjectAce" /> is marshaled.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The offset at which to start marshaling.</param>
      </Docs>
    </Member>
    <Member MemberName="InheritedObjectAceType">
      <MemberSignature Language="C#" Value="public Guid InheritedObjectAceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InheritedObjectAceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the value of the <see cref="P:System.Security.AccessControl.ObjectAce.ObjectAceFlags" /> parameter does not contain the value <see cref="F:System.Security.AccessControl.ObjectAceFlags.InheritedObjectAceTypePresent" />, this property is ignored.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <see cref="T:System.Security.AccessControl.ObjectAce" /> object represents.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MaxOpaqueLength">
      <MemberSignature Language="C#" Value="public static int MaxOpaqueLength (bool isCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MaxOpaqueLength(bool isCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isCallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs).</para>
        </returns>
        <param name="isCallback">
          <attribution license="cc4" from="Microsoft" modified="false" />True if the <see cref="T:System.Security.AccessControl.ObjectAce" /> is a callback ACE type.</param>
      </Docs>
    </Member>
    <Member MemberName="ObjectAceFlags">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.ObjectAceFlags ObjectAceFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.ObjectAceFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets flags that specify whether the <see cref="P:System.Security.AccessControl.ObjectAce.ObjectAceType" /> and <see cref="P:System.Security.AccessControl.ObjectAce.InheritedObjectAceType" /> properties contain values that identify valid object types.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ObjectAceType">
      <MemberSignature Language="C#" Value="public Guid ObjectAceType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ObjectAceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the value of the <see cref="P:System.Security.AccessControl.ObjectAce.ObjectAceFlags" /> parameter does not contain the value <see cref="F:System.Security.AccessControl.ObjectAceFlags. ObjectAceTypePresent" />, this property is ignored.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the GUID of the object type associated with this <see cref="T:System.Security.AccessControl.ObjectAce" /> object.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>