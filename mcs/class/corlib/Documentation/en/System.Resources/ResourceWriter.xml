<?xml version="1.0" encoding="utf-8"?>
<Type Name="ResourceWriter" FullName="System.Resources.ResourceWriter">
  <TypeSignature Maintainer="auto" Language="C#" Value="public sealed class ResourceWriter : System.Resources.IResourceWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResourceWriter extends System.Object implements class System.IDisposable, class System.Resources.IResourceWriter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Resources.IResourceWriter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>
        <see cref="T:System.Resources.ResourceWriter" /> provides a default implementation of the <see cref="T:System.Resources.IResourceWriter" /> interface. It enables you to programmatically create a binary resource (.resources) file. </para>
      <para>Resources are specified as name and value pairs using the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" /> method. Resource names are case-sensitive when used for lookups, but to more easily support authoring tools and help eliminate bugs, <see cref="T:System.Resources.ResourceWriter" /> will not allow a .resources file to have names that vary only by case. The <see cref="T:System.Resources.ResourceWriter" /> class enables you to create string, object, and binary resources. Binary resources can be written to the resource file as a byte array or a stream. </para>
      <para>To create a resources file, create a <see cref="T:System.Resources.ResourceWriter" /> with a unique file name, call <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" /> at least once, call <see cref="M:System.Resources.ResourceWriter.Generate" /> to write the resources file to disk, and then call <see cref="M:System.Resources.ResourceWriter.Close" /> to close the file. Calling <see cref="M:System.Resources.ResourceWriter.Close" /> will implicitly call <see cref="M:System.Resources.ResourceWriter.Generate" /> if you do not explicitly call <see cref="M:System.Resources.ResourceWriter.Generate" />.</para>
      <para>The resources will not necessarily be written in the same order they were added.</para>
      <para>To retrieve resources from a binary .resources file created by the <see cref="T:System.Resources.ResourceWriter" /> class, you can use the <see cref="T:System.Resources.ResourceManager" /> class, which lets you retrieve named resources, or the <see cref="T:System.Resources.ResourceReader" /> class, which lets you enumerate all the resources in the file. </para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Writes resources in the system-default format to an output file or an output stream. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Resources.ResourceWriter" /> class that writes the resources to the provided stream.</para>
        </summary>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The output stream. </param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceWriter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Resources.ResourceWriter" /> class that writes the resources to the specified file.</para>
        </summary>
        <param name="fileName">
          <attribution license="cc4" from="Microsoft" modified="false" />The output file name. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, unsigned int8[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The resource is not written until <see cref="M:System.Resources.ResourceWriter.Generate" /> is called.</para>
          <para>You can retrieve the resources written by the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.Byte[])" /> method by calling the <see cref="M:System.Resources.ResourceManager.GetStream(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a named resource specified as a byte array to the list of resources to be written.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the resource. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />Value of the resource as an 8-bit unsigned integer array. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can specify any stream that supports the <see cref="P:System.IO.Stream.Length" /> property for <paramref name="value" />. </para>
          <para>You can retrieve the resources written by the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream)" /> method by calling the <see cref="M:System.Resources.ResourceManager.GetStream(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a named resource specified as a stream to the list of resources to be written.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the resource to add. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the resource to add. The resource must support the <see cref="P:System.IO.Stream.Length" /> property. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <paramref name="value" /> must be serializable.</para>
          <para>The resource is not written until the <see cref="M:System.Resources.ResourceWriter.Generate" /> method is called. </para>
          <para>You can retrieve the resources written by the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.Object)" /> method by calling the <see cref="M:System.Resources.ResourceManager.GetObject(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a named resource specified as an object to the list of resources to be written.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the resource. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the resource. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddResource(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The resource is not written until <see cref="M:System.Resources.ResourceWriter.Generate" /> is called.</para>
          <para>You can retrieve the resources written by the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" /> method by calling the <see cref="M:System.Resources.ResourceManager.GetString(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a string resource to the list of resources to be written.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the resource. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the resource. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResource">
      <MemberSignature Language="C#" Value="public void AddResource (string name, System.IO.Stream value, bool closeAfterWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResource(string name, class System.IO.Stream value, bool closeAfterWrite) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.IO.Stream" />
        <Parameter Name="closeAfterWrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can specify any stream that supports the <see cref="P:System.IO.Stream.Length" /> property for <paramref name="value" />. </para>
          <para>You can retrieve the resources written by the <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.IO.Stream,System.Boolean)" /> method by calling the <see cref="M:System.Resources.ResourceManager.GetStream(System.String)" /> method.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a named resource specified as a stream to the list of resources to be written, and specifies whether the stream should be closed after the <see cref="M:System.Resources.ResourceWriter.Generate" /> method is called. </para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The name of the resource to add. </param>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />The value of the resource to add. The resource must support the <see cref="P:System.IO.Stream.Length" /> property. </param>
        <param name="closeAfterWrite">
          <attribution license="cc4" from="Microsoft" modified="false" />true to close the stream after the <see cref="M:System.Resources.ResourceWriter.Generate" /> method is called; otherwise, false. </param>
      </Docs>
    </Member>
    <Member MemberName="AddResourceData">
      <MemberSignature Language="C#" Value="public void AddResourceData (string name, string typeName, byte[] serializedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceData(string name, string typeName, unsigned int8[] serializedData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="serializedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use the <see cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" /> method to add a resource in binary form (that is, as an array of bytes) to the list of resources to be written. You must specify the name of the resource, the type name of the data contained in the resource, and the binary representation of the data itself. After you have added each resource you require, use the <see cref="M:System.Resources.ResourceWriter.Generate" /> method to write the list of resources to the resources file or stream that was specified in the <see cref="Overload:System.Resources.ResourceWriter.#ctor" /> constructor.</para>
          <para>
            <paramref name="typeName" /> is a string that represents the data type of the resource. It can be any of the following values:</para>
          <list type="bullet">
            <item>
              <para>The string representation of a ResourceTypeCode enumeration member that indicates the data type of the resource. ResourceTypeCode is a private enumeration that is used by <format type="text/html"><a href="8ef159de-b660-4bec-9213-c3fbc4d1c6f4">Resgen.exe</a></format> to indicate that a special binary format is used to store one of 19 common data types. These include the .NET Framework primitive data types (<see cref="T:System.Boolean" />, <see cref="T:System.Byte" />, <see cref="T:System.Char" />, <see cref="T:System.Decimal" />, <see cref="T:System.Double" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Single" />, <see cref="T:System.SByte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" />), as well as <see cref="T:System.String" />, <see cref="T:System.DateTime" />, and <see cref="T:System.TimeSpan" />. In addition, the ResourceTypeCode enumeration includes the values shown in the following table.</para>
              <list type="table">
                <listheader>
                  <item>
                    <term>
                      <para>ResourceTypeCode value</para>
                    </term>
                    <description>
                      <para>Description</para>
                    </description>
                  </item>
                </listheader>
                <item>
                  <term>
                    <para>ResourceTypeCode.ByteArray</para>
                  </term>
                  <description>
                    <para>The data is a byte array.</para>
                  </description>
                </item>
                <item>
                  <term>
                    <para>ResourceTypeCode.Null</para>
                  </term>
                  <description>
                    <para>The data is a null reference.</para>
                  </description>
                </item>
                <item>
                  <term>
                    <para>ResourceTypeCode.Stream</para>
                  </term>
                  <description>
                    <para>The data is stored in a stream.</para>
                  </description>
                </item>
              </list>
            </item>
            <item>
              <para>A string that contains the fully qualified name of the type whose binary data is assigned to the <paramref name="serializedData" /> argument (for example, System.String). In addition, for types that are not part of the .NET Framework class library, the string includes the name, version, culture, and public key of the assembly that contains the type. For example, the following string indicates that the serialized data represents an instance of the Person type in the Extensions namespace, which is found in version 1.0 of an assembly named Utility that has no public key and no designated culture.</para>
              <para>Extensions.Person, Utility, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</para>
            </item>
          </list>
          <para>A parallel method for reading resource data written with the <see cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" /> method is <see cref="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds a unit of data as a resource to the list of resources to be written. </para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />A name that identifies the resource that contains the added data.</param>
        <param name="typeName">
          <attribution license="cc4" from="Microsoft" modified="false" />The type name of the added data. For more information, see the Remarks section.</param>
        <param name="serializedData">
          <attribution license="cc4" from="Microsoft" modified="false" />A byte array that contains the binary representation of the added data.</param>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="M:System.Resources.ResourceWriter.Generate" /> is called implicitly by <see cref="M:System.Resources.ResourceWriter.Close" />, if required.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves the resources to the output stream and then closes it.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The implementation of this method is the same as <see cref="M:System.Resources.ResourceWriter.Close" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Allows users to close the resource file or stream, explicitly releasing resources.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Generate">
      <MemberSignature Language="C#" Value="public void Generate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Generate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.Resources.ResourceWriter.Generate" /> method is called implicitly by the <see cref="M:System.Resources.ResourceWriter.Close" /> method if it is not called by your application code.</para>
          <para>
            <see cref="M:System.Resources.ResourceWriter.Generate" /> can only be called once, after all calls to <see cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" /> and <see cref="M:System.Resources.ResourceWriter.AddResourceData(System.String,System.String,System.Byte[])" /> have been made. If an exception occurs while writing the resources, the output stream will be closed to prevent writing invalid information.</para>
          <para>
            <see cref="M:System.Resources.ResourceWriter.Generate" /> does not close the output stream in normal cases. Unless you are combining extra data with your .resources file or need access to the stream afterwards, you should call <see cref="M:System.Resources.ResourceWriter.Close" /> after calling <see cref="M:System.Resources.ResourceWriter.Generate" />, or simply call <see cref="M:System.Resources.ResourceWriter.Close" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Saves all resources to the output stream in the system default format.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeNameConverter">
      <MemberSignature Language="C#" Value="public Func&lt;Type,string&gt; TypeNameConverter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Type, string&gt; TypeNameConverter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Type,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>vs_dev10_long and MSBuild set this property if you target an earlier version of the .NET Framework. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a delegate that enables resource assemblies to be written that target versions of the .NET Framework prior to the net_v40_long by using qualified assembly names.</para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>