<?xml version="1.0" encoding="utf-8"?>
<Type Name="NetCodeGroup" FullName="System.Security.Policy.NetCodeGroup">
  <TypeSignature Maintainer="auto" Language="C#" Value="public sealed class NetCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NetCodeGroup extends System.Security.Policy.CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.</para>
      <para>
        <see cref="T:System.Security.Policy.NetCodeGroup" /> has the same merge semantics as that of <see cref="T:System.Security.Policy.UnionCodeGroup" />; it forms the union of the <see cref="T:System.Security.Policy.PolicyStatement" /> objects of all matching child code groups and the <see cref="T:System.Security.Policy.PolicyStatement" /> it generates from the input <see cref="T:System.Security.Policy.Url" /> evidence. However, <see cref="T:System.Security.Policy.NetCodeGroup" /> returns a permission containing a dynamically calculated <see cref="T:System.Net.WebPermission" /> that grants connect access to the site from which the code is run; <see cref="T:System.Security.Policy.UnionCodeGroup" /> simply returns a static permission set.</para>
      <para>When a <see cref="T:System.Security.Policy.NetCodeGroup" /> is created, it contains the default connection access rules shown in the following table.</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>URI Scheme</para>
            </term>
            <description>
              <para>Rule</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>file</para>
          </term>
          <description>
            <para>No connection access to the origin server is permitted.</para>
          </description>
        </item>
        <item>
          <term>
            <para>http</para>
          </term>
          <description>
            <para>HTTP and HTTPS access is permitted using the origin port.</para>
          </description>
        </item>
        <item>
          <term>
            <para>https</para>
          </term>
          <description>
            <para>HTTPS access is permitted using the origin port.</para>
          </description>
        </item>
      </list>
      <para>You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <see cref="T:System.Security.Policy.CodeConnectAccess" /> object with the appropriate <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> and <see cref="P:System.Security.Policy.CodeConnectAccess.Port" /> property values to the <see cref="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" /> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> ("") as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <see cref="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" /> ("*") as the scheme.</para>
      <block subset="none" type="note">
        <para>If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When a <see cref="T:System.Security.Policy.NetCodeGroup" /> is created, it contains the default connection access rules shown in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Scheme</para>
                </term>
                <description>
                  <para>Rule</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>file</para>
              </term>
              <description>
                <para>No connection access to the origin server is permitted.</para>
              </description>
            </item>
            <item>
              <term>
                <para>http</para>
              </term>
              <description>
                <para>HTTP and HTTPS access is permitted using the origin port.</para>
              </description>
            </item>
            <item>
              <term>
                <para>https</para>
              </term>
              <description>
                <para>HTTPS access is permitted using the origin port.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Security.Policy.NetCodeGroup" /> class.</para>
        </summary>
        <param name="membershipCondition">
          <attribution license="cc4" from="Microsoft" modified="false" />A membership condition that tests evidence to determine whether this code group applies code access security policy. </param>
      </Docs>
    </Member>
    <Member MemberName="AbsentOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AbsentOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AbsentOriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When calling the <see cref="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" /> method, you specify a scheme and an associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> object. Any <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects that you add to the <see cref="T:System.Security.Policy.NetCodeGroup" /> using <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <see cref="T:System.Security.Policy.NetCodeGroup" /> object.</para>
          <para>To specify the <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <see cref="T:System.Security.Policy.NetCodeGroup" /> object, use the <see cref="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" /> value. </para>
          <para>The value of the <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> field is an empty string ("").</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AddConnectAccess">
      <MemberSignature Language="C#" Value="public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConnectAccess(string originScheme, class System.Security.Policy.CodeConnectAccess connectAccess) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originScheme" Type="System.String" />
        <Parameter Name="connectAccess" Type="System.Security.Policy.CodeConnectAccess" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>You can add multiple <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects for the same <paramref name="origin scheme" />. If an <paramref name="origin scheme" /> already has one or more associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects, specifying null for <paramref name="connectAccess" /> has no effect. If the origin scheme does not have associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects, specifying null for <paramref name="connectAccess" /> prevents code with an origin scheme that matches <paramref name="originScheme" /> from accessing its origin server.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds the specified connection access to the current code group.</para>
        </summary>
        <param name="originScheme">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.String" /> containing the scheme to match against the code's scheme.</param>
        <param name="connectAccess">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Security.Policy.CodeConnectAccess" /> that specifies the scheme and port code can use to connect back to its origin server.</param>
      </Docs>
    </Member>
    <Member MemberName="AnyOtherOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyOtherOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyOtherOriginScheme" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When calling the <see cref="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" /> method, you specify a scheme and an associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> object. You can use the value of the <see cref="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" /> field to specify the <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <see cref="T:System.Security.Policy.NetCodeGroup" /> object. </para>
          <para>The <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects specified with the <see cref="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" /> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <see cref="T:System.Security.Policy.NetCodeGroup" /> object.</para>
          <para>To specify the <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> value.</para>
          <para>The value of the <see cref="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" /> field is "*".</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Contains a value used to specify any other unspecified origin scheme.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets a string representation of the attributes of the policy statement for the code group.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Makes a deep copy of the current code group.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An equivalent copy of the current code group, including its membership conditions and child code groups.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The following data are used to determine the equality of two <see cref="T:System.Security.Policy.NetCodeGroup" /> objects:</para>
          <list type="bullet">
            <item>
              <para>The <see cref="P:System.Security.Policy.CodeGroup.Name" /> and <see cref="P:System.Security.Policy.CodeGroup.Description" /> properties.</para>
            </item>
            <item>
              <para>The <see cref="P:System.Security.Policy.CodeGroup.MembershipCondition" /> property.</para>
            </item>
            <item>
              <para>The set of origin schemes and the associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects. </para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Determines whether the specified code group is equivalent to the current code group.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the specified code group is equivalent to the current code group; otherwise, false.</para>
        </returns>
        <param name="o">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Security.Policy.NetCodeGroup" /> object to compare with the current code group.</param>
      </Docs>
    </Member>
    <Member MemberName="GetConnectAccessRules">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry[] GetConnectAccessRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.DictionaryEntry[] GetConnectAccessRules() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>In each dictionary entry, the <see cref="P:System.Collections.DictionaryEntry.Key" /> property value is the origin scheme, and the <see cref="P:System.Collections.DictionaryEntry.Value" /> property value is the array of associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects. If there are no associated <see cref="T:System.Security.Policy.CodeConnectAccess" /> objects, <see cref="P:System.Collections.DictionaryEntry.Value" /> returns an empty array.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the connection access information for the current code group.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Collections.DictionaryEntry" /> array containing connection access information.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the logic to use for merging groups.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the name of the <see cref="T:System.Security.NamedPermissionSet" /> for the code group.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ResetConnectAccess">
      <MemberSignature Language="C#" Value="public void ResetConnectAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetConnectAccess() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Use this method to remove the system-supplied default connection access rules.</para>
          <para>The default rules are shown in the following table.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Scheme</para>
                </term>
                <description>
                  <para>Rule</para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>file</para>
              </term>
              <description>
                <para>No connection access to the origin server is permitted.</para>
              </description>
            </item>
            <item>
              <term>
                <para>http</para>
              </term>
              <description>
                <para>HTTP and HTTPS access is permitted using the origin port.</para>
              </description>
            </item>
            <item>
              <term>
                <para>https</para>
              </term>
              <description>
                <para>HTTPS access is permitted using the origin port.</para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Removes all connection access information for the current code group.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</para>
          <para>The operation of this method is as follows: </para>
          <para>If the membership condition does not match the specified evidence, return null; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not null, return that policy statement. If no child code group matched, return P (the parent's policy statement).</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Resolves policy for the code group and its descendants for a set of evidence.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Security.Policy.PolicyStatement" /> that consists of the permissions granted by the code group with optional attributes, or null if the code group does not apply (the membership condition does not match the specified evidence).</para>
        </returns>
        <param name="evidence">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Security.Policy.Evidence" /> for the assembly. </param>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Resolves matching code groups.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The complete set of code groups that were matched by the evidence.</para>
        </returns>
        <param name="evidence">
          <attribution license="cc4" from="Microsoft" modified="false" />The evidence for the assembly. </param>
      </Docs>
    </Member>
  </Members>
</Type>