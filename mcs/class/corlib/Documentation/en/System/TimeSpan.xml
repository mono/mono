<?xml version="1.0" encoding="utf-8"?>
<Type Name="TimeSpan" FullName="System.TimeSpan" FullNameSP="System_TimeSpan" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sequential sealed serializable TimeSpan extends System.ValueType implements System.IComparable" />
  <TypeSignature Language="C#" Value="public struct TimeSpan : IComparable, IComparable&lt;TimeSpan&gt;, IEquatable&lt;TimeSpan&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit TimeSpan extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.TimeSpan&gt;, class System.IEquatable`1&lt;valuetype System.TimeSpan&gt;, class System.IFormattable" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeSpan&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>A <see cref="T:System.TimeSpan" /> object represents a time interval (duration of time or elapsed time) that is measured as a positive or negative number of days, hours, minutes, seconds, and fractions of a second. The <see cref="T:System.TimeSpan" /> structure can also be used to represent the time of day, but only if the time is unrelated to a particular date. Otherwise, the <see cref="T:System.DateTime" /> or <see cref="T:System.DateTimeOffset" /> structure should be used instead. (For more information about using the <see cref="T:System.TimeSpan" /> structure to reflect the time of day, see <format type="text/html"><a href="07f17aad-3571-4014-9ef3-b695a86f3800">Choosing Between DateTime, DateTimeOffset, and TimeZoneInfo</a></format>.) </para>
      <para>The largest unit of time that the <see cref="T:System.TimeSpan" /> structure uses to measure duration is a day. Time intervals are measured in days for consistency, because the number of days in larger units of time, such as months and years, varies.</para>
      <para>The value of a <see cref="T:System.TimeSpan" /> object is the number of ticks that equal the represented time interval. A tick is equal to 100 nanoseconds, or one ten-millionth of a second. The value of a <see cref="T:System.TimeSpan" /> object can range from <see cref="F:System.TimeSpan.MinValue" /> to <see cref="F:System.TimeSpan.MaxValue" />.</para>
      <format type="text/html">
        <h2>Instantiating a TimeSpan Value</h2>
      </format>
      <para>You can instantiate a <see cref="T:System.TimeSpan" /> value in a number of ways:</para>
      <list type="bullet">
        <item>
          <para>By calling its implicit default constructor. This creates an object whose value is <see cref="F:System.TimeSpan.Zero" />, as the following example shows.</para>
          <para>code reference: System.TimeSpan.Class#2</para>
        </item>
        <item>
          <para>By calling one of its explicit constructors. The following example initializes a <see cref="T:System.TimeSpan" /> value to a specified number of hours, minutes, and seconds.</para>
          <para>code reference: System.TimeSpan.Class#3</para>
        </item>
        <item>
          <para>By calling a method or performing an operation that returns a <see cref="T:System.TimeSpan" /> value. For example, you can instantiate a <see cref="T:System.TimeSpan" /> value that represents the interval between two date and time values, as the following example shows.</para>
          <para>code reference: System.TimeSpan.Class#4</para>
          <para>You can also initialize a <see cref="T:System.TimeSpan" /> object to a zero time value in this way, as the following example shows.</para>
          <para>code reference: System.TimeSpan.Class#6</para>
          <para>
            <see cref="T:System.TimeSpan" /> values are returned by arithmetic operators and methods of the <see cref="T:System.DateTime" />, <see cref="T:System.DateTimeOffset" />, and <see cref="T:System.TimeSpan" /> structures. </para>
        </item>
        <item>
          <para>By parsing the string representation of a <see cref="T:System.TimeSpan" /> value. You can use the <see cref="M:System.TimeSpan.Parse(System.String)" /> and <see cref="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)" /> methods to convert strings that contain time intervals to <see cref="T:System.TimeSpan" /> values. The following example uses the <see cref="M:System.TimeSpan.Parse(System.String)" /> method to convert an array of strings to <see cref="T:System.TimeSpan" /> values. </para>
          <para>code reference: System.TimeSpan.Class#5</para>
          <para>In addition, you can define the precise format of the input string to be parsed and converted to a <see cref="T:System.TimeSpan" /> value by calling the <see cref="Overload:System.TimeSpan.ParseExact" /> or <see cref="Overload:System.TimeSpan.TryParseExact" /> method.</para>
        </item>
      </list>
      <format type="text/html">
        <h2>Performing Operations on TimeSpan Values</h2>
      </format>
      <para>You can add and subtract time durations either by using the <see cref="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" /> and <see cref="M:System.TimeSpan.op_Subtraction(System.TimeSpan,System.TimeSpan)" /> operators, or by calling the <see cref="M:System.TimeSpan.Add(System.TimeSpan)" /> and <see cref="M:System.TimeSpan.Subtract(System.TimeSpan)" /> methods. You can also compare two time durations by calling the <see cref="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)" />, <see cref="Overload:System.TimeSpan.CompareTo" />, and <see cref="Overload:System.TimeSpan.Equals" /> methods. The <see cref="T:System.TimeSpan" /> class also includes the <see cref="M:System.TimeSpan.Duration" /> and <see cref="M:System.TimeSpan.Negate" /> methods, which convert time intervals to positive and negative values, </para>
      <para>The range of <see cref="T:System.TimeSpan" /> values is <see cref="F:System.TimeSpan.MinValue" /> to <see cref="F:System.TimeSpan.MaxValue" />.</para>
      <format type="text/html">
        <h2>Formatting a TimeSpan Value</h2>
      </format>
      <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. That is, a time interval consists of a positive or negative number of days without a time of day, or a number of days with a time of day, or only a time of day. </para>
      <para>Beginning with the net_v40_long, the <see cref="T:System.TimeSpan" /> structure supports culture-sensitive formatting through the overloads of its <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> method, which converts a <see cref="T:System.TimeSpan" /> value to its string representation. The default <see cref="M:System.TimeSpan.ToString" /> method returns a time interval by using an invariant format that is identical to its return value in previous versions of the .NET Framework. The <see cref="M:System.TimeSpan.ToString(System.String)" /> overload lets you specify a format string that defines the string representation of the time interval. The <see cref="M:System.TimeSpan.ToString(System.String,System.IFormatProvider)" /> overload lets you specify a format string and the culture whose formatting conventions are used to create the string representation of the time interval. <see cref="T:System.TimeSpan" /> supports both standard and custom format strings. (For more information, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>.) However, only standard format strings are culture-sensitive.</para>
      <format type="text/html">
        <h2>Restoring Legacy TimeSpan Formatting</h2>
      </format>
      <para>In some cases, code that successfully formats <see cref="T:System.TimeSpan" /> values in net_v35_short and earlier versions fails in net_v40_short. This is most common in code that calls a <format type="text/html"><a href="87b7d528-73f6-43c6-b71a-f23043039a49">composite formatting</a></format> method to format a <see cref="T:System.TimeSpan" /> value with a format string. The following example successfully formats a <see cref="T:System.TimeSpan" /> value in net_v35_short and earlier versions, but throws an exception in net_v40_short and later versions. Note that it attempts to format a <see cref="T:System.TimeSpan" /> value by using an unsupported format specifier, which is ignored in net_v35_short and earlier versions.</para>
      <para>code reference: System.TimeSpan.Class.Legacy#1</para>
      <para>If you cannot modify the code, you can restore the legacy formatting of <see cref="T:System.TimeSpan" /> values in one of the following ways:</para>
      <list type="bullet">
        <item>
          <para>By creating a configuration file that contains the <format type="text/html"><a href="865e7207-d050-4442-b574-57ea29d5e2d6">&lt;TimeSpan_LegacyFormatMode&gt; element</a></format>. Setting this element's enabled attribute to true restores legacy <see cref="T:System.TimeSpan" /> formatting on a per-application basis.</para>
        </item>
        <item>
          <para>By setting the "NetFx40_TimeSpanLegacyFormatMode" compatibility switch when you create an application domain. This enables legacy <see cref="T:System.TimeSpan" /> formatting on a per-application-domain basis. The following example creates an application domain that uses legacy <see cref="T:System.TimeSpan" /> formatting. </para>
          <para>code reference: System.TimeSpan.Class.AppDomain#1</para>
          <para>When the following code executes in the new application domain, it reverts to legacy <see cref="T:System.TimeSpan" /> formatting behavior.</para>
          <para>code reference: System.TimeSpan.Class.AppDomain#2</para>
        </item>
      </list>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents a time interval.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(int64 ticks)" />
      <MemberSignature Language="C#" Value="public TimeSpan (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to the specified number of ticks.</para>
        </summary>
        <param name="ticks">
          <attribution license="cc4" from="Microsoft" modified="false" />A time period expressed in 100-nanosecond units. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(int32 hours, int32 minutes, int32 seconds)" />
      <MemberSignature Language="C#" Value="public TimeSpan (int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The specified <paramref name="hours" />, <paramref name="minutes" />, and <paramref name="seconds" /> are converted to ticks, and that value initializes this instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of hours, minutes, and seconds.</para>
        </summary>
        <param name="hours">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of hours. </param>
        <param name="minutes">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of minutes. </param>
        <param name="seconds">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of seconds. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds)" />
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The specified <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, and <paramref name="seconds" /> are converted to ticks, and that value initializes this instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, and seconds.</para>
        </summary>
        <param name="days">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of days. </param>
        <param name="hours">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of hours. </param>
        <param name="minutes">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of minutes. </param>
        <param name="seconds">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of seconds. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds)" />
      <MemberSignature Language="C#" Value="public TimeSpan (int days, int hours, int minutes, int seconds, int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 days, int32 hours, int32 minutes, int32 seconds, int32 milliseconds) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="days" Type="System.Int32" />
        <Parameter Name="hours" Type="System.Int32" />
        <Parameter Name="minutes" Type="System.Int32" />
        <Parameter Name="seconds" Type="System.Int32" />
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify a <see cref="T:System.TimeSpan" /> value less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The specified <paramref name="days" />, <paramref name="hours" />, <paramref name="minutes" />, <paramref name="seconds" />, and <paramref name="milliseconds" /> are converted to ticks, and that value initializes this instance.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.TimeSpan" /> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</para>
        </summary>
        <param name="days">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of days. </param>
        <param name="hours">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of hours. </param>
        <param name="minutes">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of minutes. </param>
        <param name="seconds">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of seconds. </param>
        <param name="milliseconds">
          <attribution license="cc4" from="Microsoft" modified="false" />Number of milliseconds. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts)" />
      <MemberSignature Language="C#" Value="public TimeSpan Add (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Add(valuetype System.TimeSpan ts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The sum of the value of the current instance and the value of <paramref name="ts" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <example>
          <para>This example demonstrates the <see cref="M:System.TimeSpan.Add(System.TimeSpan)" /> method.</para>
          <code lang="C#">using System;
public class TimeSpanAddExample {
   public static void Main() {
      TimeSpan ts = new TimeSpan(Int32.MaxValue);
      Console.WriteLine("The value of the timespan 'ts' is {0}", ts);
      Console.WriteLine("ts.Add(ts) = {0}", ts.Add(ts));
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>The value of the timespan 'ts' is 00:03:34.7483647</para>
            <para>ts.Add(ts) = 00:07:09.4967294</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value must be between <see cref="F:System.TimeSpan.MinValue" /> and <see cref="F:System.TimeSpan.MaxValue" />; otherwise, an exception is thrown.</para>
          <para>The return value is a new <see cref="T:System.TimeSpan" />; the original <see cref="T:System.TimeSpan" /> is not modified.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a new <see cref="T:System.TimeSpan" /> object whose value is the sum of the specified <see cref="T:System.TimeSpan" /> object and this instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new object that represents the value of this instance plus the value of <paramref name="ts" />.</para>
        </returns>
        <param name="ts">
          <attribution license="cc4" from="Microsoft" modified="false" />The time interval to add.</param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static int Compare (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compares two <see cref="T:System.TimeSpan" /> values and returns an integer that indicates whether the first value is shorter than, equal to, or longer than the second value.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>One of the following values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>-1 </para>
              </term>
              <description>
                <para>
                  <paramref name="t1" /> is shorter than <paramref name="t2" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>0 </para>
              </term>
              <description>
                <para>
                  <paramref name="t1" /> is equal to <paramref name="t2" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>1 </para>
              </term>
              <description>
                <para>
                  <paramref name="t1" /> is longer than <paramref name="t2" />. </para>
              </description>
            </item>
          </list>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="ILASM" Value=".method public final hidebysig virtual int32 CompareTo(object value)" />
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="value" /> is not a <see cref="T:System.TimeSpan" /> and is not a null reference.</para>
        </exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Any instance of <see cref="T:System.TimeSpan" />, regardless of its value, is considered greater than null.</para>
          <para>The <paramref name="value" /> parameter must be an instance of <see cref="T:System.TimeSpan" /> or null; otherwise, an exception is thrown.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compares this instance to a specified object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the specified object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>One of the following values.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>-1 </para>
              </term>
              <description>
                <para>This instance is shorter than <paramref name="value" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>0 </para>
              </term>
              <description>
                <para>This instance is equal to <paramref name="value" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>1 </para>
              </term>
              <description>
                <para>This instance is longer than <paramref name="value" />.</para>
                <para>-or- </para>
                <para>
                  <paramref name="value" /> is null. </para>
              </description>
            </item>
          </list>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />An object to compare, or null. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.TimeSpan value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method implements the <see cref="T:System.IComparable`1" /> interface and performs slightly better than the <see cref="M:System.TimeSpan.CompareTo(System.Object)" /> method because it does not have to convert the <paramref name="value" /> parameter to an object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Compares this instance to a specified <see cref="T:System.TimeSpan" /> object and returns an integer that indicates whether this instance is shorter than, equal to, or longer than the <see cref="T:System.TimeSpan" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A signed number indicating the relative values of this instance and <paramref name="value" />.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Value </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>A negative integer </para>
              </term>
              <description>
                <para>This instance is shorter than <paramref name="value" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>Zero </para>
              </term>
              <description>
                <para>This instance is equal to <paramref name="value" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>A positive integer </para>
              </term>
              <description>
                <para>This instance is longer than <paramref name="value" />. </para>
              </description>
            </item>
          </list>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />An object to compare to this instance.</param>
      </Docs>
    </Member>
    <Member MemberName="Days">
      <MemberSignature Language="ILASM" Value=".property int32 Days { public hidebysig specialname instance int32 get_Days() }" />
      <MemberSignature Language="C#" Value="public int Days { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Days" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> represents the days component of the current instance. <block subset="none" type="note">See <see cref="M:System.TimeSpan.ToString" /> for a more detailed description of the days
   component.</block></para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.Days" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanPropertiesExampleOne {
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12+3456789);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("Days: {0}", ts.Days );
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40.3456789</para>
            <para>Days: 11</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <see cref="P:System.TimeSpan.Days" /> property is the day component, d.</para>
          <para>The <see cref="P:System.TimeSpan.Days" /> property represents whole days, whereas the <see cref="P:System.TimeSpan.TotalDays" /> property represents whole and fractional days. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the days component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance valuetype System.TimeSpan Duration()" />
      <MemberSignature Language="C#" Value="public TimeSpan Duration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Duration() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException">The value of the current instance is <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <example>
          <para>The following example demonstrates the <see cref="M:System.TimeSpan.Duration" /> method.</para>
          <code lang="C#">using System;
public class TimeSpanDurationExample {
   public static void Main() {
      TimeSpan ts = new TimeSpan(Int32.MinValue);
      Console.Write("The absolute value of TimeSpan {0} ", ts);
      Console.WriteLine("is {0}", ts.Duration());
   }
}
</code>
          <para>The output is</para>
          <para>
            <c>The absolute
   value of TimeSpan -00:03:34.7483648 is 00:03:34.7483648</c>
          </para>
        </example>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a new <see cref="T:System.TimeSpan" /> object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new object whose value is the absolute value of the current <see cref="T:System.TimeSpan" /> object.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual bool Equals(object value)" />
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <para>
            <block subset="none" type="note">This method
      overrides <see cref="M:System.Object.Equals(System.Object)" />.</block>
          </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether this instance is equal to a specified object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="value" /> is a <see cref="T:System.TimeSpan" /> object that represents the same time interval as the current <see cref="T:System.TimeSpan" /> structure; otherwise, false.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />An object to compare with this instance. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeSpan obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.TimeSpan obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method implements the <see cref="T:System.IEquatable`1" /> interface, and performs slightly better than <see cref="M:System.TimeSpan.Equals(System.Object)" /> because it does not have to convert the the <paramref name="obj" /> parameter to an object.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value indicating whether this instance is equal to a specified <see cref="T:System.TimeSpan" /> object.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="obj" /> represents the same time interval as this instance; otherwise, false.</para>
        </returns>
        <param name="obj">
          <attribution license="cc4" from="Microsoft" modified="false" />An object to compare with this instance. </param>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool Equals (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a value that indicates whether two specified instances of <see cref="T:System.TimeSpan" /> are equal.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="FromDays">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromDays(float64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromDays(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The <see cref="T:System.TimeSpan" /> represented by <paramref name="value" /> is greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="value" /> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <see cref="T:System.TimeSpan" />. Therefore, <paramref name="value" /> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <see cref="T:System.Double" /> data type, this conversion can cause an <see cref="T:System.OverflowException" /> for values that are near to but still in the range of either <see cref="F:System.TimeSpan.MinValue" /> or <see cref="F:System.TimeSpan.MaxValue" />. For example, this causes an <see cref="T:System.OverflowException" /> in the following attempt to instantiate a <see cref="T:System.TimeSpan" /> object.</para>
          <para>code reference: System.TimeSpan.FromMinutes#2</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of days, where the specification is accurate to the nearest millisecond.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of days, accurate to the nearest millisecond. </param>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="FromHours">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromHours(float64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromHours(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The <see cref="T:System.TimeSpan" /> represented by <paramref name="value" /> is greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="value" /> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <see cref="T:System.TimeSpan" />. Therefore, <paramref name="value" /> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <see cref="T:System.Double" /> data type, this conversion can generate an <see cref="T:System.OverflowException" /> for values that are near to but still in the range of either <see cref="F:System.TimeSpan.MinValue" /> or <see cref="F:System.TimeSpan.MaxValue" />. For example, this causes an <see cref="T:System.OverflowException" /> in the following attempt to instantiate a <see cref="T:System.TimeSpan" /> object.</para>
          <para>code reference: System.TimeSpan.FromMinutes#3</para>
          <para />
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of hours accurate to the nearest millisecond. </param>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="FromMilliseconds">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromMilliseconds(float64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMilliseconds(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The <see cref="T:System.TimeSpan" /> represented by <paramref name="value" /> is greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="value" /> parameter is converted to ticks, and that number of ticks is used to initialize the new <see cref="T:System.TimeSpan" />. Therefore, <paramref name="value" /> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <see cref="T:System.Double" /> data type, this conversion can generate an <see cref="T:System.OverflowException" /> for values that are near to but still in the range of either <see cref="F:System.TimeSpan.MinValue" /> or <see cref="F:System.TimeSpan.MaxValue" />. For example, this causes an <see cref="T:System.OverflowException" /> in the following attempt to instantiate a <see cref="T:System.TimeSpan" /> object.</para>
          <para>code reference: System.TimeSpan.FromMinutes#4</para>
          <para />
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of milliseconds.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of milliseconds. </param>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="FromMinutes">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromMinutes(float64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromMinutes(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The <see cref="T:System.TimeSpan" /> represented by <paramref name="value" /> is greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="value" /> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to initialize the new <see cref="T:System.TimeSpan" />. Therefore, <paramref name="value" /> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <see cref="T:System.Double" /> data type, this conversion can generate an <see cref="T:System.OverflowException" /> for values that are near to but still in the range of either <see cref="F:System.TimeSpan.MinValue" /> or <see cref="F:System.TimeSpan.MaxValue" />. For example, this causes an <see cref="T:System.OverflowException" /> in the following attempt to instantiate a <see cref="T:System.TimeSpan" /> object.</para>
          <para />
          <para>code reference: System.TimeSpan.FromMinutes#1</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of minutes, accurate to the nearest millisecond. </param>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="FromSeconds">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromSeconds(float64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromSeconds(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The <see cref="T:System.TimeSpan" /> represented by <paramref name="value" /> is greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> is equal to <see cref="F:System.Double.NaN" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="value" /> parameter is converted to milliseconds, which is converted to ticks, and that number of ticks is used to intialize the new <see cref="T:System.TimeSpan" />. Therefore, <paramref name="value" /> will only be considered accurate to the nearest millisecond. Note that, because of the loss of precision of the <see cref="T:System.Double" /> data type, this can generate an <see cref="T:System.OverflowException" /> for values that are near but still in the range of either  <see cref="F:System.TimeSpan.MinValue" /> or <see cref="F:System.TimeSpan.MaxValue" />, This is the cause of an <see cref="T:System.OverflowException" />, for example, in the following attempt to instantiate a <see cref="T:System.TimeSpan" /> object.</para>
          <para>code reference: System.TimeSpan.FromMinutes#5</para>
          <para />
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of seconds, accurate to the nearest millisecond. </param>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="FromTicks">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan FromTicks(int64 value)" />
      <MemberSignature Language="C#" Value="public static TimeSpan FromTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan FromTicks(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This is a convenience method with the same behavior as the <see cref="M:System.TimeSpan.#ctor(System.Int64)" /> constructor. A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> that represents a specified time, where the specification is in units of ticks.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that represents <paramref name="value" />.</para>
        </returns>
        <param name="value">
          <attribution license="cc4" from="Microsoft" modified="false" />A number of ticks that represent a time. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual int32 GetHashCode()" />
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Two <see cref="T:System.TimeSpan" /> objects might have the same hash code even though they represent different time values.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a hash code for this instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A 32-bit signed integer hash code.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Hours">
      <MemberSignature Language="ILASM" Value=".property int32 Hours { public hidebysig specialname instance int32 get_Hours() }" />
      <MemberSignature Language="C#" Value="public int Hours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> between 0 and 23 inclusive, that represents
   the hours component of the current instance. <block subset="none" type="note">See <see cref="M:System.TimeSpan.ToString" /> for a
   more detailed description of the hours component.</block></para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.Hours" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanPropertiesExampleOne {
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12+3456789);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("Hours: {0}", ts.Hours );
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40.3456789</para>
            <para>Hours: 13</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <see cref="P:System.TimeSpan.Hours" /> property is the hours component, hh.</para>
          <para>The <see cref="P:System.TimeSpan.Hours" /> property represents whole hours, whereas the <see cref="P:System.TimeSpan.TotalHours" /> property represents whole and fractional hours. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the hours component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="ILASM" Value=".field public static initOnly valuetype System.TimeSpan MaxValue" />
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this field is equivalent to <see cref="F:System.Int64.MaxValue" /> ticks. The string representation of this value is positive 10675199.02:48:05.4775807, or slightly more than 10,675,199 days.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the maximum <see cref="T:System.TimeSpan" /> value. This field is read-only.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Milliseconds">
      <MemberSignature Language="ILASM" Value=".property int32 Milliseconds { public hidebysig specialname instance int32 get_Milliseconds() }" />
      <MemberSignature Language="C#" Value="public int Milliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Milliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para> A <see cref="T:System.Int32" /> between 0 and 999 inclusive, that represents
   the fractional seconds component of the current instance converted to
   milliseconds. <block subset="none" type="note">See <see cref="M:System.TimeSpan.ToString" /> for a more
   detailed description of the fractional seconds component.</block></para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.Milliseconds" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanPropertiesExampleOne {
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12+3456789);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("Milliseconds: {0}", ts.Milliseconds );
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40.3456789</para>
            <para>Milliseconds: 345</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <see cref="P:System.TimeSpan.Milliseconds" /> property is the fractional second component, ff.</para>
          <para>The <see cref="P:System.TimeSpan.Milliseconds" /> property represents whole milliseconds, whereas the <see cref="P:System.TimeSpan.TotalMilliseconds" /> property represents whole and fractional milliseconds. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the milliseconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Minutes">
      <MemberSignature Language="ILASM" Value=".property int32 Minutes { public hidebysig specialname instance int32 get_Minutes() }" />
      <MemberSignature Language="C#" Value="public int Minutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> between 0 and 59 inclusive, that represents
   the minutes component of the current instance. <block subset="none" type="note">See <see cref="M:System.TimeSpan.ToString" /> for
   a more detailed description of the minutes component.</block></para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.Minutes" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanPropertiesExampleOne {
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12+3456789);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("Minutes: {0}", ts.Minutes );
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40.3456789</para>
            <para>Minutes: 46</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <see cref="P:System.TimeSpan.Minutes" /> property is the minute component, mm.</para>
          <para>The <see cref="P:System.TimeSpan.Minutes" /> property represents whole minutes, whereas the <see cref="P:System.TimeSpan.TotalMinutes" /> property represents whole and fractional minutes. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the minutes component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="ILASM" Value=".field public static initOnly valuetype System.TimeSpan MinValue" />
      <MemberSignature Language="C#" Value="public static readonly TimeSpan MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this field is equivalent to <see cref="F:System.Int64.MinValue" /> ticks. The string representation of this value is negative 10675199.02:48:05.4775808, or slightly more than negative 10,675,199 days.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the minimum <see cref="T:System.TimeSpan" /> value. This field is read-only.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance valuetype System.TimeSpan Negate()" />
      <MemberSignature Language="C#" Value="public TimeSpan Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Negate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException">The value of the current instance is <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a new <see cref="T:System.TimeSpan" /> object whose value is the negated value of this instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new object with the same numeric value as this instance, but with the opposite sign.</para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static TimeSpan op_Addition (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Addition(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The sum of <paramref name="t1" /> and <paramref name="t2" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.TimeSpan.op_Addition(System.TimeSpan,System.TimeSpan)" /> method defines the addition operator for <see cref="T:System.TimeSpan" /> values. It enables code such as the following:</para>
          <para>code reference: System.TimeSpan.Operators#1</para>
          <para>Languages that do not support custom operators can call the <see cref="M:System.TimeSpan.Add(System.TimeSpan)" /> method instead.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Adds two specified <see cref="T:System.TimeSpan" /> instances.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object whose value is the sum of the values of <paramref name="t1" /> and <paramref name="t2" />.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to add. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to add.</param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_Equality (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether two <see cref="T:System.TimeSpan" /> instances are equal.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the values of <paramref name="t1" /> and <paramref name="t2" /> are equal; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_GreaterThan (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than another specified <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the value of <paramref name="t1" /> is greater than the value of <paramref name="t2" />; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_GreaterThanOrEqual (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether a specified <see cref="T:System.TimeSpan" /> is greater than or equal to another specified <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the value of <paramref name="t1" /> is greater than or equal to the value of <paramref name="t2" />; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare.</param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare.</param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_Inequality (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether two <see cref="T:System.TimeSpan" /> instances are not equal.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the values of <paramref name="t1" /> and <paramref name="t2" /> are not equal; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare.</param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare.</param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_LessThan (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than another specified <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the value of <paramref name="t1" /> is less than the value of <paramref name="t2" />; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare.</param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static bool op_LessThanOrEqual (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Indicates whether a specified <see cref="T:System.TimeSpan" /> is less than or equal to another specified <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the value of <paramref name="t1" /> is less than or equal to the value of <paramref name="t2" />; otherwise, false.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The first time interval to compare. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The second time interval to compare. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2)" />
      <MemberSignature Language="C#" Value="public static TimeSpan op_Subtraction (TimeSpan t1, TimeSpan t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.TimeSpan t1, valuetype System.TimeSpan t2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.TimeSpan" />
        <Parameter Name="t2" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException">The value of <paramref name="t2" /> subtracted from <paramref name="t1" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Subtracts a specified <see cref="T:System.TimeSpan" /> from another specified <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object whose value is the result of the value of <paramref name="t1" /> minus the value of <paramref name="t2" />.</para>
        </returns>
        <param name="t1">
          <attribution license="cc4" from="Microsoft" modified="false" />The minuend. </param>
        <param name="t2">
          <attribution license="cc4" from="Microsoft" modified="false" />The subtrahend. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t)" />
      <MemberSignature Language="C#" Value="public static TimeSpan op_UnaryNegation (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryNegation(valuetype System.TimeSpan t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException">
          <paramref name="t" /> equals <see cref="F:System.TimeSpan.MinValue" />.</exception>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a <see cref="T:System.TimeSpan" /> whose value is the negated value of the specified instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that has the same numeric value as this instance, but the opposite sign.</para>
        </returns>
        <param name="t">
          <attribution license="cc4" from="Microsoft" modified="false" />The time interval to be negated. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t)" />
      <MemberSignature Language="C#" Value="public static TimeSpan op_UnaryPlus (TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_UnaryPlus(valuetype System.TimeSpan t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <remarks>
          <para>This method returns <see cref="T:System.TimeSpan" /><paramref name="t" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns the specified instance of <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The time interval specified by <paramref name="t" />.</para>
        </returns>
        <param name="t">
          <attribution license="cc4" from="Microsoft" modified="false" />The time interval to return. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static valuetype System.TimeSpan Parse(string s)" />
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string s) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> is a null reference.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="s" /> is in an invalid format.</exception>
        <exception cref="T:System.OverflowException">
          <para>
            <paramref name="s" /> represents a number greater than <see cref="F:System.TimeSpan.MaxValue" /> or less than <see cref="F:System.TimeSpan.MinValue" />.</para>
          <para>-or-</para>
          <para>At least one of the hours, minutes, or seconds components is outside its valid range.</para>
        </exception>
        <example>
          <para>This example demonstrates parsing a string to obtain a 
   <see cref="T:System.TimeSpan" />.</para>
          <code lang="C#">using System;
public class TimeSpanParseExample {
   public static void Main() {
      String str = "    -5.12:34:56.789     ";
      TimeSpan ts = TimeSpan.Parse(str);
      Console.WriteLine(@"The string ""{0}""", str); 
      Console.WriteLine("parses to TimeSpan {0}", ts);
   }
}
   </code>
          <para>The output is</para>
          <code>
The string "    -5.12:34:56.789     "
parses to TimeSpan -5.12:34:56.7890000
 </code>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="s" /> parameter contains a time interval specification in the form: </para>
          <para>[ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]</para>
          <para>Elements in square brackets ([ and ]) are optional. One selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Element</para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>ws</para>
              </term>
              <description>
                <para>Optional white space. </para>
              </description>
            </item>
            <item>
              <term>
                <para>-</para>
              </term>
              <description>
                <para>An optional minus sign, which indicates a negative <see cref="T:System.TimeSpan" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>d</para>
              </term>
              <description>
                <para>Days, ranging from 0 to 10675199.</para>
              </description>
            </item>
            <item>
              <term>
                <para>.</para>
              </term>
              <description>
                <para>A culture-sensitive symbol that separates days from hours. The invariant format uses a period (".") character.</para>
              </description>
            </item>
            <item>
              <term>
                <para>hh</para>
              </term>
              <description>
                <para>Hours, ranging from 0 to 23. </para>
              </description>
            </item>
            <item>
              <term>
                <para>:</para>
              </term>
              <description>
                <para>The culture-sensitive time separator symbol. The invariant format uses a colon (":") character.</para>
              </description>
            </item>
            <item>
              <term>
                <para>mm</para>
              </term>
              <description>
                <para>Minutes, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>ss</para>
              </term>
              <description>
                <para>Optional seconds, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>.</para>
              </term>
              <description>
                <para>A culture-sensitive symbol that separates seconds from fractions of a second. The invariant format uses a period (".") character.</para>
              </description>
            </item>
            <item>
              <term>
                <para>ff</para>
              </term>
              <description>
                <para>Optional fractional seconds, consisting of one to seven decimal digits. </para>
              </description>
            </item>
          </list>
          <para>The components of <paramref name="s" /> must collectively specify a time interval that is greater than or equal to <see cref="F:System.TimeSpan.MinValue" /> and less than or equal to <see cref="F:System.TimeSpan.MaxValue" />.</para>
          <para>The <see cref="M:System.TimeSpan.Parse(System.String)" /> method tries to parse <paramref name="s" /> by using each of the culture-specific formats for the current culture.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="s" />.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static TimeSpan Parse (string input, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan Parse(string input, class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="input" /> parameter contains a time interval specification in the form: </para>
          <para>[ws][-]{ d | [d.]hh:mm[:ss[.ff]] }[ws]</para>
          <para>Elements in square brackets ([ and ]) are optional; one selection from the list of alternatives enclosed in braces ({ and }) and separated by vertical bars (|) is required. The following table describes each element.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Element</para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>ws</para>
              </term>
              <description>
                <para>Optional white space. </para>
              </description>
            </item>
            <item>
              <term>
                <para>-</para>
              </term>
              <description>
                <para>An optional minus sign, which indicates a negative <see cref="T:System.TimeSpan" />. </para>
              </description>
            </item>
            <item>
              <term>
                <para>d</para>
              </term>
              <description>
                <para>Days, ranging from 0 to 10675199.</para>
              </description>
            </item>
            <item>
              <term>
                <para>.</para>
              </term>
              <description>
                <para>A culture-sensitive symbol that separates days from hours. The default value is a period (".") character.</para>
              </description>
            </item>
            <item>
              <term>
                <para>hh</para>
              </term>
              <description>
                <para>Hours, ranging from 0 to 23. </para>
              </description>
            </item>
            <item>
              <term>
                <para>:</para>
              </term>
              <description>
                <para>The culture-sensitive time separator symbol.</para>
              </description>
            </item>
            <item>
              <term>
                <para>mm</para>
              </term>
              <description>
                <para>Minutes, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>ss</para>
              </term>
              <description>
                <para>Optional seconds, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>.</para>
              </term>
              <description>
                <para>A culture-sensitive symbol that separates seconds from fractions of a second. The default value is a period (".") character.</para>
              </description>
            </item>
            <item>
              <term>
                <para>ff</para>
              </term>
              <description>
                <para>Optional fractional seconds, consisting of one to seven decimal digits. </para>
              </description>
            </item>
          </list>
          <para>The components of <paramref name="input" /> must collectively specify a time interval that is greater than or equal to <see cref="F:System.TimeSpan.MinValue" /> and less than or equal to <see cref="F:System.TimeSpan.MaxValue" />.</para>
          <para>The <see cref="M:System.TimeSpan.Parse(System.String)" /> method tries to parse <paramref name="input" /> by using each of the culture-specific formats for the culture specified by <paramref name="formatProvider" />.</para>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object returned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified culture-specific format information.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formatProvider" />.</para>
        </returns>
        <param name="input">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that supplies culture-specific formatting information.</param>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method parses the string representation of a time interval, which must be in the format defined by the <paramref name="format" /> parameter, except that leading and trailing white-space characters are ignored. Because <paramref name="input" /> must conform to the format of <paramref name="format" /> exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <see cref="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.TimeSpan@)" /> method instead.</para>
          <para>The <paramref name="format" /> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <paramref name="input" />. For more information about valid format strings, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>. </para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method uses the conventions of the culture specified by the <paramref name="formatProvider" /> parameter only if <paramref name="format" /> is a standard <see cref="T:System.TimeSpan" /> format string whose value is either "g" or "G". The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</para>
          </block>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string if <paramref name="format" /> is a standard format string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object returned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</para>
        </returns>
        <param name="input">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert.</param>
        <param name="format">
          <attribution license="cc4" from="Microsoft" modified="false" />A standard or custom format string that defines the required format of <paramref name="input" />.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that provides culture-specific formatting information.</param>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method parses the string representation of a time interval, which must be in one of the formats defined by the <paramref name="formats" /> parameter, except that leading and trailing white-space characters are ignored. Because <paramref name="input" /> must exactly conform to one of the formats specified in <paramref name="formats" />, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <see cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.TimeSpan@)" /> method instead.</para>
          <para>The <paramref name="formats" /> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <paramref name="input" />. For more information about valid format strings, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>. <paramref name="input" /> must correspond exactly to a member of <paramref name="formats" /> for the parse operation to succeed. The parse operation attempts to match <paramref name="input" /> to each element in <paramref name="formats" /> starting with the first element in the array.</para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method uses the conventions of the culture specified by the <paramref name="formatProvider" /> parameter only if the format string used to parse <paramref name="input" /> is a standard <see cref="T:System.TimeSpan" /> format string whose value is either "g" or "G". The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</para>
          </block>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <paramref name="input" /> is a standard format string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object returned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified array of format strings and culture-specific format information. The format of the string representation must match one of the specified formats exactly.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" /> and <paramref name="formatProvider" />.</para>
        </returns>
        <param name="input">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert.</param>
        <param name="formats">
          <attribution license="cc4" from="Microsoft" modified="false" />A array of standard or custom format strings that defines the required format of <paramref name="input" />.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that provides culture-specific formatting information.</param>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles)" /> method parses the string representation of a time interval, which must be in the format defined by the <paramref name="format" /> parameter, except that leading and trailing white-space characters are ignored. Because <paramref name="input" /> must conform to the format of <paramref name="format" /> exactly, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <see cref="M:System.TimeSpan.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" /> method instead.</para>
          <para>The <paramref name="format" /> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <paramref name="input" />. For more information about valid format strings, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>. </para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method uses the conventions of the culture specified by the <paramref name="formatProvider" /> parameter only if <paramref name="format" /> is a standard <see cref="T:System.TimeSpan" /> format string whose value is either "g" or "G". The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</para>
          </block>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string if <paramref name="format" /> is a standard format string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object returned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used.</para>
          <para>The <paramref name="styles" /> parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether <paramref name="input" /> is interpreted as a negative time interval only if a negative sign is present (<see cref="F:System.Globalization.TimeSpanStyles.None" />), or whether it is always interpreted as a negative time interval (<see cref="F:System.Globalization.TimeSpanStyles.AssumeNegative" />). If <see cref="F:System.Globalization.TimeSpanStyles.AssumeNegative" /> is not used, <paramref name="format" /> must include a literal negative sign symbol (such as "\-") to successfully parse a negative time interval.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified format, culture-specific format information, and styles. The format of the string representation must match the specified format exactly.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="format" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</para>
        </returns>
        <param name="input">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert.</param>
        <param name="format">
          <attribution license="cc4" from="Microsoft" modified="false" />A standard or custom format string that defines the required format of <paramref name="input" />.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that provides culture-specific formatting information.</param>
        <param name="styles">
          <attribution license="cc4" from="Microsoft" modified="false" />A bitwise combination of enumeration values that defines the style elements that may be present in <paramref name="input" />.</param>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static TimeSpan ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles)" /> method parses the string representation of a time interval, which must be in one of the formats defined by the <paramref name="formats" /> parameter, except that leading and trailing white-space characters are ignored. Because <paramref name="input" /> must exactly conform to one of the formats specified in <paramref name="formats" />, you should always use exception handling when converting a string input by the user to a time interval. If you prefer not to use exception handling, you can call the <see cref="M:System.TimeSpan.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.TimeSpanStyles,System.TimeSpan@)" /> method instead.</para>
          <para>The <paramref name="formats" /> parameter is a string array whose elements consist of either a single standard format specifier, or one or more custom format specifiers that define the required format of <paramref name="input" />. For more information about valid format strings, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>. <paramref name="input" /> must correspond exactly to a member of <paramref name="formats" /> for the parse operation to succeed. The parse operation attempts to match <paramref name="input" /> to each element in <paramref name="formats" /> starting with the first element in the array.</para>
          <block subset="none" type="note">
            <para>The <see cref="M:System.TimeSpan.ParseExact(System.String,System.String,System.IFormatProvider)" /> method uses the conventions of the culture specified by the <paramref name="formatProvider" /> parameter only if the format string used to parse <paramref name="input" /> is a standard <see cref="T:System.TimeSpan" /> format string whose value is either "g" or "G". The "c", "t", and "T" standard format strings use the formatting conventions of the invariant culture. Custom format strings define the precise format of the input string and use literal characters to separate the components of a time interval.</para>
          </block>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string if the format string used to parse <paramref name="input" /> is a standard format string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object returned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used.</para>
          <para>The <paramref name="styles" /> parameter affects the interpretation of strings that are parsed using custom format strings. It determines whether <paramref name="input" /> is interpreted as a negative time interval only if a negative sign is present (<see cref="F:System.Globalization.TimeSpanStyles.None" />), or whether it is always interpreted as a negative time interval (<see cref="F:System.Globalization.TimeSpanStyles.AssumeNegative" />). If <see cref="F:System.Globalization.TimeSpanStyles.AssumeNegative" /> is not used, <paramref name="format" /> must include a literal negative sign symbol (such as "\-") to successfully parse a negative time interval. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the string representation of a time interval to its <see cref="T:System.TimeSpan" /> equivalent by using the specified formats, culture-specific format information, and styles. The format of the string representation must match one of the specified formats exactly. </para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A time interval that corresponds to <paramref name="input" />, as specified by <paramref name="formats" />, <paramref name="formatProvider" />, and <paramref name="styles" />.</para>
        </returns>
        <param name="input">
          <attribution license="cc4" from="Microsoft" modified="false" />A string that specifies the time interval to convert.</param>
        <param name="formats">
          <attribution license="cc4" from="Microsoft" modified="false" />A array of standard or custom format strings that define the required format of <paramref name="input" />.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that provides culture-specific formatting information.</param>
        <param name="styles">
          <attribution license="cc4" from="Microsoft" modified="false" />A bitwise combination of enumeration values that defines the style elements that may be present in input.</param>
      </Docs>
    </Member>
    <Member MemberName="Seconds">
      <MemberSignature Language="ILASM" Value=".property int32 Seconds { public hidebysig specialname instance int32 get_Seconds() }" />
      <MemberSignature Language="C#" Value="public int Seconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Seconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int32" /> between 0 and 59 inclusive, that represents
   the seconds component of the current instance. <block subset="none" type="note">See <see cref="M:System.TimeSpan.ToString" /> for
   a more detailed description of the seconds component.</block></para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.Seconds" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanPropertiesExampleOne {
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12+3456789);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("Seconds: {0}", ts.Seconds );
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40.3456789</para>
            <para>Seconds: 40</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> value can be represented as [-]d.hh:mm:ss.ff, where the optional minus sign indicates a negative time interval, the d component is days, hh is hours as measured on a 24-hour clock, mm is minutes, ss is seconds, and ff is fractions of a second. The value of the <see cref="P:System.TimeSpan.Seconds" /> property is the seconds component, ss.</para>
          <para>The <see cref="P:System.TimeSpan.Seconds" /> property represents whole seconds, whereas the <see cref="P:System.TimeSpan.TotalSeconds" /> property represents whole and fractional seconds. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the seconds component of the time interval represented by the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="ILASM" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts)" />
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (TimeSpan ts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.TimeSpan ts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ts" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <exception cref="T:System.OverflowException">The difference between the value of the current instance and <paramref name="ts" /> is less than <see cref="F:System.TimeSpan.MinValue" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The return value must be between <see cref="F:System.TimeSpan.MinValue" /> and <see cref="F:System.TimeSpan.MaxValue" />; otherwise, an exception is thrown.</para>
          <para>The return value is a new <see cref="T:System.TimeSpan" />; the original <see cref="T:System.TimeSpan" /> is not modified.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Returns a new <see cref="T:System.TimeSpan" /> object whose value is the difference between the specified <see cref="T:System.TimeSpan" /> object and this instance.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A new time interval whose value is the result of the value of this instance minus the value of <paramref name="ts" />.</para>
        </returns>
        <param name="ts">
          <attribution license="cc4" from="Microsoft" modified="false" />The time interval to be subtracted. </param>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="ILASM" Value=".property int64 Ticks { public hidebysig specialname instance int64 get_Ticks() }" />
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Int64" /> specifying the 
   number of ticks represented by the current instance.</para>
        </value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The smallest unit of time is the tick, which is equal to 100 nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond. The value of the <see cref="P:System.TimeSpan.Ticks" /> property can be negative or positive to represent a negative or positive time interval.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the number of ticks that represent the value of the current <see cref="T:System.TimeSpan" /> structure.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="TicksPerDay">
      <MemberSignature Language="ILASM" Value=".field public static literal int64 TicksPerDay = 864000000000" />
      <MemberSignature Language="C#" Value="public const long TicksPerDay = 864000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerDay = (864000000000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>864000000000</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this constant is 864 billion; that is, 864,000,000,000.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the number of ticks in 1 day. This field is constant.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="TicksPerHour">
      <MemberSignature Language="ILASM" Value=".field public static literal int64 TicksPerHour = 36000000000" />
      <MemberSignature Language="C#" Value="public const long TicksPerHour = 36000000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerHour = (36000000000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>36000000000</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this constant is 36 billion; that is, 36,000,000,000.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the number of ticks in 1 hour. This field is constant.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="TicksPerMillisecond">
      <MemberSignature Language="ILASM" Value=".field public static literal int64 TicksPerMillisecond = 10000" />
      <MemberSignature Language="C#" Value="public const long TicksPerMillisecond = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMillisecond = (10000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>10000</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this constant is 10 thousand; that is, 10,000.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the number of ticks in 1 millisecond. This field is constant.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="TicksPerMinute">
      <MemberSignature Language="ILASM" Value=".field public static literal int64 TicksPerMinute = 600000000" />
      <MemberSignature Language="C#" Value="public const long TicksPerMinute = 600000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerMinute = (600000000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>600000000</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this constant is 600 million; that is, 600,000,000.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the number of ticks in 1 minute. This field is constant.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="TicksPerSecond">
      <MemberSignature Language="ILASM" Value=".field public static literal int64 TicksPerSecond = 10000000" />
      <MemberSignature Language="C#" Value="public const long TicksPerSecond = 10000000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 TicksPerSecond = (10000000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>10000000</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of this constant is 10 million; that is, 10,000,000.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the number of ticks in 1 second.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual string ToString()" />
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <example>
          <para>This example demonstrates the <see cref="M:System.TimeSpan.ToString" /> method.</para>
          <code lang="C#">using System;
public class TimeSpanToStringExample {
   public static void Main() {
      TimeSpan tsOne = new TimeSpan(1, 23, 45, 54, 321);
      TimeSpan tsTwo = new TimeSpan(0, 23, 45, 54, 0);
      Console.Write("TimeSpan one, with d. and .ff: ");
      Console.WriteLine("{0}", tsOne.ToString());
      Console.Write("TimeSpan two, without d. and .ff: ");
      Console.WriteLine("{0}", tsTwo.ToString());
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>TimeSpan one, with d. and .ff: 1.23:45:54.3210000</para>
            <para>TimeSpan two, without d. and .ff: 23:45:54</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The returned string is formatted with the "c" format specifier and has the following format:</para>
          <para>[-][d.]hh:mm:ss[.fffffff] </para>
          <para>Elements in square brackets ([ and ]) may not be included in the returned string. Colons and periods (: and.) are literal characters. The non-literal elements are listed in the following table. Note that the string returned by the <see cref="M:System.TimeSpan.ToString" /> method is not culture-sensitive.</para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Item </para>
                </term>
                <description>
                  <para>Description </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>"-" </para>
              </term>
              <description>
                <para>A minus sign, which indicates a negative time interval. No sign is included for a positive time span.</para>
              </description>
            </item>
            <item>
              <term>
                <para>"d" </para>
              </term>
              <description>
                <para>The number of days in the time interval. This element is omitted if the time interval is less than one day. </para>
              </description>
            </item>
            <item>
              <term>
                <para>"hh" </para>
              </term>
              <description>
                <para>The number of hours in the time interval, ranging from 0 to 23. </para>
              </description>
            </item>
            <item>
              <term>
                <para>"mm" </para>
              </term>
              <description>
                <para>The number of minutes in the time interval, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>"ss" </para>
              </term>
              <description>
                <para>The number of seconds in the time interval, ranging from 0 to 59. </para>
              </description>
            </item>
            <item>
              <term>
                <para>"fffffff" </para>
              </term>
              <description>
                <para>Fractional seconds in the time interval. This element is omitted if the time interval does not include fractional seconds. If present, fractional seconds are always expressed using seven decimal digits.</para>
              </description>
            </item>
          </list>
          <block subset="none" type="note">
            <para>For more information about comparing the string representation of <see cref="T:System.TimeSpan" /> and Oracle data types, see Knowledge Base article <see cref="http://go.microsoft.com/fwlink/?LinkId=161146">324577: System.TimeSpan Does Not Match Oracle 9i INTERVAL DAY TO SECOND Data Type</see>. </para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string representation of the current <see cref="T:System.TimeSpan" /> value. </para>
        </returns>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="format" /> parameter can be any valid standard or custom format specifier for <see cref="T:System.TimeSpan" /> values. If <paramref name="format" /> is equal to <see cref="F:System.String.Empty" /> or is null, the return value of the current <see cref="T:System.TimeSpan" /> object is formatted with the common format specifier ("c"). If <paramref name="format" /> is any other value, the method throws a <see cref="T:System.FormatException" />. </para>
          <para>If <paramref name="format" /> is a standard format string, the format of the returned string is defined by the formatting conventions of the current culture.</para>
          <block subset="none" type="note">
            <para>The custom format strings for <see cref="T:System.TimeSpan" /> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format> topic for more information. </para>
          </block>
          <para>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</para>
          <list type="bullet">
            <item>
              <para>For more information about format strings for <see cref="T:System.TimeSpan" /> values, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>.</para>
            </item>
            <item>
              <para>For more information about support for formatting in the .NET Framework, see <format type="text/html"><a href="0d1364da-5b30-4d42-8e6b-03378343343f">Formatting Types</a></format>.</para>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string representation of the current <see cref="T:System.TimeSpan" /> value in the format specified by the <paramref name="format" /> parameter.</para>
        </returns>
        <param name="format">
          <attribution license="cc4" from="Microsoft" modified="false" />A standard or custom <see cref="T:System.TimeSpan" /> format string.</param>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <paramref name="format" /> parameter can be any valid standard or custom format specifier for <see cref="T:System.TimeSpan" /> values. If <paramref name="format" /> is equal to <see cref="F:System.String.Empty" /> or is null, the return value of the current <see cref="T:System.TimeSpan" /> object is formatted with the common format specifier ("c"). If format is any other value, the method throws a <see cref="T:System.FormatException" />. </para>
          <block subset="none" type="note">
            <para>The custom format strings for <see cref="T:System.TimeSpan" /> values do not include a date or time separator. If you want to include these elements in your format string, you must treat them as character literals. See the example for an illustration, and see the <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format> topic for more information. </para>
          </block>
          <para>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</para>
          <list type="bullet">
            <item>
              <para>For more information about format strings for <see cref="T:System.TimeSpan" /> values, see <format type="text/html"><a href="9f6c95eb-63ae-4dcc-9c32-f81985c75794">Standard TimeSpan Format Strings</a></format> and <format type="text/html"><a href="a63ebf55-7269-416b-b4f5-286f6c03bf0e">Custom TimeSpan Format Strings</a></format>.</para>
            </item>
            <item>
              <para>For more information about support for formatting in the .NET Framework, see <format type="text/html"><a href="0d1364da-5b30-4d42-8e6b-03378343343f">Formatting Types</a></format>.</para>
            </item>
          </list>
          <para>The <paramref name="formatProvider" /> parameter is an <see cref="T:System.IFormatProvider" /> implementation that provides culture-specific information about the format of the returned string. The <paramref name="formatProvider" /> parameter can be any of the following:</para>
          <list type="bullet">
            <item>
              <para>A <see cref="T:System.Globalization.CultureInfo" /> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <see cref="T:System.Globalization.DateTimeFormatInfo" /> object retuned by the <see cref="P:System.Globalization.CultureInfo.DateTimeFormat" /> property defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that defines the formatting of the returned string.</para>
            </item>
            <item>
              <para>A custom object that implements the <see cref="T:System.IFormatProvider" /> interface. Its <see cref="M:System.IFormatProvider.GetFormat(System.Type)" /> method returns a <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that provides formatting information.</para>
            </item>
          </list>
          <para>If <paramref name="formatProvider" /> is null, the <see cref="T:System.Globalization.DateTimeFormatInfo" /> object that is associated with the current culture is used. If <paramref name="format" /> is a custom format string, the <paramref name="formatProvider" /> parameter is ignored.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts the value of the current <see cref="T:System.TimeSpan" /> object to its equivalent string representation by using the specified format and culture-specific formatting information.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string representation of the current <see cref="T:System.TimeSpan" /> value, as specified by <paramref name="format" /> and <paramref name="formatProvider" />.</para>
        </returns>
        <param name="format">
          <attribution license="cc4" from="Microsoft" modified="false" />A standard or custom <see cref="T:System.TimeSpan" /> format string.</param>
        <param name="formatProvider">
          <attribution license="cc4" from="Microsoft" modified="false" />An object that supplies culture-specific formatting information.</param>
      </Docs>
    </Member>
    <Member MemberName="TotalDays">
      <MemberSignature Language="ILASM" Value=".property float64 TotalDays { public hidebysig specialname instance float64 get_TotalDays() }" />
      <MemberSignature Language="C#" Value="public double TotalDays { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalDays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Double" /> that specifies the total number of days represented by the current instance.</para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.TotalDays" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanTotalUnitsProperties{
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("TotalDays: {0}", ts.TotalDays);
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40</para>
            <para>TotalDays: 11.5740740740741</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property converts the value of this instance from ticks to days. This number might include whole and fractional days.</para>
          <para>The <see cref="P:System.TimeSpan.TotalDays" /> property represents whole and fractional days, whereas the <see cref="P:System.TimeSpan.Days" /> property represents whole days. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional days.</para>
        </summary>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="TotalHours">
      <MemberSignature Language="ILASM" Value=".property float64 TotalHours { public hidebysig specialname instance float64 get_TotalHours() }" />
      <MemberSignature Language="C#" Value="public double TotalHours { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalHours" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Double" /> that specifies the total number of hours represented by the current instance.</para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.TotalHours" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanTotalUnitsProperties{
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("TotalHours: {0}", ts.TotalHours);
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40</para>
            <para>TotalHours: 277.777777777778</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property converts the value of this instance from ticks to hours. This number might include whole and fractional hours.</para>
          <para>The <see cref="P:System.TimeSpan.TotalHours" /> property represents whole and fractional hours, whereas the <see cref="P:System.TimeSpan.Hours" /> property represents whole hours. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional hours.</para>
        </summary>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="TotalMilliseconds">
      <MemberSignature Language="ILASM" Value=".property float64 TotalMilliseconds { public hidebysig specialname instance float64 get_TotalMilliseconds() }" />
      <MemberSignature Language="C#" Value="public double TotalMilliseconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Double" /> that specifies the total number of milliseconds represented by the current instance.</para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.TotalMilliseconds" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanTotalUnitsProperties{
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("TotalMilliseconds: {0}", ts.TotalMilliseconds);
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40</para>
            <para>TotalMilliseconds: 1000000000</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property converts the value of this instance from ticks to milliseconds. This number might include whole and fractional milliseconds.</para>
          <para>The <see cref="P:System.TimeSpan.TotalMilliseconds" /> property represents whole and fractional milliseconds, whereas the <see cref="P:System.TimeSpan.Milliseconds" /> property represents whole milliseconds. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional milliseconds.</para>
        </summary>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="TotalMinutes">
      <MemberSignature Language="ILASM" Value=".property float64 TotalMinutes { public hidebysig specialname instance float64 get_TotalMinutes() }" />
      <MemberSignature Language="C#" Value="public double TotalMinutes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalMinutes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Double" /> that specifies the total number of minutes represented by the current instance.</para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.TotalMinutes" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanTotalUnitsProperties{
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("TotalMinutes: {0}", ts.TotalMinutes);
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40</para>
            <para>TotalMinutes: 16666.6666666667</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property converts the value of this instance from ticks to minutes. This number might include whole and fractional minutes.</para>
          <para>The <see cref="P:System.TimeSpan.TotalMinutes" /> property represents whole and fractional minutes, whereas the <see cref="P:System.TimeSpan.Minutes" /> property represents whole minutes. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional minutes.</para>
        </summary>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="TotalSeconds">
      <MemberSignature Language="ILASM" Value=".property float64 TotalSeconds { public hidebysig specialname instance float64 get_TotalSeconds() }" />
      <MemberSignature Language="C#" Value="public double TotalSeconds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TotalSeconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <value>
          <para>A <see cref="T:System.Double" /> that specifies the total number of seconds represented by the current instance.</para>
        </value>
        <example>
          <para>This example demonstrates using the <see cref="P:System.TimeSpan.TotalSeconds" /> property.</para>
          <code lang="C#">using System;
public class TimeSpanTotalUnitsProperties{
   public static void Main() {
      TimeSpan ts = new TimeSpan((Int64)10e12);
      Console.WriteLine(ts.ToString());
      Console.WriteLine("TotalSeconds: {0}", ts.TotalSeconds);
   }
}
</code>
          <para>The output is</para>
          <c>
            <para>11.13:46:40</para>
            <para>TotalSeconds :1000000</para>
          </c>
        </example>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property converts the value of this instance from ticks to seconds. This number might include whole and fractional seconds.</para>
          <para>The <see cref="P:System.TimeSpan.TotalSeconds" /> property represents whole and fractional seconds, whereas the <see cref="P:System.TimeSpan.Seconds" /> property represents whole seconds. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the value of the current <see cref="T:System.TimeSpan" /> structure expressed in whole and fractional seconds.</para>
        </summary>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, class System.IFormatProvider formatProvider, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string format, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="format">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.TimeSpanStyles styles, out TimeSpan result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string input, string[] formats, class System.IFormatProvider formatProvider, valuetype System.Globalization.TimeSpanStyles styles, valuetype System.TimeSpan result) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.TimeSpanStyles" />
        <Parameter Name="result" Type="System.TimeSpan&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="formatProvider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="ILASM" Value=".field public static initOnly valuetype System.TimeSpan Zero" />
      <MemberSignature Language="C#" Value="public static readonly TimeSpan Zero;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan Zero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Because the value of the <see cref="F:System.TimeSpan.Zero" /> field is a <see cref="T:System.TimeSpan" /> object that represents a zero time value, you can compare it with other <see cref="T:System.TimeSpan" /> objects to determine whether the latter represent positive, non-zero, or negative time intervals. You can also use this field to initialize a <see cref="T:System.TimeSpan" /> object to a zero time value.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Represents the zero <see cref="T:System.TimeSpan" /> value. This field is read-only.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>