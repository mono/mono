<?xml version="1.0" encoding="utf-8"?>
<Type Name="UnhandledExceptionEventHandler" FullName="System.UnhandledExceptionEventHandler" FullNameSP="System_UnhandledExceptionEventHandler" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable UnhandledExceptionEventHandler extends System.Delegate" />
  <TypeSignature Language="C#" Value="public delegate void UnhandledExceptionEventHandler(object sender, UnhandledExceptionEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed UnhandledExceptionEventHandler extends System.MulticastDelegate" />
  <MemberOfLibrary>RuntimeInfrastructure</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">The application domain that handled the <see cref="F:System.AppDomain.UnhandledException" /> event.</param>
    <param name="e">A <see cref="T:System.UnhandledExceptionEventArgs" /> that contains the event data.</param>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>An <see cref="T:System.UnhandledExceptionEventHandler" /> can only be specified for the default application domain that is created by the system to execute an application. Specifying an <see cref="T:System.UnhandledExceptionEventHandler" /> for an <see cref="T:System.AppDomain" /> created by an application has no effect.</para>
      <para>When you create an <see cref="T:System.UnhandledExceptionEventHandler" /> delegate, you identify the method that will handle the event. To associate the event handler with your event, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event handler delegates, see <format type="text/html"><a href="D98FD58B-FA4F-4598-8378-ADDF4355A115">[&lt;topic://cpconEventsDelegates&gt;]</a></format>.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Represents the method that will handle the event raised by an exception that is not handled by the application domain.</para>
    </summary>
  </Docs>
  <Members />
  <TypeExcluded>0</TypeExcluded>
</Type>