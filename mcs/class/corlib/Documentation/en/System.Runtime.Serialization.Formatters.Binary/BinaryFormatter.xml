<?xml version="1.0" encoding="utf-8"?>
<Type Name="BinaryFormatter" FullName="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
  <TypeSignature Maintainer="auto" Language="C#" Value="public sealed class BinaryFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BinaryFormatter extends System.Object implements class System.Runtime.Remoting.Messaging.IRemotingFormatter, class System.Runtime.Serialization.IFormatter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IRemotingFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> and <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> classes implement the <see cref="T:System.Runtime.Remoting.Messaging.IRemotingFormatter" /> interface to support remote procedure calls (RPCs), and the <see cref="T:System.Runtime.Serialization.IFormatter" /> interface (inherited by the <see cref="T:System.Runtime.Remoting.Messaging.IRemotingFormatter" />) to support serialization of a graph of objects. The <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> class also supports RPCs with <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" /> objects, without using the <see cref="T:System.Runtime.Remoting.Messaging.IRemotingFormatter" /> functionality.</para>
      <para>During RPCs, the <see cref="T:System.Runtime.Remoting.Messaging.IRemotingFormatter" /> interface allows the specification of two separate object graphs: the graph of objects to serialize, and an additional graph that contains an array of header objects that convey information about the remote function call (for example, transaction ID or a method signature).</para>
      <para>RPCs that use the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> separate into two distinct parts: method calls, which are sent to the server with the remote object that contains the method called, and method responses, which are sent from the server to the client with the status and response information from the called method.</para>
      <para>During serialization of a method call the first object of the object graph must support the <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> interface. To deserialize a method call, use the <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)" /> method with the <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> parameter. The remoting infrastructure uses the <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> delegate to produce an object that supports the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface. When the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> invokes the <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> delegate, it returns the URI of the remote object with the method that is being called. The first object in the graph returned supports the <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> interface.</para>
      <para>The serialization procedure for a method response is identical to that of a method call, except the first object of the object graph must support the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface. To deserialize a method response, use the <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" /> method. To save time, details about the caller object are not sent to the remote object during the method call. These details are instead obtained from the original method call, which is passed to the <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" /> method in the <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> parameter. The first object in the graph returned by the <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" /> method supports the <see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /> interface.</para>
      <format type="text/html">
        <h2>Unpaired Surrogates</h2>
      </format>
      <para>Any unpaired surrogate characters are lost in binary serialization. For example, the following string contains a high surrogate Unicode character (\ud800) in between the two Test words:</para>
      <para>Test\ud800Test</para>
      <para>Before serialization, the byte array of the string is as follows:</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Byte Array Value</para>
            </term>
            <description>
              <para>Character</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>84</para>
          </term>
          <description>
            <para>T</para>
          </description>
        </item>
        <item>
          <term>
            <para>101</para>
          </term>
          <description>
            <para>e</para>
          </description>
        </item>
        <item>
          <term>
            <para>115</para>
          </term>
          <description>
            <para>s</para>
          </description>
        </item>
        <item>
          <term>
            <para>116</para>
          </term>
          <description>
            <para>t</para>
          </description>
        </item>
        <item>
          <term>
            <para>55296</para>
          </term>
          <description>
            <para>\ud800</para>
          </description>
        </item>
        <item>
          <term>
            <para>84</para>
          </term>
          <description>
            <para>T</para>
          </description>
        </item>
        <item>
          <term>
            <para>101</para>
          </term>
          <description>
            <para>e</para>
          </description>
        </item>
        <item>
          <term>
            <para>115</para>
          </term>
          <description>
            <para>s</para>
          </description>
        </item>
        <item>
          <term>
            <para>116</para>
          </term>
          <description>
            <para>t</para>
          </description>
        </item>
      </list>
      <para>After deserialization, the high surrogate Unicode character is lost:</para>
      <list type="table">
        <listheader>
          <item>
            <term>
              <para>Byte Array Value</para>
            </term>
            <description>
              <para>Character</para>
            </description>
          </item>
        </listheader>
        <item>
          <term>
            <para>84</para>
          </term>
          <description>
            <para>T</para>
          </description>
        </item>
        <item>
          <term>
            <para>101</para>
          </term>
          <description>
            <para>e</para>
          </description>
        </item>
        <item>
          <term>
            <para>115</para>
          </term>
          <description>
            <para>s</para>
          </description>
        </item>
        <item>
          <term>
            <para>116</para>
          </term>
          <description>
            <para>t</para>
          </description>
        </item>
        <item>
          <term>
            <para>84</para>
          </term>
          <description>
            <para>T</para>
          </description>
        </item>
        <item>
          <term>
            <para>101</para>
          </term>
          <description>
            <para>e</para>
          </description>
        </item>
        <item>
          <term>
            <para>115</para>
          </term>
          <description>
            <para>s</para>
          </description>
        </item>
        <item>
          <term>
            <para>116</para>
          </term>
          <description>
            <para>t</para>
          </description>
        </item>
      </list>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Serializes and deserializes an object, or an entire graph of connected objects, in binary format.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This constructor sets the properties of the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> object as follows: </para>
          <list type="table">
            <listheader>
              <item>
                <term>
                  <para>Property Type </para>
                </term>
                <description>
                  <para>Condition </para>
                </description>
              </item>
            </listheader>
            <item>
              <term>
                <para>
                  <see cref="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.SurrogateSelector" /> </para>
              </term>
              <description>
                <para>null</para>
              </description>
            </item>
            <item>
              <term>
                <para>
                  <see cref="P:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Context" /> </para>
              </term>
              <description>
                <para>A <see cref="T:System.Runtime.Serialization.StreamingContext" /> with a value that indicates that serialized data can be transmitted to or received from any of the other contexts. (<see cref="F:System.Runtime.Serialization.StreamingContextStates.All" />) </para>
              </description>
            </item>
          </list>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> class with default values.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BinaryFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new BinaryFormatter for serialization or deserialization of objects from the specified <see cref="T:System.IO.Stream" />.</para>
          <para>The serialization or deserialization process uses the specified <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> to search for surrogates that are registered for the object types you want to deserialize. Surrogates are helpers that serialize and deserialize objects of specific classes. The default <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> cannot handle the serialization of objects that derive from the <see cref="T:System.MarshalByRefObject" /> for remoting purposes. In a remoting situation the specified <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> replaces the object derived from <see cref="T:System.MarshalByRefObject" /> with a <see cref="T:System.Runtime.Remoting.ObjRef" /> object that is serialized by the specified surrogate selector. Therefore, if you want to use remote objects, set the <paramref name="selector" /> parameter to an instance of <see cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />. If you do not need surrogates, set the <paramref name="selector" /> parameter to be null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Initializes a new instance of the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> class with a given surrogate selector and streaming context.</para>
        </summary>
        <param name="selector">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> to use. Can be null. </param>
        <param name="context">
          <attribution license="cc4" from="Microsoft" modified="false" />The source and destination for the serialized data. </param>
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the behavior of the deserializer with regards to finding and loading assemblies.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets an object of type <see cref="T:System.Runtime.Serialization.SerializationBinder" /> that controls the binding of a serialized object to a type.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The <see cref="T:System.Runtime.Serialization.StreamingContext" /> provides an enumeration that describes the source and the destination for a given serialized stream, as well as a way for serialization to retain that context and an additional caller-defined context.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the <see cref="T:System.Runtime.Serialization.StreamingContext" /> for this formatter.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For successful deserialization, the current position in the stream must be at the beginning of the object graph.</para>
          <block subset="none" type="note">
            <para>Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <see cref="http://go.microsoft.com/fwlink/?LinkId=330378">Untrusted Data Security Risks</see>.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deserializes the specified stream into an object graph.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The top (root) of the object graph.</para>
        </returns>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to deserialize the object graph. </param>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Headers are used only for specific remoting applications.</para>
          <para>In order for deserialization to succeed the current position in the stream must be at the beginning of the object graph.</para>
          <block subset="none" type="note">
            <para>Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <see cref="http://go.microsoft.com/fwlink/?LinkId=330378">Untrusted Data Security Risks</see>.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deserializes the specified stream into an object graph. The provided <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> handles any headers in that stream.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The deserialized object or the top object (root) of the object graph.</para>
        </returns>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to deserialize the object graph. </param>
        <param name="handler">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> that handles any headers in the <paramref name="serializationStream" />. Can be null. </param>
      </Docs>
    </Member>
    <Member MemberName="DeserializeMethodResponse">
      <MemberSignature Language="C#" Value="public object DeserializeMethodResponse (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeMethodResponse(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler, class System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
        <Parameter Name="methodCallMessage" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Details about the caller object are not sent to the remote object during the method call. Instead, these details are obtained from the original method call that is passed to the current method in the <paramref name="methodCallMessage" /> parameter.</para>
          <para>In order for deserialization to succeed the current position in the stream must be at the beginning of the object graph.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deserializes a response to a remote method call from the provided <see cref="T:System.IO.Stream" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The deserialized response to the remote method call.</para>
        </returns>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to deserialize the object graph. </param>
        <param name="handler">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> that handles any headers in the <paramref name="serializationStream" />. Can be null. </param>
        <param name="methodCallMessage">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> that contains details about where the call came from. </param>
      </Docs>
    </Member>
    <Member MemberName="FilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Supported values are <see cref="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low" /> and <see cref="F:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full" /> (the default). For details about deserialization levels, see <format type="text/html"><a href="313A0E88-5B2B-4A17-8391-0DDF9F7A787B">[&lt;topic://cpconAutomaticDeserializationInNETRemoting&gt;]</a></format>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" /> of automatic deserialization the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" /> performs.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>To be added</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Serializes the object, or graph of objects with the specified top (root), to the given stream.</para>
        </summary>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream to which the graph is to be serialized. </param>
        <param name="graph">
          <attribution license="cc4" from="Microsoft" modified="false" />The object at the root of the graph to serialize. </param>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph, class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The serialization process includes the information supplied in the <paramref name="headers" /> parameter at the front of the serialized stream.</para>
          <para>Headers are used only for specific remoting applications.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Serializes the object, or graph of objects with the specified top (root), to the given stream attaching the provided headers.</para>
        </summary>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream to which the object is to be serialized. </param>
        <param name="graph">
          <attribution license="cc4" from="Microsoft" modified="false" />The object at the root of the graph to serialize. </param>
        <param name="headers">
          <attribution license="cc4" from="Microsoft" modified="false" />Remoting headers to include in the serialization. Can be null. </param>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The surrogate selector is used by <see cref="N:System.Runtime.Remoting" /> to generate <see cref="T:System.Runtime.Remoting.ObjRef" /> instances for objects that derive from <see cref="T:System.MarshalByRefObject" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets a <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> that controls type substitution during serialization and deserialization.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets or sets the format in which type descriptions are laid out in the serialized stream.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UnsafeDeserialize">
      <MemberSignature Language="C#" Value="public object UnsafeDeserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object UnsafeDeserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Headers are used only for specific remoting applications.</para>
          <para>This method uses <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> to prevent it from being called from untrusted code; only the immediate caller is required to have <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /> permission. Do not use this method if your code can be called from partially trusted code. In partially trusted scenarios, use <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)" /> instead. In full trust scenarios, <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" /> provides better performance than <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)" />.</para>
          <para>For successful deserialization, the current position in the stream must be at the beginning of the object graph.</para>
          <block subset="none" type="note">
            <para>Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <see cref="http://go.microsoft.com/fwlink/?LinkId=330378">Untrusted Data Security Risks</see>.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deserializes the specified stream into an object graph. The provided <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> handles any headers in that stream.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The deserialized object or the top object (root) of the object graph.</para>
        </returns>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to deserialize the object graph. </param>
        <param name="handler">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> that handles any headers in the <paramref name="serializationStream" />. Can be null. </param>
      </Docs>
    </Member>
    <Member MemberName="UnsafeDeserializeMethodResponse">
      <MemberSignature Language="C#" Value="public object UnsafeDeserializeMethodResponse (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler, System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object UnsafeDeserializeMethodResponse(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler, class System.Runtime.Remoting.Messaging.IMethodCallMessage methodCallMessage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
        <Parameter Name="methodCallMessage" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Details about the caller object are not sent to the remote object during the method call. Instead, these details are obtained from the original method call that is passed to the current method in the <paramref name="methodCallMessage" /> parameter.</para>
          <para>This method uses <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> to prevent it from being called from untrusted code; only the immediate caller is required to have <see cref="P:System.Security.Permissions.SecurityPermissionAttribute.SerializationFormatter" /> permission. Do not use this method if your code can be called from partially trusted code. In partially trusted scenarios, use <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" /> instead. In full trust scenarios, <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.UnsafeDeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" /> provides better performance than <see cref="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.DeserializeMethodResponse(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler,System.Runtime.Remoting.Messaging.IMethodCallMessage)" />.</para>
          <para>For successful deserialization, the current position in the stream must be at the beginning of the object graph.</para>
          <block subset="none" type="note">
            <para>Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see <see cref="http://go.microsoft.com/fwlink/?LinkId=330378">Untrusted Data Security Risks</see>.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Deserializes a response to a remote method call from the provided <see cref="T:System.IO.Stream" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The deserialized response to the remote method call.</para>
        </returns>
        <param name="serializationStream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to deserialize the object graph. </param>
        <param name="handler">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> that handles any headers in the <paramref name="serializationStream" />. Can be null. </param>
        <param name="methodCallMessage">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.Remoting.Messaging.IMethodCallMessage" /> that contains details about where the call came from. </param>
      </Docs>
    </Member>
  </Members>
</Type>