<?xml version="1.0" encoding="utf-8"?>
<Type Name="ITypeLibImporterNotifySink" FullName="System.Runtime.InteropServices.ITypeLibImporterNotifySink">
  <TypeSignature Maintainer="auto" Language="C#" Value="public interface ITypeLibImporterNotifySink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeLibImporterNotifySink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("f1c3bf76-c3e4-11d3-88e7-00902754c43a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This interface is used in the process of converting a COM type library to a managed assembly.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a callback mechanism for the type library converter to inform the caller of the status of the conversion, and involve the caller in the conversion process itself.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="ReportEvent">
      <MemberSignature Language="C#" Value="public void ReportEvent (System.Runtime.InteropServices.ImporterEventKind eventKind, int eventCode, string eventMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportEvent(valuetype System.Runtime.InteropServices.ImporterEventKind eventKind, int32 eventCode, string eventMsg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventKind" Type="System.Runtime.InteropServices.ImporterEventKind" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventMsg" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If the event being reported is a warning or an error, <paramref name="eventCode" /> will contain the HRESULT of the error. For any other event it will be 0.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Notifies the caller that an event occured during the conversion of a type library.</para>
        </summary>
        <param name="eventKind">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Runtime.InteropServices.ImporterEventKind" /> value indicating the type of event. </param>
        <param name="eventCode">
          <attribution license="cc4" from="Microsoft" modified="false" />Indicates extra information about the event. </param>
        <param name="eventMsg">
          <attribution license="cc4" from="Microsoft" modified="false" />A message generated by the event. </param>
      </Docs>
    </Member>
    <Member MemberName="ResolveRef">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly ResolveRef (object typeLib);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly ResolveRef(object typeLib) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>If a reference to another type library is found during the conversion of a type library, the caller is asked to return the correct assembly for that type library.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Asks the user to resolve a reference to another type library.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The assembly corresponding to <paramref name="typeLib" />.</para>
        </returns>
        <param name="typeLib">
          <attribution license="cc4" from="Microsoft" modified="false" />The object implementing the ITypeLib interface that needs to be resolved. </param>
      </Docs>
    </Member>
  </Members>
</Type>