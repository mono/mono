<?xml version="1.0" encoding="utf-8"?>
<Type Name="ITypeLibConverter" FullName="System.Runtime.InteropServices.ITypeLibConverter">
  <TypeSignature Maintainer="auto" Language="C#" Value="public interface ITypeLibConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeLibConverter" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("F1C3BF78-C3E4-11D3-88E7-00902754C43A")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>To be added</remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Provides a set of services that convert a managed assembly to a COM type library and vice versa.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="ConvertAssemblyToTypeLib">
      <MemberSignature Language="C#" Value="public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string typeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertAssemblyToTypeLib(class System.Reflection.Assembly assembly, string typeLibName, valuetype System.Runtime.InteropServices.TypeLibExporterFlags flags, class System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="typeLibName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibExporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For more information on ITypeLib, please see its existing documentation in the MSDN library.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an assembly to a COM type library.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An object that implements the ITypeLib interface.</para>
        </returns>
        <param name="assembly">
          <attribution license="cc4" from="Microsoft" modified="false" />The assembly to convert. </param>
        <param name="typeLibName">
          <attribution license="cc4" from="Microsoft" modified="false" />The file name of the resulting type library. </param>
        <param name="flags">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Runtime.InteropServices.TypeLibExporterFlags" /> value indicating any special settings. </param>
        <param name="notifySink">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Runtime.InteropServices.ITypeLibExporterNotifySink" /> interface implemented by the caller. </param>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, int32 flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="unsafeInterfaces" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For more information on ITypeLib, please see its existing documentation in the MSDN library.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a COM type library to an assembly.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</para>
        </returns>
        <param name="typeLib">
          <attribution license="cc4" from="Microsoft" modified="false" />The object that implements the ITypeLib interface. </param>
        <param name="asmFileName">
          <attribution license="cc4" from="Microsoft" modified="false" />The file name of the resulting assembly. </param>
        <param name="flags">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings. </param>
        <param name="notifySink">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller. </param>
        <param name="publicKey">
          <attribution license="cc4" from="Microsoft" modified="false" />A byte array containing the public key. </param>
        <param name="keyPair">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair. </param>
        <param name="unsafeInterfaces">
          <attribution license="cc4" from="Microsoft" modified="false" />If true, the interfaces require link time checks for <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission. If false, the interfaces require run time checks that require a stack walk and are more expensive, but help provide greater protection. </param>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeLibToAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly(object typeLib, string asmFileName, valuetype System.Runtime.InteropServices.TypeLibImporterFlags flags, class System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, unsigned int8[] publicKey, class System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, class System.Version asmVersion) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeLib" Type="System.Object" />
        <Parameter Name="asmFileName" Type="System.String" />
        <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibImporterFlags" />
        <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
        <Parameter Name="publicKey" Type="System.Byte[]" />
        <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
        <Parameter Name="asmNamespace" Type="System.String" />
        <Parameter Name="asmVersion" Type="System.Version" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>For more information on ITypeLib, please see its existing documentation in the MSDN library.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a COM type library to an assembly.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object containing the converted type library.</para>
        </returns>
        <param name="typeLib">
          <attribution license="cc4" from="Microsoft" modified="false" />The object that implements the ITypeLib interface. </param>
        <param name="asmFileName">
          <attribution license="cc4" from="Microsoft" modified="false" />The file name of the resulting assembly. </param>
        <param name="flags">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Runtime.InteropServices.TypeLibImporterFlags" /> value indicating any special settings. </param>
        <param name="notifySink">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Runtime.InteropServices.ITypeLibImporterNotifySink" /> interface implemented by the caller. </param>
        <param name="publicKey">
          <attribution license="cc4" from="Microsoft" modified="false" />A byte array containing the public key. </param>
        <param name="keyPair">
          <attribution license="cc4" from="Microsoft" modified="false" />A <see cref="T:System.Reflection.StrongNameKeyPair" /> object containing the public and private cryptographic key pair. </param>
        <param name="asmNamespace">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace for the resulting assembly. </param>
        <param name="asmVersion">
          <attribution license="cc4" from="Microsoft" modified="false" />The version of the resulting assembly. If null, the version of the type library is used. </param>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryInteropAssembly">
      <MemberSignature Language="C#" Value="public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPrimaryInteropAssembly(valuetype System.Guid g, int32 major, int32 minor, int32 lcid, string asmName, string asmCodeBase) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Guid" />
        <Parameter Name="major" Type="System.Int32" />
        <Parameter Name="minor" Type="System.Int32" />
        <Parameter Name="lcid" Type="System.Int32" />
        <Parameter Name="asmName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="asmCodeBase" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="g">To be added: an object of type 'Guid'</param>
        <param name="major">To be added: an object of type 'int'</param>
        <param name="minor">To be added: an object of type 'int'</param>
        <param name="lcid">To be added: an object of type 'int'</param>
        <param name="asmName">To be added: an object of type 'string&amp;'</param>
        <param name="asmCodeBase">To be added: an object of type 'string&amp;'</param>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>