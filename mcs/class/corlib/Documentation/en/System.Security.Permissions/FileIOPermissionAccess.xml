<?xml version="1.0" encoding="utf-8"?>
<Type Name="FileIOPermissionAccess" FullName="System.Security.Permissions.FileIOPermissionAccess" FullNameSP="System_Security_Permissions_FileIOPermissionAccess" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable FileIOPermissionAccess extends System.Enum" />
  <TypeSignature Language="C#" Value="public enum FileIOPermissionAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileIOPermissionAccess extends System.Enum" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>This enumeration is used with the <see cref="T:System.Security.Permissions.FileIOPermission" /> class.</para>
      <block subset="none" type="note">
        <para>Although <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> are members of <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />, they are not valid for use as the parameter for <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> because they describe no file access types or all file access types, respectively, and <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> expects a single file access type.</para>
      </block>
      <block subset="none" type="note">
        <para>Giving <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> access to an assembly is similar to granting it Full Trust. If an application should not write to the file system it should not have <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> access.</para>
      </block>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Specifies the type of file access requested.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="AllAccess">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess AllAccess = Read | Write | Append | PathDiscovery" />
      <MemberSignature Language="C#" Value="AllAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess AllAccess = int32(15)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>AllAccess</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" />, and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> access to a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.AllAccess" /> represents multiple <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the <paramref name="access" /> parameter for the <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" /> method, which expects a single value.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Append = 0x4" />
      <MemberSignature Language="C#" Value="Append" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Append = int32(4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Append</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>To create files, code must also be granted both <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /> and either <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> or <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> access. For more detail see <see cref="T:System.IO.FileMode" />.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Access to append material to a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /> access includes the ability to create a new file or directory.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="NoAccess">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess NoAccess = 0x0" />
      <MemberSignature Language="C#" Value="NoAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess NoAccess = int32(0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>NoAccess</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>No access to a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> represents no valid <see cref="T:System.Security.Permissions.FileIOPermissionAccess" /> values and causes an <see cref="T:System.ArgumentException" /> when used as the parameter for <see cref="M:System.Security.Permissions.FileIOPermission.GetPathList(System.Security.Permissions.FileIOPermissionAccess)" />, which expects a single value.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="PathDiscovery">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess PathDiscovery = 0x8" />
      <MemberSignature Language="C#" Value="PathDiscovery" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess PathDiscovery = int32(8)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>PathDiscovery</MemberValue>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <block subset="none" type="note">
            <para>For performance reasons, PathDiscovery should only be granted to directories, not to files. For example, PathDiscovery permission should be granted to paths such as C:\test and C:\test\, not C:\test\example.txt.</para>
          </block>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Access to the information in the path itself. This helps protect sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Read = 0x1" />
      <MemberSignature Language="C#" Value="Read" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Read = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Read</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Access to read from a file or directory.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Write = 0x2" />
      <MemberSignature Language="C#" Value="Write" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Permissions.FileIOPermissionAccess Write = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.FileIOPermissionAccess</ReturnType>
      </ReturnValue>
      <Parameters />
      <MemberValue>Write</MemberValue>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Access to write to or delete a file or directory. <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> access includes deleting and overwriting files or directories.</para>
        </summary>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>