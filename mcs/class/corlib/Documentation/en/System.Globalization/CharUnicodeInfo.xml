<?xml version="1.0" encoding="utf-8"?>
<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <since version=".NET 2.0" />
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>The <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see> defines a number of Unicode character categories. For example, a character might be categorized as an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a paragraph separator, a math symbol, or a currency symbol. Your application can use the character category to govern string-based operations, such as parsing. The <see cref="T:System.Globalization.UnicodeCategory" /> enumeration defines the possible character categories. </para>
      <para>You use the <see cref="T:System.Globalization.CharUnicodeInfo" /> class to obtain the <see cref="T:System.Globalization.UnicodeCategory" /> value for a specific character. The <see cref="T:System.Globalization.CharUnicodeInfo" /> class defines methods that return the following Unicode character values:</para>
      <list type="bullet">
        <item>
          <para>Numeric value. Applies only to numeric characters, including fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits. </para>
        </item>
        <item>
          <para>Digit value. Applies to numeric characters that can be combined with other numeric characters to represent a whole number in a numbering system. </para>
        </item>
        <item>
          <para>Decimal digit value. Applies only to characters that represent decimal digits in the decimal (base 10) system. A decimal digit can be one of ten digits, from zero through nine. These characters are members of the <see cref="F:System.Globalization.UnicodeCategory.DecimalDigitNumber" /> category. </para>
        </item>
      </list>
      <para>When using this class in your applications, keep in mind the following programming considerations for using the <see cref="T:System.Char" /> type. The type can be difficult to use, and strings are generally preferable for representing linguistic content.</para>
      <list type="bullet">
        <item>
          <para>A <see cref="T:System.Char" /> object does not always correspond to a single character. Although the <see cref="T:System.Char" /> type represents a single 16-bit value, some characters (such as grapheme clusters and surrogate pairs) consist of two or more UTF-16 code units. For more information, see "Char Objects and Unicode Characters" in the <see cref="T:System.String" /> class.</para>
        </item>
        <item>
          <para>The notion of a "character" is also flexible. A character is often thought of as a glyph, but many glyphs require multiple code points. For example, ä can be represented either by two code points ("a" plus U+0308, which is the combining diaeresis), or by a single code point ("ä" or U+00A4). Some languages have many letters, characters, and glyphs that require multiple code points, which can cause confusion in linguistic content representation. For example, there is a ΰ (U+03B0, Greek small letter upsilon with dialytika and tonos), but there is no equivalent capital letter. Uppercasing such a value simply retrieves the original value.</para>
        </item>
      </list>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Retrieves information about a Unicode character. This class cannot be inherited.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method converts characters that represent decimal digits to their equivalent integral values. Decimal digits are characters in the <see cref="F:System.Globalization.UnicodeCategory.DecimalDigitNumber" /> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine. It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE). </para>
          <para>For more information about Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the decimal digit value of the specified numeric character.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The decimal digit value of the specified numeric character.</para>
          <para>-or- </para>
          <para>-1, if the specified character is not a decimal digit.</para>
        </returns>
        <param name="ch">
          <attribution license="cc4" from="Microsoft" modified="false" />The Unicode character for which to get the decimal digit value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method converts characters that represent decimal digits to their equivalent integral values. Decimal digits are characters in the <see cref="F:System.Globalization.UnicodeCategory.DecimalDigitNumber" /> category that can represent one of ten digits in the decimal (base 10) numbering system, from zero through nine. It includes characters such as U+0030 (DIGIT ZERO) through U+0039 (DIGIT NINE), U+0660 (ARABIC-INDIC DIGIT ZERO) through U+0669 (ARABIC-INDIC DIGIT NINE), U+07C0 (NKO DIGIT ZERO) through U+07C9 (NKO DIGIT NINE), and U+1040 (MYANMAR DIGIT ZERO) through U+1049 (MYANMAR DIGIT NINE). </para>
          <para>For more information about Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the decimal digit value of the numeric character at the specified index of the specified string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The decimal digit value of the numeric character at the specified index of the specified string.</para>
          <para>-or- </para>
          <para>-1, if the character at the specified index of the specified string is not a decimal digit.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.String" /> containing the Unicode character for which to get the decimal digit value. </param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the Unicode character for which to get the decimal digit value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Digit value is a property that applies only to numeric characters that can be used as digits. A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</para>
          <para>For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the digit value of the specified numeric character.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The digit value of the specified numeric character.</para>
          <para>-or- </para>
          <para>-1, if the specified character is not a digit.</para>
        </returns>
        <param name="ch">
          <attribution license="cc4" from="Microsoft" modified="false" />The Unicode character for which to get the digit value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Digit value is a property that applies only to numeric characters that can be used as digits. A digit is a numeric character that can be combined with other digits to represent a whole number in a numbering system.</para>
          <para>For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the digit value of the numeric character at the specified index of the specified string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The digit value of the numeric character at the specified index of the specified string.</para>
          <para>-or- </para>
          <para>-1, if the character at the specified index of the specified string is not a digit.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.String" /> containing the Unicode character for which to get the digit value. </param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the Unicode character for which to get the digit value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits. For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
          <para>The <see cref="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" /> method assumes that <paramref name="ch" /> corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit. However, some numbers in the Unicode standard are represented by two <see cref="T:System.Char" /> objects that form a surrogate pair. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <see cref="M:System.Char.ConvertFromUtf32(System.Int32)" /> method to instantiate a string that represents AEGEAN NUMBER ONE. As the output from the example shows, the <see cref="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" /> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</para>
          <para>code reference: System.Globalization.CharUnicodeInfo.GetNumericValue#2</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the numeric value associated with the specified character.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The numeric value associated with the specified character.</para>
          <para>-or- </para>
          <para>-1, if the specified character is not a numeric character.</para>
        </returns>
        <param name="ch">
          <attribution license="cc4" from="Microsoft" modified="false" />The Unicode character for which to get the numeric value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Numeric value is a Unicode character property that applies only to numeric characters, which include fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits. For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
          <para>If the <see cref="T:System.Char" /> object at position <paramref name="index" /> is the first character of a valid surrogate pair, the <see cref="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" /> method determines whether the surrogate pair forms a numeric digit, and, if it does, returns its numeric value. For example, the Aegean numbering system consists of code points U+10107 through U+10133. The following example uses the <see cref="M:System.Char.ConvertFromUtf32(System.Int32)" /> method to instantiate a string that represents each Aegean number. As the output from the example shows, the <see cref="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" /> method returns the correct numeric value if it is passed the high surrogate of an Aegean number. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</para>
          <para>code reference: System.Globalization.CharUnicodeInfo.GetNumericValue#3</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the numeric value associated with the character at the specified index of the specified string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The numeric value associated with the character at the specified index of the specified string.</para>
          <para>-or- </para>
          <para>-1, if the character at the specified index of the specified string is not a numeric character.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.String" /> containing the Unicode character for which to get the numeric value. </param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the Unicode character for which to get the numeric value. </param>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The Unicode characters are divided into categories. A character's category is one of its properties. For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol. The <see cref="T:System.Globalization.UnicodeCategory" /> class returns the category of a Unicode character. For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
          <para>The <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" /> method assumes that <paramref name="ch" /> corresponds to a single linguistic character and returns its category. This means that, for surrogate pairs, it returns <see cref="F:System.Globalization.UnicodeCategory.Surrogate" /> instead of the category to which the surrogate belongs. For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F. The following example uses the <see cref="M:System.Char.ConvertFromUtf32(System.Int32)" /> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet. As the output from the example shows, the <see cref="M:System.Char.IsNumber(System.Char)" /> method returns false if it is passed either the high surrogate or the low surrogate of this character.</para>
          <para>code reference: System.Globalization.CharUnicodeInfo.GetUnicodeCategory#1</para>
          <para>Note that <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" /> does not always return the same <see cref="T:System.Globalization.UnicodeCategory" /> value as the <see cref="M:System.Char.GetUnicodeCategory(System.Char)" /> method when passed a particular character as a parameter. The <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" /> method is designed to reflect the current version of the Unicode standard. In contrast, although the <see cref="M:System.Char.GetUnicodeCategory(System.Char)" /> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the Unicode category of the specified character.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the specified character.</para>
        </returns>
        <param name="ch">
          <attribution license="cc4" from="Microsoft" modified="false" />The Unicode character for which to get the Unicode category. </param>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <since version=".NET 2.0" />
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The Unicode characters are divided into categories. A character's category is one of its properties. For example, a character might be an uppercase letter, a lowercase letter, a decimal digit number, a letter number, a connector punctuation, a math symbol, or a currency symbol. The <see cref="T:System.Globalization.UnicodeCategory" /> class returns the category of a Unicode character. For more information on Unicode characters, see the <see cref="http://go.microsoft.com/fwlink/?linkid=37123">Unicode Standard</see>.</para>
          <para>If the <see cref="T:System.Char" /> object at position <paramref name="index" /> is the first character of a valid surrogate pair, the <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" /> method returns the Unicode category of the surrogate pair instead of returning <see cref="F:System.Globalization.UnicodeCategory.Surrogate" />. For example, the Ugaritic alphabet occupies code points U+10380 to U+1039F. The following example uses the <see cref="M:System.Char.ConvertFromUtf32(System.Int32)" /> method to instantiate a string that represents UGARITIC LETTER ALPA (U+10380), which is the first letter of the Ugaritic alphabet. As the output from the example shows, the <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" /> method returns <see cref="F:System.Globalization.UnicodeCategory.OtherLetter" /> if it is passed the high surrogate of this character, which indicates that it considers the surrogate pair. However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns <see cref="F:System.Globalization.UnicodeCategory.Surrogate" />.</para>
          <para>code reference: System.Globalization.CharUnicodeInfo.GetUnicodeCategory#2</para>
          <para>Note that <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" /> method does not always return the same <see cref="T:System.Globalization.UnicodeCategory" /> value as the <see cref="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" /> method when passed a particular character as a parameter. The <see cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" /> method is designed to reflect the current version of the Unicode standard. In contrast, although the <see cref="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" /> method usually reflects the current version of the Unicode standard, it might return a character's category based on a previous version of the standard, or it might return a category that differs from the current standard to preserve backward compatibility.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the Unicode category of the character at the specified index of the specified string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Globalization.UnicodeCategory" /> value indicating the category of the character at the specified index of the specified string.</para>
        </returns>
        <param name="s">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.String" /> containing the Unicode character for which to get the Unicode category. </param>
        <param name="index">
          <attribution license="cc4" from="Microsoft" modified="false" />The index of the Unicode character for which to get the Unicode category. </param>
      </Docs>
    </Member>
  </Members>
</Type>