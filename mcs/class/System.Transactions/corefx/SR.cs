//
// This file was generated by resx2sr tool
//

partial class SR
{
	public const string AsyncFlowAndESInteropNotSupported = "TransactionScope with TransactionScopeAsyncFlowOption.Enabled option is not supported when the TransactionScope is used within Enterprise Service context with Automatic or Full EnterpriseServicesInteropOption enabled in parent scope.";
	public const string BadAsyncResult = "The IAsyncResult parameter must be the same parameter returned by BeginCommit.";
	public const string BadResourceManagerId = "Resource Manager Identifiers cannot be Guid.Empty.";
	public const string CannotPromoteSnapshot = "Transactions with IsolationLevel Snapshot cannot be promoted.";
	public const string CannotSetCurrent = "Current cannot be set directly when Com+ Interop is enabled.";
	public const string ConfigInvalidTimeSpanValue = "Valid TimeSpan values are greater than TimeSpan.Zero.";
	public const string CurrentDelegateSet = "The delegate for an external current can only be set once.";
	public const string DisposeScope = "The current TransactionScope is already complete. You should dispose the TransactionScope.";
	public const string EnlistmentStateException = "The operation is not valid for the current state of the enlistment.";
	public const string EsNotSupported = "Com+ Interop features cannot be supported.";
	public const string InternalError = "Internal Error";
	public const string InvalidArgument = "The argument is invalid.";
	public const string InvalidIPromotableSinglePhaseNotificationSpecified = "The specified IPromotableSinglePhaseNotification is not the same as the one provided to EnlistPromotableSinglePhase.";
	public const string InvalidRecoveryInformation = "Transaction Manager in the Recovery Information does not match the configured transaction manager.";
	public const string InvalidScopeThread = "A TransactionScope must be disposed on the same thread that it was created.";
	public const string PromotionFailed = "There was an error promoting the transaction to a distributed transaction.";
	public const string PromotedReturnedInvalidValue = "The Promote method returned an invalid value for the distributed transaction.";
	public const string PromotedTransactionExists = "The transaction returned from Promote already exists as a distributed transaction.";
	public const string TooLate = "It is too late to add enlistments to this transaction.";
	public const string TraceTransactionTimeout = "Transaction Timeout";
	public const string TransactionAborted = "The transaction has aborted.";
	public const string TransactionAlreadyCompleted = "DependentTransaction.Complete or CommittableTransaction.Commit has already been called for this transaction.";
	public const string TransactionIndoubt = "The transaction is in doubt.";
	public const string TransactionManagerCommunicationException = "Communication with the underlying transaction manager has failed.";
	public const string TransactionScopeComplete = "The current TransactionScope is already complete.";
	public const string TransactionScopeIncorrectCurrent = "Transaction.Current has changed inside of the TransactionScope.";
	public const string TransactionScopeInvalidNesting = "TransactionScope nested incorrectly.";
	public const string TransactionScopeIsolationLevelDifferentFromTransaction = "The transaction specified for TransactionScope has a different IsolationLevel than the value requested for the scope.";
	public const string TransactionScopeTimerObjectInvalid = "TransactionScope timer object is invalid.";
	public const string TransactionStateException = "The operation is not valid for the state of the transaction.";
	public const string UnexpectedFailureOfThreadPool = "There was an unexpected failure of QueueUserWorkItem.";
	public const string UnexpectedTimerFailure = "There was an unexpected failure of a timer.";
	public const string UnrecognizedRecoveryInformation = "The RecoveryInformation provided is not recognized by this version of System.Transactions.";
	public const string VolEnlistNoRecoveryInfo = "Volatile enlistments do not generate recovery information.";
	public const string DistributedTxIDInTransactionException = "{0} Distributed Transaction ID is {1}";
	public const string PromoterTypeInvalid = "The specified PromoterType is invalid.";
	public const string PromoterTypeUnrecognized = "There is a promotable enlistment for the transaction which has a PromoterType value that is not recognized by System.Transactions. {0}";
	public const string DistributedNotSupported = "This platform does not support distributed transactions.";
}
