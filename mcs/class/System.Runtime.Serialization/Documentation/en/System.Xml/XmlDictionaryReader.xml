<?xml version="1.0" encoding="utf-8"?>
<Type Name="XmlDictionaryReader" FullName="System.Xml.XmlDictionaryReader">
  <TypeSignature Language="C#" Value="public abstract class XmlDictionaryReader : System.Xml.XmlReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlDictionaryReader extends System.Xml.XmlReader" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <remarks>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>Methods in this class read <see cref="T:System.Xml.XmlDictionary" /> objects.</para>
      <para>This class is derived from <see cref="T:System.Xml.XmlReader" />. </para>
      <para>Note that there is a known issue with the normalization of linefeed characters inside of CDATA sections that you may encounter.</para>
    </remarks>
    <summary>
      <attribution license="cc4" from="Microsoft" modified="false" />
      <para>An abstract class that the indigo1 derives from <see cref="T:System.Xml.XmlReader" /> to do serialization and deserialization.</para>
    </summary>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlDictionaryReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The only constructor for this class is the default constructor.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of this class.  Invoked only by its derived classes.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CanCanonicalize">
      <MemberSignature Language="C#" Value="public virtual bool CanCanonicalize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCanonicalize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property always returns false.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This property always returns false. Its derived classes can override to return true if they support canonicalization.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (System.IO.Stream stream, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(class System.IO.Stream stream, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (System.IO.Stream stream, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.XmlBinaryReaderSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(class System.IO.Stream stream, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.XmlBinaryReaderSession session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="session" Type="System.Xml.XmlBinaryReaderSession" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
        <param name="session">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (byte[] buffer, int offset, int count, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas that apply to this operation.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (System.IO.Stream stream, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.XmlBinaryReaderSession session, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(class System.IO.Stream stream, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.XmlBinaryReaderSession session, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="session" Type="System.Xml.XmlBinaryReaderSession" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
        <param name="session">
          <attribution license="cc4" from="Microsoft" modified="false" />
          <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />Delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (byte[] buffer, int offset, int count, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.XmlBinaryReaderSession session);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.XmlBinaryReaderSession session) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="session" Type="System.Xml.XmlBinaryReaderSession" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
        <param name="session">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateBinaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateBinaryReader (byte[] buffer, int offset, int count, System.Xml.IXmlDictionary dictionary, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.XmlBinaryReaderSession session, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateBinaryReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.IXmlDictionary dictionary, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.XmlBinaryReaderSession session, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="dictionary" Type="System.Xml.IXmlDictionary" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="session" Type="System.Xml.XmlBinaryReaderSession" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Other <see cref="T:System.Xml.XmlDictionaryReader" /> properties are set to default values or null.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read .NET Binary XML Format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="dictionary">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionary" /> to use.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
        <param name="session">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlBinaryReaderSession" /> to use.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />Delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateDictionaryReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateDictionaryReader (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateDictionaryReader(class System.Xml.XmlReader reader) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> from an existing <see cref="T:System.Xml.XmlReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="reader">
          <attribution license="cc4" from="Microsoft" modified="false" />An instance of <see cref="T:System.Xml.XmlReader" />.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a stream, using the character encoding specified by <paramref name="encoding" />, an instance of <see cref="T:System.Text.Encoding" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="encoding">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encoding of the stream.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (System.IO.Stream stream, System.Text.Encoding[] encodings, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(class System.IO.Stream stream, class System.Text.Encoding[] encodings, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a stream, using one of the character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the stream.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (System.IO.Stream stream, System.Text.Encoding[] encodings, string contentType, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(class System.IO.Stream stream, class System.Text.Encoding[] encodings, string contentType, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a stream, using one of the character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />. The message is of the specified MIME type. If <paramref name="contentType" /> is null, the Content-Type MIME header must be present in the message.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the stream.</param>
        <param name="contentType">
          <attribution license="cc4" from="Microsoft" modified="false" />The Content-Type MIME type of the message.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a buffer with a specified offset and count, using the character encoding specified by <paramref name="encoding" />, an instance of <see cref="T:System.Text.Encoding" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="encoding">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encoding of the input.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (byte[] buffer, int offset, int count, System.Text.Encoding[] encodings, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding[] encodings, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a buffer with a specified offset and count, using one of the character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the input.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (byte[] buffer, int offset, int count, System.Text.Encoding[] encodings, string contentType, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding[] encodings, string contentType, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a buffer with a specified offset and count, using one of the  character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />. The message is of the specified MIME type. If <paramref name="contentType" /> is null, the Content-Type MIME header must be present in the message.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the input.</param>
        <param name="contentType">
          <attribution license="cc4" from="Microsoft" modified="false" />The Content-Type MIME type of the message.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas to apply to this reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (System.IO.Stream stream, System.Text.Encoding[] encodings, string contentType, System.Xml.XmlDictionaryReaderQuotas quotas, int maxBufferSize, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(class System.IO.Stream stream, class System.Text.Encoding[] encodings, string contentType, class System.Xml.XmlDictionaryReaderQuotas quotas, int32 maxBufferSize, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="maxBufferSize" Type="System.Int32" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a stream, using one of the character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />. The message is of the specified MIME type. If <paramref name="contentType" /> is null, the Content-Type MIME header must be present in the message.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the stream.</param>
        <param name="contentType">
          <attribution license="cc4" from="Microsoft" modified="false" />The Content-Type MIME type of the message.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The MIME type of the message.</param>
        <param name="maxBufferSize">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />The delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateMtomReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateMtomReader (byte[] buffer, int offset, int count, System.Text.Encoding[] encodings, string contentType, System.Xml.XmlDictionaryReaderQuotas quotas, int maxBufferSize, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateMtomReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding[] encodings, string contentType, class System.Xml.XmlDictionaryReaderQuotas quotas, int32 maxBufferSize, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encodings" Type="System.Text.Encoding[]" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="maxBufferSize" Type="System.Int32" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method reads from a buffer with a specified offset and count, using one of the character encodings specified by <paramref name="encodings" />, an array of instances of <see cref="T:System.Text.Encoding" />. The message is of the specified MIME type. If <paramref name="contentType" /> is null, the Content-Type MIME header must be present in the message.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that reads XML in the MTOM format.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="encodings">
          <attribution license="cc4" from="Microsoft" modified="false" />The possible character encodings of the input.</param>
        <param name="contentType">
          <attribution license="cc4" from="Microsoft" modified="false" />The Content-Type MIME type of the message.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply to the reader.</param>
        <param name="maxBufferSize">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum allowed size of the buffer.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />The delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateTextReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateTextReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateTextReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The reader created is optimized for reading UTF-8 text.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas applied to the reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateTextReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateTextReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateTextReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The reader created is optimized for reading UTF-8 text.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas applied to the reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateTextReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateTextReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateTextReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The reader created is optimized for reading UTF-8 text.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The quotas applied to the reader.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateTextReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateTextReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateTextReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The reader created is optimized for reading UTF-8 text.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream from which to read.</param>
        <param name="encoding">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Text.Encoding" /> object that specifies the encoding properties to apply.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />The delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="CreateTextReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateTextReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateTextReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The reader created is optimized for reading UTF-8 text.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Creates an instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An instance of <see cref="T:System.Xml.XmlDictionaryReader" />.</para>
        </returns>
        <param name="buffer">
          <attribution license="cc4" from="Microsoft" modified="false" />The buffer from which to read.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting position from which to read in <paramref name="buffer" />.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of bytes that can be read from <paramref name="buffer" />.</param>
        <param name="encoding">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Text.Encoding" /> object that specifies the encoding properties to apply.</param>
        <param name="quotas">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> to apply.</param>
        <param name="onClose">
          <attribution license="cc4" from="Microsoft" modified="false" />The delegate to be called when the reader is closed.</param>
      </Docs>
    </Member>
    <Member MemberName="EndCanonicalization">
      <MemberSignature Language="C#" Value="public virtual void EndCanonicalization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCanonicalization() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is not yet implemented.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public virtual string GetAttribute (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>When overridden in a derived class, gets the value of an attribute.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The value of the attribute.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
      </Docs>
    </Member>
    <Member MemberName="IndexOfLocalName">
      <MemberSignature Language="C#" Value="public virtual int IndexOfLocalName (string[] localNames, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfLocalName(string[] localNames, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localNames" Type="System.String[]" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <paramref name="localNames" /> is an array of strings, and <paramref name="namespaceUri" /> is a string.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the index of the local name of the current node within an array of names.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The index of the local name of the current node within an array of names.</para>
        </returns>
        <param name="localNames">
          <attribution license="cc4" from="Microsoft" modified="false" />The string array of local names to be searched.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace of current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IndexOfLocalName">
      <MemberSignature Language="C#" Value="public virtual int IndexOfLocalName (System.Xml.XmlDictionaryString[] localNames, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfLocalName(class System.Xml.XmlDictionaryString[] localNames, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localNames" Type="System.Xml.XmlDictionaryString[]" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <paramref name="localNames" /> is an array of <see cref="T:System.Xml.XmlDictionaryString" />, and <paramref name="namespaceUri" /> is an <see cref="T:System.Xml.XmlDictionaryString" />.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the index of the local name of the current node within an array of names.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The index of the local name of the current node within an array of names.</para>
        </returns>
        <param name="localNames">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Xml.XmlDictionaryString" /> array of local names to be searched.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace of current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public virtual bool IsArray (out Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsArray(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalName">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalName (string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLocalName(string localName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="localName" /> matches local name of the current node; otherwise false.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IsLocalName">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalName (System.Xml.XmlDictionaryString localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLocalName(class System.Xml.XmlDictionaryString localName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the parameter, <paramref name="localName" />, is the local name of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="localName" /> matches local name of the current node; otherwise false.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceUri">
      <MemberSignature Language="C#" Value="public virtual bool IsNamespaceUri (string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNamespaceUri(string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="namespaceUri" /> matches namespace of the current node; otherwise false.</para>
        </returns>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace of current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceUri">
      <MemberSignature Language="C#" Value="public virtual bool IsNamespaceUri (System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNamespaceUri(class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the parameter, <paramref name="namespaceUri" />, is the namespace of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if <paramref name="namespaceUri" /> matches namespace of the current node; otherwise false.</para>
        </returns>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />Namespace of current node.</param>
      </Docs>
    </Member>
    <Member MemberName="IsStartArray">
      <MemberSignature Language="C#" Value="public virtual bool IsStartArray (out Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartArray(class System.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the first tag is a start tag or empty element tag and if the local name and namespace URI match those of the current node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the first tag in the array is a start tag or empty element tag and matches <paramref name="localName" /> and <paramref name="namespaceUri" />; otherwise false.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the local name of the attribute.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />An <see cref="T:System.Xml.XmlDictionaryString" /> that represents the namespace of the attribute.</param>
      </Docs>
    </Member>
    <Member MemberName="IsTextNode">
      <MemberSignature Language="C#" Value="protected bool IsTextNode (System.Xml.XmlNodeType nodeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsTextNode(valuetype System.Xml.XmlNodeType nodeType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeType" Type="System.Xml.XmlNodeType" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the current node is a text node.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>true if the node type is <see cref="F:System.Xml.XmlNodetype.Text" />, <see cref="F:System.Xml.XmlNodetype.Whitespace" />, <see cref="F:System.Xml.XmlNodetype.SignificantWhitespace" />, <see cref="F:System.Xml.XmlNodetype.CDATA" />, or <see cref="F:System.Xml.XmlNodetype.Attribute" />; otherwise false.</para>
        </returns>
        <param name="nodeType">
          <attribution license="cc4" from="Microsoft" modified="false" />Type of the node being tested.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToStartElement">
      <MemberSignature Language="C#" Value="public virtual void MoveToStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToStartElement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the current content node is a start element or an empty element.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="MoveToStartElement">
      <MemberSignature Language="C#" Value="public virtual void MoveToStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToStartElement(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element matches the given argument.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="P:System.Xml.XmlReader.Name" /> property of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToStartElement">
      <MemberSignature Language="C#" Value="public virtual void MoveToStartElement (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToStartElement(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element matches the given arguments.</para>
        </summary>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="MoveToStartElement">
      <MemberSignature Language="C#" Value="public virtual void MoveToStartElement (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToStartElement(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Tests whether the current content node is a start element or an empty element and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element matches the given argument.</para>
        </summary>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="Quotas">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlDictionaryReaderQuotas Quotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas Quotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Gets the quota values that apply to the current instance of this class.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, bool[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, bool[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Boolean[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, DateTime[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, valuetype System.DateTime[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.DateTime[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, decimal[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, valuetype System.Decimal[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Decimal[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, double[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, float64[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Double" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, Guid[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, valuetype System.Guid[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Guid[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, short[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, int16[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Int16[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of short integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, int[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, int32[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, long[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, int64[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of long integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, float[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, float32[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of float numbers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The umber of float numbers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the float numbers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (string localName, string namespaceUri, TimeSpan[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(string localName, string namespaceUri, valuetype System.TimeSpan[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
        <Parameter Name="array" Type="System.TimeSpan[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, bool[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, bool[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Boolean[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, DateTime[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, valuetype System.DateTime[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.DateTime[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.DateTime" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, decimal[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, valuetype System.Decimal[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Decimal[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Decimal" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, double[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, float64[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Double" /> nodes type into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, Guid[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, valuetype System.Guid[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Guid[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Guid" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, short[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, int16[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Int16[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of short integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, int[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, int32[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, long[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, int64[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of long integers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of integers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the integers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, float[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, float32[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.Single[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of float numbers into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of float numbers put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the float numbers are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadArray">
      <MemberSignature Language="C#" Value="public virtual int ReadArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri, TimeSpan[] array, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri, valuetype System.TimeSpan[] array, int32 offset, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="array" Type="System.TimeSpan[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.TimeSpan" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The number of nodes put in the array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
        <param name="array">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the nodes are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadBooleanArray">
      <MemberSignature Language="C#" Value="public virtual bool[] ReadBooleanArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool[] ReadBooleanArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota. </para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadBooleanArray">
      <MemberSignature Language="C#" Value="public virtual bool[] ReadBooleanArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool[] ReadBooleanArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads repeated occurrences of <see cref="T:System.Boolean" /> nodes into a typed array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.Boolean" /> array of the <see cref="T:System.Boolean" /> nodes.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAs">
      <MemberSignature Language="C#" Value="public override object ReadContentAs (Type type, System.Xml.IXmlNamespaceResolver nsResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ReadContentAs(class System.Type type, class System.Xml.IXmlNamespaceResolver nsResolver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="nsResolver" Type="System.Xml.IXmlNamespaceResolver" />
      </Parameters>
      <Docs>
        <param name="nsResolver">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a specified type.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The concatenated text content or attribute value converted to the requested type.</para>
        </returns>
        <param name="type">
          <attribution license="cc4" from="Microsoft" modified="false" />The <see cref="T:System.Type" /> of the value to be returned.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadContentAsBase64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadContentAsBase64() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the content and returns the Base64 decoded binary bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A byte array that contains the Base64 decoded binary bytes.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadContentAsBinHex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadContentAsBinHex() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the content and returns the BinHex decoded binary bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A byte array that contains the BinHex decoded binary bytes.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="protected byte[] ReadContentAsBinHex (int maxByteArrayContentLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance unsigned int8[] ReadContentAsBinHex(int32 maxByteArrayContentLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxByteArrayContentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the content and returns the BinHex decoded binary bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A byte array that contains the BinHex decoded binary bytes.</para>
        </returns>
        <param name="maxByteArrayContentLength">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum array length.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsChars">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsChars (char[] chars, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsChars(char[] chars, int32 offset, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the content into a char array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Number of characters read.</para>
        </returns>
        <param name="chars">
          <attribution license="cc4" from="Microsoft" modified="false" />The array into which the characters are put.</param>
        <param name="offset">
          <attribution license="cc4" from="Microsoft" modified="false" />The starting index in the array.</param>
        <param name="count">
          <attribution license="cc4" from="Microsoft" modified="false" />The number of characters to put in the array.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDecimal">
      <MemberSignature Language="C#" Value="public override decimal ReadContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal ReadContentAsDecimal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to decimal.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The decimal representation of node's content.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsFloat">
      <MemberSignature Language="C#" Value="public override float ReadContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 ReadContentAsFloat() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to float.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The float representation of node's content.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsGuid">
      <MemberSignature Language="C#" Value="public virtual Guid ReadContentAsGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid ReadContentAsGuid() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to guid.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The guid representation of node's content.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsQualifiedName">
      <MemberSignature Language="C#" Value="public virtual void ReadContentAsQualifiedName (out string localName, out string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadContentAsQualifiedName(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="namespaceUri" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <param name="namespaceUri">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public override string ReadContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadContentAsString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string returned by this read operation is limited by the MaxStringContentLength quota</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node content in a string representation.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="protected string ReadContentAsString (int maxStringContentLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string ReadContentAsString(int32 maxStringContentLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxStringContentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string returned by this read operation is limited by the MaxStringContentLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Node content in string representation.</para>
        </returns>
        <param name="maxStringContentLength">
          <attribution license="cc4" from="Microsoft" modified="false" />The maximum string length.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString (string[] strings, out int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString(string[] strings, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strings" Type="System.String[]" />
        <Parameter Name="index" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="strings">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString (System.Xml.XmlDictionaryString[] strings, out int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString(class System.Xml.XmlDictionaryString[] strings, int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strings" Type="System.Xml.XmlDictionaryString[]" />
        <Parameter Name="index" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="strings">To be added.</param>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan ReadContentAsTimeSpan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan ReadContentAsTimeSpan() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>
            <see cref="T:System.TimeSpan" /> representation of node's content.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsUniqueId">
      <MemberSignature Language="C#" Value="public virtual System.Xml.UniqueId ReadContentAsUniqueId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.UniqueId ReadContentAsUniqueId() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a unique identifier.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a unique identifier.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadDateTimeArray">
      <MemberSignature Language="C#" Value="public virtual DateTime[] ReadDateTimeArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime[] ReadDateTimeArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.DateTime" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.DateTime" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadDateTimeArray">
      <MemberSignature Language="C#" Value="public virtual DateTime[] ReadDateTimeArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime[] ReadDateTimeArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.DateTime" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.DateTime" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadDecimalArray">
      <MemberSignature Language="C#" Value="public virtual decimal[] ReadDecimalArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal[] ReadDecimalArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.Decimal" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Decimal" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadDecimalArray">
      <MemberSignature Language="C#" Value="public virtual decimal[] ReadDecimalArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal[] ReadDecimalArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.Decimal" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Decimal" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadDoubleArray">
      <MemberSignature Language="C#" Value="public virtual double[] ReadDoubleArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] ReadDoubleArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.Double" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Double" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadDoubleArray">
      <MemberSignature Language="C#" Value="public virtual double[] ReadDoubleArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] ReadDoubleArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a <see cref="T:System.Double" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Double" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadElementContentAsBase64 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadElementContentAsBase64() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string returned by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to a array of Base64 bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as an array of Base64 bytes.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual byte[] ReadElementContentAsBinHex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ReadElementContentAsBinHex() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string returned by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts a node's content to an array of BinHex bytes.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as an array of BinHex bytes.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public override bool ReadElementContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadElementContentAsBoolean() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.Boolean" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Boolean" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ReadElementContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ReadElementContentAsDateTime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.DateTime" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.DateTime" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public override decimal ReadElementContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal ReadElementContentAsDecimal() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.Decimal" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Decimal" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public override double ReadElementContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 ReadElementContentAsDouble() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.Double" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Double" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public override float ReadElementContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 ReadElementContentAsFloat() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a floating point number (<see cref="T:System.Single" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a floating point number (<see cref="T:System.Single" />).</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsGuid">
      <MemberSignature Language="C#" Value="public virtual Guid ReadElementContentAsGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid ReadElementContentAsGuid() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.Guid" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.Guid" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsInt() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to an integer (<see cref="T:System.Int32" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as an integer (<see cref="T:System.Int32" />).</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public override long ReadElementContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 ReadElementContentAsLong() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a long integer (<see cref="T:System.Int64" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a long integer (<see cref="T:System.Int64" />).</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public override string ReadElementContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadElementContentAsString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The string returned by this read operation is limited by the MaxStringContentLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.String" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.String" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsTimeSpan">
      <MemberSignature Language="C#" Value="public virtual TimeSpan ReadElementContentAsTimeSpan ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan ReadElementContentAsTimeSpan() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a <see cref="T:System.TimeSpan" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a <see cref="T:System.TimeSpan" />.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsUniqueId">
      <MemberSignature Language="C#" Value="public virtual System.Xml.UniqueId ReadElementContentAsUniqueId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.UniqueId ReadElementContentAsUniqueId() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.UniqueId</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Converts an element's content to a unique identifier.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The node's content represented as a unique identifier.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadFullStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadFullStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFullStartElement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the current node is an element and advances the reader to the next node.</para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadFullStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadFullStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFullStartElement(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the current node is an element with the given <paramref name="name" /> and advances the reader to the next node.</para>
        </summary>
        <param name="name">
          <attribution license="cc4" from="Microsoft" modified="false" />The qualified name of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadFullStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadFullStartElement (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFullStartElement(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</para>
        </summary>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadFullStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadFullStartElement (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadFullStartElement(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</para>
        </summary>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadGuidArray">
      <MemberSignature Language="C#" Value="public virtual Guid[] ReadGuidArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid[] ReadGuidArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Guid" />.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadGuidArray">
      <MemberSignature Language="C#" Value="public virtual Guid[] ReadGuidArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Guid[] ReadGuidArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of <see cref="T:System.Guid" />.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of <see cref="T:System.Guid" />.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt16Array">
      <MemberSignature Language="C#" Value="public virtual short[] ReadInt16Array (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16[] ReadInt16Array(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of short integers (<see cref="T:System.Int16" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt16Array">
      <MemberSignature Language="C#" Value="public virtual short[] ReadInt16Array (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int16[] ReadInt16Array(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of short integers (<see cref="T:System.Int16" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of short integers (<see cref="T:System.Int16" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32Array">
      <MemberSignature Language="C#" Value="public virtual int[] ReadInt32Array (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] ReadInt32Array(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of integers (<see cref="T:System.Int32" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt32Array">
      <MemberSignature Language="C#" Value="public virtual int[] ReadInt32Array (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] ReadInt32Array(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of integers (<see cref="T:System.Int32" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of integers (<see cref="T:System.Int32" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64Array">
      <MemberSignature Language="C#" Value="public virtual long[] ReadInt64Array (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64[] ReadInt64Array(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of long integers (<see cref="T:System.Int64" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadInt64Array">
      <MemberSignature Language="C#" Value="public virtual long[] ReadInt64Array (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64[] ReadInt64Array(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of long integers (<see cref="T:System.Int64" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of long integers (<see cref="T:System.Int64" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadSingleArray">
      <MemberSignature Language="C#" Value="public virtual float[] ReadSingleArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] ReadSingleArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of float numbers (<see cref="T:System.Single" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadSingleArray">
      <MemberSignature Language="C#" Value="public virtual float[] ReadSingleArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] ReadSingleArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into an array of float numbers (<see cref="T:System.Single" />).</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>An array of float numbers (<see cref="T:System.Single" />).</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Checks whether the current node is an element with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> and advances the reader to the next node.</para>
        </summary>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of the current node into a string.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string that contains the contents of the current node.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="protected string ReadString (int maxStringContentLength);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string ReadString(int32 maxStringContentLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxStringContentLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of the current node into a string with a given maximum length.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A string that contains the contents of the current node.</para>
        </returns>
        <param name="maxStringContentLength">
          <attribution license="cc4" from="Microsoft" modified="false" />Maximum allowed string length.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeSpanArray">
      <MemberSignature Language="C#" Value="public virtual TimeSpan[] ReadTimeSpanArray (string localName, string namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan[] ReadTimeSpanArray(string localName, string namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="namespaceUri" Type="System.String" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeSpanArray">
      <MemberSignature Language="C#" Value="public virtual TimeSpan[] ReadTimeSpanArray (System.Xml.XmlDictionaryString localName, System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TimeSpan[] ReadTimeSpanArray(class System.Xml.XmlDictionaryString localName, class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString" />
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>The buffer allocated by this read operation is limited by the MaxArrayLength quota.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Reads the contents of a series of nodes with the given <paramref name="localName" /> and <paramref name="namespaceUri" /> into a <see cref="T:System.TimeSpan" /> array.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>A <see cref="T:System.TimeSpan" /> array.</para>
        </returns>
        <param name="localName">
          <attribution license="cc4" from="Microsoft" modified="false" />The local name of the element.</param>
        <param name="namespaceUri">
          <attribution license="cc4" from="Microsoft" modified="false" />The namespace URI of the element.</param>
      </Docs>
    </Member>
    <Member MemberName="ReadValueAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadValueAsBase64 (byte[] bytes, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadValueAsBase64(unsigned int8[] bytes, int32 start, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <param name="start">To be added.</param>
        <param name="length">To be added.</param>
        <remarks>To be added.</remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Not implemented.</para>
        </summary>
        <returns>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Not implemented.</para>
        </returns>
      </Docs>
    </Member>
    <Member MemberName="StartCanonicalization">
      <MemberSignature Language="C#" Value="public virtual void StartCanonicalization (System.IO.Stream stream, bool includeComments, string[] inclusivePrefixes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCanonicalization(class System.IO.Stream stream, bool includeComments, string[] inclusivePrefixes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="includeComments" Type="System.Boolean" />
        <Parameter Name="inclusivePrefixes" Type="System.String[]" />
      </Parameters>
      <Docs>
        <remarks>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>Start reading the canonical octets of the XML being read to this reader from the supplied stream until the matching EndCanonicalization call is made. The content read from the main reader stream is unaffected by this call. <paramref name="includeComments" /> defines whether comments are to be included in the canonical input and <paramref name="inclusivePrefixes" /> provides the list of prefixes to be treated as inclusive prefixes with the exclusive canonicalization algorithm.</para>
        </remarks>
        <summary>
          <attribution license="cc4" from="Microsoft" modified="false" />
          <para>This method is not yet implemented.</para>
        </summary>
        <param name="stream">
          <attribution license="cc4" from="Microsoft" modified="false" />The stream to read from.</param>
        <param name="includeComments">
          <attribution license="cc4" from="Microsoft" modified="false" />Determines whether comments are included.</param>
        <param name="inclusivePrefixes">
          <attribution license="cc4" from="Microsoft" modified="false" />The prefixes to be included.</param>
      </Docs>
    </Member>
    <Member MemberName="TryGetArrayLength">
      <MemberSignature Language="C#" Value="public virtual bool TryGetArrayLength (out int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetArrayLength(int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetBase64ContentLength">
      <MemberSignature Language="C#" Value="public virtual bool TryGetBase64ContentLength (out int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetBase64ContentLength(int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetLocalNameAsDictionaryString">
      <MemberSignature Language="C#" Value="public virtual bool TryGetLocalNameAsDictionaryString (out System.Xml.XmlDictionaryString localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetLocalNameAsDictionaryString(class System.Xml.XmlDictionaryString localName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="localName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetNamespaceUriAsDictionaryString">
      <MemberSignature Language="C#" Value="public virtual bool TryGetNamespaceUriAsDictionaryString (out System.Xml.XmlDictionaryString namespaceUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetNamespaceUriAsDictionaryString(class System.Xml.XmlDictionaryString namespaceUri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceUri" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="namespaceUri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValueAsDictionaryString">
      <MemberSignature Language="C#" Value="public virtual bool TryGetValueAsDictionaryString (out System.Xml.XmlDictionaryString value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValueAsDictionaryString(class System.Xml.XmlDictionaryString value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlDictionaryString&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>