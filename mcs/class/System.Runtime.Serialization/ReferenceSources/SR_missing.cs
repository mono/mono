namespace System.Runtime.Serialization
{
	static partial class SR
	{

#region MissingInStrings.txt

//
// This was retrieved as follows:
//
// 1. mcs ReferenceSources/SR.cs -t:library -out:existing.dll
// 2. mcs {https://raw.githubusercontent.com/mono/mono/wip-serialization-halfway/mcs/class/System.Runtime.Serialization/ReferenceSource/SR.cs} -t:library -out:full.dll
// 3. csharp -e "System.IO.File.WriteAllLines ("existing.txt", System.Reflection.Assembly.ReflectionOnlyLoadFrom ("existing.dll").GetTypes ().SelectMany (t => t.GetFields ()).Select (f => f.Name).ToArray ())"
// 4. csharp -e "System.IO.File.WriteAllLines ("full.txt", System.Reflection.Assembly.ReflectionOnlyLoadFrom ("full.dll").GetTypes ().SelectMany (t => t.GetFields ()).Select (f => f.Name).ToArray ())"
// 5. csharp
//	var existing = System.IO.File.ReadAllLines ("existing.txt");
//	var full = System.IO.File.ReadAllLines ("full.txt");
//  var missing = full.Where (f => !existing.Contains (f));
//  System.IO.File.WriteAllLines ("missing.cs", missing.Select (m => "public const string " + m + " = @\"" + m + "\";").ToArray ())
// 6. copy missing.cs contents here.
//

public const string AbstractElementNotSupported = @"AbstractElementNotSupported";
public const string AbstractTypeNotSupported = @"AbstractTypeNotSupported";
public const string AmbiguousReferencedCollectionTypes1 = @"AmbiguousReferencedCollectionTypes1";
public const string AmbiguousReferencedCollectionTypes3 = @"AmbiguousReferencedCollectionTypes3";
public const string AmbiguousReferencedTypes1 = @"AmbiguousReferencedTypes1";
public const string AmbiguousReferencedTypes3 = @"AmbiguousReferencedTypes3";
public const string AnnotationAttributeNotFound = @"AnnotationAttributeNotFound";
public const string AnonymousTypeNotSupported = @"AnonymousTypeNotSupported";
public const string AnyAttributeNotSupported = @"AnyAttributeNotSupported";
public const string ArrayItemFormMustBe = @"ArrayItemFormMustBe";
public const string ArraySizeAttributeIncorrect = @"ArraySizeAttributeIncorrect";
public const string ArraySizeXmlMismatch = @"ArraySizeXmlMismatch";
public const string ArrayTypeCannotBeImported = @"ArrayTypeCannotBeImported";
public const string AssemblyNotFound = @"AssemblyNotFound";
public const string AttributeNotFound = @"AttributeNotFound";
public const string BaseTypeNotISerializable = @"BaseTypeNotISerializable";
public const string CannotComputeUniqueName = @"CannotComputeUniqueName";
public const string CannotDeriveFromSealedReferenceType = @"CannotDeriveFromSealedReferenceType";
public const string CannotDeserializeForwardedType = @"CannotDeserializeForwardedType";
public const string CannotExportNullAssembly = @"CannotExportNullAssembly";
public const string CannotExportNullKnownType = @"CannotExportNullKnownType";
public const string CannotExportNullType = @"CannotExportNullType";
public const string CannotHaveDuplicateAttributeNames = @"CannotHaveDuplicateAttributeNames";
public const string CannotHaveDuplicateElementNames = @"CannotHaveDuplicateElementNames";
public const string CannotImportInvalidSchemas = @"CannotImportInvalidSchemas";
public const string CannotImportNullDataContractName = @"CannotImportNullDataContractName";
public const string CannotImportNullSchema = @"CannotImportNullSchema";
public const string CannotSetMembersForReferencedType = @"CannotSetMembersForReferencedType";
public const string CannotSetNamespaceForReferencedType = @"CannotSetNamespaceForReferencedType";
public const string CannotUseGenericTypeAsBase = @"CannotUseGenericTypeAsBase";
public const string ChangingFullTypeNameNotSupported = @"ChangingFullTypeNameNotSupported";
public const string CircularTypeReference = @"CircularTypeReference";
public const string ClassDataContractReturnedForGetOnlyCollection = @"ClassDataContractReturnedForGetOnlyCollection";
public const string CLRNamespaceMappedMultipleTimes = @"CLRNamespaceMappedMultipleTimes";
public const string ClrTypeNotFound = @"ClrTypeNotFound";
public const string CollectionAssignedToIncompatibleInterface = @"CollectionAssignedToIncompatibleInterface";
public const string ComplexTypeRestrictionNotSupported = @"ComplexTypeRestrictionNotSupported";
public const string ConfigDataContractSerializerSectionLoadError = @"ConfigDataContractSerializerSectionLoadError";
public const string ConfigIndexOutOfRange = @"ConfigIndexOutOfRange";
public const string ConfigMustOnlyAddParamsWithType = @"ConfigMustOnlyAddParamsWithType";
public const string ConfigMustOnlySetTypeOrIndex = @"ConfigMustOnlySetTypeOrIndex";
public const string ConfigMustSetTypeOrIndex = @"ConfigMustSetTypeOrIndex";
public const string CouldNotReadSerializationSchema = @"CouldNotReadSerializationSchema";
public const string DefaultOnElementNotSupported = @"DefaultOnElementNotSupported";
public const string DerivedTypeNotISerializable = @"DerivedTypeNotISerializable";
public const string DupContractInDataContractSet = @"DupContractInDataContractSet";
public const string DuplicateExtensionDataSetMethod = @"DuplicateExtensionDataSetMethod";
public const string DupMemberValue = @"DupMemberValue";
public const string DupTypeContractInDataContractSet = @"DupTypeContractInDataContractSet";
public const string ElementMaxOccursMustBe = @"ElementMaxOccursMustBe";
public const string ElementMinOccursMustBe = @"ElementMinOccursMustBe";
public const string ElementRefOnLocalElementNotSupported = @"ElementRefOnLocalElementNotSupported";
public const string EnumEnumerationFacetsMustHaveValue = @"EnumEnumerationFacetsMustHaveValue";
public const string EnumListInAnonymousTypeNotSupported = @"EnumListInAnonymousTypeNotSupported";
public const string EnumListMustContainAnonymousType = @"EnumListMustContainAnonymousType";
public const string EnumOnlyEnumerationFacetsSupported = @"EnumOnlyEnumerationFacetsSupported";
public const string EnumRestrictionInvalid = @"EnumRestrictionInvalid";
public const string EnumTypeCannotBeImported = @"EnumTypeCannotBeImported";
public const string EnumTypeNotSupportedByDataContractJsonSerializer = @"EnumTypeNotSupportedByDataContractJsonSerializer";
public const string EnumUnionInAnonymousTypeNotSupported = @"EnumUnionInAnonymousTypeNotSupported";
public const string ExtensionDataSetMustReturnVoid = @"ExtensionDataSetMustReturnVoid";
public const string ExtensionDataSetParameterInvalid = @"ExtensionDataSetParameterInvalid";
public const string FactoryObjectContainsSelfReference = @"FactoryObjectContainsSelfReference";
public const string FactoryTypeNotISerializable = @"FactoryTypeNotISerializable";
public const string FixedOnElementNotSupported = @"FixedOnElementNotSupported";
public const string FlushBufferAlreadyInUse = @"FlushBufferAlreadyInUse";
public const string FormMustBeQualified = @"FormMustBeQualified";
public const string GenericAnnotationAttributeNotFound = @"GenericAnnotationAttributeNotFound";
public const string GenericAnnotationForNestedLevelMustBeIncreasing = @"GenericAnnotationForNestedLevelMustBeIncreasing";
public const string GenericAnnotationHasInvalidAttributeValue = @"GenericAnnotationHasInvalidAttributeValue";
public const string GenericAnnotationHasInvalidElement = @"GenericAnnotationHasInvalidElement";
public const string GenericTypeNameMismatch = @"GenericTypeNameMismatch";
public const string GenericTypeNotExportable = @"GenericTypeNotExportable";
public const string GetOnlyCollectionMustHaveAddMethod = @"GetOnlyCollectionMustHaveAddMethod";
public const string GetRealObjectReturnedNull = @"GetRealObjectReturnedNull";
public const string InvalidAnnotationExpectingText = @"InvalidAnnotationExpectingText";
public const string InvalidAssemblyFormat = @"InvalidAssemblyFormat";
public const string InvalidCharacterEncountered = @"InvalidCharacterEncountered";
public const string InvalidClassDerivation = @"InvalidClassDerivation";
public const string InvalidClrNameGeneratedForISerializable = @"InvalidClrNameGeneratedForISerializable";
public const string InvalidClrNamespaceGeneratedForISerializable = @"InvalidClrNamespaceGeneratedForISerializable";
public const string InvalidDataNode = @"InvalidDataNode";
public const string InvalidEmitDefaultAnnotation = @"InvalidEmitDefaultAnnotation";
public const string InvalidEnumBaseType = @"InvalidEnumBaseType";
public const string InvalidISerializableDerivation = @"InvalidISerializableDerivation";
public const string InvalidKeyValueType = @"InvalidKeyValueType";
public const string InvalidKeyValueTypeNamespace = @"InvalidKeyValueTypeNamespace";
public const string InvalidNodeType = @"InvalidNodeType";
public const string InvalidReturnSchemaOnGetSchemaMethod = @"InvalidReturnSchemaOnGetSchemaMethod";
public const string InvalidStateInExtensionDataReader = @"InvalidStateInExtensionDataReader";
public const string InvalidXmlDeserializingExtensionData = @"InvalidXmlDeserializingExtensionData";
public const string IsAnyNotSupportedByNetDataContractSerializer = @"IsAnyNotSupportedByNetDataContractSerializer";
public const string IsDictionaryFormattedIncorrectly = @"IsDictionaryFormattedIncorrectly";
public const string ISerializableAssemblyNameSetToZero = @"ISerializableAssemblyNameSetToZero";
public const string ISerializableCannotHaveDataContract = @"ISerializableCannotHaveDataContract";
public const string ISerializableContainsMoreThanOneItems = @"ISerializableContainsMoreThanOneItems";
public const string ISerializableDerivedContainsOneOrMoreItems = @"ISerializableDerivedContainsOneOrMoreItems";
public const string ISerializableDoesNotContainAny = @"ISerializableDoesNotContainAny";
public const string ISerializableMustRefFactoryTypeAttribute = @"ISerializableMustRefFactoryTypeAttribute";
public const string ISerializableTypeCannotBeImported = @"ISerializableTypeCannotBeImported";
public const string ISerializableWildcardMaxOccursMustBe = @"ISerializableWildcardMaxOccursMustBe";
public const string ISerializableWildcardMinOccursMustBe = @"ISerializableWildcardMinOccursMustBe";
public const string ISerializableWildcardNamespaceInvalid = @"ISerializableWildcardNamespaceInvalid";
public const string ISerializableWildcardProcessContentsInvalid = @"ISerializableWildcardProcessContentsInvalid";
public const string IsReferenceGetOnlyCollectionsNotSupported = @"IsReferenceGetOnlyCollectionsNotSupported";
public const string IsValueTypeFormattedIncorrectly = @"IsValueTypeFormattedIncorrectly";
public const string JsonAttributeAlreadyWritten = @"JsonAttributeAlreadyWritten";
public const string JsonAttributeMustHaveElement = @"JsonAttributeMustHaveElement";
public const string JsonCannotWriteStandaloneTextAfterQuotedText = @"JsonCannotWriteStandaloneTextAfterQuotedText";
public const string JsonCannotWriteTextAfterNonTextAttribute = @"JsonCannotWriteTextAfterNonTextAttribute";
public const string JsonDateTimeOutOfRange = @"JsonDateTimeOutOfRange";
public const string JsonDuplicateMemberInInput = @"JsonDuplicateMemberInInput";
public const string JsonDuplicateMemberNames = @"JsonDuplicateMemberNames";
public const string JsonEncodingNotSupported = @"JsonEncodingNotSupported";
public const string JsonEncounteredUnexpectedCharacter = @"JsonEncounteredUnexpectedCharacter";
public const string JsonEndElementNoOpenNodes = @"JsonEndElementNoOpenNodes";
public const string JsonExpectedEncoding = @"JsonExpectedEncoding";
public const string JsonInvalidBytes = @"JsonInvalidBytes";
public const string JsonInvalidDataTypeSpecifiedForServerType = @"JsonInvalidDataTypeSpecifiedForServerType";
public const string JsonInvalidDateTimeString = @"JsonInvalidDateTimeString";
public const string JsonInvalidFFFE = @"JsonInvalidFFFE";
public const string JsonInvalidItemNameForArrayElement = @"JsonInvalidItemNameForArrayElement";
public const string JsonInvalidLocalNameEmpty = @"JsonInvalidLocalNameEmpty";
public const string JsonInvalidMethodBetweenStartEndAttribute = @"JsonInvalidMethodBetweenStartEndAttribute";
public const string JsonInvalidRootElementName = @"JsonInvalidRootElementName";
public const string JsonInvalidStartElementCall = @"JsonInvalidStartElementCall";
public const string JsonInvalidWriteState = @"JsonInvalidWriteState";
public const string JsonMethodNotSupported = @"JsonMethodNotSupported";
public const string JsonMultipleRootElementsNotAllowedOnWriter = @"JsonMultipleRootElementsNotAllowedOnWriter";
public const string JsonMustSpecifyDataType = @"JsonMustSpecifyDataType";
public const string JsonMustUseWriteStringForWritingAttributeValues = @"JsonMustUseWriteStringForWritingAttributeValues";
public const string JsonNamespaceMustBeEmpty = @"JsonNamespaceMustBeEmpty";
public const string JsonNestedArraysNotSupported = @"JsonNestedArraysNotSupported";
public const string JsonNodeTypeArrayOrObjectNotSpecified = @"JsonNodeTypeArrayOrObjectNotSpecified";
public const string JsonNoMatchingStartAttribute = @"JsonNoMatchingStartAttribute";
public const string JsonOffsetExceedsBufferSize = @"JsonOffsetExceedsBufferSize";
public const string JsonOneRequiredMemberNotFound = @"JsonOneRequiredMemberNotFound";
public const string JsonOnlyWhitespace = @"JsonOnlyWhitespace";
public const string JsonOpenAttributeMustBeClosedFirst = @"JsonOpenAttributeMustBeClosedFirst";
public const string JsonPrefixMustBeNullOrEmpty = @"JsonPrefixMustBeNullOrEmpty";
public const string JsonRequiredMembersNotFound = @"JsonRequiredMembersNotFound";
public const string JsonServerTypeSpecifiedForInvalidDataType = @"JsonServerTypeSpecifiedForInvalidDataType";
public const string JsonSizeExceedsRemainingBufferSpace = @"JsonSizeExceedsRemainingBufferSpace";
public const string JsonTypeNotSupportedByDataContractJsonSerializer = @"JsonTypeNotSupportedByDataContractJsonSerializer";
public const string JsonUnexpectedAttributeLocalName = @"JsonUnexpectedAttributeLocalName";
public const string JsonUnexpectedAttributeValue = @"JsonUnexpectedAttributeValue";
public const string JsonUnexpectedEndOfFile = @"JsonUnexpectedEndOfFile";
public const string JsonUnsupportedForIsReference = @"JsonUnsupportedForIsReference";
public const string JsonWriteArrayNotSupported = @"JsonWriteArrayNotSupported";
public const string JsonWriterClosed = @"JsonWriterClosed";
public const string JsonXmlInvalidDeclaration = @"JsonXmlInvalidDeclaration";
public const string JsonXmlProcessingInstructionNotSupported = @"JsonXmlProcessingInstructionNotSupported";
public const string KeyTypeCannotBeParsedInSimpleDictionary = @"KeyTypeCannotBeParsedInSimpleDictionary";
public const string KnownTypeConfigGenericParamMismatch = @"KnownTypeConfigGenericParamMismatch";
public const string KnownTypeConfigIndexOutOfBounds = @"KnownTypeConfigIndexOutOfBounds";
public const string KnownTypeConfigIndexOutOfBoundsZero = @"KnownTypeConfigIndexOutOfBoundsZero";
public const string KnownTypeConfigObject = @"KnownTypeConfigObject";
public const string MaxMimePartsExceeded = @"MaxMimePartsExceeded";
public const string MimeContentTypeHeaderInvalid = @"MimeContentTypeHeaderInvalid";
public const string MimeHeaderInvalidCharacter = @"MimeHeaderInvalidCharacter";
public const string MimeMessageGetContentStreamCalledAlready = @"MimeMessageGetContentStreamCalledAlready";
public const string MimeReaderHeaderAlreadyExists = @"MimeReaderHeaderAlreadyExists";
public const string MimeReaderMalformedHeader = @"MimeReaderMalformedHeader";
public const string MimeReaderResetCalledBeforeEOF = @"MimeReaderResetCalledBeforeEOF";
public const string MimeReaderTruncated = @"MimeReaderTruncated";
public const string MimeVersionHeaderInvalid = @"MimeVersionHeaderInvalid";
public const string MimeWriterInvalidStateForClose = @"MimeWriterInvalidStateForClose";
public const string MimeWriterInvalidStateForContent = @"MimeWriterInvalidStateForContent";
public const string MimeWriterInvalidStateForHeader = @"MimeWriterInvalidStateForHeader";
public const string MimeWriterInvalidStateForStartPart = @"MimeWriterInvalidStateForStartPart";
public const string MimeWriterInvalidStateForStartPreface = @"MimeWriterInvalidStateForStartPreface";
public const string MissingSchemaType = @"MissingSchemaType";
public const string MixedContentNotSupported = @"MixedContentNotSupported";
public const string MtomBoundaryInvalid = @"MtomBoundaryInvalid";
public const string MtomBufferQuotaExceeded = @"MtomBufferQuotaExceeded";
public const string MtomContentTransferEncodingNotPresent = @"MtomContentTransferEncodingNotPresent";
public const string MtomContentTransferEncodingNotSupported = @"MtomContentTransferEncodingNotSupported";
public const string MtomContentTypeInvalid = @"MtomContentTypeInvalid";
public const string MtomDataMustNotContainXopInclude = @"MtomDataMustNotContainXopInclude";
public const string MtomExceededMaxSizeInBytes = @"MtomExceededMaxSizeInBytes";
public const string MtomInvalidCIDUri = @"MtomInvalidCIDUri";
public const string MtomInvalidEmptyURI = @"MtomInvalidEmptyURI";
public const string MtomInvalidStartUri = @"MtomInvalidStartUri";
public const string MtomInvalidTransferEncodingForMimePart = @"MtomInvalidTransferEncodingForMimePart";
public const string MtomMessageContentTypeNotFound = @"MtomMessageContentTypeNotFound";
public const string MtomMessageInvalidContent = @"MtomMessageInvalidContent";
public const string MtomMessageInvalidContentInMimePart = @"MtomMessageInvalidContentInMimePart";
public const string MtomMessageInvalidMimeVersion = @"MtomMessageInvalidMimeVersion";
public const string MtomMessageNotApplicationXopXml = @"MtomMessageNotApplicationXopXml";
public const string MtomMessageNotMultipart = @"MtomMessageNotMultipart";
public const string MtomMessageRequiredParamNotSpecified = @"MtomMessageRequiredParamNotSpecified";
public const string MtomMimePartReferencedMoreThanOnce = @"MtomMimePartReferencedMoreThanOnce";
public const string MtomPartNotFound = @"MtomPartNotFound";
public const string MtomRootContentTypeNotFound = @"MtomRootContentTypeNotFound";
public const string MtomRootNotApplicationXopXml = @"MtomRootNotApplicationXopXml";
public const string MtomRootPartNotFound = @"MtomRootPartNotFound";
public const string MtomRootRequiredParamNotSpecified = @"MtomRootRequiredParamNotSpecified";
public const string MtomRootUnexpectedCharset = @"MtomRootUnexpectedCharset";
public const string MtomRootUnexpectedType = @"MtomRootUnexpectedType";
public const string MtomXopIncludeHrefNotSpecified = @"MtomXopIncludeHrefNotSpecified";
public const string MtomXopIncludeInvalidXopAttributes = @"MtomXopIncludeInvalidXopAttributes";
public const string MtomXopIncludeInvalidXopElement = @"MtomXopIncludeInvalidXopElement";
public const string MustContainOnlyLocalElements = @"MustContainOnlyLocalElements";
public const string NoAsyncWritePending = @"NoAsyncWritePending";
public const string NonOptionalFieldMemberOnIsReferenceSerializableType = @"NonOptionalFieldMemberOnIsReferenceSerializableType";
public const string OnlyDataContractTypesCanHaveExtensionData = @"OnlyDataContractTypesCanHaveExtensionData";
public const string OutParametersMustBeByRefTypeReceived = @"OutParametersMustBeByRefTypeReceived";
public const string PartialTrustISerializableNoPublicConstructor = @"PartialTrustISerializableNoPublicConstructor";
public const string QueryGeneratorPathToMemberNotFound = @"QueryGeneratorPathToMemberNotFound";
public const string ReadNotSupportedOnStream = @"ReadNotSupportedOnStream";
public const string ReadOnlyClassDeserialization = @"ReadOnlyClassDeserialization";
public const string ReadOnlyCollectionDeserialization = @"ReadOnlyCollectionDeserialization";
public const string RecursiveCollectionType = @"RecursiveCollectionType";
public const string RedefineNotSupported = @"RedefineNotSupported";
public const string ReferencedBaseTypeDoesNotExist = @"ReferencedBaseTypeDoesNotExist";
public const string ReferencedCollectionTypesCannotContainNull = @"ReferencedCollectionTypesCannotContainNull";
public const string ReferencedTypeDoesNotMatch = @"ReferencedTypeDoesNotMatch";
public const string ReferencedTypeMatchingMessage = @"ReferencedTypeMatchingMessage";
public const string ReferencedTypeNotMatchingMessage = @"ReferencedTypeNotMatchingMessage";
public const string ReferencedTypesCannotContainNull = @"ReferencedTypesCannotContainNull";
public const string RequiresClassDataContractToSetIsISerializable = @"RequiresClassDataContractToSetIsISerializable";
public const string RootParticleMustBeSequence = @"RootParticleMustBeSequence";
public const string RootSequenceMaxOccursMustBe = @"RootSequenceMaxOccursMustBe";
public const string RootSequenceMustBeRequired = @"RootSequenceMustBeRequired";
public const string SeekNotSupportedOnStream = @"SeekNotSupportedOnStream";
public const string SerializationInfo_ConstructorNotFound = @"SerializationInfo_ConstructorNotFound";
public const string SimpleContentNotSupported = @"SimpleContentNotSupported";
public const string SimpleTypeRestrictionDoesNotSpecifyBase = @"SimpleTypeRestrictionDoesNotSpecifyBase";
public const string SimpleTypeUnionNotSupported = @"SimpleTypeUnionNotSupported";
public const string SpecifiedTypeNotFoundInSchema = @"SpecifiedTypeNotFoundInSchema";
public const string SubstitutionGroupOnElementNotSupported = @"SubstitutionGroupOnElementNotSupported";
public const string SurrogatesWithGetOnlyCollectionsNotSupported = @"SurrogatesWithGetOnlyCollectionsNotSupported";
public const string SurrogatesWithGetOnlyCollectionsNotSupportedSerDeser = @"SurrogatesWithGetOnlyCollectionsNotSupportedSerDeser";
public const string TopLevelElementRepresentsDifferentType = @"TopLevelElementRepresentsDifferentType";
public const string TraceCodeElementIgnored = @"TraceCodeElementIgnored";
public const string TraceCodeFactoryTypeNotFound = @"TraceCodeFactoryTypeNotFound";
public const string TraceCodeObjectWithLargeDepth = @"TraceCodeObjectWithLargeDepth";
public const string TraceCodeReadObjectBegin = @"TraceCodeReadObjectBegin";
public const string TraceCodeReadObjectEnd = @"TraceCodeReadObjectEnd";
public const string TraceCodeWriteObjectBegin = @"TraceCodeWriteObjectBegin";
public const string TraceCodeWriteObjectContentBegin = @"TraceCodeWriteObjectContentBegin";
public const string TraceCodeWriteObjectContentEnd = @"TraceCodeWriteObjectContentEnd";
public const string TraceCodeWriteObjectEnd = @"TraceCodeWriteObjectEnd";
public const string TraceCodeXsdExportAnnotationFailed = @"TraceCodeXsdExportAnnotationFailed";
public const string TraceCodeXsdExportBegin = @"TraceCodeXsdExportBegin";
public const string TraceCodeXsdExportDupItems = @"TraceCodeXsdExportDupItems";
public const string TraceCodeXsdExportEnd = @"TraceCodeXsdExportEnd";
public const string TraceCodeXsdExportError = @"TraceCodeXsdExportError";
public const string TraceCodeXsdImportAnnotationFailed = @"TraceCodeXsdImportAnnotationFailed";
public const string TraceCodeXsdImportBegin = @"TraceCodeXsdImportBegin";
public const string TraceCodeXsdImportEnd = @"TraceCodeXsdImportEnd";
public const string TraceCodeXsdImportError = @"TraceCodeXsdImportError";
public const string TypeCannotBeForwardedFrom = @"TypeCannotBeForwardedFrom";
public const string TypeCannotBeImported = @"TypeCannotBeImported";
public const string TypeCannotBeImportedHowToFix = @"TypeCannotBeImportedHowToFix";
public const string TypeHasNotBeenImported = @"TypeHasNotBeenImported";
public const string TypeMustBeIXmlSerializable = @"TypeMustBeIXmlSerializable";
public const string TypeMustNotBeOpenGeneric = @"TypeMustNotBeOpenGeneric";
public const string TypeShouldNotContainAttributes = @"TypeShouldNotContainAttributes";
public const string UnknownXmlType = @"UnknownXmlType";
public const string ValueTypeMismatchInSurrogatedType = @"ValueTypeMismatchInSurrogatedType";
public const string WriteBufferOverflow = @"WriteBufferOverflow";
public const string WriteNotSupportedOnStream = @"WriteNotSupportedOnStream";
public const string XmlCanonicalizationNotStarted = @"XmlCanonicalizationNotStarted";
public const string XmlCanonicalizationStarted = @"XmlCanonicalizationStarted";
public const string XmlFunctionRequiredNodeType = @"XmlFunctionRequiredNodeType";
public const string XmlMaxArrayLengthOrMaxItemsQuotaExceeded = @"XmlMaxArrayLengthOrMaxItemsQuotaExceeded";
public const string XmlMaxBytesPerReadExceeded = @"XmlMaxBytesPerReadExceeded";
public const string XmlMaxDepthExceeded = @"XmlMaxDepthExceeded";
public const string XmlMaxStringContentLengthExceeded = @"XmlMaxStringContentLengthExceeded";
public const string XmlObjectAssignedToIncompatibleInterface = @"XmlObjectAssignedToIncompatibleInterface";

#endregion
	}
}
